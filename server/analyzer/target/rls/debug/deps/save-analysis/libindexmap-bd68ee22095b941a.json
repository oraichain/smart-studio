{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=bd68ee22095b941a","-C","extra-filename=-bd68ee22095b941a","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libindexmap-bd68ee22095b941a.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[11779391736593060625,14747929116582263463]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":0,"byte_end":4356,"line_start":1,"line_end":143,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":53525,"byte_end":53536,"line_start":9,"line_end":9,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":435}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2907,"byte_end":2917,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1087},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2932,"byte_end":2940,"line_start":91,"line_end":91,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2955,"byte_end":2963,"line_start":92,"line_end":92,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":0,"byte_end":4356,"line_start":1,"line_end":143,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":19},{"krate":0,"index":28},{"krate":0,"index":54},{"krate":0,"index":435},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1158},{"krate":0,"index":1163},{"krate":0,"index":1161},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1164},{"krate":0,"index":1178},{"krate":0,"index":1174},{"krate":0,"index":1170},{"krate":0,"index":1028},{"krate":0,"index":1039}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":113,"byte_end":188,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":189,"byte_end":245,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":246,"byte_end":249,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":250,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":329,"byte_end":357,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":358,"byte_end":361,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":362,"byte_end":404,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":405,"byte_end":447,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":448,"byte_end":451,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":452,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":456,"byte_end":482,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":483,"byte_end":486,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":487,"byte_end":566,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":567,"byte_end":627,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":628,"byte_end":631,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":632,"byte_end":698,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":699,"byte_end":763,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":764,"byte_end":843,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":844,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":895,"byte_end":972,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":973,"byte_end":1003,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1004,"byte_end":1007,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1008,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.18 or later, or 1.30+ for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1033,"byte_end":1103,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ development builds, and Rust 1.36+ for using with `alloc` (without `std`),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1104,"byte_end":1182,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ see below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1183,"byte_end":1197,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1198,"byte_end":1201,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1202,"byte_end":1277,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1278,"byte_end":1353,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1354,"byte_end":1380,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1381,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1385,"byte_end":1419,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1420,"byte_end":1423,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ From Rust 1.36, this crate supports being built without `std`, requiring","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1424,"byte_end":1500,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1501,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1577,"byte_end":1651,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1652,"byte_end":1721,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1722,"byte_end":1725,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1726,"byte_end":1787,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1788,"byte_end":1866,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1867,"byte_end":1912,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1913,"byte_end":1958,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":1959,"byte_end":2038,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2039,"byte_end":2107,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2108,"byte_end":2141,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2142,"byte_end":2217,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2218,"byte_end":2221,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2222,"byte_end":2270,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8470,"byte_end":8480,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8080,"byte_end":8106,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8107,"byte_end":8110,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8111,"byte_end":8168,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8169,"byte_end":8247,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8248,"byte_end":8328,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8329,"byte_end":8373,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8374,"byte_end":8377,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8378,"byte_end":8392,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8393,"byte_end":8396,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8397,"byte_end":8459,"line_start":13,"line_end":13,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8568,"byte_end":8578,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8498,"byte_end":8560,"line_start":15,"line_end":15,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":8893,"byte_end":8906,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9455,"byte_end":9466,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":8912,"byte_end":8946,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":8947,"byte_end":8950,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":8951,"byte_end":9031,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9032,"byte_end":9047,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9048,"byte_end":9122,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9123,"byte_end":9175,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9176,"byte_end":9179,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9180,"byte_end":9248,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9249,"byte_end":9318,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9319,"byte_end":9381,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9382,"byte_end":9385,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9386,"byte_end":9444,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9478,"byte_end":9481,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9492,"byte_end":9497,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9573,"byte_end":9586,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9508,"byte_end":9565,"line_start":25,"line_end":25,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10003,"byte_end":10010,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9731,"byte_end":9803,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9808,"byte_end":9842,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9847,"byte_end":9850,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9855,"byte_end":9927,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9932,"byte_end":9942,"line_start":34,"line_end":34,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9947,"byte_end":9950,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":9955,"byte_end":9995,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10298,"byte_end":10314,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10105,"byte_end":10184,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10189,"byte_end":10256,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10261,"byte_end":10290,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":1205},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":1209},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":1221},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":78},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":104},{"krate":0,"index":168},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":234},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":252},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":282},{"krate":0,"index":288},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":316},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":355},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":403},{"krate":0,"index":411},{"krate":0,"index":419},{"krate":0,"index":427}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":10988,"byte_end":11031,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13115,"byte_end":13123,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":1049}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11491,"byte_end":11569,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11570,"byte_end":11586,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11587,"byte_end":11590,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11591,"byte_end":11668,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11669,"byte_end":11697,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11698,"byte_end":11701,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11702,"byte_end":11713,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11714,"byte_end":11717,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11718,"byte_end":11794,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11795,"byte_end":11871,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11872,"byte_end":11947,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":11948,"byte_end":12018,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12019,"byte_end":12039,"line_start":37,"line_end":37,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12040,"byte_end":12043,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12044,"byte_end":12120,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12121,"byte_end":12193,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12194,"byte_end":12248,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12249,"byte_end":12252,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12253,"byte_end":12327,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12328,"byte_end":12404,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12405,"byte_end":12470,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12471,"byte_end":12474,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12475,"byte_end":12488,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12489,"byte_end":12492,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12493,"byte_end":12565,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12566,"byte_end":12645,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12646,"byte_end":12715,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12716,"byte_end":12719,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12720,"byte_end":12734,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12735,"byte_end":12738,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12739,"byte_end":12746,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12747,"byte_end":12774,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12775,"byte_end":12778,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12779,"byte_end":12830,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12831,"byte_end":12908,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12909,"byte_end":12913,"line_start":60,"line_end":60,"column_start":1,"column_end":5}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12914,"byte_end":12950,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12951,"byte_end":12987,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":12988,"byte_end":13024,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13025,"byte_end":13062,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13063,"byte_end":13070,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13088,"byte_end":13103,"line_start":67,"line_end":67,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14281,"byte_end":14284,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14227,"byte_end":14269,"line_start":115,"line_end":115,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14501,"byte_end":14514,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14350,"byte_end":14402,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14407,"byte_end":14446,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14451,"byte_end":14454,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14459,"byte_end":14489,"line_start":123,"line_end":123,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14780,"byte_end":14804,"line_start":134,"line_end":134,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14629,"byte_end":14681,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14686,"byte_end":14725,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14730,"byte_end":14733,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14738,"byte_end":14768,"line_start":133,"line_end":133,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15064,"byte_end":15067,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14964,"byte_end":15009,"line_start":140,"line_end":140,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15014,"byte_end":15017,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15022,"byte_end":15052,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15224,"byte_end":15232,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15120,"byte_end":15169,"line_start":147,"line_end":147,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15174,"byte_end":15177,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15182,"byte_end":15212,"line_start":149,"line_end":149,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15341,"byte_end":15352,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15289,"byte_end":15329,"line_start":154,"line_end":154,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15548,"byte_end":15554,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15486,"byte_end":15536,"line_start":161,"line_end":161,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15682,"byte_end":15690,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15640,"byte_end":15670,"line_start":168,"line_end":168,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15949,"byte_end":15954,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15828,"byte_end":15894,"line_start":178,"line_end":178,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15899,"byte_end":15902,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15907,"byte_end":15937,"line_start":180,"line_end":180,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16052,"byte_end":16059,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[{"value":"/ FIXME Not implemented fully yet","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16005,"byte_end":16040,"line_start":185,"line_end":185,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16493,"byte_end":16499,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16141,"byte_end":16175,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16180,"byte_end":16183,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16188,"byte_end":16251,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16256,"byte_end":16317,"line_start":193,"line_end":193,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16322,"byte_end":16385,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16390,"byte_end":16418,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16423,"byte_end":16426,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16431,"byte_end":16481,"line_start":197,"line_end":197,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17037,"byte_end":17048,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16587,"byte_end":16640,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16645,"byte_end":16648,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16653,"byte_end":16716,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16721,"byte_end":16780,"line_start":205,"line_end":205,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16785,"byte_end":16849,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16854,"byte_end":16921,"line_start":207,"line_end":207,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16926,"byte_end":16962,"line_start":208,"line_end":208,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16967,"byte_end":16970,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":16975,"byte_end":17025,"line_start":210,"line_end":210,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17447,"byte_end":17451,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17370,"byte_end":17435,"line_start":224,"line_end":224,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17715,"byte_end":17725,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17547,"byte_end":17621,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17626,"byte_end":17629,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17634,"byte_end":17703,"line_start":233,"line_end":233,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18169,"byte_end":18189,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17925,"byte_end":17994,"line_start":243,"line_end":243,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":17999,"byte_end":18019,"line_start":244,"line_end":244,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18024,"byte_end":18027,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18032,"byte_end":18104,"line_start":246,"line_end":246,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18109,"byte_end":18157,"line_start":247,"line_end":247,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18609,"byte_end":18621,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18440,"byte_end":18515,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18520,"byte_end":18523,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18528,"byte_end":18597,"line_start":259,"line_end":259,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19058,"byte_end":19063,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18825,"byte_end":18894,"line_start":269,"line_end":269,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18899,"byte_end":18902,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18907,"byte_end":18979,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":18984,"byte_end":19046,"line_start":272,"line_end":272,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19392,"byte_end":19400,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19263,"byte_end":19327,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19332,"byte_end":19335,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19340,"byte_end":19380,"line_start":283,"line_end":283,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19689,"byte_end":19692,"line_start":294,"line_end":294,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19531,"byte_end":19603,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19608,"byte_end":19624,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19629,"byte_end":19632,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19637,"byte_end":19677,"line_start":293,"line_end":293,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19889,"byte_end":19897,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":19846,"byte_end":19877,"line_start":300,"line_end":300,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20264,"byte_end":20271,"line_start":311,"line_end":311,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20065,"byte_end":20139,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20144,"byte_end":20199,"line_start":308,"line_end":308,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20204,"byte_end":20207,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20212,"byte_end":20252,"line_start":310,"line_end":310,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20808,"byte_end":20814,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20505,"byte_end":20576,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20581,"byte_end":20584,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20589,"byte_end":20659,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20664,"byte_end":20743,"line_start":324,"line_end":324,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20748,"byte_end":20751,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20756,"byte_end":20796,"line_start":326,"line_end":326,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21355,"byte_end":21366,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":20944,"byte_end":21015,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21020,"byte_end":21023,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21028,"byte_end":21101,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21106,"byte_end":21169,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21174,"byte_end":21228,"line_start":337,"line_end":337,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21233,"byte_end":21236,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21241,"byte_end":21290,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21295,"byte_end":21298,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21303,"byte_end":21343,"line_start":341,"line_end":341,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21916,"byte_end":21928,"line_start":357,"line_end":357,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21510,"byte_end":21581,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21586,"byte_end":21589,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21594,"byte_end":21661,"line_start":350,"line_end":350,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21666,"byte_end":21727,"line_start":351,"line_end":351,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21732,"byte_end":21789,"line_start":352,"line_end":352,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21794,"byte_end":21797,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21802,"byte_end":21851,"line_start":354,"line_end":354,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21856,"byte_end":21859,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":21864,"byte_end":21904,"line_start":356,"line_end":356,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22410,"byte_end":22414,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22073,"byte_end":22147,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22152,"byte_end":22166,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22171,"byte_end":22174,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22179,"byte_end":22250,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22255,"byte_end":22328,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22333,"byte_end":22345,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22350,"byte_end":22353,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22358,"byte_end":22398,"line_start":370,"line_end":370,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22979,"byte_end":22988,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22547,"byte_end":22621,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22626,"byte_end":22640,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22645,"byte_end":22648,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22653,"byte_end":22726,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22731,"byte_end":22794,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22799,"byte_end":22853,"line_start":382,"line_end":382,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22858,"byte_end":22861,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22866,"byte_end":22914,"line_start":384,"line_end":384,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22919,"byte_end":22922,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":22927,"byte_end":22967,"line_start":386,"line_end":386,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23579,"byte_end":23589,"line_start":403,"line_end":403,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23152,"byte_end":23226,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23231,"byte_end":23245,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23250,"byte_end":23253,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23258,"byte_end":23325,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23330,"byte_end":23391,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23396,"byte_end":23453,"line_start":398,"line_end":398,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23458,"byte_end":23461,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23466,"byte_end":23514,"line_start":400,"line_end":400,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23519,"byte_end":23522,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23527,"byte_end":23567,"line_start":402,"line_end":402,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24105,"byte_end":24121,"line_start":416,"line_end":416,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23754,"byte_end":23819,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23824,"byte_end":23827,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23832,"byte_end":23905,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23910,"byte_end":23973,"line_start":412,"line_end":412,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":23978,"byte_end":24032,"line_start":413,"line_end":413,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24037,"byte_end":24040,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24045,"byte_end":24093,"line_start":415,"line_end":415,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24645,"byte_end":24662,"line_start":429,"line_end":429,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24299,"byte_end":24364,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24369,"byte_end":24372,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24377,"byte_end":24444,"line_start":424,"line_end":424,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24449,"byte_end":24510,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24515,"byte_end":24572,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24577,"byte_end":24580,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24585,"byte_end":24633,"line_start":428,"line_end":428,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24931,"byte_end":24934,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24841,"byte_end":24866,"line_start":435,"line_end":435,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24871,"byte_end":24874,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":24879,"byte_end":24919,"line_start":437,"line_end":437,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25279,"byte_end":25285,"line_start":449,"line_end":449,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25012,"byte_end":25075,"line_start":442,"line_end":442,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25080,"byte_end":25114,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25119,"byte_end":25122,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25127,"byte_end":25199,"line_start":445,"line_end":445,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25204,"byte_end":25214,"line_start":446,"line_end":446,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25219,"byte_end":25222,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25227,"byte_end":25267,"line_start":448,"line_end":448,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25526,"byte_end":25530,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25417,"byte_end":25471,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25476,"byte_end":25479,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25484,"byte_end":25514,"line_start":457,"line_end":457,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25787,"byte_end":25794,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25610,"byte_end":25687,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25692,"byte_end":25695,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25700,"byte_end":25775,"line_start":466,"line_end":466,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26093,"byte_end":26102,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":25945,"byte_end":26009,"line_start":473,"line_end":473,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26014,"byte_end":26045,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26050,"byte_end":26053,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26058,"byte_end":26081,"line_start":476,"line_end":476,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26430,"byte_end":26435,"line_start":487,"line_end":487,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexSet`, returning all values as a drain iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26304,"byte_end":26372,"line_start":485,"line_end":485,"column_start":5,"column_end":73}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26377,"byte_end":26418,"line_start":486,"line_end":486,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26731,"byte_end":26740,"line_start":500,"line_end":500,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26592,"byte_end":26616,"line_start":495,"line_end":495,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26621,"byte_end":26624,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26629,"byte_end":26676,"line_start":497,"line_end":497,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26681,"byte_end":26684,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26689,"byte_end":26719,"line_start":499,"line_end":499,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27217,"byte_end":27234,"line_start":513,"line_end":513,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26841,"byte_end":26879,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26884,"byte_end":26887,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26892,"byte_end":26939,"line_start":506,"line_end":506,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26944,"byte_end":26947,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26952,"byte_end":27025,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27030,"byte_end":27093,"line_start":509,"line_end":509,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27098,"byte_end":27152,"line_start":510,"line_end":510,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27157,"byte_end":27160,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27165,"byte_end":27205,"line_start":512,"line_end":512,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27716,"byte_end":27734,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27345,"byte_end":27383,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27388,"byte_end":27391,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27396,"byte_end":27443,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27448,"byte_end":27451,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27456,"byte_end":27523,"line_start":521,"line_end":521,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27528,"byte_end":27589,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27594,"byte_end":27651,"line_start":523,"line_end":523,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27656,"byte_end":27659,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27664,"byte_end":27704,"line_start":525,"line_end":525,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28164,"byte_end":28172,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":179}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27845,"byte_end":27899,"line_start":532,"line_end":532,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27900,"byte_end":27903,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27904,"byte_end":27976,"line_start":534,"line_end":534,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":27977,"byte_end":28052,"line_start":535,"line_end":535,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28053,"byte_end":28056,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28057,"byte_end":28095,"line_start":537,"line_end":537,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28096,"byte_end":28152,"line_start":538,"line_end":538,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":192},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29062,"byte_end":29066,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":195}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28804,"byte_end":28851,"line_start":569,"line_end":569,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28852,"byte_end":28855,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28856,"byte_end":28924,"line_start":571,"line_end":571,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28925,"byte_end":28960,"line_start":572,"line_end":572,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28961,"byte_end":28964,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28965,"byte_end":29003,"line_start":574,"line_end":574,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29004,"byte_end":29050,"line_start":575,"line_end":575,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30059,"byte_end":30064,"line_start":617,"line_end":617,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":219}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29790,"byte_end":29845,"line_start":610,"line_end":610,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29846,"byte_end":29849,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29850,"byte_end":29919,"line_start":612,"line_end":612,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29920,"byte_end":29955,"line_start":613,"line_end":613,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29956,"byte_end":29959,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29960,"byte_end":29998,"line_start":615,"line_end":615,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29999,"byte_end":30047,"line_start":616,"line_end":616,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32380,"byte_end":32391,"line_start":718,"line_end":718,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32300,"byte_end":32368,"line_start":717,"line_end":717,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32761,"byte_end":32770,"line_start":729,"line_end":729,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32679,"byte_end":32749,"line_start":728,"line_end":728,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33033,"byte_end":33044,"line_start":736,"line_end":736,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32951,"byte_end":33021,"line_start":735,"line_end":735,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33466,"byte_end":33476,"line_start":751,"line_end":751,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33165,"byte_end":33237,"line_start":744,"line_end":744,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33238,"byte_end":33241,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33242,"byte_end":33316,"line_start":746,"line_end":746,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33317,"byte_end":33352,"line_start":747,"line_end":747,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33353,"byte_end":33356,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33357,"byte_end":33395,"line_start":749,"line_end":749,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33396,"byte_end":33454,"line_start":750,"line_end":750,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35029,"byte_end":35041,"line_start":813,"line_end":813,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34720,"byte_end":34794,"line_start":806,"line_end":806,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34795,"byte_end":34798,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34799,"byte_end":34875,"line_start":808,"line_end":808,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34876,"byte_end":34911,"line_start":809,"line_end":809,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34912,"byte_end":34915,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34916,"byte_end":34954,"line_start":811,"line_end":811,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34955,"byte_end":35017,"line_start":812,"line_end":812,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36635,"byte_end":36654,"line_start":875,"line_end":875,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":343}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36294,"byte_end":36376,"line_start":868,"line_end":868,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36377,"byte_end":36380,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36381,"byte_end":36451,"line_start":870,"line_end":870,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36452,"byte_end":36501,"line_start":871,"line_end":871,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36502,"byte_end":36505,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36506,"byte_end":36544,"line_start":873,"line_end":873,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36545,"byte_end":36623,"line_start":874,"line_end":874,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38203,"byte_end":38208,"line_start":935,"line_end":935,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37922,"byte_end":37989,"line_start":928,"line_end":928,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37990,"byte_end":37993,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37994,"byte_end":38063,"line_start":930,"line_end":930,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38064,"byte_end":38099,"line_start":931,"line_end":931,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38100,"byte_end":38103,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38104,"byte_end":38142,"line_start":933,"line_end":933,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38143,"byte_end":38191,"line_start":934,"line_end":934,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":1231},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":1239},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":1251},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":1265},{"krate":0,"index":459},{"krate":0,"index":1076},{"krate":0,"index":1081},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":1087},{"krate":0,"index":1093},{"krate":0,"index":1098},{"krate":0,"index":1104},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":529},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":554},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":578},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":603},{"krate":0,"index":620},{"krate":0,"index":625},{"krate":0,"index":633},{"krate":0,"index":643},{"krate":0,"index":648},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":724},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":780},{"krate":0,"index":785},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":835},{"krate":0,"index":840},{"krate":0,"index":845},{"krate":0,"index":850},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":865},{"krate":0,"index":870},{"krate":0,"index":875},{"krate":0,"index":880},{"krate":0,"index":885},{"krate":0,"index":890},{"krate":0,"index":895},{"krate":0,"index":900},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":926},{"krate":0,"index":931},{"krate":0,"index":936},{"krate":0,"index":940},{"krate":0,"index":948},{"krate":0,"index":956},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":974},{"krate":0,"index":981},{"krate":0,"index":987},{"krate":0,"index":993},{"krate":0,"index":1001},{"krate":0,"index":1006},{"krate":0,"index":1015}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":53286,"byte_end":53359,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":53360,"byte_end":53416,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60973,"byte_end":60981,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59519,"byte_end":59599,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59600,"byte_end":59635,"line_start":233,"line_end":233,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59636,"byte_end":59639,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59640,"byte_end":59717,"line_start":235,"line_end":235,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59718,"byte_end":59746,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59747,"byte_end":59750,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59751,"byte_end":59762,"line_start":238,"line_end":238,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59763,"byte_end":59766,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59767,"byte_end":59836,"line_start":240,"line_end":240,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59837,"byte_end":59911,"line_start":241,"line_end":241,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59912,"byte_end":59967,"line_start":242,"line_end":242,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59968,"byte_end":59971,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59972,"byte_end":60022,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60023,"byte_end":60026,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60027,"byte_end":60101,"line_start":246,"line_end":246,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60102,"byte_end":60178,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60179,"byte_end":60244,"line_start":248,"line_end":248,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60245,"byte_end":60248,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60249,"byte_end":60262,"line_start":250,"line_end":250,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60263,"byte_end":60266,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60267,"byte_end":60342,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60343,"byte_end":60418,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60419,"byte_end":60498,"line_start":254,"line_end":254,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60499,"byte_end":60509,"line_start":255,"line_end":255,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60510,"byte_end":60513,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60514,"byte_end":60528,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60529,"byte_end":60532,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60533,"byte_end":60540,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60541,"byte_end":60568,"line_start":260,"line_end":260,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60569,"byte_end":60572,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60573,"byte_end":60629,"line_start":262,"line_end":262,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60630,"byte_end":60668,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60669,"byte_end":60720,"line_start":264,"line_end":264,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60721,"byte_end":60766,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60767,"byte_end":60772,"line_start":266,"line_end":266,"column_start":1,"column_end":6}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60773,"byte_end":60777,"line_start":267,"line_end":267,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60778,"byte_end":60811,"line_start":268,"line_end":268,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60812,"byte_end":60845,"line_start":269,"line_end":269,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60846,"byte_end":60879,"line_start":270,"line_end":270,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60880,"byte_end":60920,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60921,"byte_end":60928,"line_start":272,"line_end":272,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":60946,"byte_end":60961,"line_start":274,"line_end":274,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64255,"byte_end":64258,"line_start":399,"line_end":399,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64201,"byte_end":64243,"line_start":398,"line_end":398,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64471,"byte_end":64484,"line_start":407,"line_end":407,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64313,"byte_end":64382,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64387,"byte_end":64416,"line_start":404,"line_end":404,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64421,"byte_end":64424,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64429,"byte_end":64459,"line_start":406,"line_end":406,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64768,"byte_end":64792,"line_start":418,"line_end":418,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64610,"byte_end":64679,"line_start":414,"line_end":414,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64684,"byte_end":64713,"line_start":415,"line_end":415,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64718,"byte_end":64721,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64726,"byte_end":64756,"line_start":417,"line_end":417,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65690,"byte_end":65693,"line_start":447,"line_end":447,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65583,"byte_end":65635,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65640,"byte_end":65643,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65648,"byte_end":65678,"line_start":446,"line_end":446,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65839,"byte_end":65847,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65735,"byte_end":65784,"line_start":449,"line_end":449,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65789,"byte_end":65792,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65797,"byte_end":65827,"line_start":451,"line_end":451,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65940,"byte_end":65951,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":65888,"byte_end":65928,"line_start":454,"line_end":454,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66141,"byte_end":66147,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66079,"byte_end":66129,"line_start":461,"line_end":461,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66276,"byte_end":66284,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66234,"byte_end":66264,"line_start":468,"line_end":468,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68848,"byte_end":68856,"line_start":560,"line_end":560,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68805,"byte_end":68843,"line_start":559,"line_end":559,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68939,"byte_end":68945,"line_start":562,"line_end":562,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68887,"byte_end":68934,"line_start":561,"line_end":561,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":568},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68775,"byte_end":68780,"line_start":558,"line_end":558,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> {\n\n    /// Existing slot with equivalent key.\n    Occupied(OccupiedEntry),\n\n    /// Vacant slot (no equivalent key in the map).\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":575}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68685,"byte_end":68749,"line_start":556,"line_end":556,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68750,"byte_end":68765,"line_start":557,"line_end":557,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69072,"byte_end":69081,"line_start":567,"line_end":567,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69010,"byte_end":69060,"line_start":566,"line_end":566,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69334,"byte_end":69348,"line_start":575,"line_end":575,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69272,"byte_end":69322,"line_start":574,"line_end":574,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69581,"byte_end":69584,"line_start":584,"line_end":584,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69836,"byte_end":69841,"line_start":592,"line_end":592,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":69751,"byte_end":69824,"line_start":591,"line_end":591,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70068,"byte_end":70078,"line_start":600,"line_end":600,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70015,"byte_end":70056,"line_start":599,"line_end":599,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70586,"byte_end":70596,"line_start":616,"line_end":616,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70324,"byte_end":70414,"line_start":612,"line_end":612,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70419,"byte_end":70511,"line_start":613,"line_end":613,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70516,"byte_end":70519,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70524,"byte_end":70574,"line_start":615,"line_end":615,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71448,"byte_end":71461,"line_start":647,"line_end":647,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71313,"byte_end":71363,"line_start":643,"line_end":643,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71364,"byte_end":71401,"line_start":644,"line_end":644,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71402,"byte_end":71405,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71406,"byte_end":71436,"line_start":646,"line_end":646,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71622,"byte_end":71625,"line_start":655,"line_end":655,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71664,"byte_end":71667,"line_start":656,"line_end":656,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71744,"byte_end":71751,"line_start":659,"line_end":659,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72091,"byte_end":72096,"line_start":670,"line_end":670,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72037,"byte_end":72079,"line_start":669,"line_end":669,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72151,"byte_end":72159,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72330,"byte_end":72336,"line_start":678,"line_end":678,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72240,"byte_end":72318,"line_start":677,"line_end":677,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72579,"byte_end":72585,"line_start":685,"line_end":685,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72415,"byte_end":72501,"line_start":682,"line_end":682,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72506,"byte_end":72509,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72514,"byte_end":72567,"line_start":684,"line_end":684,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73000,"byte_end":73011,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72637,"byte_end":72723,"line_start":689,"line_end":689,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72728,"byte_end":72731,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72736,"byte_end":72808,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72813,"byte_end":72876,"line_start":692,"line_end":692,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72881,"byte_end":72935,"line_start":693,"line_end":693,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72940,"byte_end":72943,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":72948,"byte_end":72988,"line_start":695,"line_end":695,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73429,"byte_end":73441,"line_start":707,"line_end":707,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73071,"byte_end":73157,"line_start":700,"line_end":700,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73162,"byte_end":73165,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73170,"byte_end":73236,"line_start":702,"line_end":702,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73241,"byte_end":73302,"line_start":703,"line_end":703,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73307,"byte_end":73364,"line_start":704,"line_end":704,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73369,"byte_end":73372,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73377,"byte_end":73417,"line_start":706,"line_end":706,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73660,"byte_end":73672,"line_start":714,"line_end":714,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73502,"byte_end":73576,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73581,"byte_end":73584,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73589,"byte_end":73648,"line_start":713,"line_end":713,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74086,"byte_end":74103,"line_start":725,"line_end":725,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73735,"byte_end":73809,"line_start":718,"line_end":718,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73814,"byte_end":73817,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73822,"byte_end":73894,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73899,"byte_end":73962,"line_start":721,"line_end":721,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":73967,"byte_end":74021,"line_start":722,"line_end":722,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74026,"byte_end":74029,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74034,"byte_end":74074,"line_start":724,"line_end":724,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74538,"byte_end":74556,"line_start":736,"line_end":736,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74192,"byte_end":74266,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74271,"byte_end":74274,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74279,"byte_end":74345,"line_start":731,"line_end":731,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74350,"byte_end":74411,"line_start":732,"line_end":732,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74416,"byte_end":74473,"line_start":733,"line_end":733,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74478,"byte_end":74481,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74486,"byte_end":74526,"line_start":735,"line_end":735,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75084,"byte_end":75095,"line_start":754,"line_end":754,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74952,"byte_end":74999,"line_start":750,"line_end":750,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75000,"byte_end":75037,"line_start":751,"line_end":751,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75038,"byte_end":75041,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75042,"byte_end":75072,"line_start":753,"line_end":753,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75257,"byte_end":75260,"line_start":762,"line_end":762,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75299,"byte_end":75307,"line_start":763,"line_end":763,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75411,"byte_end":75416,"line_start":765,"line_end":765,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75336,"byte_end":75399,"line_start":764,"line_end":764,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75463,"byte_end":75469,"line_start":766,"line_end":766,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76767,"byte_end":76772,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76639,"byte_end":76712,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76717,"byte_end":76720,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76725,"byte_end":76755,"line_start":807,"line_end":807,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76944,"byte_end":76951,"line_start":815,"line_end":815,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76824,"byte_end":76883,"line_start":812,"line_end":812,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76888,"byte_end":76891,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ FIXME Not implemented fully yet.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76896,"byte_end":76932,"line_start":814,"line_end":814,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78519,"byte_end":78525,"line_start":857,"line_end":857,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":77867,"byte_end":77906,"line_start":844,"line_end":844,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":77911,"byte_end":77914,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":77919,"byte_end":77990,"line_start":846,"line_end":846,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":77995,"byte_end":78068,"line_start":847,"line_end":847,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78073,"byte_end":78139,"line_start":848,"line_end":848,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78144,"byte_end":78147,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78152,"byte_end":78222,"line_start":850,"line_end":850,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78227,"byte_end":78279,"line_start":851,"line_end":851,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78284,"byte_end":78287,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78292,"byte_end":78342,"line_start":853,"line_end":853,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78347,"byte_end":78350,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78355,"byte_end":78430,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":78435,"byte_end":78507,"line_start":856,"line_end":856,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80077,"byte_end":80088,"line_start":893,"line_end":893,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79386,"byte_end":79446,"line_start":880,"line_end":880,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79451,"byte_end":79454,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79459,"byte_end":79530,"line_start":882,"line_end":882,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79535,"byte_end":79608,"line_start":883,"line_end":883,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79613,"byte_end":79688,"line_start":884,"line_end":884,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79693,"byte_end":79696,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79701,"byte_end":79771,"line_start":886,"line_end":886,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79776,"byte_end":79837,"line_start":887,"line_end":887,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79842,"byte_end":79845,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79850,"byte_end":79900,"line_start":889,"line_end":889,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79905,"byte_end":79908,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79913,"byte_end":79988,"line_start":891,"line_end":891,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":79993,"byte_end":80065,"line_start":892,"line_end":892,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80638,"byte_end":80643,"line_start":910,"line_end":910,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80455,"byte_end":80532,"line_start":906,"line_end":906,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80537,"byte_end":80563,"line_start":907,"line_end":907,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80568,"byte_end":80571,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80576,"byte_end":80626,"line_start":909,"line_end":909,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80858,"byte_end":80862,"line_start":917,"line_end":917,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80772,"byte_end":80846,"line_start":916,"line_end":916,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81051,"byte_end":81059,"line_start":924,"line_end":924,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":80965,"byte_end":81039,"line_start":923,"line_end":923,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81251,"byte_end":81255,"line_start":931,"line_end":931,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81176,"byte_end":81239,"line_start":930,"line_end":930,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81435,"byte_end":81441,"line_start":938,"line_end":938,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81358,"byte_end":81423,"line_start":937,"line_end":937,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81659,"byte_end":81669,"line_start":946,"line_end":946,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81548,"byte_end":81624,"line_start":944,"line_end":944,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81629,"byte_end":81647,"line_start":945,"line_end":945,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81917,"byte_end":81929,"line_start":955,"line_end":955,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81790,"byte_end":81852,"line_start":952,"line_end":952,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81857,"byte_end":81860,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":81865,"byte_end":81905,"line_start":954,"line_end":954,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82211,"byte_end":82214,"line_start":965,"line_end":965,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82054,"byte_end":82125,"line_start":961,"line_end":961,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82130,"byte_end":82146,"line_start":962,"line_end":962,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82151,"byte_end":82154,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82159,"byte_end":82199,"line_start":964,"line_end":964,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82398,"byte_end":82406,"line_start":972,"line_end":972,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82350,"byte_end":82386,"line_start":971,"line_end":971,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82722,"byte_end":82729,"line_start":983,"line_end":983,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":82884,"byte_end":82896,"line_start":989,"line_end":989,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84150,"byte_end":84156,"line_start":1027,"line_end":1027,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":83829,"byte_end":83889,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":83894,"byte_end":83908,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":83913,"byte_end":83916,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":83921,"byte_end":83992,"line_start":1022,"line_end":1022,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":83997,"byte_end":84068,"line_start":1023,"line_end":1023,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84073,"byte_end":84085,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84090,"byte_end":84093,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84098,"byte_end":84138,"line_start":1026,"line_end":1026,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84697,"byte_end":84708,"line_start":1043,"line_end":1043,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84287,"byte_end":84347,"line_start":1033,"line_end":1033,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84352,"byte_end":84366,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84371,"byte_end":84374,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84379,"byte_end":84451,"line_start":1036,"line_end":1036,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84456,"byte_end":84519,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84524,"byte_end":84578,"line_start":1038,"line_end":1038,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84583,"byte_end":84586,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84591,"byte_end":84632,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84637,"byte_end":84640,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84645,"byte_end":84685,"line_start":1042,"line_end":1042,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85279,"byte_end":85295,"line_start":1059,"line_end":1059,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84855,"byte_end":84922,"line_start":1049,"line_end":1049,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84927,"byte_end":84948,"line_start":1050,"line_end":1050,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84953,"byte_end":84956,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":84961,"byte_end":85033,"line_start":1052,"line_end":1052,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85038,"byte_end":85101,"line_start":1053,"line_end":1053,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85106,"byte_end":85160,"line_start":1054,"line_end":1054,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85165,"byte_end":85168,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85173,"byte_end":85214,"line_start":1056,"line_end":1056,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85219,"byte_end":85222,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85227,"byte_end":85267,"line_start":1058,"line_end":1058,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86027,"byte_end":86039,"line_start":1080,"line_end":1080,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85622,"byte_end":85682,"line_start":1070,"line_end":1070,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85687,"byte_end":85701,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85706,"byte_end":85709,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85714,"byte_end":85780,"line_start":1073,"line_end":1073,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85785,"byte_end":85846,"line_start":1074,"line_end":1074,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85851,"byte_end":85908,"line_start":1075,"line_end":1075,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85913,"byte_end":85916,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85921,"byte_end":85962,"line_start":1077,"line_end":1077,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85967,"byte_end":85970,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":85975,"byte_end":86015,"line_start":1079,"line_end":1079,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86606,"byte_end":86623,"line_start":1096,"line_end":1096,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86187,"byte_end":86254,"line_start":1086,"line_end":1086,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86259,"byte_end":86280,"line_start":1087,"line_end":1087,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86285,"byte_end":86288,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86293,"byte_end":86359,"line_start":1089,"line_end":1089,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86364,"byte_end":86425,"line_start":1090,"line_end":1090,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86430,"byte_end":86487,"line_start":1091,"line_end":1091,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86492,"byte_end":86495,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86500,"byte_end":86541,"line_start":1093,"line_end":1093,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86546,"byte_end":86549,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86554,"byte_end":86594,"line_start":1095,"line_end":1095,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87050,"byte_end":87053,"line_start":1110,"line_end":1110,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86951,"byte_end":86985,"line_start":1107,"line_end":1107,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86990,"byte_end":86993,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":86998,"byte_end":87038,"line_start":1109,"line_end":1109,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87401,"byte_end":87407,"line_start":1121,"line_end":1121,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87125,"byte_end":87197,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87202,"byte_end":87236,"line_start":1115,"line_end":1115,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87241,"byte_end":87244,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87249,"byte_end":87321,"line_start":1117,"line_end":1117,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87326,"byte_end":87336,"line_start":1118,"line_end":1118,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87341,"byte_end":87344,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87349,"byte_end":87389,"line_start":1120,"line_end":1120,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88033,"byte_end":88042,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87905,"byte_end":87978,"line_start":1140,"line_end":1140,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87983,"byte_end":87986,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":87991,"byte_end":88021,"line_start":1142,"line_end":1142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88547,"byte_end":88554,"line_start":1157,"line_end":1157,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88128,"byte_end":88194,"line_start":1149,"line_end":1149,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88199,"byte_end":88222,"line_start":1150,"line_end":1150,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88227,"byte_end":88230,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88235,"byte_end":88311,"line_start":1152,"line_end":1152,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88316,"byte_end":88379,"line_start":1153,"line_end":1153,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88384,"byte_end":88387,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88392,"byte_end":88463,"line_start":1155,"line_end":1155,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88468,"byte_end":88535,"line_start":1156,"line_end":1156,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88851,"byte_end":88860,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88685,"byte_end":88758,"line_start":1163,"line_end":1163,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88763,"byte_end":88803,"line_start":1164,"line_end":1164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88808,"byte_end":88811,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":88816,"byte_end":88839,"line_start":1166,"line_end":1166,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89220,"byte_end":89225,"line_start":1176,"line_end":1176,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `IndexMap`, returning all key-value pairs as a drain iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89085,"byte_end":89162,"line_start":1174,"line_end":1174,"column_start":5,"column_end":82}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89167,"byte_end":89208,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89685,"byte_end":89694,"line_start":1197,"line_end":1197,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89537,"byte_end":89570,"line_start":1192,"line_end":1192,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89575,"byte_end":89578,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89583,"byte_end":89630,"line_start":1194,"line_end":1194,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89635,"byte_end":89638,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89643,"byte_end":89673,"line_start":1196,"line_end":1196,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89952,"byte_end":89965,"line_start":1206,"line_end":1206,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89804,"byte_end":89837,"line_start":1201,"line_end":1201,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89842,"byte_end":89845,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89850,"byte_end":89897,"line_start":1203,"line_end":1203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89902,"byte_end":89905,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89910,"byte_end":89940,"line_start":1205,"line_end":1205,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90466,"byte_end":90483,"line_start":1219,"line_end":1219,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90091,"byte_end":90129,"line_start":1210,"line_end":1210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90134,"byte_end":90137,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90142,"byte_end":90189,"line_start":1212,"line_end":1212,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90194,"byte_end":90197,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90202,"byte_end":90274,"line_start":1214,"line_end":1214,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90279,"byte_end":90342,"line_start":1215,"line_end":1215,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90347,"byte_end":90401,"line_start":1216,"line_end":1216,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90406,"byte_end":90409,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90414,"byte_end":90454,"line_start":1218,"line_end":1218,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91165,"byte_end":91183,"line_start":1238,"line_end":1238,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90795,"byte_end":90833,"line_start":1229,"line_end":1229,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90838,"byte_end":90841,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90846,"byte_end":90893,"line_start":1231,"line_end":1231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90898,"byte_end":90901,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90906,"byte_end":90972,"line_start":1233,"line_end":1233,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":90977,"byte_end":91038,"line_start":1234,"line_end":1234,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91043,"byte_end":91100,"line_start":1235,"line_end":1235,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91105,"byte_end":91108,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91113,"byte_end":91153,"line_start":1237,"line_end":1237,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":775},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109546,"byte_end":109550,"line_start":1720,"line_end":1720,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":779}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109289,"byte_end":109335,"line_start":1713,"line_end":1713,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109336,"byte_end":109339,"line_start":1714,"line_end":1714,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109340,"byte_end":109416,"line_start":1715,"line_end":1715,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109417,"byte_end":109444,"line_start":1716,"line_end":1716,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109445,"byte_end":109448,"line_start":1717,"line_end":1717,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109449,"byte_end":109495,"line_start":1718,"line_end":1718,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109496,"byte_end":109534,"line_start":1719,"line_end":1719,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110674,"byte_end":110680,"line_start":1764,"line_end":1764,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":809}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110409,"byte_end":110457,"line_start":1757,"line_end":1757,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110458,"byte_end":110461,"line_start":1758,"line_end":1758,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110462,"byte_end":110540,"line_start":1759,"line_end":1759,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110541,"byte_end":110568,"line_start":1760,"line_end":1760,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110569,"byte_end":110572,"line_start":1761,"line_end":1761,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110573,"byte_end":110623,"line_start":1762,"line_end":1762,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110624,"byte_end":110662,"line_start":1763,"line_end":1763,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":835},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111835,"byte_end":111844,"line_start":1808,"line_end":1808,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111551,"byte_end":111606,"line_start":1801,"line_end":1801,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111607,"byte_end":111610,"line_start":1802,"line_end":1802,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111611,"byte_end":111693,"line_start":1803,"line_end":1803,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111694,"byte_end":111721,"line_start":1804,"line_end":1804,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111722,"byte_end":111725,"line_start":1805,"line_end":1805,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111726,"byte_end":111784,"line_start":1806,"line_end":1806,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111785,"byte_end":111823,"line_start":1807,"line_end":1807,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112589,"byte_end":112593,"line_start":1837,"line_end":1837,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":859}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112329,"byte_end":112378,"line_start":1830,"line_end":1830,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112379,"byte_end":112382,"line_start":1831,"line_end":1831,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112383,"byte_end":112459,"line_start":1832,"line_end":1832,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112460,"byte_end":112487,"line_start":1833,"line_end":1833,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112488,"byte_end":112491,"line_start":1834,"line_end":1834,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112492,"byte_end":112538,"line_start":1835,"line_end":1835,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112539,"byte_end":112577,"line_start":1836,"line_end":1836,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113740,"byte_end":113747,"line_start":1881,"line_end":1881,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":889}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113461,"byte_end":113517,"line_start":1874,"line_end":1874,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113518,"byte_end":113521,"line_start":1875,"line_end":1875,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113522,"byte_end":113602,"line_start":1876,"line_end":1876,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113603,"byte_end":113630,"line_start":1877,"line_end":1877,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113631,"byte_end":113634,"line_start":1878,"line_end":1878,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113635,"byte_end":113689,"line_start":1879,"line_end":1879,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113690,"byte_end":113728,"line_start":1880,"line_end":1880,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114552,"byte_end":114560,"line_start":1910,"line_end":1910,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":908}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114231,"byte_end":114287,"line_start":1903,"line_end":1903,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114288,"byte_end":114291,"line_start":1904,"line_end":1904,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114292,"byte_end":114364,"line_start":1905,"line_end":1905,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114365,"byte_end":114440,"line_start":1906,"line_end":1906,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114441,"byte_end":114444,"line_start":1907,"line_end":1907,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114445,"byte_end":114501,"line_start":1908,"line_end":1908,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114502,"byte_end":114540,"line_start":1909,"line_end":1909,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115531,"byte_end":115536,"line_start":1946,"line_end":1946,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":930}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115260,"byte_end":115317,"line_start":1939,"line_end":1939,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115318,"byte_end":115321,"line_start":1940,"line_end":1940,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115322,"byte_end":115399,"line_start":1941,"line_end":1941,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115400,"byte_end":115427,"line_start":1942,"line_end":1942,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115428,"byte_end":115431,"line_start":1943,"line_end":1943,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115432,"byte_end":115480,"line_start":1944,"line_end":1944,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115481,"byte_end":115519,"line_start":1945,"line_end":1945,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":4116,"byte_end":4121,"line_start":137,"line_end":137,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8652,"byte_end":8653,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10482,"byte_end":10490,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13298,"byte_end":13306,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13770,"byte_end":13778,"line_start":99,"line_end":99,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14209,"byte_end":14217,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14608,"byte_end":14616,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15757,"byte_end":15765,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26571,"byte_end":26579,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28238,"byte_end":28246,"line_start":543,"line_end":543,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28343,"byte_end":28351,"line_start":549,"line_end":549,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28495,"byte_end":28503,"line_start":555,"line_end":555,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28606,"byte_end":28614,"line_start":561,"line_end":561,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29146,"byte_end":29150,"line_start":580,"line_end":580,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29263,"byte_end":29267,"line_start":586,"line_end":586,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29423,"byte_end":29427,"line_start":592,"line_end":592,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29521,"byte_end":29525,"line_start":598,"line_end":598,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29654,"byte_end":29658,"line_start":604,"line_end":604,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30143,"byte_end":30148,"line_start":621,"line_end":621,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30253,"byte_end":30258,"line_start":627,"line_end":627,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30580,"byte_end":30588,"line_start":643,"line_end":643,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30857,"byte_end":30865,"line_start":657,"line_end":657,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31143,"byte_end":31151,"line_start":667,"line_end":667,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31406,"byte_end":31414,"line_start":677,"line_end":677,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31700,"byte_end":31708,"line_start":688,"line_end":688,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31917,"byte_end":31925,"line_start":697,"line_end":697,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32150,"byte_end":32158,"line_start":707,"line_end":707,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32230,"byte_end":32238,"line_start":713,"line_end":713,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33582,"byte_end":33592,"line_start":756,"line_end":756,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34035,"byte_end":34045,"line_start":776,"line_end":776,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34364,"byte_end":34374,"line_start":790,"line_end":790,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34512,"byte_end":34522,"line_start":796,"line_end":796,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35147,"byte_end":35159,"line_start":818,"line_end":818,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35601,"byte_end":35613,"line_start":838,"line_end":838,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35931,"byte_end":35943,"line_start":852,"line_end":852,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36083,"byte_end":36095,"line_start":858,"line_end":858,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36783,"byte_end":36802,"line_start":879,"line_end":879,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37268,"byte_end":37287,"line_start":901,"line_end":901,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37504,"byte_end":37523,"line_start":911,"line_end":911,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37671,"byte_end":37690,"line_start":917,"line_end":917,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38312,"byte_end":38317,"line_start":939,"line_end":939,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38745,"byte_end":38750,"line_start":960,"line_end":960,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38929,"byte_end":38934,"line_start":969,"line_end":969,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":39058,"byte_end":39063,"line_start":975,"line_end":975,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54304,"byte_end":54313,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54630,"byte_end":54639,"line_start":58,"line_end":58,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54667,"byte_end":54676,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54761,"byte_end":54770,"line_start":64,"line_end":64,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54998,"byte_end":55007,"line_start":73,"line_end":73,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":55266,"byte_end":55275,"line_start":83,"line_end":83,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56173,"byte_end":56176,"line_start":108,"line_end":108,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56262,"byte_end":56265,"line_start":113,"line_end":113,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56489,"byte_end":56492,"line_start":122,"line_end":122,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59042,"byte_end":59056,"line_start":214,"line_end":214,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":61646,"byte_end":61654,"line_start":301,"line_end":301,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":62585,"byte_end":62593,"line_start":340,"line_end":340,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64180,"byte_end":64188,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64586,"byte_end":64594,"line_start":412,"line_end":412,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66557,"byte_end":66569,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68988,"byte_end":68993,"line_start":565,"line_end":565,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70871,"byte_end":70876,"line_start":626,"line_end":626,"column_start":65,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71585,"byte_end":71598,"line_start":654,"line_end":654,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74708,"byte_end":74721,"line_start":741,"line_end":741,"column_start":65,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75222,"byte_end":75233,"line_start":761,"line_end":761,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76098,"byte_end":76109,"line_start":785,"line_end":785,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76304,"byte_end":76312,"line_start":793,"line_end":793,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89513,"byte_end":89521,"line_start":1191,"line_end":1191,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91769,"byte_end":91781,"line_start":1255,"line_end":1255,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109652,"byte_end":109656,"line_start":1724,"line_end":1724,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109775,"byte_end":109779,"line_start":1730,"line_end":1730,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109936,"byte_end":109940,"line_start":1736,"line_end":1736,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110095,"byte_end":110099,"line_start":1743,"line_end":1743,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110244,"byte_end":110248,"line_start":1749,"line_end":1749,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110771,"byte_end":110777,"line_start":1768,"line_end":1768,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110898,"byte_end":110904,"line_start":1774,"line_end":1774,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111068,"byte_end":111074,"line_start":1780,"line_end":1780,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111229,"byte_end":111235,"line_start":1787,"line_end":1787,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111384,"byte_end":111390,"line_start":1793,"line_end":1793,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111938,"byte_end":111947,"line_start":1812,"line_end":1812,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112072,"byte_end":112081,"line_start":1818,"line_end":1818,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112245,"byte_end":112254,"line_start":1824,"line_end":1824,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112684,"byte_end":112688,"line_start":1841,"line_end":1841,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112813,"byte_end":112817,"line_start":1847,"line_end":1847,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112976,"byte_end":112980,"line_start":1853,"line_end":1853,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113135,"byte_end":113139,"line_start":1860,"line_end":1860,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113296,"byte_end":113300,"line_start":1866,"line_end":1866,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113841,"byte_end":113848,"line_start":1885,"line_end":1885,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113980,"byte_end":113987,"line_start":1891,"line_end":1891,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114149,"byte_end":114156,"line_start":1897,"line_end":1897,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114644,"byte_end":114652,"line_start":1914,"line_end":1914,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114770,"byte_end":114778,"line_start":1920,"line_end":1920,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114934,"byte_end":114942,"line_start":1926,"line_end":1926,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115063,"byte_end":115071,"line_start":1932,"line_end":1932,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115656,"byte_end":115661,"line_start":1950,"line_end":1950,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115783,"byte_end":115788,"line_start":1956,"line_end":1956,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":116404,"byte_end":116412,"line_start":1983,"line_end":1983,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":116744,"byte_end":116752,"line_start":1998,"line_end":1998,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":117335,"byte_end":117343,"line_start":2019,"line_end":2019,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":117729,"byte_end":117737,"line_start":2034,"line_end":2034,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":118325,"byte_end":118333,"line_start":2052,"line_end":2052,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119050,"byte_end":119058,"line_start":2070,"line_end":2070,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119464,"byte_end":119472,"line_start":2083,"line_end":2083,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119706,"byte_end":119714,"line_start":2092,"line_end":2092,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":120083,"byte_end":120091,"line_start":2107,"line_end":2107,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3160,"byte_end":3169,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3249,"byte_end":3258,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3334,"byte_end":3343,"line_start":110,"line_end":110,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3545,"byte_end":3551,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2716,"byte_end":2719,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":54}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":2729,"byte_end":2732,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":435}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/equivalent.rs","byte_start":8652,"byte_end":8653,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":21}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/mutable_keys.rs","byte_start":10482,"byte_end":10490,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13298,"byte_end":13306,"line_start":77,"line_end":77,"column_start":24,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":13770,"byte_end":13778,"line_start":99,"line_end":99,"column_start":27,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14209,"byte_end":14217,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":14608,"byte_end":14616,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":15757,"byte_end":15765,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":26571,"byte_end":26579,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28238,"byte_end":28246,"line_start":543,"line_end":543,"column_start":22,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28343,"byte_end":28351,"line_start":549,"line_end":549,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28495,"byte_end":28503,"line_start":555,"line_end":555,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":28606,"byte_end":28614,"line_start":561,"line_end":561,"column_start":36,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29146,"byte_end":29150,"line_start":580,"line_end":580,"column_start":26,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29263,"byte_end":29267,"line_start":586,"line_end":586,"column_start":37,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29423,"byte_end":29427,"line_start":592,"line_end":592,"column_start":35,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29521,"byte_end":29525,"line_start":598,"line_end":598,"column_start":23,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":29654,"byte_end":29658,"line_start":604,"line_end":604,"column_start":40,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":192},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30143,"byte_end":30148,"line_start":621,"line_end":621,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30253,"byte_end":30258,"line_start":627,"line_end":627,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30580,"byte_end":30588,"line_start":643,"line_end":643,"column_start":29,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":30857,"byte_end":30865,"line_start":657,"line_end":657,"column_start":32,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31143,"byte_end":31151,"line_start":667,"line_end":667,"column_start":26,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31406,"byte_end":31414,"line_start":677,"line_end":677,"column_start":34,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31700,"byte_end":31708,"line_start":688,"line_end":688,"column_start":24,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":31917,"byte_end":31925,"line_start":697,"line_end":697,"column_start":48,"column_end":56},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32150,"byte_end":32158,"line_start":707,"line_end":707,"column_start":19,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":32230,"byte_end":32238,"line_start":713,"line_end":713,"column_start":12,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":33582,"byte_end":33592,"line_start":756,"line_end":756,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34035,"byte_end":34045,"line_start":776,"line_end":776,"column_start":40,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34364,"byte_end":34374,"line_start":790,"line_end":790,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":34512,"byte_end":34522,"line_start":796,"line_end":796,"column_start":31,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35147,"byte_end":35159,"line_start":818,"line_end":818,"column_start":29,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35601,"byte_end":35613,"line_start":838,"line_end":838,"column_start":40,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":35931,"byte_end":35943,"line_start":852,"line_end":852,"column_start":26,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36083,"byte_end":36095,"line_start":858,"line_end":858,"column_start":31,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":36783,"byte_end":36802,"line_start":879,"line_end":879,"column_start":34,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37268,"byte_end":37287,"line_start":901,"line_end":901,"column_start":45,"column_end":64},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37504,"byte_end":37523,"line_start":911,"line_end":911,"column_start":31,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":37671,"byte_end":37690,"line_start":917,"line_end":917,"column_start":36,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38312,"byte_end":38317,"line_start":939,"line_end":939,"column_start":29,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38745,"byte_end":38750,"line_start":960,"line_end":960,"column_start":40,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":38929,"byte_end":38934,"line_start":969,"line_end":969,"column_start":26,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/set.rs","byte_start":39058,"byte_end":39063,"line_start":975,"line_end":975,"column_start":31,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54304,"byte_end":54313,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54630,"byte_end":54639,"line_start":58,"line_end":58,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54667,"byte_end":54676,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54761,"byte_end":54770,"line_start":64,"line_end":64,"column_start":24,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":54998,"byte_end":55007,"line_start":73,"line_end":73,"column_start":35,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":55266,"byte_end":55275,"line_start":83,"line_end":83,"column_start":34,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56173,"byte_end":56176,"line_start":108,"line_end":108,"column_start":16,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56262,"byte_end":56265,"line_start":113,"line_end":113,"column_start":21,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1084},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":56489,"byte_end":56492,"line_start":122,"line_end":122,"column_start":6,"column_end":9},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":59042,"byte_end":59056,"line_start":214,"line_end":214,"column_start":10,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":61646,"byte_end":61654,"line_start":301,"line_end":301,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":1039}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":62585,"byte_end":62593,"line_start":340,"line_end":340,"column_start":30,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64180,"byte_end":64188,"line_start":397,"line_end":397,"column_start":12,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":64586,"byte_end":64594,"line_start":412,"line_end":412,"column_start":15,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":66557,"byte_end":66569,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":68988,"byte_end":68993,"line_start":565,"line_end":565,"column_start":16,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":70871,"byte_end":70876,"line_start":626,"line_end":626,"column_start":65,"column_end":70},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":71585,"byte_end":71598,"line_start":654,"line_end":654,"column_start":16,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":74708,"byte_end":74721,"line_start":741,"line_end":741,"column_start":65,"column_end":78},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":75222,"byte_end":75233,"line_start":761,"line_end":761,"column_start":16,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76098,"byte_end":76109,"line_start":785,"line_end":785,"column_start":52,"column_end":63},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":76304,"byte_end":76312,"line_start":793,"line_end":793,"column_start":15,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":89513,"byte_end":89521,"line_start":1191,"line_end":1191,"column_start":15,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":91769,"byte_end":91781,"line_start":1255,"line_end":1255,"column_start":12,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109652,"byte_end":109656,"line_start":1724,"line_end":1724,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109775,"byte_end":109779,"line_start":1730,"line_end":1730,"column_start":40,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":109936,"byte_end":109940,"line_start":1736,"line_end":1736,"column_start":38,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110095,"byte_end":110099,"line_start":1743,"line_end":1743,"column_start":26,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110244,"byte_end":110248,"line_start":1749,"line_end":1749,"column_start":43,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":775},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110771,"byte_end":110777,"line_start":1768,"line_end":1768,"column_start":29,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":110898,"byte_end":110904,"line_start":1774,"line_end":1774,"column_start":40,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111068,"byte_end":111074,"line_start":1780,"line_end":1780,"column_start":38,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111229,"byte_end":111235,"line_start":1787,"line_end":1787,"column_start":26,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111384,"byte_end":111390,"line_start":1793,"line_end":1793,"column_start":43,"column_end":49},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":111938,"byte_end":111947,"line_start":1812,"line_end":1812,"column_start":29,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112072,"byte_end":112081,"line_start":1818,"line_end":1818,"column_start":40,"column_end":49},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112245,"byte_end":112254,"line_start":1824,"line_end":1824,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":835},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112684,"byte_end":112688,"line_start":1841,"line_end":1841,"column_start":29,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112813,"byte_end":112817,"line_start":1847,"line_end":1847,"column_start":40,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":112976,"byte_end":112980,"line_start":1853,"line_end":1853,"column_start":38,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113135,"byte_end":113139,"line_start":1860,"line_end":1860,"column_start":26,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113296,"byte_end":113300,"line_start":1866,"line_end":1866,"column_start":55,"column_end":59},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113841,"byte_end":113848,"line_start":1885,"line_end":1885,"column_start":29,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":113980,"byte_end":113987,"line_start":1891,"line_end":1891,"column_start":40,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114149,"byte_end":114156,"line_start":1897,"line_end":1897,"column_start":38,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114644,"byte_end":114652,"line_start":1914,"line_end":1914,"column_start":25,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114770,"byte_end":114778,"line_start":1920,"line_end":1920,"column_start":40,"column_end":48},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":114934,"byte_end":114942,"line_start":1926,"line_end":1926,"column_start":34,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115063,"byte_end":115071,"line_start":1932,"line_end":1932,"column_start":51,"column_end":59},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115656,"byte_end":115661,"line_start":1950,"line_end":1950,"column_start":29,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":115783,"byte_end":115788,"line_start":1956,"line_end":1956,"column_start":40,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":926},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":116404,"byte_end":116412,"line_start":1983,"line_end":1983,"column_start":32,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":116744,"byte_end":116752,"line_start":1998,"line_end":1998,"column_start":47,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":117335,"byte_end":117343,"line_start":2019,"line_end":2019,"column_start":50,"column_end":58},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":117729,"byte_end":117737,"line_start":2034,"line_end":2034,"column_start":40,"column_end":48},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":118325,"byte_end":118333,"line_start":2052,"line_end":2052,"column_start":34,"column_end":42},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119050,"byte_end":119058,"line_start":2070,"line_end":2070,"column_start":46,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119464,"byte_end":119472,"line_start":2083,"line_end":2083,"column_start":27,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":119706,"byte_end":119714,"line_start":2092,"line_end":2092,"column_start":60,"column_end":68},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/map.rs","byte_start":120083,"byte_end":120091,"line_start":2107,"line_end":2107,"column_start":22,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3160,"byte_end":3169,"line_start":101,"line_end":101,"column_start":6,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3249,"byte_end":3258,"line_start":106,"line_end":106,"column_start":16,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3334,"byte_end":3343,"line_start":110,"line_end":110,"column_start":20,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.3.0/src/lib.rs","byte_start":3545,"byte_end":3551,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}}]}