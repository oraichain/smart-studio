{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","num_traits","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=4fea4bb61c2d333a","-C","extra-filename=-4fea4bb61c2d333a","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libnum_traits-4fea4bb61c2d333a.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[6765885473796399026,546179157417240349]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":472,"byte_end":19148,"line_start":11,"line_end":569,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1043,"byte_end":1050,"line_start":32,"line_end":32,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1114,"byte_end":1119,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2104},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1136,"byte_end":1146,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1255,"byte_end":1259,"line_start":37,"line_end":37,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1261,"byte_end":1272,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1274,"byte_end":1287,"line_start":37,"line_end":37,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1289,"byte_end":1296,"line_start":37,"line_end":37,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1298,"byte_end":1309,"line_start":37,"line_end":37,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":38,"line_end":38,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1338,"byte_end":1342,"line_start":38,"line_end":38,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":38,"line_end":38,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1349,"byte_end":1353,"line_start":38,"line_end":38,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1369,"byte_end":1376,"line_start":39,"line_end":39,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1406,"byte_end":1416,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1418,"byte_end":1428,"line_start":41,"line_end":41,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1430,"byte_end":1440,"line_start":41,"line_end":41,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1442,"byte_end":1452,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1454,"byte_end":1464,"line_start":41,"line_end":41,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1466,"byte_end":1476,"line_start":41,"line_end":41,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1478,"byte_end":1488,"line_start":41,"line_end":41,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1490,"byte_end":1500,"line_start":41,"line_end":41,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1523,"byte_end":1526,"line_start":43,"line_end":43,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1551,"byte_end":1557,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1559,"byte_end":1571,"line_start":44,"line_end":44,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1599,"byte_end":1609,"line_start":45,"line_end":45,"column_start":26,"column_end":36},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1635,"byte_end":1646,"line_start":46,"line_end":46,"column_start":25,"column_end":36},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1648,"byte_end":1659,"line_start":46,"line_end":46,"column_start":38,"column_end":49},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1661,"byte_end":1672,"line_start":46,"line_end":46,"column_start":51,"column_end":62},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1674,"byte_end":1685,"line_start":46,"line_end":46,"column_start":64,"column_end":75},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1687,"byte_end":1698,"line_start":46,"line_end":46,"column_start":77,"column_end":88},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1715,"byte_end":1726,"line_start":47,"line_end":47,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":471},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1728,"byte_end":1731,"line_start":47,"line_end":47,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1733,"byte_end":1736,"line_start":47,"line_end":47,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1754,"byte_end":1757,"line_start":48,"line_end":48,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1759,"byte_end":1766,"line_start":48,"line_end":48,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1768,"byte_end":1774,"line_start":48,"line_end":48,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1776,"byte_end":1782,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1784,"byte_end":1792,"line_start":48,"line_end":48,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":472,"byte_end":19148,"line_start":11,"line_end":569,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":4375},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":98},{"krate":0,"index":182},{"krate":0,"index":288},{"krate":0,"index":316},{"krate":0,"index":348},{"krate":0,"index":457},{"krate":0,"index":476},{"krate":0,"index":532},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":4312},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4324},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":598},{"krate":0,"index":4348},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4357},{"krate":0,"index":602},{"krate":0,"index":4359},{"krate":0,"index":4366},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":701,"byte_end":711,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":4473},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":91},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":673},{"krate":0,"index":695},{"krate":0,"index":716},{"krate":0,"index":736},{"krate":0,"index":755},{"krate":0,"index":773},{"krate":0,"index":790},{"krate":0,"index":806},{"krate":0,"index":821},{"krate":0,"index":835},{"krate":0,"index":848},{"krate":0,"index":860},{"krate":0,"index":871},{"krate":0,"index":881},{"krate":0,"index":890},{"krate":0,"index":898},{"krate":0,"index":905},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":920},{"krate":0,"index":923}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20629,"byte_end":20636,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20573,"byte_end":20618,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20772,"byte_end":20781,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20702,"byte_end":20764,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20866,"byte_end":20875,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":20797,"byte_end":20858,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":4505},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":926},{"krate":0,"index":941},{"krate":0,"index":956},{"krate":0,"index":971},{"krate":0,"index":986},{"krate":0,"index":1001},{"krate":0,"index":1016},{"krate":0,"index":1031},{"krate":0,"index":1046},{"krate":0,"index":1061},{"krate":0,"index":1076},{"krate":0,"index":1091},{"krate":0,"index":1106},{"krate":0,"index":1157},{"krate":0,"index":145},{"krate":0,"index":1208},{"krate":0,"index":1223},{"krate":0,"index":1238},{"krate":0,"index":1253},{"krate":0,"index":1268},{"krate":0,"index":1283},{"krate":0,"index":1298},{"krate":0,"index":1313},{"krate":0,"index":1328},{"krate":0,"index":1343},{"krate":0,"index":1358},{"krate":0,"index":1373},{"krate":0,"index":1388},{"krate":0,"index":1403},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1696},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":23970,"byte_end":23981,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":23904,"byte_end":23959,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24140,"byte_end":24148,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`. If the value cannot be\n represented by an `isize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":23988,"byte_end":24058,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/ represented by an `isize`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24063,"byte_end":24118,"line_start":14,"line_end":14,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24123,"byte_end":24132,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24395,"byte_end":24400,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`. If the value cannot be\n represented by an `i8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24249,"byte_end":24316,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ represented by an `i8`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24321,"byte_end":24373,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24378,"byte_end":24387,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24643,"byte_end":24649,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`. If the value cannot be\n represented by an `i16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24495,"byte_end":24563,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ represented by an `i16`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24568,"byte_end":24621,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24626,"byte_end":24635,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24894,"byte_end":24900,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`. If the value cannot be\n represented by an `i32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24746,"byte_end":24814,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ represented by an `i32`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24819,"byte_end":24872,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24877,"byte_end":24886,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25131,"byte_end":25137,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`. If the value cannot be\n represented by an `i64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":24997,"byte_end":25065,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ represented by an `i64`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25070,"byte_end":25123,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25654,"byte_end":25661,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`. If the value cannot be\n represented by an `i128` (`i64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25166,"byte_end":25235,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ represented by an `i128` (`i64` under the default implementation), then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25240,"byte_end":25315,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25320,"byte_end":25343,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25348,"byte_end":25351,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25356,"byte_end":25434,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25439,"byte_end":25442,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`. Types implementing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25447,"byte_end":25525,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25530,"byte_end":25611,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25616,"byte_end":25625,"line_start":53,"line_end":53,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25630,"byte_end":25646,"line_start":54,"line_end":54,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25886,"byte_end":25894,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`. If the value cannot be\n represented by a `usize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25736,"byte_end":25805,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ represented by a `usize`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25810,"byte_end":25864,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25869,"byte_end":25878,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26139,"byte_end":26144,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u8`. If the value cannot be\n represented by a `u8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u8`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":25995,"byte_end":26061,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ represented by a `u8`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26066,"byte_end":26117,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26122,"byte_end":26131,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26385,"byte_end":26391,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u16`. If the value cannot be\n represented by a `u16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u16`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26239,"byte_end":26306,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ represented by a `u16`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26311,"byte_end":26363,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26368,"byte_end":26377,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26634,"byte_end":26640,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u32`. If the value cannot be\n represented by a `u32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u32`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26488,"byte_end":26555,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ represented by a `u32`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26560,"byte_end":26612,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26617,"byte_end":26626,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26869,"byte_end":26875,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u64`. If the value cannot be\n represented by a `u64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u64`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26737,"byte_end":26804,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ represented by a `u64`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26809,"byte_end":26861,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27391,"byte_end":27398,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u128`. If the value cannot be\n represented by a `u128` (`u64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u128`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26904,"byte_end":26972,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ represented by a `u128` (`u64` under the default implementation), then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":26977,"byte_end":27051,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27056,"byte_end":27079,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27084,"byte_end":27087,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27092,"byte_end":27170,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27175,"byte_end":27178,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27183,"byte_end":27262,"line_start":97,"line_end":97,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27267,"byte_end":27348,"line_start":98,"line_end":98,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27353,"byte_end":27362,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27367,"byte_end":27383,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27621,"byte_end":27627,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`. If the value cannot be\n represented by an `f32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27473,"byte_end":27541,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ represented by an `f32`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27546,"byte_end":27599,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27604,"byte_end":27613,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27872,"byte_end":27878,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`. If the value cannot be\n represented by an `f64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`. If the value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27724,"byte_end":27792,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ represented by an `f64`, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27797,"byte_end":27850,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":27855,"byte_end":27864,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36276,"byte_end":36289,"line_start":379,"line_end":379,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36210,"byte_end":36265,"line_start":378,"line_end":378,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36472,"byte_end":36482,"line_start":383,"line_end":383,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `isize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `isize` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36303,"byte_end":36375,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36380,"byte_end":36450,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36455,"byte_end":36464,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36741,"byte_end":36748,"line_start":390,"line_end":390,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i8` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36575,"byte_end":36644,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36649,"byte_end":36719,"line_start":388,"line_end":388,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36724,"byte_end":36733,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36999,"byte_end":37007,"line_start":397,"line_end":397,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i16` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36832,"byte_end":36902,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36907,"byte_end":36977,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36982,"byte_end":36991,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37259,"byte_end":37267,"line_start":404,"line_end":404,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i32` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37092,"byte_end":37162,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37167,"byte_end":37237,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37242,"byte_end":37251,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37505,"byte_end":37513,"line_start":410,"line_end":410,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i64` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37352,"byte_end":37422,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37427,"byte_end":37497,"line_start":409,"line_end":409,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38003,"byte_end":38012,"line_start":421,"line_end":421,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `i128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `i128` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37544,"byte_end":37615,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37620,"byte_end":37690,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37695,"byte_end":37698,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37703,"byte_end":37781,"line_start":415,"line_end":415,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37786,"byte_end":37789,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`. Types implementing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37794,"byte_end":37874,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37879,"byte_end":37960,"line_start":418,"line_end":418,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37965,"byte_end":37974,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":37979,"byte_end":37995,"line_start":420,"line_end":420,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38272,"byte_end":38282,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `usize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `usize` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38104,"byte_end":38175,"line_start":425,"line_end":425,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38180,"byte_end":38250,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38255,"byte_end":38264,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38541,"byte_end":38548,"line_start":435,"line_end":435,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u8` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38375,"byte_end":38444,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38449,"byte_end":38519,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38524,"byte_end":38533,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38799,"byte_end":38807,"line_start":442,"line_end":442,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u16` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38632,"byte_end":38702,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38707,"byte_end":38777,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38782,"byte_end":38791,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39059,"byte_end":39067,"line_start":449,"line_end":449,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u32` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38892,"byte_end":38962,"line_start":446,"line_end":446,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":38967,"byte_end":39037,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39042,"byte_end":39051,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39305,"byte_end":39313,"line_start":455,"line_end":455,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u64` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39152,"byte_end":39222,"line_start":453,"line_end":453,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39227,"byte_end":39297,"line_start":454,"line_end":454,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39803,"byte_end":39812,"line_start":466,"line_end":466,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts an `u128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `u128` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39344,"byte_end":39415,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39420,"byte_end":39490,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39495,"byte_end":39498,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39503,"byte_end":39581,"line_start":460,"line_end":460,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39586,"byte_end":39589,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`. Types implementing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39594,"byte_end":39674,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39679,"byte_end":39760,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39765,"byte_end":39774,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39779,"byte_end":39795,"line_start":465,"line_end":465,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40070,"byte_end":40078,"line_start":473,"line_end":473,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `f32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f32` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39904,"byte_end":39973,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":39978,"byte_end":40048,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40053,"byte_end":40062,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40329,"byte_end":40337,"line_start":480,"line_end":480,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Converts a `f64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f64` to return an optional value of this type. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40163,"byte_end":40232,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40237,"byte_end":40307,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":40312,"byte_end":40321,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44583,"byte_end":44587,"line_start":650,"line_end":650,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44370,"byte_end":44414,"line_start":639,"line_end":639,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44415,"byte_end":44418,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44419,"byte_end":44433,"line_start":641,"line_end":641,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44434,"byte_end":44437,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44438,"byte_end":44445,"line_start":643,"line_end":643,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44446,"byte_end":44474,"line_start":644,"line_end":644,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44475,"byte_end":44522,"line_start":645,"line_end":645,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44523,"byte_end":44553,"line_start":646,"line_end":646,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44554,"byte_end":44561,"line_start":647,"line_end":647,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44562,"byte_end":44565,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44566,"byte_end":44575,"line_start":649,"line_end":649,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44721,"byte_end":44728,"line_start":655,"line_end":655,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44657,"byte_end":44710,"line_start":654,"line_end":654,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44974,"byte_end":44978,"line_start":659,"line_end":659,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait. If the source value cannot be\n represented by the target type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44756,"byte_end":44822,"line_start":656,"line_end":656,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait. If the source value cannot be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44827,"byte_end":44901,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ represented by the target type, then `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44906,"byte_end":44966,"line_start":658,"line_end":658,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47114,"byte_end":47125,"line_start":734,"line_end":734,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait `AsPrimitive` should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46006,"byte_end":46074,"line_start":699,"line_end":699,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46075,"byte_end":46136,"line_start":700,"line_end":700,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait `AsPrimitive` should behave like a primitive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46137,"byte_end":46212,"line_start":701,"line_end":701,"column_start":1,"column_end":76}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46213,"byte_end":46280,"line_start":702,"line_end":702,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46281,"byte_end":46321,"line_start":703,"line_end":703,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46322,"byte_end":46325,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46326,"byte_end":46340,"line_start":705,"line_end":705,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46341,"byte_end":46344,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46345,"byte_end":46352,"line_start":707,"line_end":707,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46353,"byte_end":46387,"line_start":708,"line_end":708,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46388,"byte_end":46431,"line_start":709,"line_end":709,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46432,"byte_end":46457,"line_start":710,"line_end":710,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46458,"byte_end":46465,"line_start":711,"line_end":711,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46466,"byte_end":46469,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46470,"byte_end":46482,"line_start":713,"line_end":713,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46483,"byte_end":46486,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46487,"byte_end":46555,"line_start":715,"line_end":715,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46556,"byte_end":46603,"line_start":716,"line_end":716,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46604,"byte_end":46607,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46608,"byte_end":46679,"line_start":718,"line_end":718,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46680,"byte_end":46750,"line_start":719,"line_end":719,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46751,"byte_end":46754,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46755,"byte_end":46768,"line_start":721,"line_end":721,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46769,"byte_end":46803,"line_start":722,"line_end":722,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46804,"byte_end":46843,"line_start":723,"line_end":723,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46844,"byte_end":46851,"line_start":724,"line_end":724,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46852,"byte_end":46855,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46856,"byte_end":46920,"line_start":726,"line_end":726,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46921,"byte_end":46997,"line_start":727,"line_end":727,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":46998,"byte_end":47001,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47002,"byte_end":47015,"line_start":729,"line_end":729,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47016,"byte_end":47050,"line_start":730,"line_end":730,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47051,"byte_end":47091,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47092,"byte_end":47099,"line_start":732,"line_end":732,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47100,"byte_end":47103,"line_start":733,"line_end":733,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47244,"byte_end":47247,"line_start":739,"line_end":739,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47180,"byte_end":47236,"line_start":738,"line_end":738,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":1988},{"krate":0,"index":2046},{"krate":0,"index":2104},{"krate":0,"index":2121},{"krate":0,"index":2138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48979,"byte_end":48988,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48837,"byte_end":48907,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48908,"byte_end":48911,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48912,"byte_end":48968,"line_start":15,"line_end":15,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49385,"byte_end":49393,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49051,"byte_end":49081,"line_start":17,"line_end":17,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49086,"byte_end":49089,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49094,"byte_end":49108,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49113,"byte_end":49116,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49121,"byte_end":49128,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49133,"byte_end":49170,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49175,"byte_end":49199,"line_start":23,"line_end":23,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49204,"byte_end":49207,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49212,"byte_end":49246,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49251,"byte_end":49287,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49292,"byte_end":49297,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49302,"byte_end":49305,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49310,"byte_end":49335,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49340,"byte_end":49365,"line_start":30,"line_end":30,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49370,"byte_end":49377,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49756,"byte_end":49768,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49410,"byte_end":49440,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49445,"byte_end":49448,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49453,"byte_end":49467,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49472,"byte_end":49475,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49480,"byte_end":49487,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49492,"byte_end":49529,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49534,"byte_end":49558,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49563,"byte_end":49566,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49571,"byte_end":49605,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49610,"byte_end":49650,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49655,"byte_end":49660,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49665,"byte_end":49668,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49673,"byte_end":49702,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49707,"byte_end":49736,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49741,"byte_end":49748,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50078,"byte_end":50081,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49785,"byte_end":49801,"line_start":51,"line_end":51,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49806,"byte_end":49809,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49814,"byte_end":49828,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49833,"byte_end":49836,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49841,"byte_end":49848,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49853,"byte_end":49890,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49895,"byte_end":49898,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49903,"byte_end":49933,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49938,"byte_end":49963,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49968,"byte_end":49992,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49997,"byte_end":50002,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50007,"byte_end":50010,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50015,"byte_end":50034,"line_start":63,"line_end":63,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50039,"byte_end":50058,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50063,"byte_end":50070,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50497,"byte_end":50505,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50098,"byte_end":50117,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50122,"byte_end":50125,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50130,"byte_end":50144,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50149,"byte_end":50152,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50157,"byte_end":50164,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50169,"byte_end":50206,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50211,"byte_end":50235,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50240,"byte_end":50243,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50248,"byte_end":50282,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50287,"byte_end":50317,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50322,"byte_end":50351,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50356,"byte_end":50391,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50396,"byte_end":50401,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50406,"byte_end":50409,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50414,"byte_end":50443,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50448,"byte_end":50477,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50482,"byte_end":50489,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50884,"byte_end":50893,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50522,"byte_end":50589,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50594,"byte_end":50597,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50602,"byte_end":50616,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50621,"byte_end":50624,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50629,"byte_end":50636,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50641,"byte_end":50678,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50683,"byte_end":50707,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50712,"byte_end":50715,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50720,"byte_end":50754,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50759,"byte_end":50796,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50801,"byte_end":50806,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50811,"byte_end":50814,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50819,"byte_end":50839,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50844,"byte_end":50864,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50869,"byte_end":50876,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51313,"byte_end":51331,"line_start":119,"line_end":119,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50910,"byte_end":50991,"line_start":104,"line_end":104,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":50996,"byte_end":50999,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51004,"byte_end":51018,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51023,"byte_end":51026,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51031,"byte_end":51038,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51043,"byte_end":51080,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51085,"byte_end":51109,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51114,"byte_end":51117,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51122,"byte_end":51156,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51161,"byte_end":51207,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51212,"byte_end":51217,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51222,"byte_end":51225,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51230,"byte_end":51259,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51264,"byte_end":51293,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51298,"byte_end":51305,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51693,"byte_end":51700,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51348,"byte_end":51392,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51397,"byte_end":51400,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51405,"byte_end":51419,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51424,"byte_end":51427,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51432,"byte_end":51439,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51444,"byte_end":51481,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51486,"byte_end":51510,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51515,"byte_end":51518,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51523,"byte_end":51557,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51562,"byte_end":51597,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51602,"byte_end":51607,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51612,"byte_end":51615,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51620,"byte_end":51644,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51649,"byte_end":51673,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51678,"byte_end":51685,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52078,"byte_end":52087,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51717,"byte_end":51783,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51788,"byte_end":51791,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51796,"byte_end":51810,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51815,"byte_end":51818,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51823,"byte_end":51830,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51835,"byte_end":51872,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51877,"byte_end":51901,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51906,"byte_end":51909,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51914,"byte_end":51948,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51953,"byte_end":51990,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":51995,"byte_end":52000,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52005,"byte_end":52008,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52013,"byte_end":52033,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52038,"byte_end":52058,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52063,"byte_end":52070,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52537,"byte_end":52543,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52104,"byte_end":52144,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52149,"byte_end":52152,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52157,"byte_end":52171,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52176,"byte_end":52179,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52184,"byte_end":52191,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52196,"byte_end":52233,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52238,"byte_end":52262,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52267,"byte_end":52270,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52275,"byte_end":52318,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52323,"byte_end":52356,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52361,"byte_end":52366,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52371,"byte_end":52374,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52379,"byte_end":52405,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52410,"byte_end":52442,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52447,"byte_end":52473,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52478,"byte_end":52503,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52508,"byte_end":52515,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52520,"byte_end":52529,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53120,"byte_end":53131,"line_start":197,"line_end":197,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52592,"byte_end":52637,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52642,"byte_end":52645,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52650,"byte_end":52664,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52669,"byte_end":52672,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52677,"byte_end":52684,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52689,"byte_end":52726,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52731,"byte_end":52755,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52760,"byte_end":52763,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52768,"byte_end":52811,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52816,"byte_end":52854,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52859,"byte_end":52864,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52869,"byte_end":52872,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52877,"byte_end":52908,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52913,"byte_end":52948,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52953,"byte_end":52980,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":52985,"byte_end":53016,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53021,"byte_end":53056,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53061,"byte_end":53086,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53091,"byte_end":53098,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53103,"byte_end":53112,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53732,"byte_end":53741,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53224,"byte_end":53284,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53289,"byte_end":53292,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53297,"byte_end":53311,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53316,"byte_end":53319,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53324,"byte_end":53331,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53336,"byte_end":53373,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53378,"byte_end":53402,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53407,"byte_end":53410,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53415,"byte_end":53458,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53463,"byte_end":53499,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53504,"byte_end":53509,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53514,"byte_end":53517,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53522,"byte_end":53554,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53559,"byte_end":53585,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53590,"byte_end":53626,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53631,"byte_end":53666,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53671,"byte_end":53698,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53703,"byte_end":53710,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53715,"byte_end":53724,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54339,"byte_end":54348,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53816,"byte_end":53893,"line_start":224,"line_end":224,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53898,"byte_end":53901,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53906,"byte_end":53920,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53925,"byte_end":53928,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53933,"byte_end":53940,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53945,"byte_end":53982,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":53987,"byte_end":54011,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54016,"byte_end":54019,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54024,"byte_end":54067,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54072,"byte_end":54108,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54113,"byte_end":54118,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54123,"byte_end":54126,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54131,"byte_end":54163,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54168,"byte_end":54194,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54199,"byte_end":54235,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54240,"byte_end":54275,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54280,"byte_end":54305,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54310,"byte_end":54317,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54322,"byte_end":54331,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55187,"byte_end":55195,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54422,"byte_end":54497,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54502,"byte_end":54571,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54576,"byte_end":54598,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54603,"byte_end":54606,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54611,"byte_end":54625,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54630,"byte_end":54633,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54638,"byte_end":54645,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54650,"byte_end":54687,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54692,"byte_end":54716,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54721,"byte_end":54750,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54755,"byte_end":54758,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54763,"byte_end":54812,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54817,"byte_end":54852,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54857,"byte_end":54862,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54867,"byte_end":54870,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54875,"byte_end":54922,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54927,"byte_end":54967,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":54972,"byte_end":55009,"line_start":264,"line_end":264,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55014,"byte_end":55063,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55068,"byte_end":55126,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55131,"byte_end":55167,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55172,"byte_end":55179,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55828,"byte_end":55833,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55222,"byte_end":55285,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55290,"byte_end":55293,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55298,"byte_end":55312,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55317,"byte_end":55320,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55325,"byte_end":55332,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55337,"byte_end":55374,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55379,"byte_end":55403,"line_start":277,"line_end":277,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55408,"byte_end":55411,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55416,"byte_end":55456,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55461,"byte_end":55493,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55498,"byte_end":55503,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55508,"byte_end":55511,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55516,"byte_end":55556,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55561,"byte_end":55584,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55589,"byte_end":55612,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55617,"byte_end":55640,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55645,"byte_end":55669,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55674,"byte_end":55699,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55704,"byte_end":55729,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55734,"byte_end":55759,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55764,"byte_end":55794,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55799,"byte_end":55806,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":55811,"byte_end":55820,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56679,"byte_end":56683,"line_start":328,"line_end":328,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56070,"byte_end":56137,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56142,"byte_end":56145,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56150,"byte_end":56164,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56169,"byte_end":56172,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56177,"byte_end":56184,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56189,"byte_end":56226,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56231,"byte_end":56255,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56260,"byte_end":56263,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56268,"byte_end":56308,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56313,"byte_end":56344,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56349,"byte_end":56354,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56359,"byte_end":56362,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56367,"byte_end":56407,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56412,"byte_end":56435,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56440,"byte_end":56463,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56468,"byte_end":56491,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56496,"byte_end":56520,"line_start":321,"line_end":321,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56525,"byte_end":56550,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56555,"byte_end":56580,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56585,"byte_end":56610,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56615,"byte_end":56645,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56650,"byte_end":56657,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56662,"byte_end":56671,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57515,"byte_end":57520,"line_start":361,"line_end":361,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":56920,"byte_end":57002,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57007,"byte_end":57010,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57015,"byte_end":57029,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57034,"byte_end":57037,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57042,"byte_end":57049,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57054,"byte_end":57091,"line_start":344,"line_end":344,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57096,"byte_end":57120,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57125,"byte_end":57128,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57133,"byte_end":57173,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57178,"byte_end":57210,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57215,"byte_end":57220,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57225,"byte_end":57228,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57233,"byte_end":57273,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57278,"byte_end":57301,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57306,"byte_end":57329,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57334,"byte_end":57357,"line_start":354,"line_end":354,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57362,"byte_end":57386,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57391,"byte_end":57416,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57421,"byte_end":57446,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57451,"byte_end":57481,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57486,"byte_end":57493,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":57498,"byte_end":57507,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58611,"byte_end":58616,"line_start":405,"line_end":405,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58028,"byte_end":58068,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58073,"byte_end":58076,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58081,"byte_end":58095,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58100,"byte_end":58103,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58108,"byte_end":58115,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58120,"byte_end":58157,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58162,"byte_end":58186,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58191,"byte_end":58194,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58199,"byte_end":58239,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58244,"byte_end":58276,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58281,"byte_end":58286,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58291,"byte_end":58294,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58299,"byte_end":58339,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58344,"byte_end":58367,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58372,"byte_end":58395,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58400,"byte_end":58423,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58428,"byte_end":58452,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58457,"byte_end":58482,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58487,"byte_end":58512,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58517,"byte_end":58542,"line_start":401,"line_end":401,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58547,"byte_end":58577,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58582,"byte_end":58589,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58594,"byte_end":58603,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59337,"byte_end":59342,"line_start":437,"line_end":437,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58763,"byte_end":58807,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58812,"byte_end":58815,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58820,"byte_end":58834,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58839,"byte_end":58842,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58847,"byte_end":58854,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58859,"byte_end":58896,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58901,"byte_end":58925,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58930,"byte_end":58933,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58938,"byte_end":58978,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":58983,"byte_end":59015,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59020,"byte_end":59025,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59030,"byte_end":59033,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59038,"byte_end":59063,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59068,"byte_end":59093,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59098,"byte_end":59121,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59126,"byte_end":59151,"line_start":429,"line_end":429,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59156,"byte_end":59180,"line_start":430,"line_end":430,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59185,"byte_end":59212,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59217,"byte_end":59241,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59246,"byte_end":59273,"line_start":433,"line_end":433,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59278,"byte_end":59303,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59308,"byte_end":59315,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59320,"byte_end":59329,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60047,"byte_end":60050,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59481,"byte_end":59557,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59562,"byte_end":59595,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59600,"byte_end":59603,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59608,"byte_end":59622,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59627,"byte_end":59630,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59635,"byte_end":59642,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59647,"byte_end":59684,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59689,"byte_end":59713,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59718,"byte_end":59721,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59726,"byte_end":59766,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59771,"byte_end":59801,"line_start":455,"line_end":455,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59806,"byte_end":59811,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59816,"byte_end":59819,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59824,"byte_end":59864,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59869,"byte_end":59892,"line_start":459,"line_end":459,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59897,"byte_end":59920,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59925,"byte_end":59949,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59954,"byte_end":59978,"line_start":462,"line_end":462,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":59983,"byte_end":60013,"line_start":463,"line_end":463,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60018,"byte_end":60025,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60030,"byte_end":60039,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60974,"byte_end":60980,"line_start":500,"line_end":500,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60243,"byte_end":60299,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60304,"byte_end":60307,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60312,"byte_end":60384,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60389,"byte_end":60466,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60471,"byte_end":60531,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60536,"byte_end":60539,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60544,"byte_end":60558,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60563,"byte_end":60566,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60571,"byte_end":60578,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60583,"byte_end":60620,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60625,"byte_end":60649,"line_start":486,"line_end":486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60654,"byte_end":60657,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60662,"byte_end":60702,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60707,"byte_end":60740,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60745,"byte_end":60750,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60755,"byte_end":60758,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60763,"byte_end":60793,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60798,"byte_end":60821,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60826,"byte_end":60849,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60854,"byte_end":60879,"line_start":495,"line_end":495,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60884,"byte_end":60909,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60914,"byte_end":60940,"line_start":497,"line_end":497,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60945,"byte_end":60952,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":60957,"byte_end":60966,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61842,"byte_end":61858,"line_start":533,"line_end":533,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61179,"byte_end":61241,"line_start":510,"line_end":510,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61246,"byte_end":61299,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61304,"byte_end":61327,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61332,"byte_end":61335,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61340,"byte_end":61354,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61359,"byte_end":61362,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61367,"byte_end":61374,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61379,"byte_end":61416,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61421,"byte_end":61445,"line_start":518,"line_end":518,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61450,"byte_end":61453,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61458,"byte_end":61501,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61506,"byte_end":61549,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61554,"byte_end":61559,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61564,"byte_end":61567,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61572,"byte_end":61603,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61608,"byte_end":61634,"line_start":525,"line_end":525,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61639,"byte_end":61663,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61668,"byte_end":61694,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61699,"byte_end":61735,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61740,"byte_end":61775,"line_start":529,"line_end":529,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61780,"byte_end":61808,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61813,"byte_end":61820,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61825,"byte_end":61834,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62588,"byte_end":62604,"line_start":560,"line_end":560,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61919,"byte_end":61981,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":61986,"byte_end":62043,"line_start":538,"line_end":538,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62048,"byte_end":62072,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62077,"byte_end":62080,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62085,"byte_end":62099,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62104,"byte_end":62107,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62112,"byte_end":62119,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62124,"byte_end":62161,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62166,"byte_end":62190,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62195,"byte_end":62198,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62203,"byte_end":62246,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62251,"byte_end":62294,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62299,"byte_end":62304,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62309,"byte_end":62312,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62317,"byte_end":62349,"line_start":551,"line_end":551,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62354,"byte_end":62381,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62386,"byte_end":62411,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62416,"byte_end":62441,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62446,"byte_end":62481,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62486,"byte_end":62522,"line_start":556,"line_end":556,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62527,"byte_end":62554,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62559,"byte_end":62566,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62571,"byte_end":62580,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63237,"byte_end":63240,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62699,"byte_end":62742,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62747,"byte_end":62750,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62755,"byte_end":62827,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62832,"byte_end":62835,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62840,"byte_end":62854,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62859,"byte_end":62862,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62867,"byte_end":62874,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62879,"byte_end":62916,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62921,"byte_end":62945,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62950,"byte_end":62953,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":62958,"byte_end":63006,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63011,"byte_end":63044,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63049,"byte_end":63054,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63059,"byte_end":63062,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63067,"byte_end":63095,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63100,"byte_end":63130,"line_start":580,"line_end":580,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63135,"byte_end":63165,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63170,"byte_end":63203,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63208,"byte_end":63215,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63220,"byte_end":63229,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64037,"byte_end":64040,"line_start":619,"line_end":619,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63495,"byte_end":63538,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63543,"byte_end":63546,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63551,"byte_end":63623,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63628,"byte_end":63631,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63636,"byte_end":63650,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63655,"byte_end":63658,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63663,"byte_end":63670,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63675,"byte_end":63712,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63717,"byte_end":63741,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63746,"byte_end":63749,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63754,"byte_end":63802,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == min);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63807,"byte_end":63840,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63845,"byte_end":63850,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63855,"byte_end":63858,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63863,"byte_end":63891,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63896,"byte_end":63929,"line_start":614,"line_end":614,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63934,"byte_end":63963,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":63968,"byte_end":64003,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64008,"byte_end":64015,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64020,"byte_end":64029,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64795,"byte_end":64800,"line_start":652,"line_end":652,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64295,"byte_end":64361,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64366,"byte_end":64369,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64374,"byte_end":64388,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64393,"byte_end":64396,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64401,"byte_end":64408,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64413,"byte_end":64450,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64455,"byte_end":64479,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64484,"byte_end":64487,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64492,"byte_end":64532,"line_start":641,"line_end":641,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64537,"byte_end":64569,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64574,"byte_end":64606,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64611,"byte_end":64616,"line_start":644,"line_end":644,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64621,"byte_end":64624,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64629,"byte_end":64659,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64664,"byte_end":64687,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64692,"byte_end":64718,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64723,"byte_end":64761,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64766,"byte_end":64773,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64778,"byte_end":64787,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65394,"byte_end":65398,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64855,"byte_end":64894,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64899,"byte_end":64902,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64907,"byte_end":64968,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64973,"byte_end":64976,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":64981,"byte_end":64995,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65000,"byte_end":65003,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65008,"byte_end":65015,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65020,"byte_end":65057,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65062,"byte_end":65065,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65070,"byte_end":65123,"line_start":665,"line_end":665,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65128,"byte_end":65165,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65170,"byte_end":65175,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65180,"byte_end":65183,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65188,"byte_end":65215,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65220,"byte_end":65247,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65252,"byte_end":65281,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65286,"byte_end":65316,"line_start":672,"line_end":672,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65321,"byte_end":65360,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65365,"byte_end":65372,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65377,"byte_end":65386,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66315,"byte_end":66325,"line_start":704,"line_end":704,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65840,"byte_end":65899,"line_start":687,"line_end":687,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65904,"byte_end":65907,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65912,"byte_end":65926,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65931,"byte_end":65934,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65939,"byte_end":65946,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65951,"byte_end":65988,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":65993,"byte_end":66017,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66022,"byte_end":66025,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66030,"byte_end":66074,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66079,"byte_end":66120,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66125,"byte_end":66130,"line_start":697,"line_end":697,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66135,"byte_end":66138,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66143,"byte_end":66166,"line_start":699,"line_end":699,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66171,"byte_end":66205,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66210,"byte_end":66250,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66255,"byte_end":66295,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66300,"byte_end":66307,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66821,"byte_end":66831,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66346,"byte_end":66405,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66410,"byte_end":66413,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66418,"byte_end":66432,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66437,"byte_end":66440,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66445,"byte_end":66452,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66457,"byte_end":66494,"line_start":711,"line_end":711,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66499,"byte_end":66523,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66528,"byte_end":66531,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66536,"byte_end":66580,"line_start":714,"line_end":714,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66585,"byte_end":66626,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66631,"byte_end":66636,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66641,"byte_end":66644,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66649,"byte_end":66672,"line_start":718,"line_end":718,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66677,"byte_end":66711,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66716,"byte_end":66756,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66761,"byte_end":66801,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66806,"byte_end":66813,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67590,"byte_end":67604,"line_start":746,"line_end":746,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66852,"byte_end":66930,"line_start":725,"line_end":725,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":66935,"byte_end":67012,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67017,"byte_end":67020,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67025,"byte_end":67039,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67044,"byte_end":67047,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67052,"byte_end":67059,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67064,"byte_end":67101,"line_start":731,"line_end":731,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67106,"byte_end":67130,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67135,"byte_end":67138,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67143,"byte_end":67199,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67204,"byte_end":67264,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67269,"byte_end":67301,"line_start":736,"line_end":736,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67306,"byte_end":67338,"line_start":737,"line_end":737,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67343,"byte_end":67371,"line_start":738,"line_end":738,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67376,"byte_end":67381,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67386,"byte_end":67389,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67394,"byte_end":67429,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67434,"byte_end":67471,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67476,"byte_end":67518,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67523,"byte_end":67570,"line_start":744,"line_end":744,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":67575,"byte_end":67582,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":226},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72667,"byte_end":72672,"line_start":905,"line_end":905,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72466,"byte_end":72510,"line_start":901,"line_end":901,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72511,"byte_end":72514,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72515,"byte_end":72609,"line_start":903,"line_end":903,"column_start":1,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72610,"byte_end":72656,"line_start":904,"line_end":904,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72918,"byte_end":72921,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72735,"byte_end":72763,"line_start":906,"line_end":906,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72768,"byte_end":72771,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72776,"byte_end":72783,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72788,"byte_end":72814,"line_start":909,"line_end":909,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72819,"byte_end":72822,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72827,"byte_end":72859,"line_start":911,"line_end":911,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72864,"byte_end":72867,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72872,"byte_end":72898,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72903,"byte_end":72910,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73243,"byte_end":73251,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72937,"byte_end":72968,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72973,"byte_end":72976,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72981,"byte_end":72988,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72993,"byte_end":73019,"line_start":919,"line_end":919,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73024,"byte_end":73041,"line_start":920,"line_end":920,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73046,"byte_end":73049,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73054,"byte_end":73096,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73101,"byte_end":73104,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73109,"byte_end":73145,"line_start":924,"line_end":924,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73150,"byte_end":73185,"line_start":925,"line_end":925,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73190,"byte_end":73223,"line_start":926,"line_end":926,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73228,"byte_end":73235,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73602,"byte_end":73614,"line_start":941,"line_end":941,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73267,"byte_end":73307,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73312,"byte_end":73315,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73320,"byte_end":73327,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73332,"byte_end":73358,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73363,"byte_end":73380,"line_start":933,"line_end":933,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73385,"byte_end":73388,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73393,"byte_end":73443,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73448,"byte_end":73451,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73456,"byte_end":73496,"line_start":937,"line_end":937,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73501,"byte_end":73540,"line_start":938,"line_end":938,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73545,"byte_end":73582,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73587,"byte_end":73594,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73984,"byte_end":73992,"line_start":955,"line_end":955,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73630,"byte_end":73649,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73654,"byte_end":73657,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73662,"byte_end":73669,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73674,"byte_end":73708,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73713,"byte_end":73716,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73721,"byte_end":73758,"line_start":947,"line_end":947,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73763,"byte_end":73796,"line_start":948,"line_end":948,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73801,"byte_end":73843,"line_start":949,"line_end":949,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73848,"byte_end":73851,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73856,"byte_end":73887,"line_start":951,"line_end":951,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73892,"byte_end":73925,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73930,"byte_end":73964,"line_start":953,"line_end":953,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":73969,"byte_end":73976,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74259,"byte_end":74268,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74009,"byte_end":74076,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74081,"byte_end":74084,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74089,"byte_end":74096,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74101,"byte_end":74127,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74132,"byte_end":74149,"line_start":961,"line_end":961,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74154,"byte_end":74157,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74162,"byte_end":74198,"line_start":963,"line_end":963,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74203,"byte_end":74206,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74211,"byte_end":74239,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74244,"byte_end":74251,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74567,"byte_end":74585,"line_start":979,"line_end":979,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74285,"byte_end":74366,"line_start":969,"line_end":969,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74371,"byte_end":74374,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74379,"byte_end":74386,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74391,"byte_end":74417,"line_start":972,"line_end":972,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74422,"byte_end":74439,"line_start":973,"line_end":973,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74444,"byte_end":74447,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74452,"byte_end":74497,"line_start":975,"line_end":975,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74502,"byte_end":74505,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74510,"byte_end":74547,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74552,"byte_end":74559,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74962,"byte_end":74969,"line_start":996,"line_end":996,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74602,"byte_end":74646,"line_start":981,"line_end":981,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74651,"byte_end":74654,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74659,"byte_end":74666,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74671,"byte_end":74697,"line_start":984,"line_end":984,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74702,"byte_end":74719,"line_start":985,"line_end":985,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74724,"byte_end":74727,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74732,"byte_end":74766,"line_start":987,"line_end":987,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74771,"byte_end":74774,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74779,"byte_end":74811,"line_start":989,"line_end":989,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74816,"byte_end":74823,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74828,"byte_end":74831,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74836,"byte_end":74848,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74853,"byte_end":74856,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74861,"byte_end":74927,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":74932,"byte_end":74954,"line_start":995,"line_end":995,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75310,"byte_end":75319,"line_start":1009,"line_end":1009,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75069,"byte_end":75135,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75140,"byte_end":75143,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75148,"byte_end":75155,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75160,"byte_end":75186,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75191,"byte_end":75208,"line_start":1004,"line_end":1004,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75213,"byte_end":75216,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75221,"byte_end":75257,"line_start":1006,"line_end":1006,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75262,"byte_end":75290,"line_start":1007,"line_end":1007,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75295,"byte_end":75302,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75617,"byte_end":75623,"line_start":1023,"line_end":1023,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75336,"byte_end":75398,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75403,"byte_end":75406,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75411,"byte_end":75418,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75423,"byte_end":75449,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75454,"byte_end":75471,"line_start":1015,"line_end":1015,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75476,"byte_end":75479,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75484,"byte_end":75507,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75512,"byte_end":75528,"line_start":1018,"line_end":1018,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75533,"byte_end":75536,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75541,"byte_end":75567,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75572,"byte_end":75597,"line_start":1021,"line_end":1021,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75602,"byte_end":75609,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76161,"byte_end":76172,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75644,"byte_end":75722,"line_start":1025,"line_end":1025,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75727,"byte_end":75747,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75752,"byte_end":75755,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75760,"byte_end":75767,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75772,"byte_end":75798,"line_start":1029,"line_end":1029,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75803,"byte_end":75820,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75825,"byte_end":75828,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75833,"byte_end":75852,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75857,"byte_end":75894,"line_start":1033,"line_end":1033,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75899,"byte_end":75944,"line_start":1034,"line_end":1034,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75949,"byte_end":75977,"line_start":1035,"line_end":1035,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75982,"byte_end":75985,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":75990,"byte_end":76020,"line_start":1037,"line_end":1037,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76025,"byte_end":76057,"line_start":1038,"line_end":1038,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76062,"byte_end":76065,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76070,"byte_end":76101,"line_start":1040,"line_end":1040,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76106,"byte_end":76141,"line_start":1041,"line_end":1041,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76146,"byte_end":76153,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76664,"byte_end":76673,"line_start":1062,"line_end":1062,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76193,"byte_end":76257,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76262,"byte_end":76265,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76270,"byte_end":76277,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76282,"byte_end":76308,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76313,"byte_end":76330,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76335,"byte_end":76338,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76343,"byte_end":76362,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76367,"byte_end":76404,"line_start":1052,"line_end":1052,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76409,"byte_end":76454,"line_start":1053,"line_end":1053,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76459,"byte_end":76487,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76492,"byte_end":76495,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76500,"byte_end":76527,"line_start":1056,"line_end":1056,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76532,"byte_end":76535,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76540,"byte_end":76570,"line_start":1058,"line_end":1058,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76575,"byte_end":76605,"line_start":1059,"line_end":1059,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76610,"byte_end":76644,"line_start":1060,"line_end":1060,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76649,"byte_end":76656,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77423,"byte_end":77432,"line_start":1086,"line_end":1086,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76694,"byte_end":76753,"line_start":1064,"line_end":1064,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76758,"byte_end":76795,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76800,"byte_end":76803,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76808,"byte_end":76815,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76820,"byte_end":76846,"line_start":1068,"line_end":1068,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76851,"byte_end":76868,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76873,"byte_end":76876,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76881,"byte_end":76934,"line_start":1071,"line_end":1071,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76939,"byte_end":76962,"line_start":1072,"line_end":1072,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":76967,"byte_end":77004,"line_start":1073,"line_end":1073,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77009,"byte_end":77031,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77036,"byte_end":77039,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77044,"byte_end":77073,"line_start":1076,"line_end":1076,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77078,"byte_end":77107,"line_start":1077,"line_end":1077,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77112,"byte_end":77115,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77120,"byte_end":77151,"line_start":1079,"line_end":1079,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77156,"byte_end":77191,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77196,"byte_end":77236,"line_start":1081,"line_end":1081,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77241,"byte_end":77291,"line_start":1082,"line_end":1082,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77296,"byte_end":77337,"line_start":1083,"line_end":1083,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77342,"byte_end":77349,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77354,"byte_end":77415,"line_start":1085,"line_end":1085,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77946,"byte_end":77954,"line_start":1103,"line_end":1103,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77453,"byte_end":77528,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77533,"byte_end":77602,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77607,"byte_end":77629,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77634,"byte_end":77637,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77642,"byte_end":77649,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77654,"byte_end":77680,"line_start":1093,"line_end":1093,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77685,"byte_end":77714,"line_start":1094,"line_end":1094,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77719,"byte_end":77736,"line_start":1095,"line_end":1095,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77741,"byte_end":77744,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77749,"byte_end":77771,"line_start":1097,"line_end":1097,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77776,"byte_end":77804,"line_start":1098,"line_end":1098,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77809,"byte_end":77812,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77817,"byte_end":77868,"line_start":1100,"line_end":1100,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77873,"byte_end":77926,"line_start":1101,"line_end":1101,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77931,"byte_end":77938,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78246,"byte_end":78251,"line_start":1116,"line_end":1116,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":77981,"byte_end":78044,"line_start":1105,"line_end":1105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78049,"byte_end":78052,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78057,"byte_end":78064,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78069,"byte_end":78095,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78100,"byte_end":78103,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78108,"byte_end":78125,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78130,"byte_end":78146,"line_start":1111,"line_end":1111,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78151,"byte_end":78154,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78159,"byte_end":78190,"line_start":1113,"line_end":1113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78195,"byte_end":78226,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78231,"byte_end":78238,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78539,"byte_end":78543,"line_start":1129,"line_end":1129,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78272,"byte_end":78339,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78344,"byte_end":78347,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78352,"byte_end":78359,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78364,"byte_end":78390,"line_start":1121,"line_end":1121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78395,"byte_end":78398,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78403,"byte_end":78420,"line_start":1123,"line_end":1123,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78425,"byte_end":78441,"line_start":1124,"line_end":1124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78446,"byte_end":78449,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78454,"byte_end":78484,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78489,"byte_end":78519,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78524,"byte_end":78531,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78857,"byte_end":78862,"line_start":1143,"line_end":1143,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78564,"byte_end":78639,"line_start":1131,"line_end":1131,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78644,"byte_end":78654,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78659,"byte_end":78662,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78667,"byte_end":78674,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78679,"byte_end":78705,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78710,"byte_end":78713,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78718,"byte_end":78734,"line_start":1137,"line_end":1137,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78739,"byte_end":78756,"line_start":1138,"line_end":1138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78761,"byte_end":78764,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78769,"byte_end":78800,"line_start":1140,"line_end":1140,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78805,"byte_end":78837,"line_start":1141,"line_end":1141,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78842,"byte_end":78849,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79126,"byte_end":79131,"line_start":1156,"line_end":1156,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78883,"byte_end":78923,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78928,"byte_end":78931,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78936,"byte_end":78943,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78948,"byte_end":78974,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78979,"byte_end":78982,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":78987,"byte_end":79003,"line_start":1150,"line_end":1150,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79008,"byte_end":79025,"line_start":1151,"line_end":1151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79030,"byte_end":79033,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79038,"byte_end":79069,"line_start":1153,"line_end":1153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79074,"byte_end":79106,"line_start":1154,"line_end":1154,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79111,"byte_end":79118,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79527,"byte_end":79532,"line_start":1171,"line_end":1171,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79152,"byte_end":79196,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79201,"byte_end":79204,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79209,"byte_end":79216,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79221,"byte_end":79247,"line_start":1161,"line_end":1161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79252,"byte_end":79255,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79260,"byte_end":79276,"line_start":1163,"line_end":1163,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79281,"byte_end":79298,"line_start":1164,"line_end":1164,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79303,"byte_end":79354,"line_start":1165,"line_end":1165,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79359,"byte_end":79413,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79418,"byte_end":79421,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79426,"byte_end":79464,"line_start":1168,"line_end":1168,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79469,"byte_end":79507,"line_start":1169,"line_end":1169,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79512,"byte_end":79519,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80062,"byte_end":80065,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79553,"byte_end":79625,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79630,"byte_end":79659,"line_start":1174,"line_end":1174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79664,"byte_end":79667,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79672,"byte_end":79679,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79684,"byte_end":79710,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79715,"byte_end":79732,"line_start":1178,"line_end":1178,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79737,"byte_end":79740,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79745,"byte_end":79761,"line_start":1180,"line_end":1180,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79766,"byte_end":79783,"line_start":1181,"line_end":1181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79788,"byte_end":79791,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79796,"byte_end":79843,"line_start":1183,"line_end":1183,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79848,"byte_end":79898,"line_start":1184,"line_end":1184,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79903,"byte_end":79906,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79911,"byte_end":79949,"line_start":1186,"line_end":1186,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79954,"byte_end":79992,"line_start":1187,"line_end":1187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":79997,"byte_end":80000,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80005,"byte_end":80042,"line_start":1189,"line_end":1189,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80047,"byte_end":80054,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80632,"byte_end":80638,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80086,"byte_end":80142,"line_start":1193,"line_end":1193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80147,"byte_end":80150,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80155,"byte_end":80223,"line_start":1195,"line_end":1195,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80228,"byte_end":80301,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80306,"byte_end":80358,"line_start":1197,"line_end":1197,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80363,"byte_end":80366,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80371,"byte_end":80378,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80383,"byte_end":80409,"line_start":1200,"line_end":1200,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80414,"byte_end":80431,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80436,"byte_end":80439,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80444,"byte_end":80460,"line_start":1203,"line_end":1203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80465,"byte_end":80468,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80473,"byte_end":80505,"line_start":1205,"line_end":1205,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80510,"byte_end":80559,"line_start":1206,"line_end":1206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80564,"byte_end":80567,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80572,"byte_end":80612,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80617,"byte_end":80624,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81111,"byte_end":81127,"line_start":1228,"line_end":1228,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80659,"byte_end":80718,"line_start":1212,"line_end":1212,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80723,"byte_end":80788,"line_start":1213,"line_end":1213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80793,"byte_end":80796,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80801,"byte_end":80808,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80813,"byte_end":80839,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80844,"byte_end":80861,"line_start":1217,"line_end":1217,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80866,"byte_end":80869,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80874,"byte_end":80907,"line_start":1219,"line_end":1219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80912,"byte_end":80915,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80920,"byte_end":80936,"line_start":1221,"line_end":1221,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80941,"byte_end":80958,"line_start":1222,"line_end":1222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80963,"byte_end":80966,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":80971,"byte_end":81005,"line_start":1224,"line_end":1224,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81010,"byte_end":81045,"line_start":1225,"line_end":1225,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81050,"byte_end":81091,"line_start":1226,"line_end":1226,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81096,"byte_end":81103,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81596,"byte_end":81612,"line_start":1246,"line_end":1246,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81148,"byte_end":81207,"line_start":1230,"line_end":1230,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81212,"byte_end":81282,"line_start":1231,"line_end":1231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81287,"byte_end":81290,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81295,"byte_end":81302,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81307,"byte_end":81333,"line_start":1234,"line_end":1234,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81338,"byte_end":81355,"line_start":1235,"line_end":1235,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81360,"byte_end":81363,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81368,"byte_end":81396,"line_start":1237,"line_end":1237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81401,"byte_end":81404,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81409,"byte_end":81425,"line_start":1239,"line_end":1239,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81430,"byte_end":81447,"line_start":1240,"line_end":1240,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81452,"byte_end":81455,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81460,"byte_end":81495,"line_start":1242,"line_end":1242,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81500,"byte_end":81534,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81539,"byte_end":81576,"line_start":1244,"line_end":1244,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81581,"byte_end":81588,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82224,"byte_end":82231,"line_start":1266,"line_end":1266,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81633,"byte_end":81705,"line_start":1248,"line_end":1248,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81710,"byte_end":81782,"line_start":1249,"line_end":1249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81787,"byte_end":81790,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81795,"byte_end":81869,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81874,"byte_end":81940,"line_start":1252,"line_end":1252,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81945,"byte_end":81948,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81953,"byte_end":81960,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81965,"byte_end":81991,"line_start":1255,"line_end":1255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":81996,"byte_end":81999,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82004,"byte_end":82021,"line_start":1257,"line_end":1257,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82026,"byte_end":82042,"line_start":1258,"line_end":1258,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82047,"byte_end":82064,"line_start":1259,"line_end":1259,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82069,"byte_end":82072,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82077,"byte_end":82089,"line_start":1261,"line_end":1261,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82094,"byte_end":82155,"line_start":1262,"line_end":1262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82160,"byte_end":82163,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82168,"byte_end":82204,"line_start":1264,"line_end":1264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82209,"byte_end":82216,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82529,"byte_end":82534,"line_start":1277,"line_end":1277,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82269,"byte_end":82322,"line_start":1267,"line_end":1267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82327,"byte_end":82330,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82335,"byte_end":82342,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82347,"byte_end":82373,"line_start":1270,"line_end":1270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82378,"byte_end":82381,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82386,"byte_end":82402,"line_start":1272,"line_end":1272,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82407,"byte_end":82460,"line_start":1273,"line_end":1273,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82465,"byte_end":82468,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82473,"byte_end":82509,"line_start":1275,"line_end":1275,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82514,"byte_end":82521,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82871,"byte_end":82875,"line_start":1291,"line_end":1291,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82555,"byte_end":82594,"line_start":1279,"line_end":1279,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82599,"byte_end":82602,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82607,"byte_end":82668,"line_start":1281,"line_end":1281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82673,"byte_end":82676,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82681,"byte_end":82688,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82693,"byte_end":82719,"line_start":1284,"line_end":1284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82724,"byte_end":82727,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82732,"byte_end":82748,"line_start":1286,"line_end":1286,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82753,"byte_end":82802,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82807,"byte_end":82810,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82815,"byte_end":82851,"line_start":1289,"line_end":1289,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82856,"byte_end":82863,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83154,"byte_end":83158,"line_start":1303,"line_end":1303,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82904,"byte_end":82949,"line_start":1293,"line_end":1293,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82954,"byte_end":82957,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82962,"byte_end":82969,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":82974,"byte_end":83000,"line_start":1296,"line_end":1296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83005,"byte_end":83008,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83013,"byte_end":83029,"line_start":1298,"line_end":1298,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83034,"byte_end":83085,"line_start":1299,"line_end":1299,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83090,"byte_end":83093,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83098,"byte_end":83134,"line_start":1301,"line_end":1301,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83139,"byte_end":83146,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83581,"byte_end":83585,"line_start":1320,"line_end":1320,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83188,"byte_end":83225,"line_start":1305,"line_end":1305,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83230,"byte_end":83233,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83238,"byte_end":83285,"line_start":1307,"line_end":1307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83290,"byte_end":83293,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83298,"byte_end":83305,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83310,"byte_end":83336,"line_start":1310,"line_end":1310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83341,"byte_end":83344,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83349,"byte_end":83372,"line_start":1312,"line_end":1312,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83377,"byte_end":83401,"line_start":1313,"line_end":1313,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83406,"byte_end":83409,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83414,"byte_end":83469,"line_start":1315,"line_end":1315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83474,"byte_end":83477,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83482,"byte_end":83518,"line_start":1317,"line_end":1317,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83523,"byte_end":83561,"line_start":1318,"line_end":1318,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83566,"byte_end":83573,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83935,"byte_end":83938,"line_start":1336,"line_end":1336,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83606,"byte_end":83657,"line_start":1322,"line_end":1322,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83662,"byte_end":83665,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83670,"byte_end":83677,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83682,"byte_end":83708,"line_start":1325,"line_end":1325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83713,"byte_end":83716,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83721,"byte_end":83739,"line_start":1327,"line_end":1327,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83744,"byte_end":83754,"line_start":1328,"line_end":1328,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83759,"byte_end":83781,"line_start":1329,"line_end":1329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83786,"byte_end":83789,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83794,"byte_end":83815,"line_start":1331,"line_end":1331,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83820,"byte_end":83866,"line_start":1332,"line_end":1332,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83871,"byte_end":83874,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83879,"byte_end":83915,"line_start":1334,"line_end":1334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83920,"byte_end":83927,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84216,"byte_end":84220,"line_start":1350,"line_end":1350,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83959,"byte_end":83982,"line_start":1338,"line_end":1338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83987,"byte_end":83990,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":83995,"byte_end":84002,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84007,"byte_end":84033,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84038,"byte_end":84041,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84046,"byte_end":84062,"line_start":1343,"line_end":1343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84067,"byte_end":84070,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84075,"byte_end":84094,"line_start":1345,"line_end":1345,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84099,"byte_end":84147,"line_start":1346,"line_end":1346,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84152,"byte_end":84155,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84160,"byte_end":84196,"line_start":1348,"line_end":1348,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84201,"byte_end":84208,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84567,"byte_end":84569,"line_start":1366,"line_end":1366,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84241,"byte_end":84289,"line_start":1352,"line_end":1352,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84294,"byte_end":84297,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84302,"byte_end":84309,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84314,"byte_end":84340,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84345,"byte_end":84348,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84353,"byte_end":84371,"line_start":1357,"line_end":1357,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84376,"byte_end":84386,"line_start":1358,"line_end":1358,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84391,"byte_end":84413,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84418,"byte_end":84421,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84426,"byte_end":84447,"line_start":1361,"line_end":1361,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84452,"byte_end":84498,"line_start":1362,"line_end":1362,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84503,"byte_end":84506,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84511,"byte_end":84547,"line_start":1364,"line_end":1364,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84552,"byte_end":84559,"line_start":1365,"line_end":1365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85079,"byte_end":85082,"line_start":1385,"line_end":1385,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84590,"byte_end":84664,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84669,"byte_end":84672,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84677,"byte_end":84684,"line_start":1370,"line_end":1370,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84689,"byte_end":84715,"line_start":1371,"line_end":1371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84720,"byte_end":84723,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84728,"byte_end":84747,"line_start":1373,"line_end":1373,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84752,"byte_end":84770,"line_start":1374,"line_end":1374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84775,"byte_end":84778,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84783,"byte_end":84808,"line_start":1376,"line_end":1376,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84813,"byte_end":84869,"line_start":1377,"line_end":1377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84874,"byte_end":84877,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84882,"byte_end":84905,"line_start":1379,"line_end":1379,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84910,"byte_end":84964,"line_start":1380,"line_end":1380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84969,"byte_end":84972,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":84977,"byte_end":85016,"line_start":1382,"line_end":1382,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85021,"byte_end":85059,"line_start":1383,"line_end":1383,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85064,"byte_end":85071,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85404,"byte_end":85408,"line_start":1399,"line_end":1399,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85115,"byte_end":85162,"line_start":1387,"line_end":1387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85167,"byte_end":85170,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85175,"byte_end":85182,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85187,"byte_end":85213,"line_start":1390,"line_end":1390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85218,"byte_end":85221,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85226,"byte_end":85244,"line_start":1392,"line_end":1392,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85249,"byte_end":85252,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85257,"byte_end":85280,"line_start":1394,"line_end":1394,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85285,"byte_end":85335,"line_start":1395,"line_end":1395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85340,"byte_end":85343,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85348,"byte_end":85384,"line_start":1397,"line_end":1397,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85389,"byte_end":85396,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85723,"byte_end":85728,"line_start":1413,"line_end":1413,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85429,"byte_end":85477,"line_start":1401,"line_end":1401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85482,"byte_end":85485,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85490,"byte_end":85497,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85502,"byte_end":85528,"line_start":1404,"line_end":1404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85533,"byte_end":85536,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85541,"byte_end":85560,"line_start":1406,"line_end":1406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85565,"byte_end":85568,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85573,"byte_end":85598,"line_start":1408,"line_end":1408,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85603,"byte_end":85654,"line_start":1409,"line_end":1409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85659,"byte_end":85662,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85667,"byte_end":85703,"line_start":1411,"line_end":1411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85708,"byte_end":85715,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86027,"byte_end":86037,"line_start":1427,"line_end":1427,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85749,"byte_end":85781,"line_start":1415,"line_end":1415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85786,"byte_end":85789,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85794,"byte_end":85801,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85806,"byte_end":85831,"line_start":1418,"line_end":1418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85836,"byte_end":85839,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85844,"byte_end":85871,"line_start":1420,"line_end":1420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85876,"byte_end":85879,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85884,"byte_end":85944,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85949,"byte_end":85952,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85957,"byte_end":85993,"line_start":1424,"line_end":1424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":85998,"byte_end":86005,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86010,"byte_end":86019,"line_start":1426,"line_end":1426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86468,"byte_end":86478,"line_start":1445,"line_end":1445,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86186,"byte_end":86218,"line_start":1433,"line_end":1433,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86223,"byte_end":86226,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86231,"byte_end":86238,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86243,"byte_end":86268,"line_start":1436,"line_end":1436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86273,"byte_end":86276,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86281,"byte_end":86307,"line_start":1438,"line_end":1438,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86312,"byte_end":86315,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86320,"byte_end":86385,"line_start":1440,"line_end":1440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86390,"byte_end":86393,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86398,"byte_end":86434,"line_start":1442,"line_end":1442,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86439,"byte_end":86446,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86451,"byte_end":86460,"line_start":1444,"line_end":1444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86832,"byte_end":86835,"line_start":1461,"line_end":1461,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86627,"byte_end":86670,"line_start":1451,"line_end":1451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86675,"byte_end":86678,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86683,"byte_end":86690,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86695,"byte_end":86721,"line_start":1454,"line_end":1454,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86726,"byte_end":86729,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86734,"byte_end":86750,"line_start":1456,"line_end":1456,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86755,"byte_end":86771,"line_start":1457,"line_end":1457,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86776,"byte_end":86779,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86784,"byte_end":86812,"line_start":1459,"line_end":1459,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86817,"byte_end":86824,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87074,"byte_end":87077,"line_start":1473,"line_end":1473,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86869,"byte_end":86912,"line_start":1463,"line_end":1463,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86917,"byte_end":86920,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86925,"byte_end":86932,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86937,"byte_end":86963,"line_start":1466,"line_end":1466,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86968,"byte_end":86971,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86976,"byte_end":86992,"line_start":1468,"line_end":1468,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":86997,"byte_end":87013,"line_start":1469,"line_end":1469,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87018,"byte_end":87021,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87026,"byte_end":87054,"line_start":1471,"line_end":1471,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87059,"byte_end":87066,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87575,"byte_end":87582,"line_start":1492,"line_end":1492,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87111,"byte_end":87154,"line_start":1475,"line_end":1475,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87159,"byte_end":87162,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87167,"byte_end":87198,"line_start":1477,"line_end":1477,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87203,"byte_end":87229,"line_start":1478,"line_end":1478,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87234,"byte_end":87237,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87242,"byte_end":87249,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87254,"byte_end":87280,"line_start":1481,"line_end":1481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87285,"byte_end":87288,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87293,"byte_end":87309,"line_start":1483,"line_end":1483,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87314,"byte_end":87331,"line_start":1484,"line_end":1484,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87336,"byte_end":87339,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87344,"byte_end":87400,"line_start":1486,"line_end":1486,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87405,"byte_end":87461,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87466,"byte_end":87469,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87474,"byte_end":87512,"line_start":1489,"line_end":1489,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87517,"byte_end":87555,"line_start":1490,"line_end":1490,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87560,"byte_end":87567,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87890,"byte_end":87894,"line_start":1506,"line_end":1506,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87616,"byte_end":87652,"line_start":1494,"line_end":1494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87657,"byte_end":87660,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87665,"byte_end":87672,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87677,"byte_end":87703,"line_start":1497,"line_end":1497,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87708,"byte_end":87711,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87716,"byte_end":87732,"line_start":1499,"line_end":1499,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87737,"byte_end":87740,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87745,"byte_end":87768,"line_start":1501,"line_end":1501,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87773,"byte_end":87821,"line_start":1502,"line_end":1502,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87826,"byte_end":87829,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87834,"byte_end":87870,"line_start":1504,"line_end":1504,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87875,"byte_end":87882,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88312,"byte_end":88317,"line_start":1522,"line_end":1522,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87915,"byte_end":87989,"line_start":1508,"line_end":1508,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":87994,"byte_end":88025,"line_start":1509,"line_end":1509,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88030,"byte_end":88033,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88038,"byte_end":88045,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88050,"byte_end":88076,"line_start":1512,"line_end":1512,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88081,"byte_end":88084,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88089,"byte_end":88105,"line_start":1514,"line_end":1514,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88110,"byte_end":88126,"line_start":1515,"line_end":1515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88131,"byte_end":88134,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88139,"byte_end":88161,"line_start":1517,"line_end":1517,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88166,"byte_end":88243,"line_start":1518,"line_end":1518,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88248,"byte_end":88251,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88256,"byte_end":88292,"line_start":1520,"line_end":1520,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88297,"byte_end":88304,"line_start":1521,"line_end":1521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88645,"byte_end":88648,"line_start":1536,"line_end":1536,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88351,"byte_end":88398,"line_start":1524,"line_end":1524,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88403,"byte_end":88406,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88411,"byte_end":88418,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88423,"byte_end":88449,"line_start":1527,"line_end":1527,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88454,"byte_end":88471,"line_start":1528,"line_end":1528,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88476,"byte_end":88479,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88484,"byte_end":88516,"line_start":1530,"line_end":1530,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88521,"byte_end":88524,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88529,"byte_end":88576,"line_start":1532,"line_end":1532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88581,"byte_end":88584,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88589,"byte_end":88625,"line_start":1534,"line_end":1534,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88630,"byte_end":88637,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88965,"byte_end":88968,"line_start":1550,"line_end":1550,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88669,"byte_end":88718,"line_start":1538,"line_end":1538,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88723,"byte_end":88726,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88731,"byte_end":88738,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88743,"byte_end":88769,"line_start":1541,"line_end":1541,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88774,"byte_end":88791,"line_start":1542,"line_end":1542,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88796,"byte_end":88799,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88804,"byte_end":88836,"line_start":1544,"line_end":1544,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88841,"byte_end":88844,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88849,"byte_end":88896,"line_start":1546,"line_end":1546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88901,"byte_end":88904,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88909,"byte_end":88945,"line_start":1548,"line_end":1548,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88950,"byte_end":88957,"line_start":1549,"line_end":1549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89278,"byte_end":89281,"line_start":1563,"line_end":1563,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":88989,"byte_end":89039,"line_start":1552,"line_end":1552,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89044,"byte_end":89047,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89052,"byte_end":89059,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89064,"byte_end":89090,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89095,"byte_end":89112,"line_start":1556,"line_end":1556,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89117,"byte_end":89120,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89125,"byte_end":89157,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89162,"byte_end":89209,"line_start":1559,"line_end":1559,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89214,"byte_end":89217,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89222,"byte_end":89258,"line_start":1561,"line_end":1561,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89263,"byte_end":89270,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89761,"byte_end":89765,"line_start":1580,"line_end":1580,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89302,"byte_end":89369,"line_start":1565,"line_end":1565,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89374,"byte_end":89443,"line_start":1566,"line_end":1566,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89448,"byte_end":89460,"line_start":1567,"line_end":1567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89465,"byte_end":89468,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89473,"byte_end":89480,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89485,"byte_end":89511,"line_start":1570,"line_end":1570,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89516,"byte_end":89533,"line_start":1571,"line_end":1571,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89538,"byte_end":89541,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89546,"byte_end":89580,"line_start":1573,"line_end":1573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89585,"byte_end":89588,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89593,"byte_end":89615,"line_start":1575,"line_end":1575,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89620,"byte_end":89692,"line_start":1576,"line_end":1576,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89697,"byte_end":89700,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89705,"byte_end":89741,"line_start":1578,"line_end":1578,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89746,"byte_end":89753,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90241,"byte_end":90245,"line_start":1597,"line_end":1597,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89786,"byte_end":89855,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89860,"byte_end":89923,"line_start":1583,"line_end":1583,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89928,"byte_end":89940,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89945,"byte_end":89948,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89953,"byte_end":89960,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89965,"byte_end":89991,"line_start":1587,"line_end":1587,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":89996,"byte_end":90013,"line_start":1588,"line_end":1588,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90018,"byte_end":90021,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90026,"byte_end":90060,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90065,"byte_end":90068,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90073,"byte_end":90095,"line_start":1592,"line_end":1592,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90100,"byte_end":90172,"line_start":1593,"line_end":1593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90177,"byte_end":90180,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90185,"byte_end":90221,"line_start":1595,"line_end":1595,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90226,"byte_end":90233,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90609,"byte_end":90613,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90266,"byte_end":90340,"line_start":1599,"line_end":1599,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90345,"byte_end":90369,"line_start":1600,"line_end":1600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90374,"byte_end":90377,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90382,"byte_end":90389,"line_start":1602,"line_end":1602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90394,"byte_end":90420,"line_start":1603,"line_end":1603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90425,"byte_end":90428,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90433,"byte_end":90449,"line_start":1605,"line_end":1605,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90454,"byte_end":90457,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90462,"byte_end":90481,"line_start":1607,"line_end":1607,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90486,"byte_end":90540,"line_start":1608,"line_end":1608,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90545,"byte_end":90548,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90553,"byte_end":90589,"line_start":1610,"line_end":1610,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90594,"byte_end":90601,"line_start":1611,"line_end":1611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91494,"byte_end":91499,"line_start":1641,"line_end":1641,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90634,"byte_end":90710,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90715,"byte_end":90718,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90723,"byte_end":90750,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90755,"byte_end":90803,"line_start":1617,"line_end":1617,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90808,"byte_end":90858,"line_start":1618,"line_end":1618,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90863,"byte_end":90914,"line_start":1619,"line_end":1619,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90919,"byte_end":90922,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90927,"byte_end":90934,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90939,"byte_end":90965,"line_start":1622,"line_end":1622,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90970,"byte_end":90987,"line_start":1623,"line_end":1623,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":90992,"byte_end":90995,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91000,"byte_end":91029,"line_start":1625,"line_end":1625,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91034,"byte_end":91078,"line_start":1626,"line_end":1626,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91083,"byte_end":91114,"line_start":1627,"line_end":1627,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91119,"byte_end":91136,"line_start":1628,"line_end":1628,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91141,"byte_end":91159,"line_start":1629,"line_end":1629,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91164,"byte_end":91167,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91172,"byte_end":91196,"line_start":1631,"line_end":1631,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91201,"byte_end":91219,"line_start":1632,"line_end":1632,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91224,"byte_end":91241,"line_start":1633,"line_end":1633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91246,"byte_end":91249,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91254,"byte_end":91314,"line_start":1635,"line_end":1635,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91319,"byte_end":91380,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91385,"byte_end":91388,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91393,"byte_end":91431,"line_start":1638,"line_end":1638,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91436,"byte_end":91474,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91479,"byte_end":91486,"line_start":1640,"line_end":1640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92013,"byte_end":92020,"line_start":1659,"line_end":1659,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91533,"byte_end":91608,"line_start":1643,"line_end":1643,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91613,"byte_end":91636,"line_start":1644,"line_end":1644,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91641,"byte_end":91644,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91649,"byte_end":91656,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91661,"byte_end":91687,"line_start":1647,"line_end":1647,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91692,"byte_end":91709,"line_start":1648,"line_end":1648,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91714,"byte_end":91717,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91722,"byte_end":91754,"line_start":1650,"line_end":1650,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91759,"byte_end":91783,"line_start":1651,"line_end":1651,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91788,"byte_end":91791,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91796,"byte_end":91845,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91850,"byte_end":91899,"line_start":1654,"line_end":1654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91904,"byte_end":91907,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91912,"byte_end":91950,"line_start":1656,"line_end":1656,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91955,"byte_end":91993,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":91998,"byte_end":92005,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92388,"byte_end":92394,"line_start":1674,"line_end":1674,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92049,"byte_end":92113,"line_start":1661,"line_end":1661,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92118,"byte_end":92146,"line_start":1662,"line_end":1662,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92151,"byte_end":92154,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92159,"byte_end":92166,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92171,"byte_end":92197,"line_start":1665,"line_end":1665,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92202,"byte_end":92205,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92210,"byte_end":92226,"line_start":1667,"line_end":1667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92231,"byte_end":92234,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92239,"byte_end":92259,"line_start":1669,"line_end":1669,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92264,"byte_end":92319,"line_start":1670,"line_end":1670,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92324,"byte_end":92327,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92332,"byte_end":92368,"line_start":1672,"line_end":1672,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92373,"byte_end":92380,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92821,"byte_end":92826,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92415,"byte_end":92480,"line_start":1676,"line_end":1676,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92485,"byte_end":92530,"line_start":1677,"line_end":1677,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92535,"byte_end":92538,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92543,"byte_end":92550,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92555,"byte_end":92581,"line_start":1680,"line_end":1680,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92586,"byte_end":92603,"line_start":1681,"line_end":1681,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92608,"byte_end":92611,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92616,"byte_end":92649,"line_start":1683,"line_end":1683,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92654,"byte_end":92657,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92662,"byte_end":92698,"line_start":1685,"line_end":1685,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92703,"byte_end":92752,"line_start":1686,"line_end":1686,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92757,"byte_end":92760,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92765,"byte_end":92801,"line_start":1688,"line_end":1688,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92806,"byte_end":92813,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93246,"byte_end":93250,"line_start":1708,"line_end":1708,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92847,"byte_end":92876,"line_start":1692,"line_end":1692,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92881,"byte_end":92884,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92889,"byte_end":92896,"line_start":1694,"line_end":1694,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92901,"byte_end":92927,"line_start":1695,"line_end":1695,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92932,"byte_end":92949,"line_start":1696,"line_end":1696,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92954,"byte_end":92957,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92962,"byte_end":92989,"line_start":1698,"line_end":1698,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":92994,"byte_end":93010,"line_start":1699,"line_end":1699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93015,"byte_end":93018,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93023,"byte_end":93044,"line_start":1701,"line_end":1701,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93049,"byte_end":93096,"line_start":1702,"line_end":1702,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93101,"byte_end":93133,"line_start":1703,"line_end":1703,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93138,"byte_end":93177,"line_start":1704,"line_end":1704,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93182,"byte_end":93185,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93190,"byte_end":93226,"line_start":1706,"line_end":1706,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93231,"byte_end":93238,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93686,"byte_end":93690,"line_start":1726,"line_end":1726,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93271,"byte_end":93302,"line_start":1710,"line_end":1710,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93307,"byte_end":93310,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93315,"byte_end":93322,"line_start":1712,"line_end":1712,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93327,"byte_end":93353,"line_start":1713,"line_end":1713,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93358,"byte_end":93375,"line_start":1714,"line_end":1714,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93380,"byte_end":93383,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93388,"byte_end":93415,"line_start":1716,"line_end":1716,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93420,"byte_end":93436,"line_start":1717,"line_end":1717,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93441,"byte_end":93462,"line_start":1718,"line_end":1718,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93467,"byte_end":93511,"line_start":1719,"line_end":1719,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93516,"byte_end":93548,"line_start":1720,"line_end":1720,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93553,"byte_end":93592,"line_start":1721,"line_end":1721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93597,"byte_end":93600,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93605,"byte_end":93623,"line_start":1723,"line_end":1723,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93628,"byte_end":93666,"line_start":1724,"line_end":1724,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93671,"byte_end":93678,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94146,"byte_end":94150,"line_start":1744,"line_end":1744,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93711,"byte_end":93743,"line_start":1728,"line_end":1728,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93748,"byte_end":93751,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93756,"byte_end":93763,"line_start":1730,"line_end":1730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93768,"byte_end":93794,"line_start":1731,"line_end":1731,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93799,"byte_end":93816,"line_start":1732,"line_end":1732,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93821,"byte_end":93824,"line_start":1733,"line_end":1733,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93829,"byte_end":93856,"line_start":1734,"line_end":1734,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93861,"byte_end":93877,"line_start":1735,"line_end":1735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93882,"byte_end":93885,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93890,"byte_end":93911,"line_start":1737,"line_end":1737,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93916,"byte_end":93976,"line_start":1738,"line_end":1738,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":93981,"byte_end":94031,"line_start":1739,"line_end":1739,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94036,"byte_end":94075,"line_start":1740,"line_end":1740,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94080,"byte_end":94083,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94088,"byte_end":94126,"line_start":1742,"line_end":1742,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94131,"byte_end":94138,"line_start":1743,"line_end":1743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94445,"byte_end":94450,"line_start":1758,"line_end":1758,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94171,"byte_end":94208,"line_start":1746,"line_end":1746,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94213,"byte_end":94216,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94221,"byte_end":94228,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94233,"byte_end":94259,"line_start":1749,"line_end":1749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94264,"byte_end":94267,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94272,"byte_end":94288,"line_start":1751,"line_end":1751,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94293,"byte_end":94322,"line_start":1752,"line_end":1752,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94327,"byte_end":94330,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94335,"byte_end":94374,"line_start":1754,"line_end":1754,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94379,"byte_end":94382,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94387,"byte_end":94425,"line_start":1756,"line_end":1756,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94430,"byte_end":94437,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94747,"byte_end":94752,"line_start":1772,"line_end":1772,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94471,"byte_end":94510,"line_start":1760,"line_end":1760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94515,"byte_end":94518,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94523,"byte_end":94530,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94535,"byte_end":94561,"line_start":1763,"line_end":1763,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94566,"byte_end":94569,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94574,"byte_end":94590,"line_start":1765,"line_end":1765,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94595,"byte_end":94624,"line_start":1766,"line_end":1766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94629,"byte_end":94632,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94637,"byte_end":94676,"line_start":1768,"line_end":1768,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94681,"byte_end":94684,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94689,"byte_end":94727,"line_start":1770,"line_end":1770,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94732,"byte_end":94739,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95083,"byte_end":95088,"line_start":1787,"line_end":1787,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94773,"byte_end":94813,"line_start":1774,"line_end":1774,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94818,"byte_end":94821,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94826,"byte_end":94833,"line_start":1776,"line_end":1776,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94838,"byte_end":94864,"line_start":1777,"line_end":1777,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94869,"byte_end":94886,"line_start":1778,"line_end":1778,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94891,"byte_end":94894,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94899,"byte_end":94926,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94931,"byte_end":94960,"line_start":1781,"line_end":1781,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94965,"byte_end":94968,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":94973,"byte_end":95012,"line_start":1783,"line_end":1783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95017,"byte_end":95020,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95025,"byte_end":95063,"line_start":1785,"line_end":1785,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95068,"byte_end":95075,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95780,"byte_end":95794,"line_start":1808,"line_end":1808,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95109,"byte_end":95187,"line_start":1789,"line_end":1789,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95192,"byte_end":95269,"line_start":1790,"line_end":1790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95274,"byte_end":95277,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95282,"byte_end":95289,"line_start":1792,"line_end":1792,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95294,"byte_end":95320,"line_start":1793,"line_end":1793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95325,"byte_end":95328,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95333,"byte_end":95354,"line_start":1795,"line_end":1795,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95359,"byte_end":95362,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95367,"byte_end":95391,"line_start":1797,"line_end":1797,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95396,"byte_end":95460,"line_start":1798,"line_end":1798,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95465,"byte_end":95494,"line_start":1799,"line_end":1799,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95499,"byte_end":95536,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95541,"byte_end":95588,"line_start":1801,"line_end":1801,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95593,"byte_end":95596,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95601,"byte_end":95634,"line_start":1803,"line_end":1803,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95639,"byte_end":95711,"line_start":1804,"line_end":1804,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95716,"byte_end":95719,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95724,"byte_end":95760,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":95765,"byte_end":95772,"line_start":1807,"line_end":1807,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104196,"byte_end":104197,"line_start":2031,"line_end":2031,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104237,"byte_end":104246,"line_start":2033,"line_end":2033,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104293,"byte_end":104306,"line_start":2035,"line_end":2035,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104346,"byte_end":104355,"line_start":2037,"line_end":2037,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104401,"byte_end":104415,"line_start":2039,"line_end":2039,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104455,"byte_end":104464,"line_start":2041,"line_end":2041,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104504,"byte_end":104513,"line_start":2043,"line_end":2043,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104553,"byte_end":104562,"line_start":2045,"line_end":2045,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104602,"byte_end":104611,"line_start":2047,"line_end":2047,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104651,"byte_end":104660,"line_start":2049,"line_end":2049,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104700,"byte_end":104705,"line_start":2051,"line_end":2051,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104744,"byte_end":104748,"line_start":2053,"line_end":2053,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104788,"byte_end":104795,"line_start":2055,"line_end":2055,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104834,"byte_end":104840,"line_start":2057,"line_end":2057,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104892,"byte_end":104894,"line_start":2059,"line_end":2059,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":104935,"byte_end":104941,"line_start":2061,"line_end":2061,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":2104},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":288},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":4553},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106848,"byte_end":106852,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106673,"byte_end":106725,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106726,"byte_end":106729,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106730,"byte_end":106740,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106741,"byte_end":106744,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106745,"byte_end":106759,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106760,"byte_end":106794,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106795,"byte_end":106829,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106830,"byte_end":106837,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107222,"byte_end":107226,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106893,"byte_end":106950,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106955,"byte_end":106967,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106972,"byte_end":106975,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106980,"byte_end":107054,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107059,"byte_end":107125,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107130,"byte_end":107148,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107315,"byte_end":107323,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"pub fn set_zero(&mut Self)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107243,"byte_end":107307,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107449,"byte_end":107456,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":107378,"byte_end":107441,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108543,"byte_end":108546,"line_start":90,"line_end":90,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108363,"byte_end":108420,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108421,"byte_end":108424,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108425,"byte_end":108435,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108436,"byte_end":108439,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108440,"byte_end":108454,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108455,"byte_end":108489,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108490,"byte_end":108524,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108525,"byte_end":108532,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108930,"byte_end":108933,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108587,"byte_end":108650,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108655,"byte_end":108658,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108663,"byte_end":108675,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108680,"byte_end":108683,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108688,"byte_end":108762,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108767,"byte_end":108833,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108838,"byte_end":108856,"line_start":97,"line_end":97,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109028,"byte_end":109035,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"pub fn set_one(&mut Self)","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108950,"byte_end":109020,"line_start":101,"line_end":101,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109380,"byte_end":109386,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109088,"byte_end":109157,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109162,"byte_end":109165,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109170,"byte_end":109236,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109241,"byte_end":109303,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109308,"byte_end":109358,"line_start":110,"line_end":110,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":109363,"byte_end":109372,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110409,"byte_end":110413,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110344,"byte_end":110383,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110384,"byte_end":110401,"line_start":170,"line_end":170,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110523,"byte_end":110526,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110452,"byte_end":110497,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110498,"byte_end":110515,"line_start":176,"line_end":176,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":2239},{"krate":0,"index":2256},{"krate":0,"index":2273},{"krate":0,"index":2290},{"krate":0,"index":2307},{"krate":0,"index":2324},{"krate":0,"index":2341},{"krate":0,"index":2358},{"krate":0,"index":2375},{"krate":0,"index":2392},{"krate":0,"index":2409},{"krate":0,"index":2426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":330},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113098,"byte_end":113105,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111442,"byte_end":111483,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111484,"byte_end":111487,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111488,"byte_end":111583,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111584,"byte_end":111676,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111677,"byte_end":111727,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111728,"byte_end":111731,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111732,"byte_end":111825,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111826,"byte_end":111923,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":111924,"byte_end":112019,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112020,"byte_end":112117,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112118,"byte_end":112214,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112215,"byte_end":112312,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112313,"byte_end":112403,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112404,"byte_end":112428,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112429,"byte_end":112432,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112433,"byte_end":112529,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112530,"byte_end":112618,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112619,"byte_end":112636,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112637,"byte_end":112640,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112641,"byte_end":112739,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112740,"byte_end":112832,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112833,"byte_end":112866,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112867,"byte_end":112870,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112871,"byte_end":112968,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":112969,"byte_end":113065,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113066,"byte_end":113087,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113780,"byte_end":113790,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113525,"byte_end":113595,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113600,"byte_end":113603,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113608,"byte_end":113622,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113627,"byte_end":113630,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113635,"byte_end":113642,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113647,"byte_end":113675,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113680,"byte_end":113683,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113688,"byte_end":113713,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113718,"byte_end":113721,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113726,"byte_end":113760,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113765,"byte_end":113772,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114067,"byte_end":114078,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113810,"byte_end":113881,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113886,"byte_end":113889,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113894,"byte_end":113908,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113913,"byte_end":113916,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113921,"byte_end":113928,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113933,"byte_end":113961,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113966,"byte_end":113969,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113974,"byte_end":113999,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114004,"byte_end":114007,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114012,"byte_end":114047,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114052,"byte_end":114059,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114374,"byte_end":114387,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114098,"byte_end":114166,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114171,"byte_end":114185,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114190,"byte_end":114193,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114198,"byte_end":114212,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114217,"byte_end":114220,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114225,"byte_end":114232,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114237,"byte_end":114265,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114270,"byte_end":114273,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114278,"byte_end":114303,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114308,"byte_end":114311,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114316,"byte_end":114354,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114359,"byte_end":114366,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114684,"byte_end":114698,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114407,"byte_end":114476,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114481,"byte_end":114495,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114500,"byte_end":114503,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114508,"byte_end":114522,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114527,"byte_end":114530,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114535,"byte_end":114542,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114547,"byte_end":114575,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114580,"byte_end":114583,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114588,"byte_end":114613,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114618,"byte_end":114621,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114626,"byte_end":114664,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114669,"byte_end":114676,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115093,"byte_end":115104,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, wrapping","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114718,"byte_end":114793,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114798,"byte_end":114857,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114862,"byte_end":114865,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114870,"byte_end":114884,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114889,"byte_end":114892,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114897,"byte_end":114904,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114909,"byte_end":114937,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114942,"byte_end":114945,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114950,"byte_end":114984,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":114989,"byte_end":115023,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115028,"byte_end":115031,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115036,"byte_end":115073,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115078,"byte_end":115085,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115516,"byte_end":115528,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, wrapping","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115133,"byte_end":115209,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115214,"byte_end":115279,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115284,"byte_end":115287,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115292,"byte_end":115306,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115311,"byte_end":115314,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115319,"byte_end":115326,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115331,"byte_end":115359,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115364,"byte_end":115367,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115372,"byte_end":115406,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115411,"byte_end":115445,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115450,"byte_end":115453,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115458,"byte_end":115496,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115501,"byte_end":115508,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115971,"byte_end":115981,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115557,"byte_end":115631,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115636,"byte_end":115676,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115681,"byte_end":115684,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115689,"byte_end":115736,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115741,"byte_end":115744,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115749,"byte_end":115763,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115768,"byte_end":115771,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115776,"byte_end":115783,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115788,"byte_end":115816,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115821,"byte_end":115824,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115829,"byte_end":115863,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115868,"byte_end":115902,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115907,"byte_end":115910,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115915,"byte_end":115951,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":115956,"byte_end":115963,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116457,"byte_end":116467,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, copying","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116010,"byte_end":116085,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116090,"byte_end":116162,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116167,"byte_end":116170,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116175,"byte_end":116222,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116227,"byte_end":116230,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116235,"byte_end":116249,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116254,"byte_end":116257,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116262,"byte_end":116269,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116274,"byte_end":116302,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116307,"byte_end":116310,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116315,"byte_end":116349,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116354,"byte_end":116388,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116393,"byte_end":116396,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116401,"byte_end":116437,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116442,"byte_end":116449,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116914,"byte_end":116926,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116496,"byte_end":116570,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116575,"byte_end":116615,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116620,"byte_end":116623,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116628,"byte_end":116677,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116682,"byte_end":116685,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116690,"byte_end":116704,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116709,"byte_end":116712,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116717,"byte_end":116724,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116729,"byte_end":116757,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116762,"byte_end":116765,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116770,"byte_end":116804,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116809,"byte_end":116843,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116848,"byte_end":116851,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116856,"byte_end":116894,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116899,"byte_end":116906,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117366,"byte_end":117378,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, filling","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":116955,"byte_end":117030,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117035,"byte_end":117074,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117079,"byte_end":117082,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117087,"byte_end":117136,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117141,"byte_end":117144,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117149,"byte_end":117163,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117168,"byte_end":117171,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117176,"byte_end":117183,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117188,"byte_end":117216,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117221,"byte_end":117224,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117229,"byte_end":117260,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117265,"byte_end":117296,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117301,"byte_end":117304,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117309,"byte_end":117346,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117351,"byte_end":117358,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117683,"byte_end":117693,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117407,"byte_end":117450,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117455,"byte_end":117458,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117463,"byte_end":117477,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117482,"byte_end":117485,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117490,"byte_end":117497,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117502,"byte_end":117530,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117535,"byte_end":117538,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117543,"byte_end":117577,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117582,"byte_end":117616,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117621,"byte_end":117624,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117629,"byte_end":117663,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117668,"byte_end":117675,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118189,"byte_end":118196,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117714,"byte_end":117780,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117785,"byte_end":117788,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117793,"byte_end":117867,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117872,"byte_end":117875,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117880,"byte_end":117894,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117899,"byte_end":117902,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117907,"byte_end":117914,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117919,"byte_end":117947,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117952,"byte_end":117955,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117960,"byte_end":117994,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":117999,"byte_end":118002,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118007,"byte_end":118043,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118048,"byte_end":118086,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118091,"byte_end":118103,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118108,"byte_end":118159,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118164,"byte_end":118169,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118174,"byte_end":118181,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118701,"byte_end":118708,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118220,"byte_end":118289,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118294,"byte_end":118297,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118302,"byte_end":118376,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118381,"byte_end":118384,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118389,"byte_end":118403,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118408,"byte_end":118411,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118416,"byte_end":118423,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118428,"byte_end":118456,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118461,"byte_end":118464,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118469,"byte_end":118503,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118508,"byte_end":118511,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118516,"byte_end":118555,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118560,"byte_end":118598,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118603,"byte_end":118615,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118620,"byte_end":118671,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118676,"byte_end":118681,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118686,"byte_end":118693,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119191,"byte_end":119196,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118732,"byte_end":118794,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118799,"byte_end":118802,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118807,"byte_end":118881,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118886,"byte_end":118889,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118894,"byte_end":118908,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118913,"byte_end":118916,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118921,"byte_end":118928,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118933,"byte_end":118961,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118966,"byte_end":118969,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":118974,"byte_end":119008,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119013,"byte_end":119016,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119021,"byte_end":119057,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119062,"byte_end":119094,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119099,"byte_end":119111,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119116,"byte_end":119161,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119166,"byte_end":119171,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119176,"byte_end":119183,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119682,"byte_end":119687,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119217,"byte_end":119282,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119287,"byte_end":119290,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119295,"byte_end":119369,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119374,"byte_end":119377,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119382,"byte_end":119396,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119401,"byte_end":119404,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119409,"byte_end":119416,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119421,"byte_end":119449,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119454,"byte_end":119457,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119462,"byte_end":119496,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119501,"byte_end":119504,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119509,"byte_end":119548,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119553,"byte_end":119585,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119590,"byte_end":119602,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119607,"byte_end":119652,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119657,"byte_end":119662,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119667,"byte_end":119674,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119925,"byte_end":119928,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119708,"byte_end":119780,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119785,"byte_end":119788,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119793,"byte_end":119807,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119812,"byte_end":119815,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119820,"byte_end":119827,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119832,"byte_end":119860,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119865,"byte_end":119868,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119873,"byte_end":119905,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":119910,"byte_end":119917,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":377},{"krate":0,"index":395},{"krate":0,"index":417},{"krate":0,"index":422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":361},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":363},{"krate":0,"index":2491},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":365},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2537},{"krate":0,"index":367},{"krate":0,"index":2539},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":370},{"krate":0,"index":2563},{"krate":0,"index":2565},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":372},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2597},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":375},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122708,"byte_end":122718,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":359}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122612,"byte_end":122683,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122684,"byte_end":122697,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122860,"byte_end":122871,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122759,"byte_end":122834,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122839,"byte_end":122852,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123849,"byte_end":123859,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123753,"byte_end":123838,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124008,"byte_end":124019,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123900,"byte_end":123972,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123977,"byte_end":124000,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124752,"byte_end":124762,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":364}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124637,"byte_end":124727,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124728,"byte_end":124741,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124936,"byte_end":124947,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124803,"byte_end":124879,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124884,"byte_end":124928,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125720,"byte_end":125730,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125565,"byte_end":125662,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125663,"byte_end":125709,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125910,"byte_end":125921,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125771,"byte_end":125844,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125849,"byte_end":125902,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126707,"byte_end":126717,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":368}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126539,"byte_end":126638,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126639,"byte_end":126696,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127511,"byte_end":127522,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126758,"byte_end":126852,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126857,"byte_end":126913,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126918,"byte_end":126921,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126926,"byte_end":126940,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126945,"byte_end":126948,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126953,"byte_end":126960,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126965,"byte_end":126996,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127001,"byte_end":127023,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127028,"byte_end":127031,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127036,"byte_end":127094,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127099,"byte_end":127158,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127163,"byte_end":127223,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127228,"byte_end":127289,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127294,"byte_end":127297,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127302,"byte_end":127357,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127362,"byte_end":127365,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127370,"byte_end":127429,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127434,"byte_end":127491,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":127496,"byte_end":127503,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128486,"byte_end":128496,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128398,"byte_end":128475,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129146,"byte_end":129157,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128510,"byte_end":128605,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128610,"byte_end":128696,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128701,"byte_end":128704,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128709,"byte_end":128723,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128728,"byte_end":128731,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128736,"byte_end":128743,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128748,"byte_end":128779,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128784,"byte_end":128806,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128811,"byte_end":128814,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128819,"byte_end":128877,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128882,"byte_end":128940,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128945,"byte_end":128997,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129002,"byte_end":129005,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129010,"byte_end":129067,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129072,"byte_end":129126,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129131,"byte_end":129138,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129935,"byte_end":129945,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129837,"byte_end":129904,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129905,"byte_end":129924,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130504,"byte_end":130515,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129985,"byte_end":130049,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130054,"byte_end":130123,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130128,"byte_end":130131,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130136,"byte_end":130143,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130148,"byte_end":130179,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130184,"byte_end":130187,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130192,"byte_end":130216,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130221,"byte_end":130224,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130229,"byte_end":130291,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130296,"byte_end":130358,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130363,"byte_end":130425,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130430,"byte_end":130484,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":130489,"byte_end":130496,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131577,"byte_end":131587,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":376}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131478,"byte_end":131546,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131547,"byte_end":131566,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":132147,"byte_end":132158,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131627,"byte_end":131692,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131697,"byte_end":131766,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131771,"byte_end":131774,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131779,"byte_end":131786,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131791,"byte_end":131822,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131827,"byte_end":131830,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131835,"byte_end":131859,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131864,"byte_end":131867,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131872,"byte_end":131934,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131939,"byte_end":132001,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":132006,"byte_end":132068,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":132073,"byte_end":132127,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":132132,"byte_end":132139,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":377},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":132947,"byte_end":132950,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":132848,"byte_end":132936,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133010,"byte_end":133016,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":132957,"byte_end":133000,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133295,"byte_end":133298,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133023,"byte_end":133072,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133077,"byte_end":133080,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133085,"byte_end":133099,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133104,"byte_end":133107,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133112,"byte_end":133119,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133124,"byte_end":133151,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133156,"byte_end":133180,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133185,"byte_end":133188,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133193,"byte_end":133230,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133235,"byte_end":133275,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/inv.rs","byte_start":133280,"byte_end":133287,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":395},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2687},{"krate":0,"index":2689},{"krate":0,"index":2691},{"krate":0,"index":2693}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":396},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134423,"byte_end":134429,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":133780,"byte_end":133852,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":133853,"byte_end":133925,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":133926,"byte_end":133929,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":133930,"byte_end":134004,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134005,"byte_end":134071,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134072,"byte_end":134075,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134076,"byte_end":134151,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134152,"byte_end":134155,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134156,"byte_end":134169,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134170,"byte_end":134173,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134174,"byte_end":134181,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134182,"byte_end":134199,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134200,"byte_end":134203,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134204,"byte_end":134225,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134226,"byte_end":134246,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134247,"byte_end":134268,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134269,"byte_end":134272,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134273,"byte_end":134285,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134286,"byte_end":134347,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134348,"byte_end":134351,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= 100.0 * f32::EPSILON);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134352,"byte_end":134404,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134405,"byte_end":134412,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134527,"byte_end":134533,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134456,"byte_end":134517,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134594,"byte_end":134601,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134540,"byte_end":134586,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":401},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134699,"byte_end":134711,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":404}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134640,"byte_end":134688,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134792,"byte_end":134806,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mul_add.rs","byte_start":134738,"byte_end":134784,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2725},{"krate":0,"index":2728}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137742,"byte_end":137752,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[{"value":"/ Saturating math operations","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137701,"byte_end":137731,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137878,"byte_end":137892,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137759,"byte_end":137792,"line_start":3,"line_end":3,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137797,"byte_end":137870,"line_start":4,"line_end":4,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":138044,"byte_end":138058,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137922,"byte_end":137958,"line_start":7,"line_end":7,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/saturating.rs","byte_start":137963,"byte_end":138036,"line_start":8,"line_end":8,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":4593},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2751},{"krate":0,"index":2753},{"krate":0,"index":433},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":435},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":438},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":440},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139266,"byte_end":139277,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139203,"byte_end":139255,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139436,"byte_end":139448,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139318,"byte_end":139410,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139415,"byte_end":139428,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140160,"byte_end":140171,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140094,"byte_end":140149,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140333,"byte_end":140345,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140212,"byte_end":140304,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140309,"byte_end":140325,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141060,"byte_end":141071,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":436}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140991,"byte_end":141049,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141236,"byte_end":141248,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141112,"byte_end":141207,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141212,"byte_end":141228,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":438},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142217,"byte_end":142228,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":439}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142160,"byte_end":142206,"line_start":103,"line_end":103,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142835,"byte_end":142847,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"pub fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142270,"byte_end":142332,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142337,"byte_end":142401,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142406,"byte_end":142461,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142466,"byte_end":142469,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142474,"byte_end":142481,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142486,"byte_end":142518,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142523,"byte_end":142526,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142531,"byte_end":142555,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142560,"byte_end":142563,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142568,"byte_end":142626,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142631,"byte_end":142689,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142694,"byte_end":142752,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142757,"byte_end":142815,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142820,"byte_end":142827,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143623,"byte_end":143634,"line_start":139,"line_end":139,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143565,"byte_end":143612,"line_start":138,"line_end":138,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":144242,"byte_end":144254,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"pub fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143676,"byte_end":143739,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143744,"byte_end":143808,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143813,"byte_end":143868,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143873,"byte_end":143876,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143881,"byte_end":143888,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143893,"byte_end":143925,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143930,"byte_end":143933,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143938,"byte_end":143962,"line_start":147,"line_end":147,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143967,"byte_end":143970,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143975,"byte_end":144033,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":144038,"byte_end":144096,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":144101,"byte_end":144159,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":144164,"byte_end":144222,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":144227,"byte_end":144234,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":4605},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2858},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2874},{"krate":0,"index":2878},{"krate":0,"index":2883},{"krate":0,"index":2886},{"krate":0,"index":2890},{"krate":0,"index":2894},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2906},{"krate":0,"index":2910},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2922},{"krate":0,"index":2926},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2938},{"krate":0,"index":2942},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2954},{"krate":0,"index":2958},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2970},{"krate":0,"index":2974},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2986},{"krate":0,"index":2990},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3002},{"krate":0,"index":3006},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3018},{"krate":0,"index":3022},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3034},{"krate":0,"index":3038},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3050},{"krate":0,"index":3054},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3066},{"krate":0,"index":3070},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3082},{"krate":0,"index":3086},{"krate":0,"index":3091},{"krate":0,"index":3094},{"krate":0,"index":3098},{"krate":0,"index":3102},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3114},{"krate":0,"index":3118},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3130},{"krate":0,"index":3134},{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":3146},{"krate":0,"index":3150},{"krate":0,"index":3155},{"krate":0,"index":3158},{"krate":0,"index":3162},{"krate":0,"index":3166},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3178},{"krate":0,"index":3182},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3194},{"krate":0,"index":3198},{"krate":0,"index":3203},{"krate":0,"index":3206},{"krate":0,"index":3210},{"krate":0,"index":3214},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3226},{"krate":0,"index":3230},{"krate":0,"index":3235},{"krate":0,"index":3238},{"krate":0,"index":3242},{"krate":0,"index":3246},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3258},{"krate":0,"index":3262},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3274},{"krate":0,"index":3278},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3290},{"krate":0,"index":3294},{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3306},{"krate":0,"index":3310},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3326},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3338},{"krate":0,"index":3342},{"krate":0,"index":3347},{"krate":0,"index":3350},{"krate":0,"index":3354},{"krate":0,"index":3358},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3370},{"krate":0,"index":3374},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3390},{"krate":0,"index":3395},{"krate":0,"index":3398},{"krate":0,"index":3402},{"krate":0,"index":3406},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3418},{"krate":0,"index":3422},{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3434},{"krate":0,"index":3438},{"krate":0,"index":3443},{"krate":0,"index":3446},{"krate":0,"index":3450},{"krate":0,"index":3454},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3466},{"krate":0,"index":3470},{"krate":0,"index":3475},{"krate":0,"index":3478},{"krate":0,"index":3482},{"krate":0,"index":3486},{"krate":0,"index":3491},{"krate":0,"index":3494},{"krate":0,"index":3498},{"krate":0,"index":3502},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3514},{"krate":0,"index":3518},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3530},{"krate":0,"index":3534},{"krate":0,"index":3539},{"krate":0,"index":3542},{"krate":0,"index":3546},{"krate":0,"index":3550},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3562},{"krate":0,"index":3566},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3578},{"krate":0,"index":3582},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3594},{"krate":0,"index":3598},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":3610},{"krate":0,"index":3614},{"krate":0,"index":3619},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3630},{"krate":0,"index":3635},{"krate":0,"index":3638},{"krate":0,"index":3642},{"krate":0,"index":3646},{"krate":0,"index":3651},{"krate":0,"index":3654},{"krate":0,"index":3658},{"krate":0,"index":3662},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3674},{"krate":0,"index":3678},{"krate":0,"index":3683},{"krate":0,"index":3686},{"krate":0,"index":3690},{"krate":0,"index":3694},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":3710},{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3722},{"krate":0,"index":3726},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3738},{"krate":0,"index":3742},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3770},{"krate":0,"index":3774},{"krate":0,"index":3779},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3790},{"krate":0,"index":3795},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3806},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3818},{"krate":0,"index":3822},{"krate":0,"index":3827},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":3838},{"krate":0,"index":3843},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3854},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3866},{"krate":0,"index":3870},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3882},{"krate":0,"index":3886},{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3898},{"krate":0,"index":3902},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3914},{"krate":0,"index":3918},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3934},{"krate":0,"index":3939},{"krate":0,"index":3942},{"krate":0,"index":3946},{"krate":0,"index":3950},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3962},{"krate":0,"index":3966},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":3978},{"krate":0,"index":3982},{"krate":0,"index":3987},{"krate":0,"index":3990},{"krate":0,"index":3994},{"krate":0,"index":3998},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":463},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":147901,"byte_end":147904,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":147839,"byte_end":147890,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":465},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":147969,"byte_end":147975,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":147916,"byte_end":147959,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148164,"byte_end":148167,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":147982,"byte_end":148020,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148025,"byte_end":148028,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148033,"byte_end":148047,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148052,"byte_end":148055,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148060,"byte_end":148067,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148072,"byte_end":148096,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148101,"byte_end":148144,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":148149,"byte_end":148156,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":471},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152994,"byte_end":152997,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152610,"byte_end":152683,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152684,"byte_end":152687,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returns `1`. Mathematically this is undefined.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152688,"byte_end":152769,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152770,"byte_end":152773,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152774,"byte_end":152787,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152788,"byte_end":152791,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152792,"byte_end":152803,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152804,"byte_end":152828,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152829,"byte_end":152832,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152833,"byte_end":152865,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152866,"byte_end":152899,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152900,"byte_end":152968,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152969,"byte_end":152976,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":152977,"byte_end":152986,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":154003,"byte_end":154014,"line_start":230,"line_end":230,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153451,"byte_end":153532,"line_start":213,"line_end":213,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153533,"byte_end":153536,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returns `Some(1)`. Mathematically this is undefined.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153537,"byte_end":153632,"line_start":215,"line_end":215,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153633,"byte_end":153636,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153637,"byte_end":153678,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153679,"byte_end":153682,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153683,"byte_end":153696,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153697,"byte_end":153700,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153701,"byte_end":153712,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153713,"byte_end":153745,"line_start":222,"line_end":222,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153746,"byte_end":153749,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153750,"byte_end":153796,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153797,"byte_end":153839,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153840,"byte_end":153894,"line_start":226,"line_end":226,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153895,"byte_end":153977,"line_start":227,"line_end":227,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153978,"byte_end":153985,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/pow.rs","byte_start":153986,"byte_end":153995,"line_start":229,"line_end":229,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":476},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":530}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":154714,"byte_end":154761,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":482},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155358,"byte_end":155362,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":154958,"byte_end":155020,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155021,"byte_end":155090,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155091,"byte_end":155094,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155095,"byte_end":155173,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155174,"byte_end":155248,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155249,"byte_end":155252,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155253,"byte_end":155347,"line_start":16,"line_end":16,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155679,"byte_end":155688,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155425,"byte_end":155492,"line_start":18,"line_end":18,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155497,"byte_end":155500,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155505,"byte_end":155512,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155517,"byte_end":155548,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155553,"byte_end":155570,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155575,"byte_end":155578,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155583,"byte_end":155618,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155623,"byte_end":155626,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155631,"byte_end":155659,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155664,"byte_end":155671,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155991,"byte_end":156009,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155705,"byte_end":155786,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155791,"byte_end":155794,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155799,"byte_end":155806,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155811,"byte_end":155842,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155847,"byte_end":155864,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155869,"byte_end":155872,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155877,"byte_end":155921,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155926,"byte_end":155929,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155934,"byte_end":155971,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155976,"byte_end":155983,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156390,"byte_end":156397,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156026,"byte_end":156070,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156075,"byte_end":156078,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156083,"byte_end":156090,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156095,"byte_end":156126,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156131,"byte_end":156148,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156153,"byte_end":156156,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156161,"byte_end":156194,"line_start":48,"line_end":48,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156199,"byte_end":156202,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156207,"byte_end":156239,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156244,"byte_end":156251,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156256,"byte_end":156259,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156264,"byte_end":156276,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156281,"byte_end":156284,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156289,"byte_end":156355,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156360,"byte_end":156382,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156659,"byte_end":156668,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156414,"byte_end":156480,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156485,"byte_end":156488,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156493,"byte_end":156500,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156505,"byte_end":156536,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156541,"byte_end":156558,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156563,"byte_end":156566,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156571,"byte_end":156606,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156611,"byte_end":156639,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156644,"byte_end":156651,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156955,"byte_end":156960,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156685,"byte_end":156748,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156753,"byte_end":156756,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156761,"byte_end":156768,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156773,"byte_end":156804,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156809,"byte_end":156812,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156817,"byte_end":156834,"line_start":75,"line_end":75,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156839,"byte_end":156855,"line_start":76,"line_end":76,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156860,"byte_end":156863,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156868,"byte_end":156899,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156904,"byte_end":156935,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156940,"byte_end":156947,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157253,"byte_end":157257,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":156981,"byte_end":157048,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157053,"byte_end":157056,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157061,"byte_end":157068,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157073,"byte_end":157104,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157109,"byte_end":157112,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157117,"byte_end":157134,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157139,"byte_end":157155,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157160,"byte_end":157163,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157168,"byte_end":157198,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157203,"byte_end":157233,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157238,"byte_end":157245,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157576,"byte_end":157581,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157278,"byte_end":157353,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157358,"byte_end":157368,"line_start":97,"line_end":97,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157373,"byte_end":157376,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157381,"byte_end":157388,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157393,"byte_end":157424,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157429,"byte_end":157432,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157437,"byte_end":157453,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157458,"byte_end":157475,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157480,"byte_end":157483,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157488,"byte_end":157519,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157524,"byte_end":157556,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157561,"byte_end":157568,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157850,"byte_end":157855,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157602,"byte_end":157642,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157647,"byte_end":157650,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157655,"byte_end":157662,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157667,"byte_end":157698,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157703,"byte_end":157706,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157711,"byte_end":157727,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157732,"byte_end":157749,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157754,"byte_end":157757,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157762,"byte_end":157793,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157798,"byte_end":157830,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157835,"byte_end":157842,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158256,"byte_end":158261,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157876,"byte_end":157920,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157925,"byte_end":157928,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157933,"byte_end":157940,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157945,"byte_end":157976,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157981,"byte_end":157984,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":157989,"byte_end":158005,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158010,"byte_end":158027,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158032,"byte_end":158083,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158088,"byte_end":158142,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158147,"byte_end":158150,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158155,"byte_end":158193,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158198,"byte_end":158236,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158241,"byte_end":158248,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158816,"byte_end":158819,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158282,"byte_end":158354,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158359,"byte_end":158388,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158393,"byte_end":158396,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158401,"byte_end":158408,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158413,"byte_end":158444,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158449,"byte_end":158466,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158471,"byte_end":158474,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158479,"byte_end":158495,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158500,"byte_end":158517,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158522,"byte_end":158525,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158530,"byte_end":158577,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158582,"byte_end":158632,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158637,"byte_end":158640,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158645,"byte_end":158683,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158688,"byte_end":158726,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158731,"byte_end":158734,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158739,"byte_end":158796,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158801,"byte_end":158808,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159391,"byte_end":159397,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158840,"byte_end":158896,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158901,"byte_end":158904,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158909,"byte_end":158977,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":158982,"byte_end":159055,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159060,"byte_end":159112,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159117,"byte_end":159120,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159125,"byte_end":159132,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159137,"byte_end":159168,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159173,"byte_end":159190,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159195,"byte_end":159198,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159203,"byte_end":159219,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159224,"byte_end":159227,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159232,"byte_end":159264,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159269,"byte_end":159318,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159323,"byte_end":159326,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159331,"byte_end":159371,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159376,"byte_end":159383,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159878,"byte_end":159894,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159418,"byte_end":159477,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159482,"byte_end":159550,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159555,"byte_end":159558,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159563,"byte_end":159570,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159575,"byte_end":159606,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159611,"byte_end":159628,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159633,"byte_end":159636,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159641,"byte_end":159674,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159679,"byte_end":159682,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159687,"byte_end":159703,"line_start":186,"line_end":186,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159708,"byte_end":159725,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159730,"byte_end":159733,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159738,"byte_end":159772,"line_start":189,"line_end":189,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159777,"byte_end":159812,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159817,"byte_end":159858,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159863,"byte_end":159870,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160371,"byte_end":160387,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159915,"byte_end":159974,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":159979,"byte_end":160052,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160057,"byte_end":160060,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160065,"byte_end":160072,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160077,"byte_end":160108,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160113,"byte_end":160130,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160135,"byte_end":160138,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160143,"byte_end":160171,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160176,"byte_end":160179,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160184,"byte_end":160200,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160205,"byte_end":160222,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160227,"byte_end":160230,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160235,"byte_end":160270,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160275,"byte_end":160309,"line_start":208,"line_end":208,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160314,"byte_end":160351,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160356,"byte_end":160363,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161004,"byte_end":161011,"line_start":231,"line_end":231,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160408,"byte_end":160480,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160485,"byte_end":160557,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160562,"byte_end":160565,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160570,"byte_end":160644,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160649,"byte_end":160715,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160720,"byte_end":160723,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160728,"byte_end":160735,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160740,"byte_end":160771,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160776,"byte_end":160779,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160784,"byte_end":160801,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160806,"byte_end":160822,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160827,"byte_end":160844,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160849,"byte_end":160852,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160857,"byte_end":160869,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160874,"byte_end":160935,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160940,"byte_end":160943,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160948,"byte_end":160984,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":160989,"byte_end":160996,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161315,"byte_end":161320,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161050,"byte_end":161103,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161108,"byte_end":161111,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161116,"byte_end":161123,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161128,"byte_end":161159,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161164,"byte_end":161167,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161172,"byte_end":161188,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161193,"byte_end":161246,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161251,"byte_end":161254,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161259,"byte_end":161295,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161300,"byte_end":161307,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161662,"byte_end":161666,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161341,"byte_end":161380,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161385,"byte_end":161388,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161393,"byte_end":161454,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161459,"byte_end":161462,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161467,"byte_end":161474,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161479,"byte_end":161510,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161515,"byte_end":161518,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161523,"byte_end":161539,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161544,"byte_end":161593,"line_start":253,"line_end":253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161598,"byte_end":161601,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161606,"byte_end":161642,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161647,"byte_end":161654,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161947,"byte_end":161951,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161695,"byte_end":161737,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161742,"byte_end":161745,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161750,"byte_end":161757,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161762,"byte_end":161793,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161798,"byte_end":161801,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161806,"byte_end":161822,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161827,"byte_end":161878,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161883,"byte_end":161886,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161891,"byte_end":161927,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161932,"byte_end":161939,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162543,"byte_end":162547,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":161981,"byte_end":162018,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162023,"byte_end":162026,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162031,"byte_end":162095,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162100,"byte_end":162103,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162108,"byte_end":162120,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162125,"byte_end":162128,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162133,"byte_end":162222,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162227,"byte_end":162230,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162235,"byte_end":162242,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162247,"byte_end":162278,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162283,"byte_end":162286,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162291,"byte_end":162314,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162319,"byte_end":162343,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162348,"byte_end":162351,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162356,"byte_end":162411,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162416,"byte_end":162419,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162424,"byte_end":162460,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162465,"byte_end":162523,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162528,"byte_end":162535,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162902,"byte_end":162905,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162568,"byte_end":162619,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162624,"byte_end":162627,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162632,"byte_end":162639,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162644,"byte_end":162675,"line_start":295,"line_end":295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162680,"byte_end":162683,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162688,"byte_end":162706,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162711,"byte_end":162721,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162726,"byte_end":162748,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162753,"byte_end":162756,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162761,"byte_end":162782,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162787,"byte_end":162833,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162838,"byte_end":162841,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162846,"byte_end":162882,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162887,"byte_end":162894,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163188,"byte_end":163192,"line_start":320,"line_end":320,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162926,"byte_end":162949,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162954,"byte_end":162957,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162962,"byte_end":162969,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":162974,"byte_end":163005,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163010,"byte_end":163013,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163018,"byte_end":163034,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163039,"byte_end":163042,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163047,"byte_end":163066,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163071,"byte_end":163119,"line_start":316,"line_end":316,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163124,"byte_end":163127,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163132,"byte_end":163168,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163173,"byte_end":163180,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163681,"byte_end":163683,"line_start":340,"line_end":340,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163213,"byte_end":163261,"line_start":322,"line_end":322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163266,"byte_end":163269,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163274,"byte_end":163286,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163291,"byte_end":163294,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163299,"byte_end":163398,"line_start":326,"line_end":326,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163403,"byte_end":163406,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163411,"byte_end":163418,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163423,"byte_end":163454,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163459,"byte_end":163462,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163467,"byte_end":163485,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163490,"byte_end":163500,"line_start":332,"line_end":332,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163505,"byte_end":163527,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163532,"byte_end":163535,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163540,"byte_end":163561,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163566,"byte_end":163612,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163617,"byte_end":163620,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163625,"byte_end":163661,"line_start":338,"line_end":338,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163666,"byte_end":163673,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164335,"byte_end":164338,"line_start":363,"line_end":363,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163704,"byte_end":163778,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163783,"byte_end":163786,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163791,"byte_end":163803,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163808,"byte_end":163811,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163816,"byte_end":163915,"line_start":346,"line_end":346,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163920,"byte_end":163923,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163928,"byte_end":163935,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163940,"byte_end":163971,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163976,"byte_end":163979,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":163984,"byte_end":164003,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164008,"byte_end":164026,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164031,"byte_end":164034,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164039,"byte_end":164064,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164069,"byte_end":164125,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164130,"byte_end":164133,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164138,"byte_end":164161,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164166,"byte_end":164220,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164225,"byte_end":164228,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164233,"byte_end":164272,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164277,"byte_end":164315,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164320,"byte_end":164327,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164802,"byte_end":164806,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164371,"byte_end":164418,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164423,"byte_end":164426,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164431,"byte_end":164443,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164448,"byte_end":164451,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164456,"byte_end":164555,"line_start":369,"line_end":369,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164560,"byte_end":164563,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164568,"byte_end":164575,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164580,"byte_end":164611,"line_start":372,"line_end":372,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164616,"byte_end":164619,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164624,"byte_end":164642,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164647,"byte_end":164650,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164655,"byte_end":164678,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164683,"byte_end":164733,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164738,"byte_end":164741,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164746,"byte_end":164782,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164787,"byte_end":164794,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165271,"byte_end":165276,"line_start":400,"line_end":400,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164827,"byte_end":164875,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164880,"byte_end":164883,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164888,"byte_end":164900,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164905,"byte_end":164908,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":164913,"byte_end":165012,"line_start":387,"line_end":387,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165017,"byte_end":165020,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165025,"byte_end":165028,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165033,"byte_end":165040,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165045,"byte_end":165076,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165081,"byte_end":165084,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165089,"byte_end":165108,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165113,"byte_end":165116,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165121,"byte_end":165146,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165151,"byte_end":165202,"line_start":396,"line_end":396,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165207,"byte_end":165210,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165215,"byte_end":165251,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165256,"byte_end":165263,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165561,"byte_end":165571,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165297,"byte_end":165329,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165334,"byte_end":165337,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165342,"byte_end":165349,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165354,"byte_end":165379,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165384,"byte_end":165387,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165392,"byte_end":165419,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165424,"byte_end":165427,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165432,"byte_end":165492,"line_start":409,"line_end":409,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165497,"byte_end":165500,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165505,"byte_end":165541,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165546,"byte_end":165553,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165860,"byte_end":165870,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165592,"byte_end":165624,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165629,"byte_end":165632,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165637,"byte_end":165644,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165649,"byte_end":165674,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165679,"byte_end":165682,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165687,"byte_end":165713,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165718,"byte_end":165721,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165726,"byte_end":165791,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165796,"byte_end":165799,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165804,"byte_end":165840,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165845,"byte_end":165852,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166101,"byte_end":166104,"line_start":438,"line_end":438,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165891,"byte_end":165934,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165939,"byte_end":165942,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165947,"byte_end":165954,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165959,"byte_end":165990,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":165995,"byte_end":165998,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166003,"byte_end":166019,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166024,"byte_end":166040,"line_start":434,"line_end":434,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166045,"byte_end":166048,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166053,"byte_end":166081,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166086,"byte_end":166093,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166348,"byte_end":166351,"line_start":450,"line_end":450,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166138,"byte_end":166181,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166186,"byte_end":166189,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166194,"byte_end":166201,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166206,"byte_end":166237,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166242,"byte_end":166245,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166250,"byte_end":166266,"line_start":445,"line_end":445,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166271,"byte_end":166287,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166292,"byte_end":166295,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166300,"byte_end":166328,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166333,"byte_end":166340,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166854,"byte_end":166861,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166385,"byte_end":166428,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166433,"byte_end":166436,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166441,"byte_end":166472,"line_start":454,"line_end":454,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166477,"byte_end":166503,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166508,"byte_end":166511,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166516,"byte_end":166523,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166528,"byte_end":166559,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166564,"byte_end":166567,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166572,"byte_end":166588,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166593,"byte_end":166610,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166615,"byte_end":166618,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166623,"byte_end":166679,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166684,"byte_end":166740,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166745,"byte_end":166748,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166753,"byte_end":166791,"line_start":466,"line_end":466,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166796,"byte_end":166834,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166839,"byte_end":166846,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167174,"byte_end":167178,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166895,"byte_end":166931,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166936,"byte_end":166939,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166944,"byte_end":166951,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166956,"byte_end":166987,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":166992,"byte_end":166995,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167000,"byte_end":167016,"line_start":476,"line_end":476,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167021,"byte_end":167024,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167029,"byte_end":167052,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167057,"byte_end":167105,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167110,"byte_end":167113,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167118,"byte_end":167154,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167159,"byte_end":167166,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167601,"byte_end":167606,"line_start":499,"line_end":499,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167199,"byte_end":167273,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167278,"byte_end":167309,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167314,"byte_end":167317,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167322,"byte_end":167329,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167334,"byte_end":167365,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167370,"byte_end":167373,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167378,"byte_end":167394,"line_start":491,"line_end":491,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167399,"byte_end":167415,"line_start":492,"line_end":492,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167420,"byte_end":167423,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167428,"byte_end":167450,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167455,"byte_end":167532,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167537,"byte_end":167540,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167545,"byte_end":167581,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167586,"byte_end":167593,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167939,"byte_end":167942,"line_start":513,"line_end":513,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167640,"byte_end":167687,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167692,"byte_end":167695,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167700,"byte_end":167707,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167712,"byte_end":167743,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167748,"byte_end":167765,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167770,"byte_end":167773,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167778,"byte_end":167810,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167815,"byte_end":167818,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167823,"byte_end":167870,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167875,"byte_end":167878,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167883,"byte_end":167919,"line_start":511,"line_end":511,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167924,"byte_end":167931,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168264,"byte_end":168267,"line_start":527,"line_end":527,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":167963,"byte_end":168012,"line_start":515,"line_end":515,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168017,"byte_end":168020,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168025,"byte_end":168032,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168037,"byte_end":168068,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168073,"byte_end":168090,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168095,"byte_end":168098,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168103,"byte_end":168135,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168140,"byte_end":168143,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168148,"byte_end":168195,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168200,"byte_end":168203,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168208,"byte_end":168244,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168249,"byte_end":168256,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168582,"byte_end":168585,"line_start":540,"line_end":540,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168288,"byte_end":168338,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168343,"byte_end":168346,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168351,"byte_end":168358,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168363,"byte_end":168394,"line_start":532,"line_end":532,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168399,"byte_end":168416,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168421,"byte_end":168424,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168429,"byte_end":168461,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168466,"byte_end":168513,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168518,"byte_end":168521,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168526,"byte_end":168562,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168567,"byte_end":168574,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169242,"byte_end":169246,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168606,"byte_end":168673,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168678,"byte_end":168747,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168752,"byte_end":168764,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168769,"byte_end":168772,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168777,"byte_end":168789,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168794,"byte_end":168797,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168802,"byte_end":168884,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168889,"byte_end":168936,"line_start":549,"line_end":549,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168941,"byte_end":168944,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168949,"byte_end":168956,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168961,"byte_end":168992,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":168997,"byte_end":169014,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169019,"byte_end":169022,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169027,"byte_end":169061,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169066,"byte_end":169069,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169074,"byte_end":169096,"line_start":557,"line_end":557,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169101,"byte_end":169173,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169178,"byte_end":169181,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169186,"byte_end":169222,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169227,"byte_end":169234,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169899,"byte_end":169903,"line_start":584,"line_end":584,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169267,"byte_end":169336,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169341,"byte_end":169404,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169409,"byte_end":169421,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169426,"byte_end":169429,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169434,"byte_end":169446,"line_start":568,"line_end":568,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169451,"byte_end":169454,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169459,"byte_end":169541,"line_start":570,"line_end":570,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169546,"byte_end":169593,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169598,"byte_end":169601,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169606,"byte_end":169613,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169618,"byte_end":169649,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169654,"byte_end":169671,"line_start":575,"line_end":575,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169676,"byte_end":169679,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169684,"byte_end":169718,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169723,"byte_end":169726,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169731,"byte_end":169753,"line_start":579,"line_end":579,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169758,"byte_end":169830,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169835,"byte_end":169838,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169843,"byte_end":169879,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169884,"byte_end":169891,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170272,"byte_end":170276,"line_start":599,"line_end":599,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":169924,"byte_end":169998,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170003,"byte_end":170027,"line_start":587,"line_end":587,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170032,"byte_end":170035,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170040,"byte_end":170047,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170052,"byte_end":170083,"line_start":590,"line_end":590,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170088,"byte_end":170091,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170096,"byte_end":170112,"line_start":592,"line_end":592,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170117,"byte_end":170120,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170125,"byte_end":170144,"line_start":594,"line_end":594,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170149,"byte_end":170203,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170208,"byte_end":170211,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170216,"byte_end":170252,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170257,"byte_end":170264,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171162,"byte_end":171167,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170297,"byte_end":170373,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170378,"byte_end":170381,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170386,"byte_end":170413,"line_start":603,"line_end":603,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170418,"byte_end":170466,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170471,"byte_end":170521,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170526,"byte_end":170577,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170582,"byte_end":170585,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170590,"byte_end":170597,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170602,"byte_end":170633,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170638,"byte_end":170655,"line_start":610,"line_end":610,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170660,"byte_end":170663,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170668,"byte_end":170697,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170702,"byte_end":170746,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170751,"byte_end":170782,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170787,"byte_end":170804,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170809,"byte_end":170827,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170832,"byte_end":170835,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170840,"byte_end":170864,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170869,"byte_end":170887,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170892,"byte_end":170909,"line_start":620,"line_end":620,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170914,"byte_end":170917,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170922,"byte_end":170982,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":170987,"byte_end":171048,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171053,"byte_end":171056,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171061,"byte_end":171099,"line_start":625,"line_end":625,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171104,"byte_end":171142,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171147,"byte_end":171154,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171686,"byte_end":171693,"line_start":646,"line_end":646,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171201,"byte_end":171276,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171281,"byte_end":171304,"line_start":631,"line_end":631,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171309,"byte_end":171312,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171317,"byte_end":171324,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171329,"byte_end":171360,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171365,"byte_end":171382,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171387,"byte_end":171390,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171395,"byte_end":171427,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171432,"byte_end":171456,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171461,"byte_end":171464,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171469,"byte_end":171518,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171523,"byte_end":171572,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171577,"byte_end":171580,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171585,"byte_end":171623,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171628,"byte_end":171666,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171671,"byte_end":171678,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172066,"byte_end":172072,"line_start":661,"line_end":661,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171722,"byte_end":171786,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171791,"byte_end":171819,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171824,"byte_end":171827,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171832,"byte_end":171839,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171844,"byte_end":171875,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171880,"byte_end":171883,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171888,"byte_end":171904,"line_start":654,"line_end":654,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171909,"byte_end":171912,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171917,"byte_end":171937,"line_start":656,"line_end":656,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":171942,"byte_end":171997,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172002,"byte_end":172005,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172010,"byte_end":172046,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172051,"byte_end":172058,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172650,"byte_end":172655,"line_start":682,"line_end":682,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172093,"byte_end":172158,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172163,"byte_end":172208,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172213,"byte_end":172216,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172221,"byte_end":172233,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172238,"byte_end":172241,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172246,"byte_end":172328,"line_start":668,"line_end":668,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172333,"byte_end":172354,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172359,"byte_end":172362,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172367,"byte_end":172374,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172379,"byte_end":172410,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172415,"byte_end":172432,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172437,"byte_end":172440,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172445,"byte_end":172478,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172483,"byte_end":172486,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172491,"byte_end":172527,"line_start":677,"line_end":677,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172532,"byte_end":172581,"line_start":678,"line_end":678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172586,"byte_end":172589,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172594,"byte_end":172630,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172635,"byte_end":172642,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173080,"byte_end":173084,"line_start":700,"line_end":700,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172676,"byte_end":172705,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172710,"byte_end":172713,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172718,"byte_end":172725,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172730,"byte_end":172761,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172766,"byte_end":172783,"line_start":688,"line_end":688,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172788,"byte_end":172791,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172796,"byte_end":172823,"line_start":690,"line_end":690,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172828,"byte_end":172844,"line_start":691,"line_end":691,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172849,"byte_end":172852,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172857,"byte_end":172878,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172883,"byte_end":172930,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172935,"byte_end":172967,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":172972,"byte_end":173011,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173016,"byte_end":173019,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173024,"byte_end":173060,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173065,"byte_end":173072,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173525,"byte_end":173529,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173105,"byte_end":173136,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173141,"byte_end":173144,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173149,"byte_end":173156,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173161,"byte_end":173192,"line_start":705,"line_end":705,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173197,"byte_end":173214,"line_start":706,"line_end":706,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173219,"byte_end":173222,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173227,"byte_end":173254,"line_start":708,"line_end":708,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173259,"byte_end":173275,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173280,"byte_end":173301,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173306,"byte_end":173350,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173355,"byte_end":173387,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173392,"byte_end":173431,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173436,"byte_end":173439,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173444,"byte_end":173462,"line_start":715,"line_end":715,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173467,"byte_end":173505,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173510,"byte_end":173517,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173990,"byte_end":173994,"line_start":736,"line_end":736,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173550,"byte_end":173582,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173587,"byte_end":173590,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173595,"byte_end":173602,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173607,"byte_end":173638,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173643,"byte_end":173660,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173665,"byte_end":173668,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173673,"byte_end":173700,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173705,"byte_end":173721,"line_start":727,"line_end":727,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173726,"byte_end":173729,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173734,"byte_end":173755,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173760,"byte_end":173820,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173825,"byte_end":173875,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173880,"byte_end":173919,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173924,"byte_end":173927,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173932,"byte_end":173970,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":173975,"byte_end":173982,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174294,"byte_end":174299,"line_start":750,"line_end":750,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174015,"byte_end":174052,"line_start":738,"line_end":738,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174057,"byte_end":174060,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174065,"byte_end":174072,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174077,"byte_end":174108,"line_start":741,"line_end":741,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174113,"byte_end":174116,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174121,"byte_end":174137,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174142,"byte_end":174171,"line_start":744,"line_end":744,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174176,"byte_end":174179,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174184,"byte_end":174223,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174228,"byte_end":174231,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174236,"byte_end":174274,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174279,"byte_end":174286,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174601,"byte_end":174606,"line_start":764,"line_end":764,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174320,"byte_end":174359,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174364,"byte_end":174367,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174372,"byte_end":174379,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174384,"byte_end":174415,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174420,"byte_end":174423,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174428,"byte_end":174444,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174449,"byte_end":174478,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174483,"byte_end":174486,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174491,"byte_end":174530,"line_start":760,"line_end":760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174535,"byte_end":174538,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174543,"byte_end":174581,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174586,"byte_end":174593,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174942,"byte_end":174947,"line_start":779,"line_end":779,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174627,"byte_end":174667,"line_start":766,"line_end":766,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174672,"byte_end":174675,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174680,"byte_end":174687,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174692,"byte_end":174723,"line_start":769,"line_end":769,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174728,"byte_end":174745,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174750,"byte_end":174753,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174758,"byte_end":174785,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174790,"byte_end":174819,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174824,"byte_end":174827,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174832,"byte_end":174871,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174876,"byte_end":174879,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174884,"byte_end":174922,"line_start":777,"line_end":777,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174927,"byte_end":174934,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":532},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":4625},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":4258},{"krate":0,"index":4264},{"krate":0,"index":4270},{"krate":0,"index":4276},{"krate":0,"index":4282},{"krate":0,"index":4288},{"krate":0,"index":544},{"krate":0,"index":4294},{"krate":0,"index":4300},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":560}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":537},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177031,"byte_end":177037,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":176944,"byte_end":177020,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177290,"byte_end":177293,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177078,"byte_end":177110,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177115,"byte_end":177118,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177123,"byte_end":177194,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177199,"byte_end":177202,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177207,"byte_end":177282,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177518,"byte_end":177525,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177315,"byte_end":177358,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177363,"byte_end":177366,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177371,"byte_end":177462,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177467,"byte_end":177510,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177983,"byte_end":177989,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177561,"byte_end":177596,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177601,"byte_end":177604,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177609,"byte_end":177633,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177638,"byte_end":177641,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177646,"byte_end":177705,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177710,"byte_end":177774,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177779,"byte_end":177813,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177818,"byte_end":177821,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177826,"byte_end":177850,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177855,"byte_end":177858,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177863,"byte_end":177894,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177899,"byte_end":177934,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177939,"byte_end":177975,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":178106,"byte_end":178117,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":178011,"byte_end":178098,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":178234,"byte_end":178245,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":178139,"byte_end":178226,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181439,"byte_end":181442,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181226,"byte_end":181258,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181259,"byte_end":181262,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181263,"byte_end":181333,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181334,"byte_end":181337,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181338,"byte_end":181413,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181414,"byte_end":181431,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181679,"byte_end":181686,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181490,"byte_end":181533,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181534,"byte_end":181537,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181538,"byte_end":181616,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181617,"byte_end":181653,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181654,"byte_end":181671,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":556},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182130,"byte_end":182136,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181738,"byte_end":181773,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181774,"byte_end":181777,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181778,"byte_end":181802,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181803,"byte_end":181806,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181807,"byte_end":181866,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181867,"byte_end":181931,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181932,"byte_end":181966,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181967,"byte_end":181970,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181971,"byte_end":181995,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":181996,"byte_end":181999,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182000,"byte_end":182031,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182032,"byte_end":182067,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182068,"byte_end":182104,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182105,"byte_end":182122,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":558},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182245,"byte_end":182253,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182187,"byte_end":182234,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2098,"byte_end":2101,"line_start":65,"line_end":65,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1955,"byte_end":2021,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2022,"byte_end":2087,"line_start":64,"line_end":64,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2146,"byte_end":2161,"line_start":66,"line_end":66,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2519,"byte_end":2533,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2168,"byte_end":2210,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2215,"byte_end":2218,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2223,"byte_end":2237,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2250,"byte_end":2261,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2266,"byte_end":2290,"line_start":73,"line_end":73,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2295,"byte_end":2298,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2303,"byte_end":2359,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2364,"byte_end":2395,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2400,"byte_end":2403,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2408,"byte_end":2465,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2470,"byte_end":2499,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2504,"byte_end":2511,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2755,"byte_end":2761,"line_start":87,"line_end":87,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2600,"byte_end":2661,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2662,"byte_end":2665,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2666,"byte_end":2744,"line_start":86,"line_end":86,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":572},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3395,"byte_end":3401,"line_start":109,"line_end":109,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3188,"byte_end":3264,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3265,"byte_end":3301,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3302,"byte_end":3305,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3306,"byte_end":3384,"line_start":108,"line_end":108,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3720,"byte_end":3726,"line_start":116,"line_end":116,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3499,"byte_end":3574,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3575,"byte_end":3626,"line_start":113,"line_end":113,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3627,"byte_end":3630,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3631,"byte_end":3709,"line_start":115,"line_end":115,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":584},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4059,"byte_end":4071,"line_start":122,"line_end":122,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3887,"byte_end":3965,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3966,"byte_end":3969,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3970,"byte_end":4048,"line_start":121,"line_end":121,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":589},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4481,"byte_end":4490,"line_start":135,"line_end":135,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4315,"byte_end":4387,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4388,"byte_end":4391,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4392,"byte_end":4470,"line_start":134,"line_end":134,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":592},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4786,"byte_end":4798,"line_start":142,"line_end":142,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4570,"byte_end":4648,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4649,"byte_end":4692,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4697,"byte_end":4775,"line_start":141,"line_end":141,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":5920,"byte_end":5925,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":5931,"byte_end":5938,"line_start":179,"line_end":179,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":5899,"byte_end":5913,"line_start":177,"line_end":177,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4355},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":6096,"byte_end":6111,"line_start":184,"line_end":184,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":6122,"byte_end":6126,"line_start":185,"line_end":185,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":605},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14398,"byte_end":14403,"line_start":373,"line_end":373,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14131,"byte_end":14177,"line_start":365,"line_end":365,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14178,"byte_end":14181,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14182,"byte_end":14235,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14236,"byte_end":14292,"line_start":368,"line_end":368,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14293,"byte_end":14327,"line_start":369,"line_end":369,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14328,"byte_end":14331,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min <= max)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14332,"byte_end":14380,"line_start":371,"line_end":371,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14381,"byte_end":14390,"line_start":372,"line_end":372,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":607},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14968,"byte_end":14977,"line_start":392,"line_end":392,"column_start":8,"column_end":17},"name":"clamp_min","qualname":"::clamp_min","value":"pub fn clamp_min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum value","sig":null,"attributes":[{"value":"/ A value bounded by a minimum value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14633,"byte_end":14671,"line_start":384,"line_end":384,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14672,"byte_end":14675,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14676,"byte_end":14729,"line_start":386,"line_end":386,"column_start":1,"column_end":54}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14730,"byte_end":14764,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/  `clamp_min(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::min(std::f32::NAN, 1.0)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14765,"byte_end":14864,"line_start":388,"line_end":388,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14865,"byte_end":14868,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min == min)`. (This occurs if `min` is `NAN`.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14869,"byte_end":14950,"line_start":390,"line_end":390,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":14951,"byte_end":14960,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":609},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15479,"byte_end":15488,"line_start":409,"line_end":409,"column_start":8,"column_end":17},"name":"clamp_max","qualname":"::clamp_max","value":"pub fn clamp_max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a maximum value","sig":null,"attributes":[{"value":"/ A value bounded by a maximum value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15141,"byte_end":15179,"line_start":401,"line_end":401,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15180,"byte_end":15183,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15184,"byte_end":15240,"line_start":403,"line_end":403,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15241,"byte_end":15275,"line_start":404,"line_end":404,"column_start":1,"column_end":35}},{"value":"/  `clamp_max(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::max(std::f32::NAN, 1.0)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15276,"byte_end":15375,"line_start":405,"line_end":405,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15376,"byte_end":15379,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(max == max)`. (This occurs if `max` is `NAN`.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15380,"byte_end":15461,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":15462,"byte_end":15471,"line_start":408,"line_end":408,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":21749,"byte_end":21757,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":43111,"byte_end":43119,"line_start":583,"line_end":583,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":43887,"byte_end":43895,"line_start":616,"line_end":616,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":45898,"byte_end":45906,"line_start":693,"line_end":693,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108111,"byte_end":108119,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110096,"byte_end":110104,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145068,"byte_end":145076,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145268,"byte_end":145276,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145468,"byte_end":145476,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145668,"byte_end":145676,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145874,"byte_end":145882,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174990,"byte_end":174991,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":179127,"byte_end":179135,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182515,"byte_end":182523,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2998,"byte_end":2999,"line_start":96,"line_end":96,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3456,"byte_end":3457,"line_start":110,"line_end":110,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3820,"byte_end":3821,"line_start":117,"line_end":117,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4212,"byte_end":4213,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4536,"byte_end":4537,"line_start":136,"line_end":136,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4871,"byte_end":4872,"line_start":143,"line_end":143,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":5471,"byte_end":5479,"line_start":162,"line_end":162,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":6169,"byte_end":6184,"line_start":188,"line_end":188,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1830,"byte_end":1836,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1846,"byte_end":1850,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1860,"byte_end":1865,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1875,"byte_end":1885,"line_start":56,"line_end":56,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":288}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1895,"byte_end":1898,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1908,"byte_end":1911,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":122481,"byte_end":122488,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":122498,"byte_end":122501,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":377}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":122511,"byte_end":122518,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":395}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":122528,"byte_end":122538,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":417}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/mod.rs","byte_start":122548,"byte_end":122556,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":422}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1921,"byte_end":1924,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":457}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1934,"byte_end":1938,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":476}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":1948,"byte_end":1952,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":532}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/bounds.rs","byte_start":21749,"byte_end":21757,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":87}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":36291,"byte_end":36296,"line_start":379,"line_end":379,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":145}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":43111,"byte_end":43119,"line_start":583,"line_end":583,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":43887,"byte_end":43895,"line_start":616,"line_end":616,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":145}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44730,"byte_end":44735,"line_start":655,"line_end":655,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":170}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":44738,"byte_end":44749,"line_start":655,"line_end":655,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":120},"to":{"krate":0,"index":170}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":45898,"byte_end":45906,"line_start":693,"line_end":693,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":170}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/cast.rs","byte_start":47140,"byte_end":47144,"line_start":734,"line_end":734,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48990,"byte_end":48993,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":48996,"byte_end":49003,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49006,"byte_end":49009,"line_start":16,"line_end":16,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49027,"byte_end":49037,"line_start":16,"line_end":16,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":49040,"byte_end":49044,"line_start":16,"line_end":16,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72674,"byte_end":72677,"line_start":905,"line_end":905,"column_start":18,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":226}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72680,"byte_end":72684,"line_start":905,"line_end":905,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":226}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72687,"byte_end":72694,"line_start":905,"line_end":905,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":226}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72697,"byte_end":72707,"line_start":905,"line_end":905,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":226}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/float.rs","byte_start":72710,"byte_end":72713,"line_start":905,"line_end":905,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":226}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106854,"byte_end":106859,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":293}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":106862,"byte_end":106865,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":293}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108111,"byte_end":108119,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":293}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108548,"byte_end":108553,"line_start":90,"line_end":90,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":108556,"byte_end":108559,"line_start":90,"line_end":90,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/identities.rs","byte_start":110096,"byte_end":110104,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113111,"byte_end":113116,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113123,"byte_end":113127,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113134,"byte_end":113137,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113144,"byte_end":113151,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113158,"byte_end":113165,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113172,"byte_end":113182,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113189,"byte_end":113192,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1796},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113199,"byte_end":113201,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":1775},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113208,"byte_end":113211,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2162},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113233,"byte_end":113239,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2166},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113261,"byte_end":113266,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2171},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113288,"byte_end":113294,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113316,"byte_end":113319,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113348,"byte_end":113351,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113380,"byte_end":113390,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":358},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113412,"byte_end":113422,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":361},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113444,"byte_end":113454,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":363},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113476,"byte_end":113486,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":365},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/int.rs","byte_start":113508,"byte_end":113518,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":330}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122720,"byte_end":122725,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":122728,"byte_end":122731,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123861,"byte_end":123866,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":361}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":123869,"byte_end":123872,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":361}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124764,"byte_end":124769,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":363}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":124772,"byte_end":124775,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":363}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125732,"byte_end":125737,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":365}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":125740,"byte_end":125743,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2125},"to":{"krate":0,"index":365}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126719,"byte_end":126724,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":126727,"byte_end":126730,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2131},"to":{"krate":0,"index":367}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":128498,"byte_end":128503,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":370}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129947,"byte_end":129952,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":372}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":129955,"byte_end":129958,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":372}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131589,"byte_end":131594,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/checked.rs","byte_start":131597,"byte_end":131600,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":375}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139279,"byte_end":139284,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":431}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":139287,"byte_end":139290,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":431}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140173,"byte_end":140178,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":140181,"byte_end":140184,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141073,"byte_end":141078,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":141081,"byte_end":141084,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142230,"byte_end":142235,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":142238,"byte_end":142241,"line_start":104,"line_end":104,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143636,"byte_end":143641,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":440}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":143644,"byte_end":143647,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":440}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145068,"byte_end":145076,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"kind":{"Impl":{"id":510}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":431}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145268,"byte_end":145276,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"kind":{"Impl":{"id":511}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145468,"byte_end":145476,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"kind":{"Impl":{"id":512}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145668,"byte_end":145676,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"kind":{"Impl":{"id":513}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":438}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/ops/wrapping.rs","byte_start":145874,"byte_end":145882,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"kind":{"Impl":{"id":514}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":440}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155364,"byte_end":155367,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155370,"byte_end":155374,"line_start":17,"line_end":17,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155377,"byte_end":155384,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155387,"byte_end":155397,"line_start":17,"line_end":17,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":155400,"byte_end":155403,"line_start":17,"line_end":17,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/real.rs","byte_start":174990,"byte_end":174991,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":531},"to":{"krate":0,"index":482}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177039,"byte_end":177044,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":537}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177047,"byte_end":177050,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":537}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":177053,"byte_end":177056,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":537}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":179127,"byte_end":179135,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":692}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":537}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182255,"byte_end":182258,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/sign.rs","byte_start":182515,"byte_end":182523,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":701}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2103,"byte_end":2112,"line_start":65,"line_end":65,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1770},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2115,"byte_end":2119,"line_start":65,"line_end":65,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":293},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2122,"byte_end":2125,"line_start":65,"line_end":65,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":303},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2128,"byte_end":2134,"line_start":65,"line_end":65,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":565},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2794,"byte_end":2797,"line_start":88,"line_end":88,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2826,"byte_end":2829,"line_start":89,"line_end":89,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2858,"byte_end":2861,"line_start":90,"line_end":90,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2890,"byte_end":2893,"line_start":91,"line_end":91,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2125},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2922,"byte_end":2925,"line_start":92,"line_end":92,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2131},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":2998,"byte_end":2999,"line_start":96,"line_end":96,"column_start":46,"column_end":47},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":569},"to":{"krate":0,"index":565}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3403,"byte_end":3406,"line_start":109,"line_end":109,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":572}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3417,"byte_end":3423,"line_start":109,"line_end":109,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":565},"to":{"krate":0,"index":572}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3456,"byte_end":3457,"line_start":110,"line_end":110,"column_start":20,"column_end":21},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":572}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3734,"byte_end":3740,"line_start":116,"line_end":116,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":565},"to":{"krate":0,"index":577}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3763,"byte_end":3769,"line_start":116,"line_end":116,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":565},"to":{"krate":0,"index":577}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":3820,"byte_end":3821,"line_start":117,"line_end":117,"column_start":32,"column_end":33},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":577}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4089,"byte_end":4098,"line_start":123,"line_end":123,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2141},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4106,"byte_end":4115,"line_start":123,"line_end":123,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2145},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4123,"byte_end":4132,"line_start":123,"line_end":123,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2149},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4140,"byte_end":4149,"line_start":123,"line_end":123,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":2153},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4157,"byte_end":4166,"line_start":123,"line_end":123,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":2157},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4212,"byte_end":4213,"line_start":127,"line_end":127,"column_start":36,"column_end":37},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":587},"to":{"krate":0,"index":584}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4492,"byte_end":4495,"line_start":135,"line_end":135,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":589}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4498,"byte_end":4510,"line_start":135,"line_end":135,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":584},"to":{"krate":0,"index":589}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4536,"byte_end":4537,"line_start":136,"line_end":136,"column_start":23,"column_end":24},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":591},"to":{"krate":0,"index":589}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4800,"byte_end":4809,"line_start":142,"line_end":142,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":589},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4820,"byte_end":4832,"line_start":142,"line_end":142,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":584},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":4871,"byte_end":4872,"line_start":143,"line_end":143,"column_start":26,"column_end":27},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":595},"to":{"krate":0,"index":592}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":5471,"byte_end":5479,"line_start":162,"line_end":162,"column_start":22,"column_end":30},"kind":{"Impl":{"id":720}},"from":{"krate":1,"index":14224},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.9/src/lib.rs","byte_start":6169,"byte_end":6184,"line_start":188,"line_end":188,"column_start":23,"column_end":38},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":4355},"to":{"krate":1,"index":6604}}]}