{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ordermap","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=97d7d426fdf429bf","-C","extra-filename=-97d7d426fdf429bf","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libordermap-97d7d426fdf429bf.rmeta"},"prelude":{"crate_id":{"name":"ordermap","disambiguator":[14413334921063817060,4097412733286418061]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":57365,"line_start":2,"line_end":1877,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":717,"byte_end":727,"line_start":33,"line_end":33,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":751,"byte_end":762,"line_start":34,"line_end":34,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":777,"byte_end":785,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"alias_span":null,"name":"OrderSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":57365,"line_start":2,"line_end":1877,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":19},{"krate":0,"index":28},{"krate":0,"index":54},{"krate":0,"index":364},{"krate":0,"index":1072},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":1082},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":1092},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":905},{"krate":0,"index":910},{"krate":0,"index":908},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":922},{"krate":0,"index":930},{"krate":0,"index":935},{"krate":0,"index":949},{"krate":0,"index":945},{"krate":0,"index":941},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":450},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":475},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":495},{"krate":0,"index":505},{"krate":0,"index":514},{"krate":0,"index":527},{"krate":0,"index":536},{"krate":0,"index":547},{"krate":0,"index":613},{"krate":0,"index":623},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":659},{"krate":0,"index":665},{"krate":0,"index":670},{"krate":0,"index":675},{"krate":0,"index":680},{"krate":0,"index":686},{"krate":0,"index":691},{"krate":0,"index":696},{"krate":0,"index":701},{"krate":0,"index":707},{"krate":0,"index":712},{"krate":0,"index":717},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":733},{"krate":0,"index":738},{"krate":0,"index":743},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":777},{"krate":0,"index":782},{"krate":0,"index":786},{"krate":0,"index":794},{"krate":0,"index":802},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":820},{"krate":0,"index":827},{"krate":0,"index":833},{"krate":0,"index":839},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":861}],"decl_id":null,"docs":" [`OrderMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1,"byte_end":22,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/ [`OrderMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":81,"byte_end":156,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":157,"byte_end":213,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":214,"byte_end":217,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`OrderMap`]: struct.OrderMap.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":218,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61407,"byte_end":61417,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61017,"byte_end":61043,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61044,"byte_end":61047,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61048,"byte_end":61105,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61106,"byte_end":61184,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61185,"byte_end":61265,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61266,"byte_end":61310,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61311,"byte_end":61314,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61315,"byte_end":61329,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61330,"byte_end":61333,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61334,"byte_end":61396,"line_start":13,"line_end":13,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61505,"byte_end":61515,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61435,"byte_end":61497,"line_start":15,"line_end":15,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61830,"byte_end":61843,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62392,"byte_end":62403,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61849,"byte_end":61883,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61884,"byte_end":61887,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61888,"byte_end":61968,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61969,"byte_end":61984,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modifcation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":61985,"byte_end":62059,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62060,"byte_end":62112,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62113,"byte_end":62116,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erronously, you can no longer look them up.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62117,"byte_end":62185,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62186,"byte_end":62255,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62256,"byte_end":62318,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62319,"byte_end":62322,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `OrderMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62323,"byte_end":62381,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62415,"byte_end":62418,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62429,"byte_end":62434,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62510,"byte_end":62523,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62445,"byte_end":62502,"line_start":25,"line_end":25,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62940,"byte_end":62947,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62668,"byte_end":62740,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62745,"byte_end":62779,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62784,"byte_end":62787,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62792,"byte_end":62864,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62869,"byte_end":62879,"line_start":34,"line_end":34,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62884,"byte_end":62887,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":62892,"byte_end":62932,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63235,"byte_end":63251,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63042,"byte_end":63121,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63126,"byte_end":63193,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63198,"byte_end":63227,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":1048},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":1054},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":1066},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":865},{"krate":0,"index":869},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":95},{"krate":0,"index":149},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":284},{"krate":0,"index":289},{"krate":0,"index":295},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":340},{"krate":0,"index":348},{"krate":0,"index":356}],"decl_id":null,"docs":" A hash set implemented using `OrderMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `OrderMap`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64093,"byte_end":64136,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65880,"byte_end":65888,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"OrderSet","qualname":"::set::OrderSet","value":"OrderSet {  }","parent":null,"children":[{"krate":0,"index":868}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64494,"byte_end":64572,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64573,"byte_end":64589,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64590,"byte_end":64593,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64594,"byte_end":64671,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64672,"byte_end":64700,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64701,"byte_end":64704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64705,"byte_end":64716,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64717,"byte_end":64720,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64721,"byte_end":64797,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64798,"byte_end":64874,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64875,"byte_end":64950,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":64951,"byte_end":65021,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65022,"byte_end":65042,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65043,"byte_end":65046,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65047,"byte_end":65123,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65124,"byte_end":65196,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65197,"byte_end":65251,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65252,"byte_end":65255,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65256,"byte_end":65269,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65270,"byte_end":65273,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65274,"byte_end":65346,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65347,"byte_end":65426,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65427,"byte_end":65496,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65497,"byte_end":65500,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65501,"byte_end":65515,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65516,"byte_end":65519,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65520,"byte_end":65527,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use ordermap::OrderSet;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65528,"byte_end":65555,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65556,"byte_end":65559,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65560,"byte_end":65611,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/ let letters: OrderSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65612,"byte_end":65689,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65690,"byte_end":65694,"line_start":49,"line_end":49,"column_start":1,"column_end":5}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65695,"byte_end":65731,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65732,"byte_end":65768,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65769,"byte_end":65805,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65806,"byte_end":65843,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65844,"byte_end":65851,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66464,"byte_end":66467,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<OrderSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66410,"byte_end":66452,"line_start":75,"line_end":75,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66684,"byte_end":66697,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<OrderSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66533,"byte_end":66585,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66590,"byte_end":66629,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66634,"byte_end":66637,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66642,"byte_end":66672,"line_start":83,"line_end":83,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66963,"byte_end":66987,"line_start":94,"line_end":94,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<OrderSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66812,"byte_end":66864,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66869,"byte_end":66908,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66913,"byte_end":66916,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66921,"byte_end":66951,"line_start":93,"line_end":93,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67247,"byte_end":67250,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67147,"byte_end":67192,"line_start":100,"line_end":100,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67197,"byte_end":67200,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67205,"byte_end":67235,"line_start":102,"line_end":102,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67407,"byte_end":67415,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67303,"byte_end":67352,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67357,"byte_end":67360,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67365,"byte_end":67395,"line_start":109,"line_end":109,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67524,"byte_end":67535,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<OrderSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67472,"byte_end":67512,"line_start":114,"line_end":114,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67731,"byte_end":67737,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"hasher","qualname":"<OrderSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67669,"byte_end":67719,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67865,"byte_end":67873,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"capacity","qualname":"<OrderSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67823,"byte_end":67853,"line_start":128,"line_end":128,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68132,"byte_end":68137,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrderSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68011,"byte_end":68077,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68082,"byte_end":68085,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68090,"byte_end":68120,"line_start":140,"line_end":140,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68235,"byte_end":68242,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"reserve","qualname":"<OrderSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[{"value":"/ FIXME Not implemented fully yet","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68188,"byte_end":68223,"line_start":145,"line_end":145,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68676,"byte_end":68682,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrderSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68324,"byte_end":68358,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68363,"byte_end":68366,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68371,"byte_end":68434,"line_start":152,"line_end":152,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68439,"byte_end":68500,"line_start":153,"line_end":153,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68505,"byte_end":68568,"line_start":154,"line_end":154,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68573,"byte_end":68601,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68606,"byte_end":68609,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68614,"byte_end":68664,"line_start":157,"line_end":157,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68847,"byte_end":68851,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrderSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68770,"byte_end":68835,"line_start":162,"line_end":162,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69115,"byte_end":69125,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrderSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a OrderSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":68947,"byte_end":69021,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69026,"byte_end":69029,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69034,"byte_end":69103,"line_start":171,"line_end":171,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69576,"byte_end":69596,"line_start":186,"line_end":186,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrderSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a OrderSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69332,"byte_end":69401,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69406,"byte_end":69426,"line_start":182,"line_end":182,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69431,"byte_end":69434,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69439,"byte_end":69511,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69516,"byte_end":69564,"line_start":185,"line_end":185,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70016,"byte_end":70028,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrderSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a OrderSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69847,"byte_end":69922,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69927,"byte_end":69930,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":69935,"byte_end":70004,"line_start":197,"line_end":197,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70472,"byte_end":70477,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"union","qualname":"<OrderSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a OrderSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70239,"byte_end":70308,"line_start":207,"line_end":207,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70313,"byte_end":70316,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70321,"byte_end":70393,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70398,"byte_end":70460,"line_start":210,"line_end":210,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70806,"byte_end":70814,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"contains","qualname":"<OrderSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70677,"byte_end":70741,"line_start":219,"line_end":219,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70746,"byte_end":70749,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70754,"byte_end":70794,"line_start":221,"line_end":221,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71103,"byte_end":71106,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"get","qualname":"<OrderSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":70945,"byte_end":71017,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71022,"byte_end":71038,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71043,"byte_end":71046,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71051,"byte_end":71091,"line_start":231,"line_end":231,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71303,"byte_end":71311,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"get_full","qualname":"<OrderSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71260,"byte_end":71291,"line_start":238,"line_end":238,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71678,"byte_end":71685,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"replace","qualname":"<OrderSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71479,"byte_end":71553,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ equal to the given one. Returns the replaced value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71558,"byte_end":71613,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71618,"byte_end":71621,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":71626,"byte_end":71666,"line_start":248,"line_end":248,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72157,"byte_end":72163,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrderSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_remove","sig":null,"attributes":[{"value":"/ FIXME Same as .swap_remove","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72062,"byte_end":72092,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72097,"byte_end":72100,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72105,"byte_end":72145,"line_start":265,"line_end":265,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72704,"byte_end":72715,"line_start":281,"line_end":281,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OrderSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72293,"byte_end":72364,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72369,"byte_end":72372,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72377,"byte_end":72450,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72455,"byte_end":72518,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72523,"byte_end":72577,"line_start":276,"line_end":276,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72582,"byte_end":72585,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72590,"byte_end":72639,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72644,"byte_end":72647,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72652,"byte_end":72692,"line_start":280,"line_end":280,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72952,"byte_end":72956,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"<OrderSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_take","sig":null,"attributes":[{"value":"/ FIXME Same as .swap_take","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72859,"byte_end":72887,"line_start":287,"line_end":287,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72892,"byte_end":72895,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":72900,"byte_end":72940,"line_start":289,"line_end":289,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73521,"byte_end":73530,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<OrderSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73089,"byte_end":73163,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73168,"byte_end":73182,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73187,"byte_end":73190,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73195,"byte_end":73268,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73273,"byte_end":73336,"line_start":300,"line_end":300,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73341,"byte_end":73395,"line_start":301,"line_end":301,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73400,"byte_end":73403,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73408,"byte_end":73456,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73461,"byte_end":73464,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73469,"byte_end":73509,"line_start":305,"line_end":305,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74045,"byte_end":74061,"line_start":319,"line_end":319,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<OrderSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73694,"byte_end":73759,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73764,"byte_end":73767,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73772,"byte_end":73845,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73850,"byte_end":73913,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73918,"byte_end":73972,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73977,"byte_end":73980,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":73985,"byte_end":74033,"line_start":318,"line_end":318,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74329,"byte_end":74332,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"pop","qualname":"<OrderSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74239,"byte_end":74264,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74269,"byte_end":74272,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74277,"byte_end":74317,"line_start":327,"line_end":327,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74677,"byte_end":74683,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"retain","qualname":"<OrderSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74410,"byte_end":74473,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74478,"byte_end":74512,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74517,"byte_end":74520,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74525,"byte_end":74597,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74602,"byte_end":74612,"line_start":336,"line_end":336,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74617,"byte_end":74620,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74625,"byte_end":74665,"line_start":338,"line_end":338,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74924,"byte_end":74928,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"sort","qualname":"<OrderSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74815,"byte_end":74869,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74874,"byte_end":74877,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":74882,"byte_end":74912,"line_start":347,"line_end":347,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75185,"byte_end":75192,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<OrderSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `compare`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75008,"byte_end":75085,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75090,"byte_end":75093,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75098,"byte_end":75173,"line_start":356,"line_end":356,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75491,"byte_end":75500,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<OrderSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by value iterator of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75343,"byte_end":75407,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75412,"byte_end":75443,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75448,"byte_end":75451,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75456,"byte_end":75479,"line_start":366,"line_end":366,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75828,"byte_end":75833,"line_start":377,"line_end":377,"column_start":12,"column_end":17},"name":"drain","qualname":"<OrderSet<T, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `OrderSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `OrderSet`, returning all values as a drain iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75702,"byte_end":75770,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75775,"byte_end":75816,"line_start":376,"line_end":376,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76129,"byte_end":76138,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75990,"byte_end":76014,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76019,"byte_end":76022,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76027,"byte_end":76074,"line_start":387,"line_end":387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76079,"byte_end":76082,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76087,"byte_end":76117,"line_start":389,"line_end":389,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76402,"byte_end":76419,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<OrderSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76239,"byte_end":76277,"line_start":394,"line_end":394,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76282,"byte_end":76285,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76290,"byte_end":76337,"line_start":396,"line_end":396,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76342,"byte_end":76345,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76350,"byte_end":76390,"line_start":398,"line_end":398,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76540,"byte_end":76548,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76971,"byte_end":76975,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77425,"byte_end":77430,"line_start":450,"line_end":450,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79724,"byte_end":79735,"line_start":551,"line_end":551,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<OrderSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &OrderSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79644,"byte_end":79712,"line_start":550,"line_end":550,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80105,"byte_end":80114,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<OrderSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &OrderSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80023,"byte_end":80093,"line_start":561,"line_end":561,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80377,"byte_end":80388,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<OrderSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &OrderSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80295,"byte_end":80365,"line_start":568,"line_end":568,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":253},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80520,"byte_end":80530,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81405,"byte_end":81417,"line_start":617,"line_end":617,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82294,"byte_end":82313,"line_start":657,"line_end":657,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83145,"byte_end":83150,"line_start":694,"line_end":694,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":316}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7951,"byte_end":7959,"line_start":292,"line_end":292,"column_start":12,"column_end":20},"name":"OrderMap","qualname":"::OrderMap","value":"OrderMap {  }","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6735,"byte_end":6815,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6816,"byte_end":6851,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6852,"byte_end":6855,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6856,"byte_end":6933,"line_start":257,"line_end":257,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6934,"byte_end":6962,"line_start":258,"line_end":258,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6963,"byte_end":6966,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6967,"byte_end":6978,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6979,"byte_end":6982,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6983,"byte_end":7052,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7053,"byte_end":7127,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7128,"byte_end":7183,"line_start":264,"line_end":264,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7184,"byte_end":7187,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7188,"byte_end":7238,"line_start":266,"line_end":266,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7243,"byte_end":7256,"line_start":268,"line_end":268,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7257,"byte_end":7260,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7261,"byte_end":7336,"line_start":270,"line_end":270,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7337,"byte_end":7412,"line_start":271,"line_end":271,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7413,"byte_end":7492,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7493,"byte_end":7503,"line_start":273,"line_end":273,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7504,"byte_end":7507,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7508,"byte_end":7522,"line_start":275,"line_end":275,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7523,"byte_end":7526,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7527,"byte_end":7534,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/ use ordermap::OrderMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7535,"byte_end":7562,"line_start":278,"line_end":278,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7563,"byte_end":7566,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7567,"byte_end":7623,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/ let mut letters = OrderMap::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7624,"byte_end":7662,"line_start":281,"line_end":281,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7663,"byte_end":7714,"line_start":282,"line_end":282,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7715,"byte_end":7760,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7761,"byte_end":7766,"line_start":284,"line_end":284,"column_start":1,"column_end":6}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7767,"byte_end":7771,"line_start":285,"line_end":285,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7772,"byte_end":7805,"line_start":286,"line_end":286,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7806,"byte_end":7839,"line_start":287,"line_end":287,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7840,"byte_end":7873,"line_start":288,"line_end":288,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7874,"byte_end":7914,"line_start":289,"line_end":289,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":7915,"byte_end":7922,"line_start":290,"line_end":290,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10514,"byte_end":10517,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<OrderMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10460,"byte_end":10502,"line_start":385,"line_end":385,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10730,"byte_end":10743,"line_start":394,"line_end":394,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<OrderMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10572,"byte_end":10641,"line_start":390,"line_end":390,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10646,"byte_end":10675,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10680,"byte_end":10683,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10688,"byte_end":10718,"line_start":393,"line_end":393,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11027,"byte_end":11051,"line_start":405,"line_end":405,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<OrderMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10869,"byte_end":10938,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10943,"byte_end":10972,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10977,"byte_end":10980,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10985,"byte_end":11015,"line_start":404,"line_end":404,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11841,"byte_end":11844,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"len","qualname":"<OrderMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11734,"byte_end":11786,"line_start":427,"line_end":427,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11791,"byte_end":11794,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11799,"byte_end":11829,"line_start":429,"line_end":429,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11993,"byte_end":12001,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrderMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11889,"byte_end":11938,"line_start":432,"line_end":432,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11943,"byte_end":11946,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":11951,"byte_end":11981,"line_start":434,"line_end":434,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12094,"byte_end":12105,"line_start":438,"line_end":438,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<OrderMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12042,"byte_end":12082,"line_start":437,"line_end":437,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12295,"byte_end":12301,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"hasher","qualname":"<OrderMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S where S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12233,"byte_end":12283,"line_start":444,"line_end":444,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12982,"byte_end":12990,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"capacity","qualname":"<OrderMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":12940,"byte_end":12970,"line_start":469,"line_end":469,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14411,"byte_end":14419,"line_start":522,"line_end":522,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14368,"byte_end":14406,"line_start":521,"line_end":521,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":492},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14505,"byte_end":14511,"line_start":524,"line_end":524,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14453,"byte_end":14500,"line_start":523,"line_end":523,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":484},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14317,"byte_end":14322,"line_start":520,"line_end":520,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a, S: 'a = RandomState> {\n\n    /// Existing slot with equivalent key.\n    Occupied(OccupiedEntry),\n\n    /// Vacant slot (no equivalent key in the map).\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":492}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14149,"byte_end":14213,"line_start":515,"line_end":515,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14214,"byte_end":14229,"line_start":516,"line_end":516,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14230,"byte_end":14233,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ FIXME: Remove dependence on the `S` parameter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14234,"byte_end":14283,"line_start":518,"line_end":518,"column_start":1,"column_end":50}},{"value":"/ (to match HashMap).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14284,"byte_end":14307,"line_start":519,"line_end":519,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14647,"byte_end":14656,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14585,"byte_end":14635,"line_start":528,"line_end":528,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14909,"byte_end":14923,"line_start":537,"line_end":537,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14847,"byte_end":14897,"line_start":536,"line_end":536,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15156,"byte_end":15159,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15411,"byte_end":15416,"line_start":554,"line_end":554,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15326,"byte_end":15399,"line_start":553,"line_end":553,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15599,"byte_end":15612,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15799,"byte_end":15802,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15841,"byte_end":15844,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15921,"byte_end":15928,"line_start":574,"line_end":574,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16065,"byte_end":16070,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16011,"byte_end":16053,"line_start":578,"line_end":578,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16125,"byte_end":16133,"line_start":582,"line_end":582,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16221,"byte_end":16227,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16314,"byte_end":16320,"line_start":590,"line_end":590,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16461,"byte_end":16473,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry\n","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16375,"byte_end":16449,"line_start":594,"line_end":594,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16567,"byte_end":16578,"line_start":601,"line_end":601,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16766,"byte_end":16769,"line_start":609,"line_end":609,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16808,"byte_end":16816,"line_start":610,"line_end":610,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16920,"byte_end":16925,"line_start":612,"line_end":612,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16845,"byte_end":16908,"line_start":611,"line_end":611,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16972,"byte_end":16978,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19480,"byte_end":19485,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrderMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19352,"byte_end":19425,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19430,"byte_end":19433,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19438,"byte_end":19468,"line_start":680,"line_end":680,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19879,"byte_end":19886,"line_start":696,"line_end":696,"column_start":12,"column_end":19},"name":"reserve","qualname":"<OrderMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19759,"byte_end":19818,"line_start":693,"line_end":693,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19823,"byte_end":19826,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ FIXME Not implemented fully yet.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":19831,"byte_end":19867,"line_start":695,"line_end":695,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25827,"byte_end":25833,"line_start":843,"line_end":843,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrderMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25173,"byte_end":25212,"line_start":830,"line_end":830,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25217,"byte_end":25220,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25225,"byte_end":25296,"line_start":832,"line_end":832,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25301,"byte_end":25374,"line_start":833,"line_end":833,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25379,"byte_end":25445,"line_start":834,"line_end":834,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25450,"byte_end":25453,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25458,"byte_end":25528,"line_start":836,"line_end":836,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25533,"byte_end":25585,"line_start":837,"line_end":837,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25590,"byte_end":25593,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25598,"byte_end":25648,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25653,"byte_end":25656,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25661,"byte_end":25736,"line_start":841,"line_end":841,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the `index` of the corresponding key-value pair.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":25741,"byte_end":25815,"line_start":842,"line_end":842,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26867,"byte_end":26872,"line_start":870,"line_end":870,"column_start":12,"column_end":17},"name":"entry","qualname":"<OrderMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26684,"byte_end":26761,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26766,"byte_end":26792,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26797,"byte_end":26800,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":26805,"byte_end":26855,"line_start":869,"line_end":869,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27090,"byte_end":27094,"line_start":877,"line_end":877,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrderMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27004,"byte_end":27078,"line_start":876,"line_end":876,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27278,"byte_end":27286,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<OrderMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27192,"byte_end":27266,"line_start":883,"line_end":883,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27473,"byte_end":27477,"line_start":891,"line_end":891,"column_start":12,"column_end":16},"name":"keys","qualname":"<OrderMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27398,"byte_end":27461,"line_start":890,"line_end":890,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27652,"byte_end":27658,"line_start":898,"line_end":898,"column_start":12,"column_end":18},"name":"values","qualname":"<OrderMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27575,"byte_end":27640,"line_start":897,"line_end":897,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27871,"byte_end":27881,"line_start":906,"line_end":906,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<OrderMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27760,"byte_end":27836,"line_start":904,"line_end":904,"column_start":5,"column_end":81}},{"value":"/ in their order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27841,"byte_end":27859,"line_start":905,"line_end":905,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28125,"byte_end":28137,"line_start":915,"line_end":915,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<OrderMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if and equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if and equivalent to `key` exists in the map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":27997,"byte_end":28060,"line_start":912,"line_end":912,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28065,"byte_end":28068,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28073,"byte_end":28113,"line_start":914,"line_end":914,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28419,"byte_end":28422,"line_start":925,"line_end":925,"column_start":12,"column_end":15},"name":"get","qualname":"<OrderMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28262,"byte_end":28333,"line_start":921,"line_end":921,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28338,"byte_end":28354,"line_start":922,"line_end":922,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28359,"byte_end":28362,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28367,"byte_end":28407,"line_start":924,"line_end":924,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28606,"byte_end":28614,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"get_full","qualname":"<OrderMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28558,"byte_end":28594,"line_start":931,"line_end":931,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":28925,"byte_end":28932,"line_start":943,"line_end":943,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrderMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29087,"byte_end":29099,"line_start":949,"line_end":949,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<OrderMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29731,"byte_end":29737,"line_start":968,"line_end":968,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrderMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" NOTE: Same as .swap_remove","sig":null,"attributes":[{"value":"/ NOTE: Same as .swap_remove","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29636,"byte_end":29666,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29671,"byte_end":29674,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29679,"byte_end":29719,"line_start":967,"line_end":967,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30278,"byte_end":30289,"line_start":984,"line_end":984,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OrderMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29868,"byte_end":29928,"line_start":974,"line_end":974,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29933,"byte_end":29947,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29952,"byte_end":29955,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":29960,"byte_end":30032,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30037,"byte_end":30100,"line_start":978,"line_end":978,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30105,"byte_end":30159,"line_start":979,"line_end":979,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30164,"byte_end":30167,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30172,"byte_end":30213,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30218,"byte_end":30221,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30226,"byte_end":30266,"line_start":983,"line_end":983,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30807,"byte_end":30823,"line_start":998,"line_end":998,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<OrderMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30436,"byte_end":30503,"line_start":990,"line_end":990,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30508,"byte_end":30529,"line_start":991,"line_end":991,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30534,"byte_end":30537,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30542,"byte_end":30614,"line_start":993,"line_end":993,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30619,"byte_end":30682,"line_start":994,"line_end":994,"column_start":5,"column_end":68}},{"value":"/ the postion of what used to be the last element!**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30687,"byte_end":30741,"line_start":995,"line_end":995,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30746,"byte_end":30749,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":30754,"byte_end":30795,"line_start":997,"line_end":997,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31239,"byte_end":31242,"line_start":1012,"line_end":1012,"column_start":12,"column_end":15},"name":"pop","qualname":"<OrderMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31140,"byte_end":31174,"line_start":1009,"line_end":1009,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31179,"byte_end":31182,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31187,"byte_end":31227,"line_start":1011,"line_end":1011,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31585,"byte_end":31591,"line_start":1023,"line_end":1023,"column_start":12,"column_end":18},"name":"retain","qualname":"<OrderMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31309,"byte_end":31381,"line_start":1016,"line_end":1016,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31386,"byte_end":31420,"line_start":1017,"line_end":1017,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31425,"byte_end":31428,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31433,"byte_end":31505,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31510,"byte_end":31520,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31525,"byte_end":31528,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":31533,"byte_end":31573,"line_start":1022,"line_end":1022,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33179,"byte_end":33188,"line_start":1068,"line_end":1068,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<OrderMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33051,"byte_end":33124,"line_start":1065,"line_end":1065,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33129,"byte_end":33132,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ See `sort_by` for details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33137,"byte_end":33167,"line_start":1067,"line_end":1067,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33712,"byte_end":33719,"line_start":1082,"line_end":1082,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<OrderMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33293,"byte_end":33359,"line_start":1074,"line_end":1074,"column_start":5,"column_end":69}},{"value":"/ function `compare`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33364,"byte_end":33387,"line_start":1075,"line_end":1075,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33392,"byte_end":33395,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33400,"byte_end":33476,"line_start":1077,"line_end":1077,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33481,"byte_end":33544,"line_start":1078,"line_end":1078,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33549,"byte_end":33552,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33557,"byte_end":33628,"line_start":1080,"line_end":1080,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":33633,"byte_end":33700,"line_start":1081,"line_end":1081,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35169,"byte_end":35178,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<OrderMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by value iterator of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35003,"byte_end":35076,"line_start":1117,"line_end":1117,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35081,"byte_end":35121,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35126,"byte_end":35129,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35134,"byte_end":35157,"line_start":1120,"line_end":1120,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35533,"byte_end":35538,"line_start":1130,"line_end":1130,"column_start":12,"column_end":17},"name":"drain","qualname":"<OrderMap<K, V, S>>::drain","value":"pub fn drain(&mut Self, RangeFull) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `OrderMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[{"value":"/ Clears the `OrderMap`, returning all key-value pairs as a drain iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35398,"byte_end":35475,"line_start":1128,"line_end":1128,"column_start":5,"column_end":82}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35480,"byte_end":35521,"line_start":1129,"line_end":1129,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35882,"byte_end":35891,"line_start":1145,"line_end":1145,"column_start":12,"column_end":21},"name":"get_index","qualname":"<OrderMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35734,"byte_end":35767,"line_start":1140,"line_end":1140,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35772,"byte_end":35775,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35780,"byte_end":35827,"line_start":1142,"line_end":1142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35832,"byte_end":35835,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35840,"byte_end":35870,"line_start":1144,"line_end":1144,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36160,"byte_end":36173,"line_start":1154,"line_end":1154,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<OrderMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36012,"byte_end":36045,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36050,"byte_end":36053,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36058,"byte_end":36105,"line_start":1151,"line_end":1151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36110,"byte_end":36113,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36118,"byte_end":36148,"line_start":1153,"line_end":1153,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36481,"byte_end":36498,"line_start":1163,"line_end":1163,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<OrderMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36318,"byte_end":36356,"line_start":1158,"line_end":1158,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36361,"byte_end":36364,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36369,"byte_end":36416,"line_start":1160,"line_end":1160,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36421,"byte_end":36424,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":36429,"byte_end":36469,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43023,"byte_end":43027,"line_start":1342,"line_end":1342,"column_start":12,"column_end":16},"name":"Keys","qualname":"::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43494,"byte_end":43500,"line_start":1364,"line_end":1364,"column_start":12,"column_end":18},"name":"Values","qualname":"::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":674}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43978,"byte_end":43987,"line_start":1386,"line_end":1386,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44489,"byte_end":44493,"line_start":1408,"line_end":1408,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44986,"byte_end":44993,"line_start":1430,"line_end":1430,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45510,"byte_end":45518,"line_start":1452,"line_end":1452,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46001,"byte_end":46006,"line_start":1474,"line_end":1474,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":776}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61589,"byte_end":61590,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63419,"byte_end":63427,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65969,"byte_end":65977,"line_start":60,"line_end":60,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66392,"byte_end":66400,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66791,"byte_end":66799,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67940,"byte_end":67948,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75969,"byte_end":75977,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76614,"byte_end":76622,"line_start":409,"line_end":409,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76725,"byte_end":76733,"line_start":415,"line_end":415,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76883,"byte_end":76891,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77055,"byte_end":77059,"line_start":432,"line_end":432,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77175,"byte_end":77179,"line_start":438,"line_end":438,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77338,"byte_end":77342,"line_start":444,"line_end":444,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77509,"byte_end":77514,"line_start":454,"line_end":454,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77627,"byte_end":77632,"line_start":460,"line_end":460,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77962,"byte_end":77970,"line_start":476,"line_end":476,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78239,"byte_end":78247,"line_start":490,"line_end":490,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78525,"byte_end":78533,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78788,"byte_end":78796,"line_start":510,"line_end":510,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79044,"byte_end":79052,"line_start":521,"line_end":521,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79261,"byte_end":79269,"line_start":530,"line_end":530,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79494,"byte_end":79502,"line_start":540,"line_end":540,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79574,"byte_end":79582,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80636,"byte_end":80646,"line_start":582,"line_end":582,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81089,"byte_end":81099,"line_start":602,"line_end":602,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81523,"byte_end":81535,"line_start":622,"line_end":622,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81977,"byte_end":81989,"line_start":642,"line_end":642,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82442,"byte_end":82461,"line_start":661,"line_end":661,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82927,"byte_end":82946,"line_start":683,"line_end":683,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83254,"byte_end":83259,"line_start":698,"line_end":698,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83687,"byte_end":83692,"line_start":719,"line_end":719,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1139,"byte_end":1148,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1228,"byte_end":1237,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1313,"byte_end":1322,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1525,"byte_end":1534,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1851,"byte_end":1860,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1888,"byte_end":1897,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1982,"byte_end":1991,"line_start":86,"line_end":86,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2219,"byte_end":2228,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2487,"byte_end":2496,"line_start":105,"line_end":105,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":130,"line_end":130,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3478,"byte_end":3481,"line_start":135,"line_end":135,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3705,"byte_end":3708,"line_start":144,"line_end":144,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6258,"byte_end":6272,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":8816,"byte_end":8824,"line_start":328,"line_end":328,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10439,"byte_end":10447,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10845,"byte_end":10853,"line_start":399,"line_end":399,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14560,"byte_end":14565,"line_start":527,"line_end":527,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15759,"byte_end":15772,"line_start":569,"line_end":569,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16728,"byte_end":16739,"line_start":608,"line_end":608,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":17577,"byte_end":17585,"line_start":632,"line_end":632,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35710,"byte_end":35718,"line_start":1139,"line_end":1139,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":37066,"byte_end":37074,"line_start":1180,"line_end":1180,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43118,"byte_end":43122,"line_start":1346,"line_end":1346,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43244,"byte_end":43248,"line_start":1352,"line_end":1352,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43404,"byte_end":43408,"line_start":1358,"line_end":1358,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43591,"byte_end":43597,"line_start":1368,"line_end":1368,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43717,"byte_end":43723,"line_start":1374,"line_end":1374,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43886,"byte_end":43892,"line_start":1380,"line_end":1380,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44081,"byte_end":44090,"line_start":1390,"line_end":1390,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44218,"byte_end":44227,"line_start":1396,"line_end":1396,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44394,"byte_end":44403,"line_start":1402,"line_end":1402,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44584,"byte_end":44588,"line_start":1412,"line_end":1412,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44723,"byte_end":44727,"line_start":1418,"line_end":1418,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44896,"byte_end":44900,"line_start":1424,"line_end":1424,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45087,"byte_end":45094,"line_start":1434,"line_end":1434,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45237,"byte_end":45244,"line_start":1440,"line_end":1440,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45417,"byte_end":45424,"line_start":1446,"line_end":1446,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45591,"byte_end":45599,"line_start":1456,"line_end":1456,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45732,"byte_end":45740,"line_start":1462,"line_end":1462,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45911,"byte_end":45919,"line_start":1468,"line_end":1468,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46115,"byte_end":46120,"line_start":1478,"line_end":1478,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46260,"byte_end":46265,"line_start":1484,"line_end":1484,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46899,"byte_end":46907,"line_start":1511,"line_end":1511,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47234,"byte_end":47242,"line_start":1526,"line_end":1526,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47825,"byte_end":47833,"line_start":1547,"line_end":1547,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48219,"byte_end":48227,"line_start":1562,"line_end":1562,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48815,"byte_end":48823,"line_start":1580,"line_end":1580,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49537,"byte_end":49545,"line_start":1598,"line_end":1598,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49951,"byte_end":49959,"line_start":1611,"line_end":1611,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50193,"byte_end":50201,"line_start":1620,"line_end":1620,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50570,"byte_end":50578,"line_start":1635,"line_end":1635,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":375,"byte_end":378,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":54}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/equivalent.rs","byte_start":61589,"byte_end":61590,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":0,"index":21}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/mutable_keys.rs","byte_start":63419,"byte_end":63427,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":922},"to":{"krate":0,"index":35}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":65969,"byte_end":65977,"line_start":60,"line_end":60,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66392,"byte_end":66400,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":66791,"byte_end":66799,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":67940,"byte_end":67948,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":75969,"byte_end":75977,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76614,"byte_end":76622,"line_start":409,"line_end":409,"column_start":22,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76725,"byte_end":76733,"line_start":415,"line_end":415,"column_start":33,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":76883,"byte_end":76891,"line_start":421,"line_end":421,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77055,"byte_end":77059,"line_start":432,"line_end":432,"column_start":26,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77175,"byte_end":77179,"line_start":438,"line_end":438,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77338,"byte_end":77342,"line_start":444,"line_end":444,"column_start":35,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77509,"byte_end":77514,"line_start":454,"line_end":454,"column_start":26,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77627,"byte_end":77632,"line_start":460,"line_end":460,"column_start":37,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":77962,"byte_end":77970,"line_start":476,"line_end":476,"column_start":29,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78239,"byte_end":78247,"line_start":490,"line_end":490,"column_start":32,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78525,"byte_end":78533,"line_start":500,"line_end":500,"column_start":26,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":78788,"byte_end":78796,"line_start":510,"line_end":510,"column_start":34,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79044,"byte_end":79052,"line_start":521,"line_end":521,"column_start":24,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79261,"byte_end":79269,"line_start":530,"line_end":530,"column_start":48,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79494,"byte_end":79502,"line_start":540,"line_end":540,"column_start":19,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":79574,"byte_end":79582,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":80636,"byte_end":80646,"line_start":582,"line_end":582,"column_start":29,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81089,"byte_end":81099,"line_start":602,"line_end":602,"column_start":40,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81523,"byte_end":81535,"line_start":622,"line_end":622,"column_start":29,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":81977,"byte_end":81989,"line_start":642,"line_end":642,"column_start":40,"column_end":52},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82442,"byte_end":82461,"line_start":661,"line_end":661,"column_start":34,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":82927,"byte_end":82946,"line_start":683,"line_end":683,"column_start":45,"column_end":64},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":289},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83254,"byte_end":83259,"line_start":698,"line_end":698,"column_start":29,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/set.rs","byte_start":83687,"byte_end":83692,"line_start":719,"line_end":719,"column_start":40,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1139,"byte_end":1148,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1228,"byte_end":1237,"line_start":53,"line_end":53,"column_start":16,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1313,"byte_end":1322,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1525,"byte_end":1534,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1851,"byte_end":1860,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1888,"byte_end":1897,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":1982,"byte_end":1991,"line_start":86,"line_end":86,"column_start":24,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2219,"byte_end":2228,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":911},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":2487,"byte_end":2496,"line_start":105,"line_end":105,"column_start":34,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":130,"line_end":130,"column_start":16,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3478,"byte_end":3481,"line_start":135,"line_end":135,"column_start":21,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":3705,"byte_end":3708,"line_start":144,"line_end":144,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":6258,"byte_end":6272,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":8816,"byte_end":8824,"line_start":328,"line_end":328,"column_start":30,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10439,"byte_end":10447,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":10845,"byte_end":10853,"line_start":399,"line_end":399,"column_start":15,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":14560,"byte_end":14565,"line_start":527,"line_end":527,"column_start":19,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":15759,"byte_end":15772,"line_start":569,"line_end":569,"column_start":19,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":16728,"byte_end":16739,"line_start":608,"line_end":608,"column_start":19,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":17577,"byte_end":17585,"line_start":632,"line_end":632,"column_start":15,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":35710,"byte_end":35718,"line_start":1139,"line_end":1139,"column_start":15,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":37066,"byte_end":37074,"line_start":1180,"line_end":1180,"column_start":15,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43118,"byte_end":43122,"line_start":1346,"line_end":1346,"column_start":29,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43244,"byte_end":43248,"line_start":1352,"line_end":1352,"column_start":40,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43404,"byte_end":43408,"line_start":1358,"line_end":1358,"column_start":38,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43591,"byte_end":43597,"line_start":1368,"line_end":1368,"column_start":29,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43717,"byte_end":43723,"line_start":1374,"line_end":1374,"column_start":40,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":43886,"byte_end":43892,"line_start":1380,"line_end":1380,"column_start":38,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44081,"byte_end":44090,"line_start":1390,"line_end":1390,"column_start":29,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44218,"byte_end":44227,"line_start":1396,"line_end":1396,"column_start":40,"column_end":49},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44394,"byte_end":44403,"line_start":1402,"line_end":1402,"column_start":38,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44584,"byte_end":44588,"line_start":1412,"line_end":1412,"column_start":29,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44723,"byte_end":44727,"line_start":1418,"line_end":1418,"column_start":40,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":44896,"byte_end":44900,"line_start":1424,"line_end":1424,"column_start":38,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45087,"byte_end":45094,"line_start":1434,"line_end":1434,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45237,"byte_end":45244,"line_start":1440,"line_end":1440,"column_start":40,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45417,"byte_end":45424,"line_start":1446,"line_end":1446,"column_start":38,"column_end":45},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45591,"byte_end":45599,"line_start":1456,"line_end":1456,"column_start":25,"column_end":33},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45732,"byte_end":45740,"line_start":1462,"line_end":1462,"column_start":40,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":45911,"byte_end":45919,"line_start":1468,"line_end":1468,"column_start":34,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46115,"byte_end":46120,"line_start":1478,"line_end":1478,"column_start":29,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46260,"byte_end":46265,"line_start":1484,"line_end":1484,"column_start":40,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":46899,"byte_end":46907,"line_start":1511,"line_end":1511,"column_start":32,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47234,"byte_end":47242,"line_start":1526,"line_end":1526,"column_start":47,"column_end":55},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":47825,"byte_end":47833,"line_start":1547,"line_end":1547,"column_start":50,"column_end":58},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48219,"byte_end":48227,"line_start":1562,"line_end":1562,"column_start":40,"column_end":48},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":48815,"byte_end":48823,"line_start":1580,"line_end":1580,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49537,"byte_end":49545,"line_start":1598,"line_end":1598,"column_start":46,"column_end":54},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":49951,"byte_end":49959,"line_start":1611,"line_end":1611,"column_start":27,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50193,"byte_end":50201,"line_start":1620,"line_end":1620,"column_start":60,"column_end":68},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/ordermap-0.3.5/src/lib.rs","byte_start":50570,"byte_end":50578,"line_start":1635,"line_end":1635,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1775}}]}