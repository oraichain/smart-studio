{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","superslice","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1a3dcadb0e16e90b","-C","extra-filename=-1a3dcadb0e16e90b","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libsuperslice-1a3dcadb0e16e90b.rmeta"},"prelude":{"crate_id":{"name":"superslice","disambiguator":[4752532981868800401,11527314747389540654]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":595,"byte_end":19293,"line_start":15,"line_end":615,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":595,"byte_end":19293,"line_start":15,"line_end":615,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":80},{"krate":0,"index":6},{"krate":0,"index":82},{"krate":0,"index":7},{"krate":0,"index":37},{"krate":0,"index":74},{"krate":0,"index":76}],"decl_id":null,"docs":" This crate provides extensions for [`slice`]s.\n \n # Examples\n \n ```\n use superslice::*;\n \n let b = [1, 3];\n \n assert_eq!(b.lower_bound(&1), 0);\n \n assert_eq!(b.upper_bound(&1), 1);\n \n assert_eq!(b.equal_range(&3), 1..2);\n ```\n \n [`slice`]: https://doc.rust-lang.org/stable/std/primitive.slice.html\n","sig":null,"attributes":[{"value":"/ This crate provides extensions for [`slice`]s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":595,"byte_end":645,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":646,"byte_end":650,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":651,"byte_end":665,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":666,"byte_end":670,"line_start":18,"line_end":18,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":671,"byte_end":678,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":679,"byte_end":701,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":702,"byte_end":706,"line_start":21,"line_end":21,"column_start":1,"column_end":5}},{"value":"/ let b = [1, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":707,"byte_end":726,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":727,"byte_end":731,"line_start":23,"line_end":23,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(b.lower_bound(&1), 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":732,"byte_end":769,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":770,"byte_end":774,"line_start":25,"line_end":25,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(b.upper_bound(&1), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":775,"byte_end":812,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":813,"byte_end":817,"line_start":27,"line_end":27,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(b.equal_range(&3), 1..2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":818,"byte_end":858,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":859,"byte_end":866,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":867,"byte_end":871,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"/ [`slice`]: https://doc.rust-lang.org/stable/std/primitive.slice.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":872,"byte_end":944,"line_start":31,"line_end":31,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1143,"byte_end":1146,"line_start":37,"line_end":37,"column_start":11,"column_end":14},"name":"Ext","qualname":"::Ext","value":"Ext","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" Extends [`slice`] with fast operations on ordered slices.\n \n [`slice`]: https://doc.rust-lang.org/stable/std/primitive.slice.html\n","sig":null,"attributes":[{"value":"/ Extends [`slice`] with fast operations on ordered slices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":993,"byte_end":1054,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1055,"byte_end":1059,"line_start":35,"line_end":35,"column_start":1,"column_end":5}},{"value":"/ [`slice`]: https://doc.rust-lang.org/stable/std/primitive.slice.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1060,"byte_end":1132,"line_start":36,"line_end":36,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1158,"byte_end":1162,"line_start":38,"line_end":38,"column_start":10,"column_end":14},"name":"Item","qualname":"::Ext::Item","value":"type Item;","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1842,"byte_end":1853,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"lower_bound","qualname":"::Ext::lower_bound","value":"pub fn lower_bound(&Self, &Self::Item) -> usize where Self::Item: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n that is _not less_ than `x`.\n \n The slice MUST be ordered by the order defined by its elements.\n \n # Example:\n \n ```\n # use superslice::*;\n let a = [10, 11, 13, 13, 15];\n assert_eq!(a.lower_bound(&9), 0);\n assert_eq!(a.lower_bound(&10), 0);\n assert_eq!(a.lower_bound(&11), 1);\n assert_eq!(a.lower_bound(&12), 2);\n assert_eq!(a.lower_bound(&13), 2);\n assert_eq!(a.lower_bound(&14), 4);\n assert_eq!(a.lower_bound(&15), 4);\n assert_eq!(a.lower_bound(&16), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1169,"byte_end":1245,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ that is _not less_ than `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1250,"byte_end":1282,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1287,"byte_end":1291,"line_start":42,"line_end":42,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by its elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1296,"byte_end":1363,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1368,"byte_end":1372,"line_start":44,"line_end":44,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1377,"byte_end":1391,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1396,"byte_end":1400,"line_start":46,"line_end":46,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1405,"byte_end":1412,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1417,"byte_end":1441,"line_start":48,"line_end":48,"column_start":5,"column_end":29}},{"value":"/ let a = [10, 11, 13, 13, 15];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1446,"byte_end":1479,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.lower_bound(&9), 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1484,"byte_end":1521,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.lower_bound(&10), 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1526,"byte_end":1564,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&11), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1569,"byte_end":1607,"line_start":52,"line_end":52,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&12), 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1612,"byte_end":1650,"line_start":53,"line_end":53,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&13), 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1655,"byte_end":1693,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&14), 4);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1698,"byte_end":1736,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&15), 4);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1741,"byte_end":1779,"line_start":56,"line_end":56,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.lower_bound(&16), 5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1784,"byte_end":1822,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1827,"byte_end":1834,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2476,"byte_end":2490,"line_start":77,"line_end":77,"column_start":8,"column_end":22},"name":"lower_bound_by","qualname":"::Ext::lower_bound_by","value":"pub fn lower_bound_by<'a, F>(&'a Self, F) -> usize where\nF: FnMut(&'a Self::Item) -> Ordering","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n for which `f(self[i]) != Less`.\n \n The slice MUST be ordered by the order defined by the comparator\n function. The comparator function should take an element and return\n `Ordering` that is consistent with the ordering of the slice.\n \n # Example:\n \n ```\n # use superslice::*;\n let b = [1, 2, 3, 6, 9, 9];\n assert_eq!(b.lower_bound(&3), b.lower_bound_by(|x| x.cmp(&3)));\n ```\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":1926,"byte_end":2002,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ for which `f(self[i]) != Less`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2007,"byte_end":2042,"line_start":64,"line_end":64,"column_start":5,"column_end":40}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2047,"byte_end":2051,"line_start":65,"line_end":65,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by the comparator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2056,"byte_end":2124,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ function. The comparator function should take an element and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2129,"byte_end":2200,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ `Ordering` that is consistent with the ordering of the slice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2205,"byte_end":2270,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2275,"byte_end":2279,"line_start":69,"line_end":69,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2284,"byte_end":2298,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2303,"byte_end":2307,"line_start":71,"line_end":71,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2312,"byte_end":2319,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2324,"byte_end":2348,"line_start":73,"line_end":73,"column_start":5,"column_end":29}},{"value":"/ let b = [1, 2, 3, 6, 9, 9];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2353,"byte_end":2384,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b.lower_bound(&3), b.lower_bound_by(|x| x.cmp(&3)));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2389,"byte_end":2456,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2461,"byte_end":2468,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3008,"byte_end":3026,"line_start":94,"line_end":94,"column_start":8,"column_end":26},"name":"lower_bound_by_key","qualname":"::Ext::lower_bound_by_key","value":"pub fn lower_bound_by_key<'a, K, F>(&'a Self, &K, F) -> usize where\nF: FnMut(&'a Self::Item) -> K, K: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n for which `f(self[i]) >= k`.\n \n The slice MUST be ordered by the order defined by the keys of its\n elements.\n \n # Example:\n \n ```\n # use superslice::*;\n let b = [1, 2, 3, 6, 9, 9];\n assert_eq!(b.lower_bound(&3), b.lower_bound_by_key(&6, |x| x * 2));\n ```\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2584,"byte_end":2660,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ for which `f(self[i]) >= k`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2665,"byte_end":2697,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2702,"byte_end":2706,"line_start":83,"line_end":83,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by the keys of its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2711,"byte_end":2780,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2785,"byte_end":2798,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2803,"byte_end":2807,"line_start":86,"line_end":86,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2812,"byte_end":2826,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2831,"byte_end":2835,"line_start":88,"line_end":88,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2840,"byte_end":2847,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2852,"byte_end":2876,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ let b = [1, 2, 3, 6, 9, 9];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2881,"byte_end":2912,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b.lower_bound(&3), b.lower_bound_by_key(&6, |x| x * 2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2917,"byte_end":2988,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":2993,"byte_end":3000,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3811,"byte_end":3822,"line_start":118,"line_end":118,"column_start":8,"column_end":19},"name":"upper_bound","qualname":"::Ext::upper_bound","value":"pub fn upper_bound(&Self, &Self::Item) -> usize where Self::Item: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n that is _greater_ than `x`.\n \n The slice MUST be ordered by the order defined by its elements.\n \n # Example:\n \n ```\n # use superslice::*;\n let a = [10, 11, 13, 13, 15];\n assert_eq!(a.upper_bound(&9), 0);\n assert_eq!(a.upper_bound(&10), 1);\n assert_eq!(a.upper_bound(&11), 2);\n assert_eq!(a.upper_bound(&12), 2);\n assert_eq!(a.upper_bound(&13), 4);\n assert_eq!(a.upper_bound(&14), 4);\n assert_eq!(a.upper_bound(&15), 5);\n assert_eq!(a.upper_bound(&16), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3139,"byte_end":3215,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ that is _greater_ than `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3220,"byte_end":3251,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3256,"byte_end":3260,"line_start":101,"line_end":101,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by its elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3265,"byte_end":3332,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3337,"byte_end":3341,"line_start":103,"line_end":103,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3346,"byte_end":3360,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3365,"byte_end":3369,"line_start":105,"line_end":105,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3374,"byte_end":3381,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3386,"byte_end":3410,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/ let a = [10, 11, 13, 13, 15];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3415,"byte_end":3448,"line_start":108,"line_end":108,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.upper_bound(&9), 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3453,"byte_end":3490,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.upper_bound(&10), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3495,"byte_end":3533,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&11), 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3538,"byte_end":3576,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&12), 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3581,"byte_end":3619,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&13), 4);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3624,"byte_end":3662,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&14), 4);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3667,"byte_end":3705,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&15), 5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3710,"byte_end":3748,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a.upper_bound(&16), 5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3753,"byte_end":3791,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3796,"byte_end":3803,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4448,"byte_end":4462,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"upper_bound_by","qualname":"::Ext::upper_bound_by","value":"pub fn upper_bound_by<'a, F>(&'a Self, F) -> usize where\nF: FnMut(&'a Self::Item) -> Ordering","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n for which `f(self[i]) == Greater`.\n \n The slice MUST be ordered by the order defined by the comparator\n function. The comparator function should take an element and return\n `Ordering` that is consistent with the ordering of the slice.\n \n # Example:\n \n ```\n # use superslice::*;\n let b = [1, 2, 3, 6, 9, 9];\n assert_eq!(b.upper_bound(&3), b.upper_bound_by(|x| x.cmp(&3)));\n ```\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3895,"byte_end":3971,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ for which `f(self[i]) == Greater`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":3976,"byte_end":4014,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4019,"byte_end":4023,"line_start":124,"line_end":124,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by the comparator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4028,"byte_end":4096,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ function. The comparator function should take an element and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4101,"byte_end":4172,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ `Ordering` that is consistent with the ordering of the slice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4177,"byte_end":4242,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4247,"byte_end":4251,"line_start":128,"line_end":128,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4256,"byte_end":4270,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4275,"byte_end":4279,"line_start":130,"line_end":130,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4284,"byte_end":4291,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4296,"byte_end":4320,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"/ let b = [1, 2, 3, 6, 9, 9];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4325,"byte_end":4356,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b.upper_bound(&3), b.upper_bound_by(|x| x.cmp(&3)));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4361,"byte_end":4428,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4433,"byte_end":4440,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4967,"byte_end":4985,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"upper_bound_by_key","qualname":"::Ext::upper_bound_by_key","value":"pub fn upper_bound_by_key<'a, K, F>(&'a Self, &K, F) -> usize where\nF: FnMut(&'a Self::Item) -> K, K: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the index `i` pointing to the first element in the ordered slice\n for which `f(self[i]) > k`.\n \n The slice MUST be ordered by the order defined by the keys of its\n elements.\n \n # Example:\n \n ```\n # use superslice::*;\n let b = [1, 2, 3, 6, 9, 9];\n assert_eq!(b.lower_bound(&3), b.lower_bound_by_key(&6, |x| x * 2));\n","sig":null,"attributes":[{"value":"/ Returns the index `i` pointing to the first element in the ordered slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4556,"byte_end":4632,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ for which `f(self[i]) > k`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4637,"byte_end":4668,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4673,"byte_end":4677,"line_start":142,"line_end":142,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by the keys of its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4682,"byte_end":4751,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4756,"byte_end":4769,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4774,"byte_end":4778,"line_start":145,"line_end":145,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4783,"byte_end":4797,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4802,"byte_end":4806,"line_start":147,"line_end":147,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4811,"byte_end":4818,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4823,"byte_end":4847,"line_start":149,"line_end":149,"column_start":5,"column_end":29}},{"value":"/ let b = [1, 2, 3, 6, 9, 9];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4852,"byte_end":4883,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(b.lower_bound(&3), b.lower_bound_by_key(&6, |x| x * 2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":4888,"byte_end":4959,"line_start":151,"line_end":151,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5610,"byte_end":5621,"line_start":172,"line_end":172,"column_start":8,"column_end":19},"name":"equal_range","qualname":"::Ext::equal_range","value":"pub fn equal_range(&Self, &Self::Item) -> std::ops::Range<usize> where\nSelf::Item: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the [`Range`] `a..b` such that all elements in `self[a..b]` are\n _equal_ to `x`.\n \n The slice MUST be ordered by the order defined by its elements.\n \n # Example:\n \n ```\n # use superslice::*;\n let b = [10, 11, 13, 13, 15];\n for i in 9..17 {\n     assert_eq!(b.equal_range(&i), (b.lower_bound(&i)..b.upper_bound(&i)));\n }\n ```\n [`Range`]: https://doc.rust-lang.org/stable/std/ops/struct.Range.html\n","sig":null,"attributes":[{"value":"/ Returns the [`Range`] `a..b` such that all elements in `self[a..b]` are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5098,"byte_end":5173,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ _equal_ to `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5178,"byte_end":5197,"line_start":158,"line_end":158,"column_start":5,"column_end":24}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5202,"byte_end":5206,"line_start":159,"line_end":159,"column_start":5,"column_end":9}},{"value":"/ The slice MUST be ordered by the order defined by its elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5211,"byte_end":5278,"line_start":160,"line_end":160,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5283,"byte_end":5287,"line_start":161,"line_end":161,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5292,"byte_end":5306,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5311,"byte_end":5315,"line_start":163,"line_end":163,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5320,"byte_end":5327,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5332,"byte_end":5356,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/ let b = [10, 11, 13, 13, 15];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5361,"byte_end":5394,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ for i in 9..17 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5399,"byte_end":5419,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     assert_eq!(b.equal_range(&i), (b.lower_bound(&i)..b.upper_bound(&i)));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5424,"byte_end":5502,"line_start":168,"line_end":168,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5507,"byte_end":5512,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5517,"byte_end":5524,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ [`Range`]: https://doc.rust-lang.org/stable/std/ops/struct.Range.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5529,"byte_end":5602,"line_start":171,"line_end":171,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6372,"byte_end":6386,"line_start":193,"line_end":193,"column_start":8,"column_end":22},"name":"equal_range_by","qualname":"::Ext::equal_range_by","value":"pub fn equal_range_by<'a, F>(&'a Self, F) -> std::ops::Range<usize> where\nF: FnMut(&'a Self::Item) -> Ordering","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the [`Range`] `a..b` such that for all elements `e` in `self[a..b]` \n `f(e) == Equal`.","sig":null,"attributes":[{"value":"/ Returns the [`Range`] `a..b` such that for all elements `e` in `self[a..b]` ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5715,"byte_end":5795,"line_start":176,"line_end":176,"column_start":5,"column_end":85}},{"value":"/ `f(e) == Equal`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5800,"byte_end":5820,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5825,"byte_end":5828,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The slice MUST be ordered by the order defined by the comparator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5833,"byte_end":5901,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ function. The comparator function should take an element and return","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5906,"byte_end":5977,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ `Ordering` that is consistent with the ordering of the slice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":5982,"byte_end":6047,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6052,"byte_end":6056,"line_start":182,"line_end":182,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6061,"byte_end":6075,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6080,"byte_end":6084,"line_start":184,"line_end":184,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6089,"byte_end":6096,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6101,"byte_end":6125,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ let b = [10, 11, 13, 13, 15];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6130,"byte_end":6163,"line_start":187,"line_end":187,"column_start":5,"column_end":38}},{"value":"/ for i in 9..17 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6168,"byte_end":6188,"line_start":188,"line_end":188,"column_start":5,"column_end":25}},{"value":"/     assert_eq!(b.equal_range(&i), b.equal_range_by(|x| x.cmp(&i)));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6193,"byte_end":6264,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6269,"byte_end":6274,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6279,"byte_end":6286,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ [`Range`]: https://doc.rust-lang.org/stable/std/ops/struct.Range.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6291,"byte_end":6364,"line_start":192,"line_end":192,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7060,"byte_end":7078,"line_start":214,"line_end":214,"column_start":8,"column_end":26},"name":"equal_range_by_key","qualname":"::Ext::equal_range_by_key","value":"pub fn equal_range_by_key<'a, K, F>(&'a Self, &K, F) -> std::ops::Range<usize>\nwhere F: FnMut(&'a Self::Item) -> K, K: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Returns the [`Range`] `a..b` such that for all elements `e` in `self[a..b]` \n `f(e) == k`.","sig":null,"attributes":[{"value":"/ Returns the [`Range`] `a..b` such that for all elements `e` in `self[a..b]` ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6501,"byte_end":6581,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ `f(e) == k`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6586,"byte_end":6602,"line_start":198,"line_end":198,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6607,"byte_end":6610,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The slice MUST be ordered by the order defined by the keys of its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6615,"byte_end":6684,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6689,"byte_end":6702,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6707,"byte_end":6711,"line_start":202,"line_end":202,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6716,"byte_end":6730,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6735,"byte_end":6739,"line_start":204,"line_end":204,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6744,"byte_end":6751,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6756,"byte_end":6780,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/ let b = [10, 11, 13, 13, 15];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6785,"byte_end":6818,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/ for i in 9..17 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6823,"byte_end":6843,"line_start":208,"line_end":208,"column_start":5,"column_end":25}},{"value":"/     let i2 = i * 2;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6848,"byte_end":6871,"line_start":209,"line_end":209,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(b.equal_range(&i), b.equal_range_by_key(&i2, |x| x * 2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6876,"byte_end":6952,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6957,"byte_end":6962,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6967,"byte_end":6974,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ [`Range`]: https://doc.rust-lang.org/stable/std/ops/struct.Range.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":6979,"byte_end":7052,"line_start":213,"line_end":213,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8085,"byte_end":8101,"line_start":240,"line_end":240,"column_start":8,"column_end":24},"name":"next_permutation","qualname":"::Ext::next_permutation","value":"pub fn next_permutation(&mut Self) -> bool where Self::Item: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Transforms the slice into the next permutation from the set of all\n permutations that are lexicographically ordered with respect to the\n natural order of T. Returns true if such permutation exists, otherwise\n transforms the range into the first permutation and returns false.\n \n # Example:\n \n ```\n # use superslice::*;\n let mut b = [2, 1, 3];\n let mut v = Vec::new();\n for _ in 0..6 {\n     let x = b.next_permutation();\n     v.push((x, b.to_vec()));\n }\n assert_eq!(v, &[(true, [2, 3, 1].to_vec()),\n                 (true, [3, 1, 2].to_vec()),\n                 (true, [3, 2, 1].to_vec()),\n                 (false, [1, 2, 3].to_vec()),\n                 (true, [1, 3, 2].to_vec()),\n                 (true, [2, 1, 3].to_vec())]);\n","sig":null,"attributes":[{"value":"/ Transforms the slice into the next permutation from the set of all","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7208,"byte_end":7278,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ permutations that are lexicographically ordered with respect to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7283,"byte_end":7354,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ natural order of T. Returns true if such permutation exists, otherwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7359,"byte_end":7433,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ transforms the range into the first permutation and returns false.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7438,"byte_end":7508,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7513,"byte_end":7517,"line_start":223,"line_end":223,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7522,"byte_end":7536,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7541,"byte_end":7545,"line_start":225,"line_end":225,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7550,"byte_end":7557,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7562,"byte_end":7586,"line_start":227,"line_end":227,"column_start":5,"column_end":29}},{"value":"/ let mut b = [2, 1, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7591,"byte_end":7617,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7622,"byte_end":7649,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/ for _ in 0..6 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7654,"byte_end":7673,"line_start":230,"line_end":230,"column_start":5,"column_end":24}},{"value":"/     let x = b.next_permutation();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7678,"byte_end":7715,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/     v.push((x, b.to_vec()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7720,"byte_end":7752,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7757,"byte_end":7762,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, &[(true, [2, 3, 1].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7767,"byte_end":7814,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/                 (true, [3, 1, 2].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7819,"byte_end":7866,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/                 (true, [3, 2, 1].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7871,"byte_end":7918,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/                 (false, [1, 2, 3].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7923,"byte_end":7971,"line_start":237,"line_end":237,"column_start":5,"column_end":53}},{"value":"/                 (true, [1, 3, 2].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":7976,"byte_end":8023,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/                 (true, [2, 1, 3].to_vec())]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8028,"byte_end":8077,"line_start":239,"line_end":239,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9041,"byte_end":9057,"line_start":265,"line_end":265,"column_start":8,"column_end":24},"name":"prev_permutation","qualname":"::Ext::prev_permutation","value":"pub fn prev_permutation(&mut Self) -> bool where Self::Item: Ord","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Transforms the slice into the previous permutation from the set of all\n permutations that are lexicographically ordered with respect to the\n natural order of T. Returns true if such permutation exists, otherwise\n transforms the range into the last permutation and returns false.\n \n # Example:\n \n ```\n # use superslice::*;\n let mut b = [2, 1, 3];\n let mut v = Vec::new();\n for _ in 0..6 {\n     let x = b.prev_permutation();\n     v.push((x, b.to_vec()));\n }\n assert_eq!(v, &[(true, [1, 3, 2].to_vec()),\n                 (true, [1, 2, 3].to_vec()),\n                 (false, [3, 2, 1].to_vec()),\n                 (true, [3, 1, 2].to_vec()),\n                 (true, [2, 3, 1].to_vec()),\n                 (true, [2, 1, 3].to_vec())]);\n","sig":null,"attributes":[{"value":"/ Transforms the slice into the previous permutation from the set of all","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8161,"byte_end":8235,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ permutations that are lexicographically ordered with respect to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8240,"byte_end":8311,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ natural order of T. Returns true if such permutation exists, otherwise","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8316,"byte_end":8390,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/ transforms the range into the last permutation and returns false.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8395,"byte_end":8464,"line_start":247,"line_end":247,"column_start":5,"column_end":74}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8469,"byte_end":8473,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8478,"byte_end":8492,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8497,"byte_end":8501,"line_start":250,"line_end":250,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8506,"byte_end":8513,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8518,"byte_end":8542,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/ let mut b = [2, 1, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8547,"byte_end":8573,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8578,"byte_end":8605,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/ for _ in 0..6 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8610,"byte_end":8629,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/     let x = b.prev_permutation();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8634,"byte_end":8671,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/     v.push((x, b.to_vec()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8676,"byte_end":8708,"line_start":257,"line_end":257,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8713,"byte_end":8718,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, &[(true, [1, 3, 2].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8723,"byte_end":8770,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/                 (true, [1, 2, 3].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8775,"byte_end":8822,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/                 (false, [3, 2, 1].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8827,"byte_end":8875,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/                 (true, [3, 1, 2].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8880,"byte_end":8927,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/                 (true, [2, 3, 1].to_vec()),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8932,"byte_end":8979,"line_start":263,"line_end":263,"column_start":5,"column_end":52}},{"value":"/                 (true, [2, 1, 3].to_vec())]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":8984,"byte_end":9033,"line_start":264,"line_end":264,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9931,"byte_end":9948,"line_start":292,"line_end":292,"column_start":8,"column_end":25},"name":"apply_permutation","qualname":"::Ext::apply_permutation","value":"pub fn apply_permutation(&mut Self, &mut [isize])","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Applies `permutation` to the slice. For each element at index `i` the\n following holds:\n \n   new_self[i] == old_self[permutation[i]]","sig":null,"attributes":[{"value":"/ Applies `permutation` to the slice. For each element at index `i` the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9117,"byte_end":9190,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ following holds:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9195,"byte_end":9215,"line_start":270,"line_end":270,"column_start":5,"column_end":25}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9220,"byte_end":9224,"line_start":271,"line_end":271,"column_start":5,"column_end":9}},{"value":"/   new_self[i] == old_self[permutation[i]]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9229,"byte_end":9274,"line_start":272,"line_end":272,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9279,"byte_end":9282,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The transformation happens in O(N) time and O(1) space. `permutation`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9287,"byte_end":9360,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ is mutated during the transformation but it is restored to its original","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9365,"byte_end":9440,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ state on return.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9445,"byte_end":9465,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9470,"byte_end":9474,"line_start":277,"line_end":277,"column_start":5,"column_end":9}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9479,"byte_end":9491,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9496,"byte_end":9500,"line_start":279,"line_end":279,"column_start":5,"column_end":9}},{"value":"/ This function panics if `self` and `permutation` do not have the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9505,"byte_end":9578,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ length or any value in `permutation` is not in `0..self.len()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9583,"byte_end":9650,"line_start":281,"line_end":281,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9655,"byte_end":9659,"line_start":282,"line_end":282,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9664,"byte_end":9678,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9683,"byte_end":9687,"line_start":284,"line_end":284,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9692,"byte_end":9699,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9704,"byte_end":9728,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/ let mut b = ['d', 'a', 'c', 'b'];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9733,"byte_end":9770,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut p = [1, 3, 2, 0];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9775,"byte_end":9804,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/ b.apply_permutation(&mut p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9809,"byte_end":9841,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(b, ['a', 'b', 'c', 'd']);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9846,"byte_end":9886,"line_start":290,"line_end":290,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(p, [1, 3, 2, 0]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9891,"byte_end":9923,"line_start":291,"line_end":291,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10830,"byte_end":10855,"line_start":317,"line_end":317,"column_start":8,"column_end":33},"name":"apply_inverse_permutation","qualname":"::Ext::apply_inverse_permutation","value":"pub fn apply_inverse_permutation(&mut Self, &mut [isize])","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Applies the inverse of `permutation` to the slice. For each element at\n index `i` the following holds:\n \n   new_self[permutation[i]] == old_self[i]","sig":null,"attributes":[{"value":"/ Applies the inverse of `permutation` to the slice. For each element at","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":9993,"byte_end":10067,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ index `i` the following holds:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10072,"byte_end":10106,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10111,"byte_end":10115,"line_start":296,"line_end":296,"column_start":5,"column_end":9}},{"value":"/   new_self[permutation[i]] == old_self[i]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10120,"byte_end":10165,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10170,"byte_end":10173,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The transformation happens in O(N) time and O(1) space. `permutation`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10178,"byte_end":10251,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ is mutated during the transformation but it is restored to its original","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10256,"byte_end":10331,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ state on return.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10336,"byte_end":10356,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10361,"byte_end":10365,"line_start":302,"line_end":302,"column_start":5,"column_end":9}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10370,"byte_end":10382,"line_start":303,"line_end":303,"column_start":5,"column_end":17}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10387,"byte_end":10391,"line_start":304,"line_end":304,"column_start":5,"column_end":9}},{"value":"/ This function panics if `self` and `permutation` do not have the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10396,"byte_end":10469,"line_start":305,"line_end":305,"column_start":5,"column_end":78}},{"value":"/ length or any value in `permutation` is not in `0..self.len()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10474,"byte_end":10541,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10546,"byte_end":10550,"line_start":307,"line_end":307,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10555,"byte_end":10569,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10574,"byte_end":10578,"line_start":309,"line_end":309,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10583,"byte_end":10590,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10595,"byte_end":10619,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/ let mut b = ['d', 'a', 'c', 'b'];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10624,"byte_end":10661,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/ let mut p = [3, 0, 2, 1];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10666,"byte_end":10695,"line_start":313,"line_end":313,"column_start":5,"column_end":34}},{"value":"/ b.apply_inverse_permutation(&mut p);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10700,"byte_end":10740,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(b, ['a', 'b', 'c', 'd']);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10745,"byte_end":10785,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(p, [3, 0, 2, 1]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":10790,"byte_end":10822,"line_start":316,"line_end":316,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16831,"byte_end":16835,"line_start":529,"line_end":529,"column_start":11,"column_end":15},"name":"Ext2","qualname":"::Ext2","value":"Ext2","parent":null,"children":[{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17197,"byte_end":17215,"line_start":543,"line_end":543,"column_start":8,"column_end":26},"name":"invert_permutation","qualname":"::Ext2::invert_permutation","value":"pub fn invert_permutation(&mut Self)","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Transforms the slice in the inverse permutation.\n \n # Panics\n \n This function panics if any value in `self` is not in `0..self.len()`.\n \n # Example:\n \n ```\n # use superslice::*;\n let mut p = [1, 3, 2, 0];\n p.invert_permutation();\n assert_eq!(p, [3, 0, 2, 1]);\n","sig":null,"attributes":[{"value":"/ Transforms the slice in the inverse permutation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16842,"byte_end":16894,"line_start":530,"line_end":530,"column_start":5,"column_end":57}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16899,"byte_end":16903,"line_start":531,"line_end":531,"column_start":5,"column_end":9}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16908,"byte_end":16920,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16925,"byte_end":16929,"line_start":533,"line_end":533,"column_start":5,"column_end":9}},{"value":"/ This function panics if any value in `self` is not in `0..self.len()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":16934,"byte_end":17008,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17013,"byte_end":17017,"line_start":535,"line_end":535,"column_start":5,"column_end":9}},{"value":"/ # Example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17022,"byte_end":17036,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17041,"byte_end":17045,"line_start":537,"line_end":537,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17050,"byte_end":17057,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # use superslice::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17062,"byte_end":17086,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"/ let mut p = [1, 3, 2, 0];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17091,"byte_end":17120,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ p.invert_permutation();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17125,"byte_end":17152,"line_start":541,"line_end":541,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(p, [3, 0, 2, 1]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/superslice-1.0.0/src/lib.rs","byte_start":17157,"byte_end":17189,"line_start":542,"line_end":542,"column_start":5,"column_end":37}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}