{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","once_cell","--edition=2018","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=afee82941330c152","-C","extra-filename=-afee82941330c152","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libonce_cell-afee82941330c152.rmeta"},"prelude":{"crate_id":{"name":"once_cell","disambiguator":[13963646476386097214,17748679796721965030]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":0,"byte_end":29192,"line_start":1,"line_end":923,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":0,"byte_end":29192,"line_start":1,"line_end":923,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":49},{"krate":0,"index":126}],"decl_id":null,"docs":"# Overview","sig":null,"attributes":[{"value":"*\n# Overview\n\n`once_cell` provides two new cell-like types, `unsync::OnceCell` and `sync::OnceCell`. `OnceCell`\nmight store arbitrary non-`Copy` types, can be assigned to at most once and provide direct access\nto the stored contents. In a nutshell, API looks *roughly* like this:\n\n```rust,ignore\nimpl<T> OnceCell<T> {\n    fn new() -> OnceCell<T> { ... }\n    fn set(&self, value: T) -> Result<(), T> { ... }\n    fn get(&self) -> Option<&T> { ... }\n}\n```\n\nNote that, like with `RefCell` and `Mutex`, the `set` method requires only a shared reference.\nBecause of the single assignment restriction `get` can return an `&T` instead of `Ref<T>`\nor `MutexGuard<T>`.\n\nThe `sync` flavor is thread-safe (that is, implements [`Sync`]) trait, while the `unsync` one is not.\n\n[`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html\n\n# Patterns\n\n`OnceCell` might be useful for a variety of patterns.\n\n## Safe Initialization of global data\n\n```rust\nuse std::{env, io};\n\nuse once_cell::sync::OnceCell;\n\n#[derive(Debug)]\npub struct Logger {\n    // ...\n}\nstatic INSTANCE: OnceCell<Logger> = OnceCell::new();\n\nimpl Logger {\n    pub fn global() -> &'static Logger {\n        INSTANCE.get().expect(\"logger is not initialized\")\n    }\n\n    fn from_cli(args: env::Args) -> Result<Logger, std::io::Error> {\n       // ...\n#      Ok(Logger {})\n    }\n}\n\nfn main() {\n    let logger = Logger::from_cli(env::args()).unwrap();\n    INSTANCE.set(logger).unwrap();\n    // use `Logger::global()` from now on\n}\n```\n\n## Lazy initialized global data\n\nThis is essentially `lazy_static!` macro, but without a macro.\n\n```rust\nuse std::{sync::Mutex, collections::HashMap};\n\nuse once_cell::sync::OnceCell;\n\nfn global_data() -> &'static Mutex<HashMap<i32, String>> {\n    static INSTANCE: OnceCell<Mutex<HashMap<i32, String>>> = OnceCell::new();\n    INSTANCE.get_or_init(|| {\n        let mut m = HashMap::new();\n        m.insert(13, \"Spica\".to_string());\n        m.insert(74, \"Hoyten\".to_string());\n        Mutex::new(m)\n    })\n}\n```\n\nThere are also `sync::Lazy` and `unsync::Lazy` convenience types to streamline this pattern:\n\n```rust\nuse std::{sync::Mutex, collections::HashMap};\nuse once_cell::sync::Lazy;\n\nstatic GLOBAL_DATA: Lazy<Mutex<HashMap<i32, String>>> = Lazy::new(|| {\n    let mut m = HashMap::new();\n    m.insert(13, \"Spica\".to_string());\n    m.insert(74, \"Hoyten\".to_string());\n    Mutex::new(m)\n});\n\nfn main() {\n    println!(\"{:?}\", GLOBAL_DATA.lock().unwrap());\n}\n```\n\n## General purpose lazy evaluation\n\nUnlike `lazy_static!`, `Lazy` works with local variables.\n\n```rust\nuse once_cell::unsync::Lazy;\n\nfn main() {\n    let ctx = vec![1, 2, 3];\n    let thunk = Lazy::new(|| {\n        ctx.iter().sum::<i32>()\n    });\n    assert_eq!(*thunk, 6);\n}\n```\n\nIf you need a lazy field in a struct, you probably should use `OnceCell`\ndirectly, because that will allow you to access `self` during initialization.\n\n```rust\nuse std::{fs, path::PathBuf};\n\nuse once_cell::unsync::OnceCell;\n\nstruct Ctx {\n    config_path: PathBuf,\n    config: OnceCell<String>,\n}\n\nimpl Ctx {\n    pub fn get_config(&self) -> Result<&str, std::io::Error> {\n        let cfg = self.config.get_or_try_init(|| {\n            fs::read_to_string(&self.config_path)\n        })?;\n        Ok(cfg.as_str())\n    }\n}\n```\n\n## Building block\n\nNaturally, it is  possible to build other abstractions on top of `OnceCell`.\nFor example, this is a `regex!` macro which takes a string literal and returns an\n*expression* that evaluates to a `&'static Regex`:\n\n```\nmacro_rules! regex {\n    ($re:literal $(,)?) => {{\n        static RE: once_cell::sync::OnceCell<regex::Regex> = once_cell::sync::OnceCell::new();\n        RE.get_or_init(|| regex::Regex::new($re).unwrap())\n    }};\n}\n```\n\nThis macro can be useful to avoid \"compile regex on every loop iteration\" problem.\n\n# Comparison with std\n\n|`!Sync` types         | Access Mode            | Drawbacks                                     |\n|----------------------|------------------------|-----------------------------------------------|\n|`Cell<T>`             | `T`                    | requires `T: Copy` for `get`                  |\n|`RefCel<T>`           | `RefMut<T>` / `Ref<T>` | may panic at runtime                          |\n|`unsync::OnceCell<T>` | `&T`                   | assignable only once                          |\n\n|`Sync` types          | Access Mode            | Drawbacks                                     |\n|----------------------|------------------------|-----------------------------------------------|\n|`AtomicT`             | `T`                    | works only with certain `Copy` types          |\n|`Mutex<T>`            | `MutexGuard<T>`        | may deadlock at runtime, may block the thread |\n|`sync::OnceCell<T>`   | `&T`                   | assignable only once, may block the thread    |\n\nTechnically, calling `get_or_init` will also cause a panic or a deadlock if it recursively calls\nitself. However, because the assignment can happen only once, such cases should be more rare than\nequivalents with `RefCell` and `Mutex`.\n\n# Minimum Supported `rustc` Version\n\nThis crate's minimum supported `rustc` version is `1.31.1`.\n\nIf only `std` feature is enabled, MSRV will be updated conservatively.\nWhen using other features, like `parking_lot`, MSRV might be updated more frequently, up to the latest stable.\nIn both cases, increasing MSRV is *not* considered a semver-breaking change.\n\n# Implementation details\n\nImplementation is based on [`lazy_static`](https://github.com/rust-lang-nursery/lazy-static.rs/)\nand [`lazy_cell`](https://github.com/indiv0/lazycell/) crates and `std::sync::Once`. In some sense,\n`once_cell` just streamlines and unifies those APIs.\n\nTo implement a sync flavor of `OnceCell`, this crates uses either a custom re-implementation of\n`std::sync::Once` or `parking_lot::Mutex`. This is controlled by the `parking_lot` feature, which\nis enabled by default. Performance is the same for both cases, but `parking_lot` based `OnceCell<T>`\nis smaller by up to 16 bytes.\n\nThis crate uses unsafe.\n\n# F.A.Q.\n\n**Should I use lazy_static or once_cell?**\n\nTo the first approximation, `once_cell` is both more flexible and more convenient than `lazy_static`\nand should be preferred.\n\nUnlike `once_cell`, `lazy_static` supports spinlock-based implementation of blocking which works with\n`#![no_std]`.\n\n`lazy_static` has received significantly more real world testing, but `once_cell` is also a widely\nused crate.\n\n**Should I use sync or unsync flavor?**\n\nBecause Rust compiler checks thread safety for you, it's impossible to accidentally use `unsync` where\n`sync` is required. So, use `unsync` in single-threaded code and `sync` in multi-threaded. It's easy\nto switch between the two if code becomes multi-threaded later.\n\nAt the moment, `unsync` has an additional benefit that reentrant initialization causes a panic, which\nmight be easier to debug than a deadlock.\n\n# Related crates\n\n* [double-checked-cell](https://github.com/niklasf/double-checked-cell)\n* [lazy-init](https://crates.io/crates/lazy-init)\n* [lazycell](https://crates.io/crates/lazycell)\n* [mitochondria](https://crates.io/crates/mitochondria)\n* [lazy_static](https://crates.io/crates/lazy_static)\n\n*/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":0,"byte_end":7181,"line_start":1,"line_end":222,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7417,"byte_end":7423,"line_start":236,"line_end":236,"column_start":9,"column_end":15},"name":"unsync","qualname":"::unsync","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":118},{"krate":0,"index":123}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":59},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8159,"byte_end":8167,"line_start":264,"line_end":264,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::unsync::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":61}],"decl_id":null,"docs":" A cell which can be written to only once. Not thread safe.","sig":null,"attributes":[{"value":"/ A cell which can be written to only once. Not thread safe.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7599,"byte_end":7661,"line_start":246,"line_end":246,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7666,"byte_end":7669,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Unlike `:td::cell::RefCell`, a `OnceCell` provides simple `&`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7674,"byte_end":7739,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ references to the contents.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7744,"byte_end":7775,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7780,"byte_end":7783,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7788,"byte_end":7801,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7806,"byte_end":7813,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7818,"byte_end":7854,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7859,"byte_end":7862,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7867,"byte_end":7898,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7903,"byte_end":7937,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7942,"byte_end":7945,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let value: &String = cell.get_or_init(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":7950,"byte_end":7996,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     \"Hello, World!\".to_string()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8001,"byte_end":8036,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8041,"byte_end":8048,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8053,"byte_end":8092,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8097,"byte_end":8131,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8136,"byte_end":8143,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9877,"byte_end":9880,"line_start":322,"line_end":322,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9826,"byte_end":9855,"line_start":321,"line_end":321,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10097,"byte_end":10100,"line_start":329,"line_end":329,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the reference to the underlying value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9973,"byte_end":10020,"line_start":326,"line_end":326,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10029,"byte_end":10032,"line_start":327,"line_end":327,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10041,"byte_end":10081,"line_start":328,"line_end":328,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10373,"byte_end":10380,"line_start":337,"line_end":337,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the mutable reference to the underlying value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10241,"byte_end":10296,"line_start":334,"line_end":334,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10305,"byte_end":10308,"line_start":335,"line_end":335,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10317,"byte_end":10357,"line_start":336,"line_end":336,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11072,"byte_end":11075,"line_start":359,"line_end":359,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10536,"byte_end":10582,"line_start":342,"line_end":342,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10591,"byte_end":10594,"line_start":343,"line_end":343,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10603,"byte_end":10672,"line_start":344,"line_end":344,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":345,"line_end":345,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10699,"byte_end":10702,"line_start":346,"line_end":346,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10711,"byte_end":10724,"line_start":347,"line_end":347,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10733,"byte_end":10740,"line_start":348,"line_end":348,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10749,"byte_end":10785,"line_start":349,"line_end":349,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10794,"byte_end":10797,"line_start":350,"line_end":350,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10806,"byte_end":10837,"line_start":351,"line_end":351,"column_start":9,"column_end":40}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10846,"byte_end":10880,"line_start":352,"line_end":352,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":353,"line_end":353,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(cell.set(92), Ok(()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10901,"byte_end":10938,"line_start":354,"line_end":354,"column_start":9,"column_end":46}},{"value":"/ assert_eq!(cell.set(62), Err(62));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10947,"byte_end":10985,"line_start":355,"line_end":355,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":10994,"byte_end":10997,"line_start":356,"line_end":356,"column_start":9,"column_end":12}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11006,"byte_end":11040,"line_start":357,"line_end":357,"column_start":9,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11049,"byte_end":11056,"line_start":358,"line_end":358,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12372,"byte_end":12383,"line_start":394,"line_end":394,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f`\n if the cell was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11633,"byte_end":11692,"line_start":373,"line_end":373,"column_start":9,"column_end":68}},{"value":"/ if the cell was empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11701,"byte_end":11727,"line_start":374,"line_end":374,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11736,"byte_end":11739,"line_start":375,"line_end":375,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11748,"byte_end":11760,"line_start":376,"line_end":376,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11769,"byte_end":11772,"line_start":377,"line_end":377,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11781,"byte_end":11851,"line_start":378,"line_end":378,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11860,"byte_end":11886,"line_start":379,"line_end":379,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11895,"byte_end":11898,"line_start":380,"line_end":380,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11907,"byte_end":11976,"line_start":381,"line_end":381,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":11985,"byte_end":12011,"line_start":382,"line_end":382,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12020,"byte_end":12023,"line_start":383,"line_end":383,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12032,"byte_end":12045,"line_start":384,"line_end":384,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12054,"byte_end":12061,"line_start":385,"line_end":385,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12070,"byte_end":12106,"line_start":386,"line_end":386,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12115,"byte_end":12118,"line_start":387,"line_end":387,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12127,"byte_end":12158,"line_start":388,"line_end":388,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12167,"byte_end":12207,"line_start":389,"line_end":389,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12216,"byte_end":12243,"line_start":390,"line_end":390,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12252,"byte_end":12304,"line_start":391,"line_end":391,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12313,"byte_end":12340,"line_start":392,"line_end":392,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12349,"byte_end":12356,"line_start":393,"line_end":393,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13591,"byte_end":13606,"line_start":430,"line_end":430,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12658,"byte_end":12720,"line_start":405,"line_end":405,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12729,"byte_end":12793,"line_start":406,"line_end":406,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12802,"byte_end":12824,"line_start":407,"line_end":407,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12833,"byte_end":12836,"line_start":408,"line_end":408,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12845,"byte_end":12857,"line_start":409,"line_end":409,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12866,"byte_end":12869,"line_start":410,"line_end":410,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12878,"byte_end":12948,"line_start":411,"line_end":411,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12957,"byte_end":12983,"line_start":412,"line_end":412,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":12992,"byte_end":12995,"line_start":413,"line_end":413,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13004,"byte_end":13073,"line_start":414,"line_end":414,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13082,"byte_end":13108,"line_start":415,"line_end":415,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13117,"byte_end":13120,"line_start":416,"line_end":416,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13129,"byte_end":13142,"line_start":417,"line_end":417,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13151,"byte_end":13158,"line_start":418,"line_end":418,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13167,"byte_end":13203,"line_start":419,"line_end":419,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13212,"byte_end":13215,"line_start":420,"line_end":420,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13224,"byte_end":13255,"line_start":421,"line_end":421,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13264,"byte_end":13322,"line_start":422,"line_end":422,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13331,"byte_end":13365,"line_start":423,"line_end":423,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13374,"byte_end":13434,"line_start":424,"line_end":424,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13443,"byte_end":13457,"line_start":425,"line_end":425,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13466,"byte_end":13473,"line_start":426,"line_end":426,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13482,"byte_end":13513,"line_start":427,"line_end":427,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13522,"byte_end":13559,"line_start":428,"line_end":428,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13568,"byte_end":13575,"line_start":429,"line_end":429,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14495,"byte_end":14505,"line_start":458,"line_end":458,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":13943,"byte_end":14000,"line_start":442,"line_end":442,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14009,"byte_end":14012,"line_start":443,"line_end":443,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell was empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14021,"byte_end":14062,"line_start":444,"line_end":444,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14071,"byte_end":14074,"line_start":445,"line_end":445,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14083,"byte_end":14097,"line_start":446,"line_end":446,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14106,"byte_end":14109,"line_start":447,"line_end":447,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14118,"byte_end":14125,"line_start":448,"line_end":448,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14134,"byte_end":14170,"line_start":449,"line_end":449,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14179,"byte_end":14182,"line_start":450,"line_end":450,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14191,"byte_end":14240,"line_start":451,"line_end":451,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14249,"byte_end":14289,"line_start":452,"line_end":452,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14298,"byte_end":14301,"line_start":453,"line_end":453,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14310,"byte_end":14341,"line_start":454,"line_end":454,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14350,"byte_end":14393,"line_start":455,"line_end":455,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14402,"byte_end":14463,"line_start":456,"line_end":456,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14472,"byte_end":14479,"line_start":457,"line_end":457,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15232,"byte_end":15236,"line_start":485,"line_end":485,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::unsync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14765,"byte_end":14818,"line_start":465,"line_end":465,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14823,"byte_end":14826,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14831,"byte_end":14844,"line_start":467,"line_end":467,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14849,"byte_end":14856,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14861,"byte_end":14893,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14898,"byte_end":14901,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let lazy: Lazy<i32> = Lazy::new(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14906,"byte_end":14946,"line_start":471,"line_end":471,"column_start":5,"column_end":45}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14951,"byte_end":14984,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/     92","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":14989,"byte_end":14999,"line_start":473,"line_end":473,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15004,"byte_end":15011,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ println!(\"ready\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15016,"byte_end":15038,"line_start":475,"line_end":475,"column_start":5,"column_end":27}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15043,"byte_end":15069,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15074,"byte_end":15100,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15105,"byte_end":15108,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ // Prints:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15113,"byte_end":15127,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/ //   ready","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15132,"byte_end":15146,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/ //   initializing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15151,"byte_end":15172,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/ //   92","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15177,"byte_end":15188,"line_start":482,"line_end":482,"column_start":5,"column_end":16}},{"value":"/ //   92","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15193,"byte_end":15204,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15209,"byte_end":15216,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16154,"byte_end":16157,"line_start":514,"line_end":514,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing function.","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15720,"byte_end":15786,"line_start":500,"line_end":500,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15795,"byte_end":15798,"line_start":501,"line_end":501,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15807,"byte_end":15820,"line_start":502,"line_end":502,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15829,"byte_end":15836,"line_start":503,"line_end":503,"column_start":9,"column_end":16}},{"value":"/ # fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15845,"byte_end":15862,"line_start":504,"line_end":504,"column_start":9,"column_end":26}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15871,"byte_end":15903,"line_start":505,"line_end":505,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15912,"byte_end":15915,"line_start":506,"line_end":506,"column_start":9,"column_end":12}},{"value":"/ let hello = \"Hello, World!\".to_string();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15924,"byte_end":15968,"line_start":507,"line_end":507,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15977,"byte_end":15980,"line_start":508,"line_end":508,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| hello.to_uppercase());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15989,"byte_end":16039,"line_start":509,"line_end":509,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16048,"byte_end":16051,"line_start":510,"line_end":510,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(&*lazy, \"HELLO, WORLD!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16060,"byte_end":16100,"line_start":511,"line_end":511,"column_start":9,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16109,"byte_end":16116,"line_start":512,"line_end":512,"column_start":9,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16125,"byte_end":16132,"line_start":513,"line_end":513,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16773,"byte_end":16778,"line_start":534,"line_end":534,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and returns a reference to\n the result.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and returns a reference to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16323,"byte_end":16394,"line_start":520,"line_end":520,"column_start":9,"column_end":80}},{"value":"/ the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16403,"byte_end":16418,"line_start":521,"line_end":521,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16427,"byte_end":16430,"line_start":522,"line_end":522,"column_start":9,"column_end":12}},{"value":"/ This is equivalent to the `Deref` impl, but is explicit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16439,"byte_end":16499,"line_start":523,"line_end":523,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16508,"byte_end":16511,"line_start":524,"line_end":524,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16520,"byte_end":16533,"line_start":525,"line_end":525,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16542,"byte_end":16549,"line_start":526,"line_end":526,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16558,"byte_end":16590,"line_start":527,"line_end":527,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16599,"byte_end":16602,"line_start":528,"line_end":528,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16611,"byte_end":16643,"line_start":529,"line_end":529,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16652,"byte_end":16655,"line_start":530,"line_end":530,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16664,"byte_end":16704,"line_start":531,"line_end":531,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16713,"byte_end":16741,"line_start":532,"line_end":532,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16750,"byte_end":16757,"line_start":533,"line_end":533,"column_start":9,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17412,"byte_end":17416,"line_start":558,"line_end":558,"column_start":9,"column_end":13},"name":"sync","qualname":"::sync","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":203}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17380,"byte_end":17403,"line_start":557,"line_end":557,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18307,"byte_end":18315,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::sync::OnceCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17545,"byte_end":17602,"line_start":563,"line_end":563,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17607,"byte_end":17610,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Unlike `std::sync::Mutex`, a `OnceCell` provides simple `&` references","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17615,"byte_end":17689,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ to the contents.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17694,"byte_end":17714,"line_start":566,"line_end":566,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17719,"byte_end":17722,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17727,"byte_end":17740,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17745,"byte_end":17752,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17757,"byte_end":17791,"line_start":570,"line_end":570,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17796,"byte_end":17799,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ static CELL: OnceCell<String> = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17804,"byte_end":17856,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/ assert!(CELL.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17861,"byte_end":17895,"line_start":573,"line_end":573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17900,"byte_end":17903,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17908,"byte_end":17935,"line_start":575,"line_end":575,"column_start":5,"column_end":32}},{"value":"/     let value: &String = CELL.get_or_init(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17940,"byte_end":17990,"line_start":576,"line_end":576,"column_start":5,"column_end":55}},{"value":"/         \"Hello, World!\".to_string()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17995,"byte_end":18034,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18039,"byte_end":18050,"line_start":578,"line_end":578,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18055,"byte_end":18098,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"/ }).join().unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18103,"byte_end":18126,"line_start":580,"line_end":580,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18131,"byte_end":18134,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ let value: Option<&String> = CELL.get();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18139,"byte_end":18183,"line_start":582,"line_end":582,"column_start":5,"column_end":49}},{"value":"/ assert!(value.is_some());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18188,"byte_end":18217,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value.unwrap().as_str(), \"Hello, World!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18222,"byte_end":18279,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18284,"byte_end":18291,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19584,"byte_end":19587,"line_start":634,"line_end":634,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19533,"byte_end":19562,"line_start":633,"line_end":633,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19843,"byte_end":19846,"line_start":642,"line_end":642,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the reference to the underlying value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19659,"byte_end":19706,"line_start":638,"line_end":638,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19715,"byte_end":19718,"line_start":639,"line_end":639,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty, or being initialized. This","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19727,"byte_end":19794,"line_start":640,"line_end":640,"column_start":9,"column_end":76}},{"value":"/ method never blocks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19803,"byte_end":19827,"line_start":641,"line_end":641,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20222,"byte_end":20229,"line_start":654,"line_end":654,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the mutable reference to the underlying value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20090,"byte_end":20145,"line_start":651,"line_end":651,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20154,"byte_end":20157,"line_start":652,"line_end":652,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20166,"byte_end":20206,"line_start":653,"line_end":653,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20626,"byte_end":20639,"line_start":665,"line_end":665,"column_start":23,"column_end":36},"name":"get_unchecked","qualname":"<OnceCell<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get the reference to the underlying value, without checking if the\n cell is initialized.","sig":null,"attributes":[{"value":"/ Get the reference to the underlying value, without checking if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20386,"byte_end":20456,"line_start":659,"line_end":659,"column_start":9,"column_end":79}},{"value":"/ cell is initialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20465,"byte_end":20489,"line_start":660,"line_end":660,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20498,"byte_end":20501,"line_start":661,"line_end":661,"column_start":9,"column_end":12}},{"value":"/ Safety:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20510,"byte_end":20521,"line_start":662,"line_end":662,"column_start":9,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20530,"byte_end":20533,"line_start":663,"line_end":663,"column_start":9,"column_end":12}},{"value":"/ Caller must ensure that the cell is in initialized state.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":20542,"byte_end":20603,"line_start":664,"line_end":664,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21771,"byte_end":21774,"line_start":700,"line_end":700,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21069,"byte_end":21115,"line_start":678,"line_end":678,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21124,"byte_end":21127,"line_start":679,"line_end":679,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21136,"byte_end":21205,"line_start":680,"line_end":680,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21214,"byte_end":21223,"line_start":681,"line_end":681,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21232,"byte_end":21235,"line_start":682,"line_end":682,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21244,"byte_end":21257,"line_start":683,"line_end":683,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21266,"byte_end":21273,"line_start":684,"line_end":684,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21282,"byte_end":21316,"line_start":685,"line_end":685,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21325,"byte_end":21328,"line_start":686,"line_end":686,"column_start":9,"column_end":12}},{"value":"/ static CELL: OnceCell<i32> = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21337,"byte_end":21386,"line_start":687,"line_end":687,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21395,"byte_end":21398,"line_start":688,"line_end":688,"column_start":9,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21407,"byte_end":21422,"line_start":689,"line_end":689,"column_start":9,"column_end":24}},{"value":"/     assert!(CELL.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21431,"byte_end":21469,"line_start":690,"line_end":690,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21478,"byte_end":21481,"line_start":691,"line_end":691,"column_start":9,"column_end":12}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21490,"byte_end":21521,"line_start":692,"line_end":692,"column_start":9,"column_end":40}},{"value":"/         assert_eq!(CELL.set(92), Ok(()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21530,"byte_end":21575,"line_start":693,"line_end":693,"column_start":9,"column_end":54}},{"value":"/     }).join().unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21584,"byte_end":21611,"line_start":694,"line_end":694,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21620,"byte_end":21623,"line_start":695,"line_end":695,"column_start":9,"column_end":12}},{"value":"/     assert_eq!(CELL.set(62), Err(62));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21632,"byte_end":21674,"line_start":696,"line_end":696,"column_start":9,"column_end":51}},{"value":"/     assert_eq!(CELL.get(), Some(&92));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21683,"byte_end":21725,"line_start":697,"line_end":697,"column_start":9,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21734,"byte_end":21739,"line_start":698,"line_end":698,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":21748,"byte_end":21755,"line_start":699,"line_end":699,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23078,"byte_end":23089,"line_start":735,"line_end":735,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell\n was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22042,"byte_end":22113,"line_start":709,"line_end":709,"column_start":9,"column_end":80}},{"value":"/ was empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22122,"byte_end":22136,"line_start":710,"line_end":710,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22145,"byte_end":22148,"line_start":711,"line_end":711,"column_start":9,"column_end":12}},{"value":"/ Many threads may call `get_or_init` concurrently with different","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22157,"byte_end":22224,"line_start":712,"line_end":712,"column_start":9,"column_end":76}},{"value":"/ initializing functions, but it is guaranteed that only one function","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22233,"byte_end":22304,"line_start":713,"line_end":713,"column_start":9,"column_end":80}},{"value":"/ will be executed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22313,"byte_end":22334,"line_start":714,"line_end":714,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22343,"byte_end":22346,"line_start":715,"line_end":715,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22355,"byte_end":22367,"line_start":716,"line_end":716,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22376,"byte_end":22379,"line_start":717,"line_end":717,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22388,"byte_end":22458,"line_start":718,"line_end":718,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22467,"byte_end":22493,"line_start":719,"line_end":719,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22502,"byte_end":22505,"line_start":720,"line_end":720,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. The","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22514,"byte_end":22581,"line_start":721,"line_end":721,"column_start":9,"column_end":76}},{"value":"/ exact outcome is unspecified. Current implementation deadlocks, but","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22590,"byte_end":22661,"line_start":722,"line_end":722,"column_start":9,"column_end":80}},{"value":"/ this may be changed to a panic in the future.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22670,"byte_end":22719,"line_start":723,"line_end":723,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22728,"byte_end":22731,"line_start":724,"line_end":724,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22740,"byte_end":22753,"line_start":725,"line_end":725,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22762,"byte_end":22769,"line_start":726,"line_end":726,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22778,"byte_end":22812,"line_start":727,"line_end":727,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22821,"byte_end":22824,"line_start":728,"line_end":728,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22833,"byte_end":22864,"line_start":729,"line_end":729,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22873,"byte_end":22913,"line_start":730,"line_end":730,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22922,"byte_end":22949,"line_start":731,"line_end":731,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":22958,"byte_end":23010,"line_start":732,"line_end":732,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23019,"byte_end":23046,"line_start":733,"line_end":733,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23055,"byte_end":23062,"line_start":734,"line_end":734,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24396,"byte_end":24411,"line_start":772,"line_end":772,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23364,"byte_end":23426,"line_start":746,"line_end":746,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23435,"byte_end":23499,"line_start":747,"line_end":747,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23508,"byte_end":23530,"line_start":748,"line_end":748,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23539,"byte_end":23542,"line_start":749,"line_end":749,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23551,"byte_end":23563,"line_start":750,"line_end":750,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23572,"byte_end":23575,"line_start":751,"line_end":751,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23584,"byte_end":23645,"line_start":752,"line_end":752,"column_start":9,"column_end":70}},{"value":"/ the cell remains uninitialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23654,"byte_end":23689,"line_start":753,"line_end":753,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23698,"byte_end":23701,"line_start":754,"line_end":754,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23710,"byte_end":23773,"line_start":755,"line_end":755,"column_start":9,"column_end":72}},{"value":"/ The exact outcome is unspecified. Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23782,"byte_end":23842,"line_start":756,"line_end":756,"column_start":9,"column_end":69}},{"value":"/ deadlocks, but this may be changed to a panic in the future.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23851,"byte_end":23915,"line_start":757,"line_end":757,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23924,"byte_end":23927,"line_start":758,"line_end":758,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23936,"byte_end":23949,"line_start":759,"line_end":759,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23958,"byte_end":23965,"line_start":760,"line_end":760,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":23974,"byte_end":24008,"line_start":761,"line_end":761,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24017,"byte_end":24020,"line_start":762,"line_end":762,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24029,"byte_end":24060,"line_start":763,"line_end":763,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24069,"byte_end":24127,"line_start":764,"line_end":764,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24136,"byte_end":24170,"line_start":765,"line_end":765,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24179,"byte_end":24239,"line_start":766,"line_end":766,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24248,"byte_end":24262,"line_start":767,"line_end":767,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24271,"byte_end":24278,"line_start":768,"line_end":768,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24287,"byte_end":24318,"line_start":769,"line_end":769,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24327,"byte_end":24364,"line_start":770,"line_end":770,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24373,"byte_end":24380,"line_start":771,"line_end":771,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25373,"byte_end":25383,"line_start":802,"line_end":802,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value. Returns\n `None` if the cell was empty.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value. Returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24835,"byte_end":24900,"line_start":787,"line_end":787,"column_start":9,"column_end":74}},{"value":"/ `None` if the cell was empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24909,"byte_end":24942,"line_start":788,"line_end":788,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24951,"byte_end":24954,"line_start":789,"line_end":789,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24963,"byte_end":24977,"line_start":790,"line_end":790,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24986,"byte_end":24989,"line_start":791,"line_end":791,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":24998,"byte_end":25005,"line_start":792,"line_end":792,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25014,"byte_end":25048,"line_start":793,"line_end":793,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25057,"byte_end":25060,"line_start":794,"line_end":794,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25069,"byte_end":25118,"line_start":795,"line_end":795,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25127,"byte_end":25167,"line_start":796,"line_end":796,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25176,"byte_end":25179,"line_start":797,"line_end":797,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25188,"byte_end":25219,"line_start":798,"line_end":798,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25228,"byte_end":25271,"line_start":799,"line_end":799,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25280,"byte_end":25341,"line_start":800,"line_end":800,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25350,"byte_end":25357,"line_start":801,"line_end":801,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26574,"byte_end":26578,"line_start":841,"line_end":841,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::sync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25645,"byte_end":25698,"line_start":809,"line_end":809,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25703,"byte_end":25706,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ This type is thread-safe and can be used in statics:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25711,"byte_end":25767,"line_start":811,"line_end":811,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25772,"byte_end":25775,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25780,"byte_end":25793,"line_start":813,"line_end":813,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25798,"byte_end":25805,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25810,"byte_end":25844,"line_start":815,"line_end":815,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25849,"byte_end":25852,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25857,"byte_end":25887,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25892,"byte_end":25895,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ static HASHMAP: Lazy<HashMap<i32, String>> = Lazy::new(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25900,"byte_end":25963,"line_start":819,"line_end":819,"column_start":5,"column_end":68}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":25968,"byte_end":26001,"line_start":820,"line_end":820,"column_start":5,"column_end":38}},{"value":"/     let mut m = HashMap::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26006,"byte_end":26041,"line_start":821,"line_end":821,"column_start":5,"column_end":40}},{"value":"/     m.insert(13, \"Spica\".to_string());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26046,"byte_end":26088,"line_start":822,"line_end":822,"column_start":5,"column_end":47}},{"value":"/     m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26093,"byte_end":26136,"line_start":823,"line_end":823,"column_start":5,"column_end":48}},{"value":"/     m","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26141,"byte_end":26150,"line_start":824,"line_end":824,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26155,"byte_end":26162,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26167,"byte_end":26170,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26175,"byte_end":26190,"line_start":827,"line_end":827,"column_start":5,"column_end":20}},{"value":"/     println!(\"ready\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26195,"byte_end":26221,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26226,"byte_end":26257,"line_start":829,"line_end":829,"column_start":5,"column_end":36}},{"value":"/         println!(\"{:?}\", HASHMAP.get(&13));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26262,"byte_end":26309,"line_start":830,"line_end":830,"column_start":5,"column_end":52}},{"value":"/     }).join().unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26314,"byte_end":26341,"line_start":831,"line_end":831,"column_start":5,"column_end":32}},{"value":"/     println!(\"{:?}\", HASHMAP.get(&74));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26346,"byte_end":26389,"line_start":832,"line_end":832,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26394,"byte_end":26397,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/     // Prints:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26402,"byte_end":26420,"line_start":834,"line_end":834,"column_start":5,"column_end":23}},{"value":"/     //   ready","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26425,"byte_end":26443,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/     //   initializing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26448,"byte_end":26473,"line_start":836,"line_end":836,"column_start":5,"column_end":30}},{"value":"/     //   Some(\"Spica\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26478,"byte_end":26504,"line_start":837,"line_end":837,"column_start":5,"column_end":31}},{"value":"/     //   Some(\"Hoyten\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26509,"byte_end":26536,"line_start":838,"line_end":838,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26541,"byte_end":26546,"line_start":839,"line_end":839,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26551,"byte_end":26558,"line_start":840,"line_end":840,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27545,"byte_end":27548,"line_start":866,"line_end":866,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing\n function.\n","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27445,"byte_end":27501,"line_start":864,"line_end":864,"column_start":9,"column_end":65}},{"value":"/ function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27510,"byte_end":27523,"line_start":865,"line_end":865,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28140,"byte_end":28145,"line_start":885,"line_end":885,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and\n returns a reference to result. This is equivalent\n to the `Deref` impl, but is explicit.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27708,"byte_end":27756,"line_start":872,"line_end":872,"column_start":9,"column_end":57}},{"value":"/ returns a reference to result. This is equivalent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27765,"byte_end":27818,"line_start":873,"line_end":873,"column_start":9,"column_end":62}},{"value":"/ to the `Deref` impl, but is explicit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27827,"byte_end":27868,"line_start":874,"line_end":874,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27877,"byte_end":27880,"line_start":875,"line_end":875,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27889,"byte_end":27902,"line_start":876,"line_end":876,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27911,"byte_end":27918,"line_start":877,"line_end":877,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27927,"byte_end":27957,"line_start":878,"line_end":878,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27966,"byte_end":27969,"line_start":879,"line_end":879,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27978,"byte_end":28010,"line_start":880,"line_end":880,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28019,"byte_end":28022,"line_start":881,"line_end":881,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28031,"byte_end":28071,"line_start":882,"line_end":882,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28080,"byte_end":28108,"line_start":883,"line_end":883,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28117,"byte_end":28124,"line_start":884,"line_end":884,"column_start":9,"column_end":16}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30371,"byte_end":30379,"line_start":33,"line_end":33,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30416,"byte_end":30424,"line_start":34,"line_end":34,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30486,"byte_end":30494,"line_start":36,"line_end":36,"column_start":55,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30536,"byte_end":30544,"line_start":37,"line_end":37,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":31260,"byte_end":31268,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":35949,"byte_end":35955,"line_start":182,"line_end":182,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8574,"byte_end":8582,"line_start":274,"line_end":274,"column_start":59,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8656,"byte_end":8664,"line_start":276,"line_end":276,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8696,"byte_end":8704,"line_start":278,"line_end":278,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8821,"byte_end":8829,"line_start":284,"line_end":284,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9118,"byte_end":9126,"line_start":293,"line_end":293,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9487,"byte_end":9495,"line_start":306,"line_end":306,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9624,"byte_end":9632,"line_start":312,"line_end":312,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9664,"byte_end":9672,"line_start":314,"line_end":314,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9804,"byte_end":9812,"line_start":320,"line_end":320,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15398,"byte_end":15402,"line_start":491,"line_end":491,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15500,"byte_end":15504,"line_start":493,"line_end":493,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15699,"byte_end":15703,"line_start":499,"line_end":499,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16302,"byte_end":16306,"line_start":519,"line_end":519,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17050,"byte_end":17054,"line_start":542,"line_end":542,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17200,"byte_end":17204,"line_start":549,"line_end":549,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18353,"byte_end":18361,"line_start":588,"line_end":588,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18489,"byte_end":18497,"line_start":594,"line_end":594,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18786,"byte_end":18794,"line_start":603,"line_end":603,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19142,"byte_end":19150,"line_start":616,"line_end":616,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19339,"byte_end":19347,"line_start":624,"line_end":624,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19483,"byte_end":19491,"line_start":630,"line_end":630,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19511,"byte_end":19519,"line_start":632,"line_end":632,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26718,"byte_end":26722,"line_start":846,"line_end":846,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27207,"byte_end":27211,"line_start":857,"line_end":857,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27361,"byte_end":27365,"line_start":861,"line_end":861,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27424,"byte_end":27428,"line_start":863,"line_end":863,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27687,"byte_end":27691,"line_start":871,"line_end":871,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28429,"byte_end":28433,"line_start":893,"line_end":893,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28579,"byte_end":28583,"line_start":900,"line_end":900,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30371,"byte_end":30379,"line_start":33,"line_end":33,"column_start":38,"column_end":46},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30416,"byte_end":30424,"line_start":34,"line_end":34,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30486,"byte_end":30494,"line_start":36,"line_end":36,"column_start":55,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3998}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":30536,"byte_end":30544,"line_start":37,"line_end":37,"column_start":36,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":3997}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":31260,"byte_end":31268,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/imp_std.rs","byte_start":35949,"byte_end":35955,"line_start":182,"line_end":182,"column_start":15,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8574,"byte_end":8582,"line_start":274,"line_end":274,"column_start":59,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":3998}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8656,"byte_end":8664,"line_start":276,"line_end":276,"column_start":40,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":3997}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8696,"byte_end":8704,"line_start":278,"line_end":278,"column_start":25,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":8821,"byte_end":8829,"line_start":284,"line_end":284,"column_start":40,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9118,"byte_end":9126,"line_start":293,"line_end":293,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9487,"byte_end":9495,"line_start":306,"line_end":306,"column_start":38,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9624,"byte_end":9632,"line_start":312,"line_end":312,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9664,"byte_end":9672,"line_start":314,"line_end":314,"column_start":25,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":9804,"byte_end":9812,"line_start":320,"line_end":320,"column_start":13,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15398,"byte_end":15402,"line_start":491,"line_end":491,"column_start":49,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":3998}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15500,"byte_end":15504,"line_start":493,"line_end":493,"column_start":55,"column_end":59},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":15699,"byte_end":15703,"line_start":499,"line_end":499,"column_start":16,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":16302,"byte_end":16306,"line_start":519,"line_end":519,"column_start":31,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17050,"byte_end":17054,"line_start":542,"line_end":542,"column_start":41,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":17200,"byte_end":17204,"line_start":549,"line_end":549,"column_start":34,"column_end":38},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":97},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18353,"byte_end":18361,"line_start":588,"line_end":588,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18489,"byte_end":18497,"line_start":594,"line_end":594,"column_start":40,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":18786,"byte_end":18794,"line_start":603,"line_end":603,"column_start":30,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19142,"byte_end":19150,"line_start":616,"line_end":616,"column_start":25,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19339,"byte_end":19347,"line_start":624,"line_end":624,"column_start":38,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19483,"byte_end":19491,"line_start":630,"line_end":630,"column_start":24,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":19511,"byte_end":19519,"line_start":632,"line_end":632,"column_start":13,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":26718,"byte_end":26722,"line_start":846,"line_end":846,"column_start":55,"column_end":59},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27207,"byte_end":27211,"line_start":857,"line_end":857,"column_start":38,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27361,"byte_end":27365,"line_start":861,"line_end":861,"column_start":49,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":171},"to":{"krate":1,"index":3998}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27424,"byte_end":27428,"line_start":863,"line_end":863,"column_start":16,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":27687,"byte_end":27691,"line_start":871,"line_end":871,"column_start":31,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28429,"byte_end":28433,"line_start":893,"line_end":893,"column_start":53,"column_end":57},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.2.0/src/lib.rs","byte_start":28579,"byte_end":28583,"line_start":900,"line_end":900,"column_start":34,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":171},"to":{"krate":2,"index":2033}}]}