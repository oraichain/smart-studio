{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","proc_macro2","--edition=2018","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=bf3f31b462448d12","-C","extra-filename=-bf3f31b462448d12","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--extern","unicode_xid=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libunicode_xid-eaa57b0decd08388.rmeta","--cap-lints","allow","--cfg","use_proc_macro","--cfg","wrap_proc_macro","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libproc_macro2-bf3f31b462448d12.rmeta"},"prelude":{"crate_id":{"name":"proc_macro2","disambiguator":[1716116122883161608,6933463545626664113]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[3130355442040012681,15931841446876085506]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/strnom.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[16097350072007521493,6972798825974981356]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":0,"byte_end":38972,"line_start":1,"line_end":1199,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":721},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37984,"byte_end":37995,"line_start":1161,"line_end":1161,"column_start":20,"column_end":31},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":486}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":0,"byte_end":38972,"line_start":1,"line_end":1199,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":836},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":57},{"krate":0,"index":205},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":726},{"krate":0,"index":731},{"krate":0,"index":729},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":732},{"krate":0,"index":745},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":770},{"krate":0,"index":768},{"krate":0,"index":766},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":419},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":771},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":792},{"krate":0,"index":790},{"krate":0,"index":788},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":433},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":443},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":468},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":" A wrapper around the procedural macro API of the compiler's [`proc_macro`]\n crate. This library serves two purposes:","sig":null,"attributes":[{"value":"/ A wrapper around the procedural macro API of the compiler's [`proc_macro`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ crate. This library serves two purposes:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":79,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":124,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`proc_macro`]: https://doc.rust-lang.org/proc_macro/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":128,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":186,"byte_end":189,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - **Bring proc-macro-like functionality to other contexts like build.rs and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":190,"byte_end":269,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   main.rs.** Types from `proc_macro` are entirely specific to procedural","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":270,"byte_end":346,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/   macros and cannot ever exist in code outside of a procedural macro.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":347,"byte_end":420,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/   Meanwhile `proc_macro2` types may exist anywhere including non-macro code.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":421,"byte_end":501,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/   By developing foundational libraries like [syn] and [quote] against","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":502,"byte_end":575,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/   `proc_macro2` rather than `proc_macro`, the procedural macro ecosystem","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":576,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   becomes easily applicable to many other use cases and we avoid","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":653,"byte_end":721,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/   reimplementing non-macro equivalents of those libraries.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":722,"byte_end":784,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":785,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - **Make procedural macros unit testable.** As a consequence of being","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":789,"byte_end":862,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/   specific to procedural macros, nothing that uses `proc_macro` can be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":863,"byte_end":937,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/   executed from a unit test. In order for helper libraries or components of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":938,"byte_end":1017,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/   a macro to be testable in isolation, they must be implemented using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1018,"byte_end":1091,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/   `proc_macro2`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1092,"byte_end":1112,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1113,"byte_end":1116,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [syn]: https://github.com/dtolnay/syn","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1117,"byte_end":1158,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ [quote]: https://github.com/dtolnay/quote","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1159,"byte_end":1204,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1205,"byte_end":1208,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1209,"byte_end":1220,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1221,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The skeleton of a typical procedural macro typically looks like this:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1225,"byte_end":1298,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1299,"byte_end":1302,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1303,"byte_end":1310,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ extern crate proc_macro;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1311,"byte_end":1339,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1344,"byte_end":1383,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_derive(MyDerive)]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1384,"byte_end":1418,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1419,"byte_end":1427,"line_start":33,"line_end":33,"column_start":1,"column_end":9}},{"value":"/ # #[cfg(wrap_proc_macro)]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1428,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ pub fn my_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1458,"byte_end":1539,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/     let input = proc_macro2::TokenStream::from(input);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1540,"byte_end":1598,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1599,"byte_end":1602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     let output: proc_macro2::TokenStream = {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1603,"byte_end":1651,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/         /* transform input */","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1652,"byte_end":1685,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/         # input","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1686,"byte_end":1705,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/     };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1706,"byte_end":1716,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1717,"byte_end":1720,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     proc_macro::TokenStream::from(output)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1721,"byte_end":1766,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1767,"byte_end":1772,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1773,"byte_end":1780,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1781,"byte_end":1784,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ If parsing with [Syn], you'll use [`parse_macro_input!`] instead to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1785,"byte_end":1856,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ propagate parse errors correctly back to the compiler when parsing fails.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1857,"byte_end":1934,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1935,"byte_end":1938,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: https://docs.rs/syn/1.0/syn/macro.parse_macro_input.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":1939,"byte_end":2023,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2024,"byte_end":2027,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Unstable features","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2028,"byte_end":2051,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2052,"byte_end":2055,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The default feature set of proc-macro2 tracks the most recent stable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2056,"byte_end":2128,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/ compiler API. Functionality in `proc_macro` that is not yet stable is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2129,"byte_end":2206,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ exposed by proc-macro2 by default.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2207,"byte_end":2245,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2246,"byte_end":2249,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To opt into the additional APIs available in the most recent nightly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2250,"byte_end":2322,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ compiler, the `procmacro2_semver_exempt` config flag must be passed to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2323,"byte_end":2397,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ rustc. We will polyfill those nightly-only APIs back to Rust 1.31.0. As","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2398,"byte_end":2473,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ these are unstable APIs that track the nightly compiler, minor versions of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2474,"byte_end":2552,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ proc-macro2 may make breaking changes to them at any time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2553,"byte_end":2615,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2616,"byte_end":2619,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2620,"byte_end":2629,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ RUSTFLAGS='--cfg procmacro2_semver_exempt' cargo build","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2630,"byte_end":2688,"line_start":65,"line_end":65,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2689,"byte_end":2696,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Note that this must not only be done for your crate, but for any crate that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2701,"byte_end":2780,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ depends on your crate. This infectious nature is intentional, as it serves","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2781,"byte_end":2859,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ as a reminder that you are outside of the normal semver guarantees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2860,"byte_end":2931,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2932,"byte_end":2935,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Semver exempt methods are marked as such in the proc-macro2 documentation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":2936,"byte_end":3014,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3015,"byte_end":3018,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Thread-Safety","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3019,"byte_end":3038,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3039,"byte_end":3042,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Most types in this crate are `!Sync` because the underlying compiler","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3043,"byte_end":3115,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/ types make use of thread-local memory, meaning they cannot be accessed from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3116,"byte_end":3195,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ a different thread.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3196,"byte_end":3219,"line_start":78,"line_end":78,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49590,"byte_end":49601,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"TokenStream","qualname":"::fallback::TokenStream","value":"TokenStream {  }","parent":null,"children":[{"krate":0,"index":523}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49662,"byte_end":49670,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"LexError","qualname":"::fallback::LexError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49703,"byte_end":49706,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"pub fn new() -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49786,"byte_end":49794,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":636},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86121,"byte_end":86129,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Compiler","qualname":"::imp::TokenStream::Compiler","value":"TokenStream::Compiler(DeferredTokenStream)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":639},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86156,"byte_end":86164,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Fallback","qualname":"::imp::TokenStream::Fallback","value":"TokenStream::Fallback(fallback::TokenStream)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":635},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86103,"byte_end":86114,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"TokenStream","qualname":"::imp::TokenStream","value":"pub enum TokenStream {\n    Compiler(DeferredTokenStream),\n    Fallback(fallback::TokenStream),\n}","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86516,"byte_end":86535,"line_start":22,"line_end":22,"column_start":12,"column_end":31},"name":"DeferredTokenStream","qualname":"::imp::DeferredTokenStream","value":"DeferredTokenStream {  }","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86641,"byte_end":86649,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Compiler","qualname":"::imp::LexError::Compiler","value":"LexError::Compiler(proc_macro::LexError)","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86677,"byte_end":86685,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Fallback","qualname":"::imp::LexError::Fallback","value":"LexError::Fallback(fallback::LexError)","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":219},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":86626,"byte_end":86634,"line_start":27,"line_end":27,"column_start":10,"column_end":18},"name":"LexError","qualname":"::imp::LexError","value":"pub enum LexError {\n    Compiler(proc_macro::LexError),\n    Fallback(fallback::LexError),\n}","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":223}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89736,"byte_end":89739,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"pub fn new() -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89989,"byte_end":89997,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":650},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95928,"byte_end":95936,"line_start":314,"line_end":314,"column_start":5,"column_end":13},"name":"Compiler","qualname":"::imp::TokenTreeIter::Compiler","value":"TokenTreeIter::Compiler(proc_macro::token_stream::IntoIter)","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95978,"byte_end":95986,"line_start":315,"line_end":315,"column_start":5,"column_end":13},"name":"Fallback","qualname":"::imp::TokenTreeIter::Fallback","value":"TokenTreeIter::Fallback(fallback::TokenTreeIter)","parent":{"krate":0,"index":649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":649},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95908,"byte_end":95921,"line_start":313,"line_end":313,"column_start":10,"column_end":23},"name":"TokenTreeIter","qualname":"::imp::TokenTreeIter","value":"pub enum TokenTreeIter {\n    Compiler(proc_macro::token_stream::IntoIter),\n    Fallback(fallback::TokenTreeIter),\n}","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4321,"byte_end":4332,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"TokenStream","qualname":"::TokenStream","value":"TokenStream {  }","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" An abstract stream of tokens, or more concretely a sequence of token trees.","sig":null,"attributes":[{"value":"/ An abstract stream of tokens, or more concretely a sequence of token trees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":3952,"byte_end":4031,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4032,"byte_end":4035,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type provides interfaces for iterating over token trees and for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4036,"byte_end":4108,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ collecting token trees into one stream.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4109,"byte_end":4152,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4153,"byte_end":4156,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Token stream is both the input and output of `#[proc_macro]`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4157,"byte_end":4222,"line_start":114,"line_end":114,"column_start":1,"column_end":66}},{"value":"/ `#[proc_macro_attribute]` and `#[proc_macro_derive]` definitions.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4223,"byte_end":4292,"line_start":115,"line_end":115,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4469,"byte_end":4477,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"LexError","qualname":"::LexError","value":"LexError {  }","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" Error returned from `TokenStream::from_str`.\n","sig":null,"attributes":[{"value":"/ Error returned from `TokenStream::from_str`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4409,"byte_end":4457,"line_start":122,"line_end":122,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenStream>::new","value":"pub fn new() -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `TokenStream` containing no token trees.\n","sig":null,"attributes":[{"value":"/ Returns an empty `TokenStream` containing no token trees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4908,"byte_end":4969,"line_start":143,"line_end":143,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5120,"byte_end":5128,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TokenStream>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `TokenStream` is empty.\n","sig":null,"attributes":[{"value":"/ Checks if this `TokenStream` is empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5066,"byte_end":5108,"line_start":148,"line_end":148,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10058,"byte_end":10062,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"Span","qualname":"::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"decl_id":null,"docs":" A region of source code, along with macro expansion information.\n","sig":null,"attributes":[{"value":"/ A region of source code, along with macro expansion information.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":9955,"byte_end":10023,"line_start":314,"line_end":314,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10756,"byte_end":10765,"line_start":341,"line_end":341,"column_start":12,"column_end":21},"name":"call_site","qualname":"<Span>::call_site","value":"pub fn call_site() -> Span","parent":null,"children":[],"decl_id":null,"docs":" The span of the invocation of the current procedural macro.","sig":null,"attributes":[{"value":"/ The span of the invocation of the current procedural macro.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10440,"byte_end":10503,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10508,"byte_end":10511,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Identifiers created with this span will be resolved as if they were","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10516,"byte_end":10587,"line_start":338,"line_end":338,"column_start":5,"column_end":76}},{"value":"/ written directly at the macro call location (call-site hygiene) and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10592,"byte_end":10663,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10668,"byte_end":10744,"line_start":340,"line_end":340,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12288,"byte_end":12294,"line_start":382,"line_end":382,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Span>::unwrap","value":"pub fn unwrap(Self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":" Convert `proc_macro2::Span` to `proc_macro::Span`.","sig":null,"attributes":[{"value":"/ Convert `proc_macro2::Span` to `proc_macro::Span`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":11804,"byte_end":11858,"line_start":371,"line_end":371,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":11863,"byte_end":11866,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This method is available when building with a nightly compiler, or when","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":11871,"byte_end":11946,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ building with rustc 1.29+ *without* semver exempt features.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":11951,"byte_end":12014,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12019,"byte_end":12022,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12027,"byte_end":12039,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12044,"byte_end":12047,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Panics if called from outside of a procedural macro. Unlike","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12052,"byte_end":12115,"line_start":378,"line_end":378,"column_start":5,"column_end":68}},{"value":"/ `proc_macro2::Span`, the `proc_macro::Span` type can only exist within","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12120,"byte_end":12194,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ the context of a procedural macro invocation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12199,"byte_end":12248,"line_start":380,"line_end":380,"column_start":5,"column_end":54}},{"value":"cfg(wrap_proc_macro)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12253,"byte_end":12276,"line_start":381,"line_end":381,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12465,"byte_end":12473,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"unstable","qualname":"<Span>::unstable","value":"pub fn unstable(Self) -> proc_macro::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(wrap_proc_macro)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":12411,"byte_end":12434,"line_start":387,"line_end":387,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13941,"byte_end":13945,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"join","qualname":"<Span>::join","value":"pub fn join(&Self, Span) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Create a new span encompassing `self` and `other`.","sig":null,"attributes":[{"value":"/ Create a new span encompassing `self` and `other`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13467,"byte_end":13521,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13526,"byte_end":13529,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` and `other` are from different files.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13534,"byte_end":13600,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13605,"byte_end":13608,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Span::join`] method is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13613,"byte_end":13677,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13682,"byte_end":13754,"line_start":424,"line_end":424,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13759,"byte_end":13819,"line_start":425,"line_end":425,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13824,"byte_end":13827,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Span::join`]: https://doc.rust-lang.org/proc_macro/struct.Span.html#method.join","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":13832,"byte_end":13929,"line_start":427,"line_end":427,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14650,"byte_end":14655,"line_start":452,"line_end":452,"column_start":5,"column_end":10},"name":"Group","qualname":"::TokenTree::Group","value":"TokenTree::Group(Group)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" A token stream surrounded by bracket delimiters.\n","sig":null,"attributes":[{"value":"/ A token stream surrounded by bracket delimiters.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14593,"byte_end":14645,"line_start":451,"line_end":451,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14691,"byte_end":14696,"line_start":454,"line_end":454,"column_start":5,"column_end":10},"name":"Ident","qualname":"::TokenTree::Ident","value":"TokenTree::Ident(Ident)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" An identifier.\n","sig":null,"attributes":[{"value":"/ An identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14668,"byte_end":14686,"line_start":453,"line_end":453,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14771,"byte_end":14776,"line_start":456,"line_end":456,"column_start":5,"column_end":10},"name":"Punct","qualname":"::TokenTree::Punct","value":"TokenTree::Punct(Punct)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" A single punctuation character (`+`, `,`, `$`, etc.).\n","sig":null,"attributes":[{"value":"/ A single punctuation character (`+`, `,`, `$`, etc.).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14709,"byte_end":14766,"line_start":455,"line_end":455,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14867,"byte_end":14874,"line_start":458,"line_end":458,"column_start":5,"column_end":12},"name":"Literal","qualname":"::TokenTree::Literal","value":"TokenTree::Literal(Literal)","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n","sig":null,"attributes":[{"value":"/ A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14789,"byte_end":14862,"line_start":457,"line_end":457,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":732},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14577,"byte_end":14586,"line_start":450,"line_end":450,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::TokenTree","value":"pub enum TokenTree {\n\n    /// A token stream surrounded by bracket delimiters.\n    Group(Group),\n\n    /// An identifier.\n    Ident(Ident),\n\n    /// A single punctuation character (`+`, `,`, `$`, etc.).\n    Punct(Punct),\n\n    /// A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.\n    Literal(Literal),\n}","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742}],"decl_id":null,"docs":" A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).\n","sig":null,"attributes":[{"value":"/ A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14471,"byte_end":14550,"line_start":448,"line_end":448,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15041,"byte_end":15045,"line_start":464,"line_end":464,"column_start":12,"column_end":16},"name":"span","qualname":"<TokenTree>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this tree, delegating to the `span` method of\n the contained token or a delimited stream.\n","sig":null,"attributes":[{"value":"/ Returns the span of this tree, delegating to the `span` method of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14909,"byte_end":14978,"line_start":462,"line_end":462,"column_start":5,"column_end":74}},{"value":"/ the contained token or a delimited stream.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14983,"byte_end":15029,"line_start":463,"line_end":463,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15576,"byte_end":15584,"line_start":478,"line_end":478,"column_start":12,"column_end":20},"name":"set_span","qualname":"<TokenTree>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for *only this token*.","sig":null,"attributes":[{"value":"/ Configures the span for *only this token*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15304,"byte_end":15350,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15355,"byte_end":15358,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Note that if this token is a `Group` then this method will not configure","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15363,"byte_end":15439,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ the span of each of the internal tokens, this will simply delegate to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15444,"byte_end":15517,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/ the `set_span` method of each variant.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15522,"byte_end":15564,"line_start":477,"line_end":477,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17827,"byte_end":17832,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"name":"Group","qualname":"::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":748}],"decl_id":null,"docs":" A delimited token stream.","sig":null,"attributes":[{"value":"/ A delimited token stream.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17674,"byte_end":17703,"line_start":546,"line_end":546,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17704,"byte_end":17707,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ A `Group` internally contains a `TokenStream` which is surrounded by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17708,"byte_end":17780,"line_start":548,"line_end":548,"column_start":1,"column_end":73}},{"value":"/ `Delimiter`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17781,"byte_end":17798,"line_start":549,"line_end":549,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":752},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18007,"byte_end":18018,"line_start":559,"line_end":559,"column_start":5,"column_end":16},"name":"Parenthesis","qualname":"::Delimiter::Parenthesis","value":"Delimiter::Parenthesis","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" `( ... )`\n","sig":null,"attributes":[{"value":"/ `( ... )`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17989,"byte_end":18002,"line_start":558,"line_end":558,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18042,"byte_end":18047,"line_start":561,"line_end":561,"column_start":5,"column_end":10},"name":"Brace","qualname":"::Delimiter::Brace","value":"Delimiter::Brace","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" `{ ... }`\n","sig":null,"attributes":[{"value":"/ `{ ... }`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18024,"byte_end":18037,"line_start":560,"line_end":560,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":756},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18071,"byte_end":18078,"line_start":563,"line_end":563,"column_start":5,"column_end":12},"name":"Bracket","qualname":"::Delimiter::Bracket","value":"Delimiter::Bracket","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" `[ ... ]`\n","sig":null,"attributes":[{"value":"/ `[ ... ]`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18053,"byte_end":18066,"line_start":562,"line_end":562,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":758},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18438,"byte_end":18442,"line_start":571,"line_end":571,"column_start":5,"column_end":9},"name":"None","qualname":"::Delimiter::None","value":"Delimiter::None","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" `Ø ... Ø`","sig":null,"attributes":[{"value":"/ `Ø ... Ø`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18084,"byte_end":18099,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18104,"byte_end":18107,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ An implicit delimiter, that may, for example, appear around tokens","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18112,"byte_end":18182,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ coming from a \"macro variable\" `$var`. It is important to preserve","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18187,"byte_end":18257,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/ operator priorities in cases like `$var * 3` where `$var` is `1 + 2`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18262,"byte_end":18335,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ Implicit delimiters may not survive roundtrip of a token stream through","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18340,"byte_end":18415,"line_start":569,"line_end":569,"column_start":5,"column_end":80}},{"value":"/ a string.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18420,"byte_end":18433,"line_start":570,"line_end":570,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":751},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17973,"byte_end":17982,"line_start":557,"line_end":557,"column_start":10,"column_end":19},"name":"Delimiter","qualname":"::Delimiter","value":"pub enum Delimiter {\n\n    /// `( ... )`\n    Parenthesis,\n\n    /// `{ ... }`\n    Brace,\n\n    /// `[ ... ]`\n    Bracket,\n\n    /// `Ø ... Ø`\n    ///\n    /// An implicit delimiter, that may, for example, appear around tokens\n    /// coming from a \"macro variable\" `$var`. It is important to preserve\n    /// operator priorities in cases like `$var * 3` where `$var` is `1 + 2`.\n    /// Implicit delimiters may not survive roundtrip of a token stream through\n    /// a string.\n    None,\n}","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758}],"decl_id":null,"docs":" Describes how a sequence of token trees is delimited.\n","sig":null,"attributes":[{"value":"/ Describes how a sequence of token trees is delimited.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":17861,"byte_end":17918,"line_start":555,"line_end":555,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18901,"byte_end":18904,"line_start":590,"line_end":590,"column_start":12,"column_end":15},"name":"new","qualname":"<Group>::new","value":"pub fn new(Delimiter, TokenStream) -> Group","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Group` with the given delimiter and token stream.","sig":null,"attributes":[{"value":"/ Creates a new `Group` with the given delimiter and token stream.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18655,"byte_end":18723,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18728,"byte_end":18731,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This constructor will set the span for this group to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18736,"byte_end":18792,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ `Span::call_site()`. To change the span you can use the `set_span`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18797,"byte_end":18867,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ method below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18872,"byte_end":18889,"line_start":589,"line_end":589,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19110,"byte_end":19119,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<Group>::delimiter","value":"pub fn delimiter(&Self) -> Delimiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the delimiter of this `Group`\n","sig":null,"attributes":[{"value":"/ Returns the delimiter of this `Group`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19057,"byte_end":19098,"line_start":596,"line_end":596,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19378,"byte_end":19384,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"stream","qualname":"<Group>::stream","value":"pub fn stream(&Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the `TokenStream` of tokens that are delimited in this `Group`.","sig":null,"attributes":[{"value":"/ Returns the `TokenStream` of tokens that are delimited in this `Group`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19184,"byte_end":19259,"line_start":601,"line_end":601,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19264,"byte_end":19267,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Note that the returned token stream does not include the delimiter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19272,"byte_end":19342,"line_start":603,"line_end":603,"column_start":5,"column_end":75}},{"value":"/ returned above.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19347,"byte_end":19366,"line_start":604,"line_end":604,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19677,"byte_end":19681,"line_start":616,"line_end":616,"column_start":12,"column_end":16},"name":"span","qualname":"<Group>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for the delimiters of this token stream, spanning the\n entire `Group`.","sig":null,"attributes":[{"value":"/ Returns the span for the delimiters of this token stream, spanning the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19467,"byte_end":19541,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ entire `Group`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19546,"byte_end":19565,"line_start":610,"line_end":610,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19570,"byte_end":19573,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19578,"byte_end":19589,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/ pub fn span(&self) -> Span {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19594,"byte_end":19626,"line_start":613,"line_end":613,"column_start":5,"column_end":37}},{"value":"/            ^^^^^^^","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19631,"byte_end":19653,"line_start":614,"line_end":614,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19658,"byte_end":19665,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19933,"byte_end":19942,"line_start":626,"line_end":626,"column_start":12,"column_end":21},"name":"span_open","qualname":"<Group>::span_open","value":"pub fn span_open(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the opening delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the opening delimiter of this group.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19748,"byte_end":19817,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19822,"byte_end":19825,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19830,"byte_end":19841,"line_start":622,"line_end":622,"column_start":5,"column_end":16}},{"value":"/ pub fn span_open(&self) -> Span {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19846,"byte_end":19883,"line_start":623,"line_end":623,"column_start":5,"column_end":42}},{"value":"/                 ^","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19888,"byte_end":19909,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":19914,"byte_end":19921,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20207,"byte_end":20217,"line_start":636,"line_end":636,"column_start":12,"column_end":22},"name":"span_close","qualname":"<Group>::span_close","value":"pub fn span_close(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span pointing to the closing delimiter of this group.","sig":null,"attributes":[{"value":"/ Returns the span pointing to the closing delimiter of this group.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20014,"byte_end":20083,"line_start":630,"line_end":630,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20088,"byte_end":20091,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20096,"byte_end":20107,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ pub fn span_close(&self) -> Span {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20112,"byte_end":20150,"line_start":633,"line_end":633,"column_start":5,"column_end":43}},{"value":"/                        ^","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20155,"byte_end":20183,"line_start":634,"line_end":634,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20188,"byte_end":20195,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20603,"byte_end":20611,"line_start":646,"line_end":646,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Group>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span for this `Group`'s delimiters, but not its internal\n tokens.","sig":null,"attributes":[{"value":"/ Configures the span for this `Group`'s delimiters, but not its internal","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20290,"byte_end":20365,"line_start":640,"line_end":640,"column_start":5,"column_end":80}},{"value":"/ tokens.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20370,"byte_end":20381,"line_start":641,"line_end":641,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20386,"byte_end":20389,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ This method will **not** set the span of all the internal tokens spanned","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20394,"byte_end":20470,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ by this group, but rather it will only set the span of the delimiter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20475,"byte_end":20547,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ tokens at the level of the `Group`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20552,"byte_end":20591,"line_start":645,"line_end":645,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21424,"byte_end":21429,"line_start":671,"line_end":671,"column_start":12,"column_end":17},"name":"Punct","qualname":"::Punct","value":"Punct {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" An `Punct` is an single punctuation character like `+`, `-` or `#`.","sig":null,"attributes":[{"value":"/ An `Punct` is an single punctuation character like `+`, `-` or `#`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21189,"byte_end":21260,"line_start":666,"line_end":666,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21261,"byte_end":21264,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ Multicharacter operators like `+=` are represented as two instances of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21265,"byte_end":21339,"line_start":668,"line_end":668,"column_start":1,"column_end":75}},{"value":"/ `Punct` with different forms of `Spacing` returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21340,"byte_end":21395,"line_start":669,"line_end":669,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21726,"byte_end":21731,"line_start":682,"line_end":682,"column_start":5,"column_end":10},"name":"Alone","qualname":"::Spacing::Alone","value":"Spacing::Alone","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.\n","sig":null,"attributes":[{"value":"/ E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21669,"byte_end":21721,"line_start":681,"line_end":681,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":780},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21909,"byte_end":21914,"line_start":687,"line_end":687,"column_start":5,"column_end":10},"name":"Joint","qualname":"::Spacing::Joint","value":"Spacing::Joint","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","sig":null,"attributes":[{"value":"/ E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21737,"byte_end":21795,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21800,"byte_end":21803,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Additionally, single quote `'` can join with identifiers to form","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21808,"byte_end":21876,"line_start":685,"line_end":685,"column_start":5,"column_end":73}},{"value":"/ lifetimes `'ident`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21881,"byte_end":21904,"line_start":686,"line_end":686,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":777},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21655,"byte_end":21662,"line_start":680,"line_end":680,"column_start":10,"column_end":17},"name":"Spacing","qualname":"::Spacing","value":"pub enum Spacing {\n\n    /// E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.\n    Alone,\n\n    /// E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.\n    ///\n    /// Additionally, single quote `'` can join with identifiers to form\n    /// lifetimes `'ident`.\n    Joint,\n}","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":780}],"decl_id":null,"docs":" Whether an `Punct` is followed immediately by another `Punct` or followed by\n another token or whitespace.\n","sig":null,"attributes":[{"value":"/ Whether an `Punct` is followed immediately by another `Punct` or followed by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21487,"byte_end":21567,"line_start":677,"line_end":677,"column_start":1,"column_end":81}},{"value":"/ another token or whitespace.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21568,"byte_end":21600,"line_start":678,"line_end":678,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22314,"byte_end":22317,"line_start":698,"line_end":698,"column_start":12,"column_end":15},"name":"new","qualname":"<Punct>::new","value":"pub fn new(char, Spacing) -> Punct","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Punct` from the given character and spacing.","sig":null,"attributes":[{"value":"/ Creates a new `Punct` from the given character and spacing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21936,"byte_end":21999,"line_start":691,"line_end":691,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22004,"byte_end":22007,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The `ch` argument must be a valid punctuation character permitted by the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22012,"byte_end":22088,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22093,"byte_end":22141,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22146,"byte_end":22149,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ The returned `Punct` will have the default span of `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22154,"byte_end":22228,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/ which can be further configured with the `set_span` method below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22233,"byte_end":22302,"line_start":697,"line_end":697,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22542,"byte_end":22549,"line_start":707,"line_end":707,"column_start":12,"column_end":19},"name":"as_char","qualname":"<Punct>::as_char","value":"pub fn as_char(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of this punctuation character as `char`.\n","sig":null,"attributes":[{"value":"/ Returns the value of this punctuation character as `char`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22468,"byte_end":22530,"line_start":706,"line_end":706,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22953,"byte_end":22960,"line_start":716,"line_end":716,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Punct>::spacing","value":"pub fn spacing(&Self) -> Spacing","parent":null,"children":[],"decl_id":null,"docs":" Returns the spacing of this punctuation character, indicating whether\n it's immediately followed by another `Punct` in the token stream, so\n they can potentially be combined into a multicharacter operator\n (`Joint`), or it's followed by some other token or whitespace (`Alone`)\n so the operator has certainly ended.\n","sig":null,"attributes":[{"value":"/ Returns the spacing of this punctuation character, indicating whether","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22594,"byte_end":22667,"line_start":711,"line_end":711,"column_start":5,"column_end":78}},{"value":"/ it's immediately followed by another `Punct` in the token stream, so","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22672,"byte_end":22744,"line_start":712,"line_end":712,"column_start":5,"column_end":77}},{"value":"/ they can potentially be combined into a multicharacter operator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22749,"byte_end":22816,"line_start":713,"line_end":713,"column_start":5,"column_end":72}},{"value":"/ (`Joint`), or it's followed by some other token or whitespace (`Alone`)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22821,"byte_end":22896,"line_start":714,"line_end":714,"column_start":5,"column_end":80}},{"value":"/ so the operator has certainly ended.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":22901,"byte_end":22941,"line_start":715,"line_end":715,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23077,"byte_end":23081,"line_start":721,"line_end":721,"column_start":12,"column_end":16},"name":"span","qualname":"<Punct>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Returns the span for this punctuation character.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23013,"byte_end":23065,"line_start":720,"line_end":720,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23194,"byte_end":23202,"line_start":726,"line_end":726,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Punct>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configure the span for this punctuation character.\n","sig":null,"attributes":[{"value":"/ Configure the span for this punctuation character.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23128,"byte_end":23182,"line_start":725,"line_end":725,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25986,"byte_end":25991,"line_start":814,"line_end":814,"column_start":12,"column_end":17},"name":"Ident","qualname":"::Ident","value":"Ident {  }","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"decl_id":null,"docs":" A word of Rust code, which may be a keyword or legal variable name.","sig":null,"attributes":[{"value":"/ A word of Rust code, which may be a keyword or legal variable name.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23835,"byte_end":23906,"line_start":749,"line_end":749,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23907,"byte_end":23910,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ An identifier consists of at least one Unicode code point, the first of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23911,"byte_end":23986,"line_start":751,"line_end":751,"column_start":1,"column_end":76}},{"value":"/ which has the XID_Start property and the rest of which have the XID_Continue","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23987,"byte_end":24067,"line_start":752,"line_end":752,"column_start":1,"column_end":81}},{"value":"/ property.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24068,"byte_end":24081,"line_start":753,"line_end":753,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24082,"byte_end":24085,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ - The empty string is not an identifier. Use `Option<Ident>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24086,"byte_end":24151,"line_start":755,"line_end":755,"column_start":1,"column_end":66}},{"value":"/ - A lifetime is not an identifier. Use `syn::Lifetime` instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24152,"byte_end":24219,"line_start":756,"line_end":756,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24220,"byte_end":24223,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ An identifier constructed with `Ident::new` is permitted to be a Rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24224,"byte_end":24297,"line_start":758,"line_end":758,"column_start":1,"column_end":74}},{"value":"/ keyword, though parsing one through its [`Parse`] implementation rejects","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24298,"byte_end":24374,"line_start":759,"line_end":759,"column_start":1,"column_end":77}},{"value":"/ Rust keywords. Use `input.call(Ident::parse_any)` when parsing to match the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24375,"byte_end":24454,"line_start":760,"line_end":760,"column_start":1,"column_end":80}},{"value":"/ behaviour of `Ident::new`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24455,"byte_end":24485,"line_start":761,"line_end":761,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24486,"byte_end":24489,"line_start":762,"line_end":762,"column_start":1,"column_end":4}},{"value":"/ [`Parse`]: https://docs.rs/syn/1.0/syn/parse/trait.Parse.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24490,"byte_end":24555,"line_start":763,"line_end":763,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24556,"byte_end":24559,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24560,"byte_end":24574,"line_start":765,"line_end":765,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24575,"byte_end":24578,"line_start":766,"line_end":766,"column_start":1,"column_end":4}},{"value":"/ A new ident can be created from a string using the `Ident::new` function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24579,"byte_end":24656,"line_start":767,"line_end":767,"column_start":1,"column_end":78}},{"value":"/ A span must be provided explicitly which governs the name resolution","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24657,"byte_end":24729,"line_start":768,"line_end":768,"column_start":1,"column_end":73}},{"value":"/ behavior of the resulting identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24730,"byte_end":24771,"line_start":769,"line_end":769,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24772,"byte_end":24775,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24776,"byte_end":24783,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24784,"byte_end":24819,"line_start":772,"line_end":772,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24820,"byte_end":24823,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24824,"byte_end":24839,"line_start":774,"line_end":774,"column_start":1,"column_end":16}},{"value":"/     let call_ident = Ident::new(\"calligraphy\", Span::call_site());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24840,"byte_end":24910,"line_start":775,"line_end":775,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24911,"byte_end":24914,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", call_ident);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24915,"byte_end":24950,"line_start":777,"line_end":777,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24951,"byte_end":24956,"line_start":778,"line_end":778,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24957,"byte_end":24964,"line_start":779,"line_end":779,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24965,"byte_end":24968,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ An ident can be interpolated into a token stream using the `quote!` macro.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":24969,"byte_end":25047,"line_start":781,"line_end":781,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25048,"byte_end":25051,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25052,"byte_end":25059,"line_start":783,"line_end":783,"column_start":1,"column_end":8}},{"value":"/ use proc_macro2::{Ident, Span};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25060,"byte_end":25095,"line_start":784,"line_end":784,"column_start":1,"column_end":36}},{"value":"/ use quote::quote;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25096,"byte_end":25117,"line_start":785,"line_end":785,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25118,"byte_end":25121,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25122,"byte_end":25137,"line_start":787,"line_end":787,"column_start":1,"column_end":16}},{"value":"/     let ident = Ident::new(\"demo\", Span::call_site());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25138,"byte_end":25196,"line_start":788,"line_end":788,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25197,"byte_end":25200,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding whose name is this ident.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25201,"byte_end":25263,"line_start":790,"line_end":790,"column_start":1,"column_end":63}},{"value":"/     let expanded = quote! { let #ident = 10; };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25264,"byte_end":25315,"line_start":791,"line_end":791,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25316,"byte_end":25319,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding with a slightly different name.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25320,"byte_end":25388,"line_start":793,"line_end":793,"column_start":1,"column_end":69}},{"value":"/     let temp_ident = Ident::new(&format!(\"new_{}\", ident), Span::call_site());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25389,"byte_end":25471,"line_start":794,"line_end":794,"column_start":1,"column_end":83}},{"value":"/     let expanded = quote! { let #temp_ident = 10; };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25472,"byte_end":25528,"line_start":795,"line_end":795,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25529,"byte_end":25534,"line_start":796,"line_end":796,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25535,"byte_end":25542,"line_start":797,"line_end":797,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25543,"byte_end":25546,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ A string representation of the ident is available through the `to_string()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25547,"byte_end":25626,"line_start":799,"line_end":799,"column_start":1,"column_end":80}},{"value":"/ method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25627,"byte_end":25638,"line_start":800,"line_end":800,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25639,"byte_end":25642,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25643,"byte_end":25650,"line_start":802,"line_end":802,"column_start":1,"column_end":8}},{"value":"/ # use proc_macro2::{Ident, Span};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25651,"byte_end":25688,"line_start":803,"line_end":803,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25689,"byte_end":25694,"line_start":804,"line_end":804,"column_start":1,"column_end":6}},{"value":"/ # let ident = Ident::new(\"another_identifier\", Span::call_site());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25695,"byte_end":25765,"line_start":805,"line_end":805,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25766,"byte_end":25771,"line_start":806,"line_end":806,"column_start":1,"column_end":6}},{"value":"/ // Examine the ident as a string.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25772,"byte_end":25809,"line_start":807,"line_end":807,"column_start":1,"column_end":38}},{"value":"/ let ident_string = ident.to_string();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25810,"byte_end":25851,"line_start":808,"line_end":808,"column_start":1,"column_end":42}},{"value":"/ if ident_string.len() > 60 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25852,"byte_end":25884,"line_start":809,"line_end":809,"column_start":1,"column_end":33}},{"value":"/     println!(\"Very long identifier: {}\", ident_string)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25885,"byte_end":25943,"line_start":810,"line_end":810,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25944,"byte_end":25949,"line_start":811,"line_end":811,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":25950,"byte_end":25957,"line_start":812,"line_end":812,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27816,"byte_end":27819,"line_start":858,"line_end":858,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"pub fn new(&str, Span) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Ident` with the given `string` as well as the specified\n `span`.","sig":null,"attributes":[{"value":"/ Creates a new `Ident` with the given `string` as well as the specified","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26215,"byte_end":26289,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ `span`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26294,"byte_end":26305,"line_start":828,"line_end":828,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26310,"byte_end":26313,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The `string` argument must be a valid identifier permitted by the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26318,"byte_end":26387,"line_start":830,"line_end":830,"column_start":5,"column_end":74}},{"value":"/ language, otherwise the function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26392,"byte_end":26440,"line_start":831,"line_end":831,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26445,"byte_end":26448,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Note that `span`, currently in rustc, configures the hygiene information","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26453,"byte_end":26529,"line_start":833,"line_end":833,"column_start":5,"column_end":81}},{"value":"/ for this identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26534,"byte_end":26558,"line_start":834,"line_end":834,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26563,"byte_end":26566,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ As of this time `Span::call_site()` explicitly opts-in to \"call-site\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26571,"byte_end":26644,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ hygiene meaning that identifiers created with this span will be resolved","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26649,"byte_end":26725,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ as if they were written directly at the location of the macro call, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26730,"byte_end":26805,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ other code at the macro call site will be able to refer to them as well.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26810,"byte_end":26886,"line_start":839,"line_end":839,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26891,"byte_end":26894,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Later spans like `Span::def_site()` will allow to opt-in to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26899,"byte_end":26962,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/ \"definition-site\" hygiene meaning that identifiers created with this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26967,"byte_end":27039,"line_start":842,"line_end":842,"column_start":5,"column_end":77}},{"value":"/ span will be resolved at the location of the macro definition and other","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27044,"byte_end":27119,"line_start":843,"line_end":843,"column_start":5,"column_end":80}},{"value":"/ code at the macro call site will not be able to refer to them.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27124,"byte_end":27190,"line_start":844,"line_end":844,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27195,"byte_end":27198,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Due to the current importance of hygiene this constructor, unlike other","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27203,"byte_end":27278,"line_start":846,"line_end":846,"column_start":5,"column_end":80}},{"value":"/ tokens, requires a `Span` to be specified at construction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27283,"byte_end":27345,"line_start":847,"line_end":847,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27350,"byte_end":27353,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27358,"byte_end":27370,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27375,"byte_end":27378,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ Panics if the input string is neither a keyword nor a legal variable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27383,"byte_end":27455,"line_start":851,"line_end":851,"column_start":5,"column_end":77}},{"value":"/ name. If you are not sure whether the string contains an identifier and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27460,"byte_end":27535,"line_start":852,"line_end":852,"column_start":5,"column_end":80}},{"value":"/ need to handle an error case, use","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27540,"byte_end":27577,"line_start":853,"line_end":853,"column_start":5,"column_end":42}},{"value":"/ <a href=\"https://docs.rs/syn/1.0/syn/fn.parse_str.html\"><code","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27582,"byte_end":27647,"line_start":854,"line_end":854,"column_start":5,"column_end":70}},{"value":"/   style=\"padding-right:0;\">syn::parse_str</code></a><code","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27652,"byte_end":27713,"line_start":855,"line_end":855,"column_start":5,"column_end":66}},{"value":"/   style=\"padding-left:0;\">::&lt;Ident&gt;</code>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27718,"byte_end":27770,"line_start":856,"line_end":856,"column_start":5,"column_end":57}},{"value":"/ rather than `Ident::new`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":27775,"byte_end":27804,"line_start":857,"line_end":857,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28378,"byte_end":28382,"line_start":875,"line_end":875,"column_start":12,"column_end":16},"name":"span","qualname":"<Ident>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of this `Ident`.\n","sig":null,"attributes":[{"value":"/ Returns the span of this `Ident`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28329,"byte_end":28366,"line_start":874,"line_end":874,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28548,"byte_end":28556,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Ident>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span of this `Ident`, possibly changing its hygiene\n context.\n","sig":null,"attributes":[{"value":"/ Configures the span of this `Ident`, possibly changing its hygiene","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28449,"byte_end":28519,"line_start":879,"line_end":879,"column_start":5,"column_end":75}},{"value":"/ context.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28524,"byte_end":28536,"line_start":880,"line_end":880,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":798},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29962,"byte_end":29969,"line_start":942,"line_end":942,"column_start":12,"column_end":19},"name":"Literal","qualname":"::Literal","value":"Literal {  }","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"decl_id":null,"docs":" A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),\n byte character (`b'a'`), an integer or floating point number with or without\n a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","sig":null,"attributes":[{"value":"/ A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29638,"byte_end":29716,"line_start":935,"line_end":935,"column_start":1,"column_end":79}},{"value":"/ byte character (`b'a'`), an integer or floating point number with or without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29717,"byte_end":29797,"line_start":936,"line_end":936,"column_start":1,"column_end":81}},{"value":"/ a suffix (`1`, `1u8`, `2.3`, `2.3f32`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29798,"byte_end":29841,"line_start":937,"line_end":937,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29842,"byte_end":29845,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ Boolean literals like `true` and `false` do not belong here, they are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29846,"byte_end":29919,"line_start":939,"line_end":939,"column_start":1,"column_end":74}},{"value":"/ `Ident`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29920,"byte_end":29933,"line_start":940,"line_end":940,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32238,"byte_end":32249,"line_start":1003,"line_end":1003,"column_start":9,"column_end":20},"name":"u8_suffixed","qualname":"<Literal>::u8_suffixed","value":"pub fn u8_suffixed(u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32265,"byte_end":32277,"line_start":1004,"line_end":1004,"column_start":9,"column_end":21},"name":"u16_suffixed","qualname":"<Literal>::u16_suffixed","value":"pub fn u16_suffixed(u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32294,"byte_end":32306,"line_start":1005,"line_end":1005,"column_start":9,"column_end":21},"name":"u32_suffixed","qualname":"<Literal>::u32_suffixed","value":"pub fn u32_suffixed(u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32323,"byte_end":32335,"line_start":1006,"line_end":1006,"column_start":9,"column_end":21},"name":"u64_suffixed","qualname":"<Literal>::u64_suffixed","value":"pub fn u64_suffixed(u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32352,"byte_end":32365,"line_start":1007,"line_end":1007,"column_start":9,"column_end":22},"name":"u128_suffixed","qualname":"<Literal>::u128_suffixed","value":"pub fn u128_suffixed(u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32383,"byte_end":32397,"line_start":1008,"line_end":1008,"column_start":9,"column_end":23},"name":"usize_suffixed","qualname":"<Literal>::usize_suffixed","value":"pub fn usize_suffixed(usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32416,"byte_end":32427,"line_start":1009,"line_end":1009,"column_start":9,"column_end":20},"name":"i8_suffixed","qualname":"<Literal>::i8_suffixed","value":"pub fn i8_suffixed(i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32443,"byte_end":32455,"line_start":1010,"line_end":1010,"column_start":9,"column_end":21},"name":"i16_suffixed","qualname":"<Literal>::i16_suffixed","value":"pub fn i16_suffixed(i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32472,"byte_end":32484,"line_start":1011,"line_end":1011,"column_start":9,"column_end":21},"name":"i32_suffixed","qualname":"<Literal>::i32_suffixed","value":"pub fn i32_suffixed(i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32501,"byte_end":32513,"line_start":1012,"line_end":1012,"column_start":9,"column_end":21},"name":"i64_suffixed","qualname":"<Literal>::i64_suffixed","value":"pub fn i64_suffixed(i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32530,"byte_end":32543,"line_start":1013,"line_end":1013,"column_start":9,"column_end":22},"name":"i128_suffixed","qualname":"<Literal>::i128_suffixed","value":"pub fn i128_suffixed(i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32561,"byte_end":32575,"line_start":1014,"line_end":1014,"column_start":9,"column_end":23},"name":"isize_suffixed","qualname":"<Literal>::isize_suffixed","value":"pub fn isize_suffixed(isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new suffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30132,"byte_end":30200,"line_start":949,"line_end":949,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30209,"byte_end":30212,"line_start":950,"line_end":950,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1u32` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30221,"byte_end":30291,"line_start":951,"line_end":951,"column_start":9,"column_end":79}},{"value":"/ value specified is the first part of the token and the integral is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30300,"byte_end":30370,"line_start":952,"line_end":952,"column_start":9,"column_end":79}},{"value":"/ also suffixed at the end. Literals created from negative numbers may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30379,"byte_end":30451,"line_start":953,"line_end":953,"column_start":9,"column_end":81}},{"value":"/ not survive rountrips through `TokenStream` or strings and may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30460,"byte_end":30529,"line_start":954,"line_end":954,"column_start":9,"column_end":78}},{"value":"/ broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30538,"byte_end":30592,"line_start":955,"line_end":955,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30601,"byte_end":30604,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30613,"byte_end":30682,"line_start":957,"line_end":957,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30691,"byte_end":30762,"line_start":958,"line_end":958,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30771,"byte_end":30781,"line_start":959,"line_end":959,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32632,"byte_end":32645,"line_start":1018,"line_end":1018,"column_start":9,"column_end":22},"name":"u8_unsuffixed","qualname":"<Literal>::u8_unsuffixed","value":"pub fn u8_unsuffixed(u8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32661,"byte_end":32675,"line_start":1019,"line_end":1019,"column_start":9,"column_end":23},"name":"u16_unsuffixed","qualname":"<Literal>::u16_unsuffixed","value":"pub fn u16_unsuffixed(u16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32692,"byte_end":32706,"line_start":1020,"line_end":1020,"column_start":9,"column_end":23},"name":"u32_unsuffixed","qualname":"<Literal>::u32_unsuffixed","value":"pub fn u32_unsuffixed(u32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32723,"byte_end":32737,"line_start":1021,"line_end":1021,"column_start":9,"column_end":23},"name":"u64_unsuffixed","qualname":"<Literal>::u64_unsuffixed","value":"pub fn u64_unsuffixed(u64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32754,"byte_end":32769,"line_start":1022,"line_end":1022,"column_start":9,"column_end":24},"name":"u128_unsuffixed","qualname":"<Literal>::u128_unsuffixed","value":"pub fn u128_unsuffixed(u128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32787,"byte_end":32803,"line_start":1023,"line_end":1023,"column_start":9,"column_end":25},"name":"usize_unsuffixed","qualname":"<Literal>::usize_unsuffixed","value":"pub fn usize_unsuffixed(usize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32822,"byte_end":32835,"line_start":1024,"line_end":1024,"column_start":9,"column_end":22},"name":"i8_unsuffixed","qualname":"<Literal>::i8_unsuffixed","value":"pub fn i8_unsuffixed(i8) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32851,"byte_end":32865,"line_start":1025,"line_end":1025,"column_start":9,"column_end":23},"name":"i16_unsuffixed","qualname":"<Literal>::i16_unsuffixed","value":"pub fn i16_unsuffixed(i16) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32882,"byte_end":32896,"line_start":1026,"line_end":1026,"column_start":9,"column_end":23},"name":"i32_unsuffixed","qualname":"<Literal>::i32_unsuffixed","value":"pub fn i32_unsuffixed(i32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32913,"byte_end":32927,"line_start":1027,"line_end":1027,"column_start":9,"column_end":23},"name":"i64_unsuffixed","qualname":"<Literal>::i64_unsuffixed","value":"pub fn i64_unsuffixed(i64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32944,"byte_end":32959,"line_start":1028,"line_end":1028,"column_start":9,"column_end":24},"name":"i128_unsuffixed","qualname":"<Literal>::i128_unsuffixed","value":"pub fn i128_unsuffixed(i128) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":32977,"byte_end":32993,"line_start":1029,"line_end":1029,"column_start":9,"column_end":25},"name":"isize_unsuffixed","qualname":"<Literal>::isize_unsuffixed","value":"pub fn isize_unsuffixed(isize) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed integer literal with the specified value.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed integer literal with the specified value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":30989,"byte_end":31059,"line_start":968,"line_end":968,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31068,"byte_end":31071,"line_start":969,"line_end":969,"column_start":9,"column_end":12}},{"value":"/ This function will create an integer like `1` where the integer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31080,"byte_end":31147,"line_start":970,"line_end":970,"column_start":9,"column_end":76}},{"value":"/ value specified is the first part of the token. No suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31156,"byte_end":31220,"line_start":971,"line_end":971,"column_start":9,"column_end":73}},{"value":"/ specified on this token, meaning that invocations like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31229,"byte_end":31287,"line_start":972,"line_end":972,"column_start":9,"column_end":67}},{"value":"/ `Literal::i8_unsuffixed(1)` are equivalent to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31296,"byte_end":31345,"line_start":973,"line_end":973,"column_start":9,"column_end":58}},{"value":"/ `Literal::u32_unsuffixed(1)`. Literals created from negative numbers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31354,"byte_end":31426,"line_start":974,"line_end":974,"column_start":9,"column_end":81}},{"value":"/ may not survive rountrips through `TokenStream` or strings and may","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31435,"byte_end":31505,"line_start":975,"line_end":975,"column_start":9,"column_end":79}},{"value":"/ be broken into two tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31514,"byte_end":31571,"line_start":976,"line_end":976,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31580,"byte_end":31583,"line_start":977,"line_end":977,"column_start":9,"column_end":12}},{"value":"/ Literals created through this method have the `Span::call_site()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31592,"byte_end":31661,"line_start":978,"line_end":978,"column_start":9,"column_end":78}},{"value":"/ span by default, which can be configured with the `set_span` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31670,"byte_end":31741,"line_start":979,"line_end":979,"column_start":9,"column_end":80}},{"value":"/ below.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31750,"byte_end":31760,"line_start":980,"line_end":980,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33674,"byte_end":33688,"line_start":1045,"line_end":1045,"column_start":12,"column_end":26},"name":"f64_unsuffixed","qualname":"<Literal>::f64_unsuffixed","value":"pub fn f64_unsuffixed(f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33015,"byte_end":33067,"line_start":1032,"line_end":1032,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33072,"byte_end":33075,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33080,"byte_end":33156,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33161,"byte_end":33234,"line_start":1035,"line_end":1035,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33239,"byte_end":33307,"line_start":1036,"line_end":1036,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33312,"byte_end":33388,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33393,"byte_end":33464,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33469,"byte_end":33491,"line_start":1039,"line_end":1039,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33496,"byte_end":33499,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33504,"byte_end":33516,"line_start":1041,"line_end":1041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33521,"byte_end":33524,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33529,"byte_end":33603,"line_start":1043,"line_end":1043,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33608,"byte_end":33662,"line_start":1044,"line_end":1044,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34476,"byte_end":34488,"line_start":1063,"line_end":1063,"column_start":12,"column_end":24},"name":"f64_suffixed","qualname":"<Literal>::f64_suffixed","value":"pub fn f64_suffixed(f64) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33808,"byte_end":33858,"line_start":1050,"line_end":1050,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33863,"byte_end":33866,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f64` where the value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33871,"byte_end":33943,"line_start":1052,"line_end":1052,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f64` is the suffix of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":33948,"byte_end":34023,"line_start":1053,"line_end":1053,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f64` in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34028,"byte_end":34099,"line_start":1054,"line_end":1054,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34104,"byte_end":34172,"line_start":1055,"line_end":1055,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34177,"byte_end":34250,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34255,"byte_end":34293,"line_start":1057,"line_end":1057,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34298,"byte_end":34301,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34306,"byte_end":34318,"line_start":1059,"line_end":1059,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34323,"byte_end":34326,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34331,"byte_end":34405,"line_start":1061,"line_end":1061,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34410,"byte_end":34464,"line_start":1062,"line_end":1062,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35265,"byte_end":35279,"line_start":1081,"line_end":1081,"column_start":12,"column_end":26},"name":"f32_unsuffixed","qualname":"<Literal>::f32_unsuffixed","value":"pub fn f32_unsuffixed(f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unsuffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new unsuffixed floating-point literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34606,"byte_end":34658,"line_start":1068,"line_end":1068,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34663,"byte_end":34666,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This constructor is similar to those like `Literal::i8_unsuffixed` where","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34671,"byte_end":34747,"line_start":1070,"line_end":1070,"column_start":5,"column_end":81}},{"value":"/ the float's value is emitted directly into the token but no suffix is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34752,"byte_end":34825,"line_start":1071,"line_end":1071,"column_start":5,"column_end":78}},{"value":"/ used, so it may be inferred to be a `f64` later in the compiler.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34830,"byte_end":34898,"line_start":1072,"line_end":1072,"column_start":5,"column_end":73}},{"value":"/ Literals created from negative numbers may not survive rountrips through","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34903,"byte_end":34979,"line_start":1073,"line_end":1073,"column_start":5,"column_end":81}},{"value":"/ `TokenStream` or strings and may be broken into two tokens (`-` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":34984,"byte_end":35055,"line_start":1074,"line_end":1074,"column_start":5,"column_end":76}},{"value":"/ positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35060,"byte_end":35082,"line_start":1075,"line_end":1075,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35087,"byte_end":35090,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35095,"byte_end":35107,"line_start":1077,"line_end":1077,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35112,"byte_end":35115,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35120,"byte_end":35194,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35199,"byte_end":35253,"line_start":1080,"line_end":1080,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36067,"byte_end":36079,"line_start":1099,"line_end":1099,"column_start":12,"column_end":24},"name":"f32_suffixed","qualname":"<Literal>::f32_suffixed","value":"pub fn f32_suffixed(f32) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Creates a new suffixed floating-point literal.","sig":null,"attributes":[{"value":"/ Creates a new suffixed floating-point literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35399,"byte_end":35449,"line_start":1086,"line_end":1086,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35454,"byte_end":35457,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ This constructor will create a literal like `1.0f32` where the value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35462,"byte_end":35534,"line_start":1088,"line_end":1088,"column_start":5,"column_end":77}},{"value":"/ specified is the preceding part of the token and `f32` is the suffix of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35539,"byte_end":35614,"line_start":1089,"line_end":1089,"column_start":5,"column_end":80}},{"value":"/ the token. This token will always be inferred to be an `f32` in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35619,"byte_end":35690,"line_start":1090,"line_end":1090,"column_start":5,"column_end":76}},{"value":"/ compiler. Literals created from negative numbers may not survive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35695,"byte_end":35763,"line_start":1091,"line_end":1091,"column_start":5,"column_end":73}},{"value":"/ rountrips through `TokenStream` or strings and may be broken into two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35768,"byte_end":35841,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/ tokens (`-` and positive literal).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35846,"byte_end":35884,"line_start":1093,"line_end":1093,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35889,"byte_end":35892,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35897,"byte_end":35909,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35914,"byte_end":35917,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ This function requires that the specified float is finite, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":35922,"byte_end":35996,"line_start":1097,"line_end":1097,"column_start":5,"column_end":79}},{"value":"/ if it is infinity or NaN this function will panic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36001,"byte_end":36055,"line_start":1098,"line_end":1098,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36228,"byte_end":36234,"line_start":1105,"line_end":1105,"column_start":12,"column_end":18},"name":"string","qualname":"<Literal>::string","value":"pub fn string(&str) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" String literal.\n","sig":null,"attributes":[{"value":"/ String literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36197,"byte_end":36216,"line_start":1104,"line_end":1104,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36359,"byte_end":36368,"line_start":1110,"line_end":1110,"column_start":12,"column_end":21},"name":"character","qualname":"<Literal>::character","value":"pub fn character(char) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Character literal.\n","sig":null,"attributes":[{"value":"/ Character literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36325,"byte_end":36347,"line_start":1109,"line_end":1109,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36490,"byte_end":36501,"line_start":1115,"line_end":1115,"column_start":12,"column_end":23},"name":"byte_string","qualname":"<Literal>::byte_string","value":"pub fn byte_string(&[u8]) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Byte string literal.\n","sig":null,"attributes":[{"value":"/ Byte string literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36454,"byte_end":36478,"line_start":1114,"line_end":1114,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36647,"byte_end":36651,"line_start":1120,"line_end":1120,"column_start":12,"column_end":16},"name":"span","qualname":"<Literal>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span encompassing this literal.\n","sig":null,"attributes":[{"value":"/ Returns the span encompassing this literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36588,"byte_end":36635,"line_start":1119,"line_end":1119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36782,"byte_end":36790,"line_start":1125,"line_end":1125,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Literal>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":" Configures the span associated for this literal.\n","sig":null,"attributes":[{"value":"/ Configures the span associated for this literal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36718,"byte_end":36770,"line_start":1124,"line_end":1124,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37425,"byte_end":37432,"line_start":1138,"line_end":1138,"column_start":12,"column_end":19},"name":"subspan","qualname":"<Literal>::subspan","value":"pub fn subspan<R: RangeBounds<usize>>(&Self, R) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Span` that is a subset of `self.span()` containing only\n the source bytes in range `range`. Returns `None` if the would-be\n trimmed span is outside the bounds of `self`.","sig":null,"attributes":[{"value":"/ Returns a `Span` that is a subset of `self.span()` containing only","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36868,"byte_end":36938,"line_start":1129,"line_end":1129,"column_start":5,"column_end":75}},{"value":"/ the source bytes in range `range`. Returns `None` if the would-be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":36943,"byte_end":37012,"line_start":1130,"line_end":1130,"column_start":5,"column_end":74}},{"value":"/ trimmed span is outside the bounds of `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37017,"byte_end":37066,"line_start":1131,"line_end":1131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37071,"byte_end":37074,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Warning: the underlying [`proc_macro::Literal::subspan`] method is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37079,"byte_end":37149,"line_start":1133,"line_end":1133,"column_start":5,"column_end":75}},{"value":"/ nightly-only. When called from within a procedural macro not using a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37154,"byte_end":37226,"line_start":1134,"line_end":1134,"column_start":5,"column_end":77}},{"value":"/ nightly compiler, this method will always return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37231,"byte_end":37291,"line_start":1135,"line_end":1135,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37296,"byte_end":37299,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ [`proc_macro::Literal::subspan`]: https://doc.rust-lang.org/proc_macro/struct.Literal.html#method.subspan","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37304,"byte_end":37413,"line_start":1137,"line_end":1137,"column_start":5,"column_end":114}}]},{"kind":"Mod","id":{"krate":0,"index":486},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37889,"byte_end":37901,"line_start":1156,"line_end":1156,"column_start":9,"column_end":21},"name":"token_stream","qualname":"::token_stream","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":499}],"decl_id":null,"docs":" Public implementation details for the `TokenStream` type, such as iterators.\n","sig":null,"attributes":[{"value":"/ Public implementation details for the `TokenStream` type, such as iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37800,"byte_end":37880,"line_start":1155,"line_end":1155,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":827},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38272,"byte_end":38280,"line_start":1169,"line_end":1169,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::token_stream::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"decl_id":null,"docs":" An iterator over `TokenStream`'s `TokenTree`s.","sig":null,"attributes":[{"value":"/ An iterator over `TokenStream`'s `TokenTree`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38035,"byte_end":38085,"line_start":1164,"line_end":1164,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38090,"byte_end":38093,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ The iteration is \"shallow\", e.g. the iterator doesn't recurse into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38098,"byte_end":38168,"line_start":1166,"line_end":1166,"column_start":5,"column_end":75}},{"value":"/ delimited groups, and returns whole groups as token trees.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38173,"byte_end":38235,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/strnom.rs","byte_start":39276,"byte_end":39282,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49678,"byte_end":49689,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":50336,"byte_end":50347,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":50871,"byte_end":50882,"line_start":75,"line_end":75,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52268,"byte_end":52279,"line_start":113,"line_end":113,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52504,"byte_end":52515,"line_start":121,"line_end":121,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52768,"byte_end":52779,"line_start":131,"line_end":131,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52995,"byte_end":53006,"line_start":140,"line_end":140,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53145,"byte_end":53156,"line_start":146,"line_end":146,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53430,"byte_end":53441,"line_start":158,"line_end":158,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53713,"byte_end":53724,"line_start":170,"line_end":170,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53875,"byte_end":53886,"line_start":176,"line_end":176,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54135,"byte_end":54146,"line_start":185,"line_end":185,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54377,"byte_end":54387,"line_start":199,"line_end":199,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54648,"byte_end":54658,"line_start":211,"line_end":211,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":58248,"byte_end":58252,"line_start":353,"line_end":353,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":60355,"byte_end":60359,"line_start":432,"line_end":432,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":60883,"byte_end":60888,"line_start":455,"line_end":455,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":61510,"byte_end":61515,"line_start":489,"line_end":489,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":61952,"byte_end":61957,"line_start":506,"line_end":506,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":62374,"byte_end":62379,"line_start":524,"line_end":524,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64087,"byte_end":64092,"line_start":598,"line_end":598,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64226,"byte_end":64231,"line_start":604,"line_end":604,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64514,"byte_end":64519,"line_start":618,"line_end":618,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64692,"byte_end":64697,"line_start":627,"line_end":627,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":65805,"byte_end":65812,"line_start":671,"line_end":671,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":68888,"byte_end":68895,"line_start":787,"line_end":787,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":69011,"byte_end":69018,"line_start":793,"line_end":793,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89224,"byte_end":89243,"line_start":93,"line_end":93,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89711,"byte_end":89722,"line_start":115,"line_end":115,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":90585,"byte_end":90596,"line_start":146,"line_end":146,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":90935,"byte_end":90946,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91223,"byte_end":91234,"line_start":169,"line_end":169,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91409,"byte_end":91420,"line_start":175,"line_end":175,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91713,"byte_end":91724,"line_start":184,"line_end":184,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":92563,"byte_end":92574,"line_start":208,"line_end":208,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":92871,"byte_end":92882,"line_start":218,"line_end":218,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":93271,"byte_end":93282,"line_start":230,"line_end":230,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":94194,"byte_end":94205,"line_start":254,"line_end":254,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":94636,"byte_end":94647,"line_start":267,"line_end":267,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95139,"byte_end":95150,"line_start":282,"line_end":282,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95424,"byte_end":95432,"line_start":291,"line_end":291,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95559,"byte_end":95567,"line_start":297,"line_end":297,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95678,"byte_end":95686,"line_start":303,"line_end":303,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":96038,"byte_end":96049,"line_start":318,"line_end":318,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":96434,"byte_end":96447,"line_start":332,"line_end":332,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":97689,"byte_end":97702,"line_start":364,"line_end":364,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":99005,"byte_end":99009,"line_start":421,"line_end":421,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102650,"byte_end":102654,"line_start":533,"line_end":533,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102807,"byte_end":102811,"line_start":539,"line_end":539,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102918,"byte_end":102922,"line_start":545,"line_end":545,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":103483,"byte_end":103488,"line_start":569,"line_end":569,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106315,"byte_end":106320,"line_start":649,"line_end":649,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106423,"byte_end":106428,"line_start":655,"line_end":655,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106678,"byte_end":106683,"line_start":664,"line_end":664,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":107019,"byte_end":107024,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":108537,"byte_end":108542,"line_start":727,"line_end":727,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":108842,"byte_end":108847,"line_start":737,"line_end":737,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":109124,"byte_end":109129,"line_start":750,"line_end":750,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":109339,"byte_end":109344,"line_start":759,"line_end":759,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":110325,"byte_end":110332,"line_start":798,"line_end":798,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113484,"byte_end":113491,"line_start":905,"line_end":905,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113601,"byte_end":113608,"line_start":911,"line_end":911,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113822,"byte_end":113829,"line_start":920,"line_end":920,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4556,"byte_end":4567,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5311,"byte_end":5322,"line_start":156,"line_end":156,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5794,"byte_end":5805,"line_start":170,"line_end":170,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6128,"byte_end":6139,"line_start":183,"line_end":183,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6314,"byte_end":6325,"line_start":190,"line_end":190,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6450,"byte_end":6461,"line_start":196,"line_end":196,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6597,"byte_end":6608,"line_start":202,"line_end":202,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6758,"byte_end":6769,"line_start":208,"line_end":208,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7036,"byte_end":7047,"line_start":216,"line_end":216,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7224,"byte_end":7235,"line_start":221,"line_end":221,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7670,"byte_end":7681,"line_start":231,"line_end":231,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7851,"byte_end":7862,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7979,"byte_end":7987,"line_start":244,"line_end":244,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10137,"byte_end":10141,"line_start":321,"line_end":321,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14370,"byte_end":14374,"line_start":442,"line_end":442,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14893,"byte_end":14902,"line_start":461,"line_end":461,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15918,"byte_end":15927,"line_start":488,"line_end":488,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16025,"byte_end":16034,"line_start":494,"line_end":494,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16132,"byte_end":16141,"line_start":500,"line_end":500,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16241,"byte_end":16250,"line_start":506,"line_end":506,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16600,"byte_end":16609,"line_start":516,"line_end":516,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16988,"byte_end":16997,"line_start":528,"line_end":528,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18452,"byte_end":18457,"line_start":574,"line_end":574,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20903,"byte_end":20908,"line_start":654,"line_end":654,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21057,"byte_end":21062,"line_start":660,"line_end":660,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21924,"byte_end":21929,"line_start":690,"line_end":690,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23406,"byte_end":23411,"line_start":733,"line_end":733,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23525,"byte_end":23530,"line_start":739,"line_end":739,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26067,"byte_end":26072,"line_start":819,"line_end":819,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28651,"byte_end":28656,"line_start":886,"line_end":886,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28769,"byte_end":28774,"line_start":892,"line_end":892,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28898,"byte_end":28903,"line_start":901,"line_end":901,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28928,"byte_end":28933,"line_start":903,"line_end":903,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29051,"byte_end":29056,"line_start":909,"line_end":909,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29178,"byte_end":29183,"line_start":915,"line_end":915,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29414,"byte_end":29419,"line_start":923,"line_end":923,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29536,"byte_end":29541,"line_start":929,"line_end":929,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31881,"byte_end":31888,"line_start":987,"line_end":987,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37570,"byte_end":37577,"line_start":1143,"line_end":1143,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37696,"byte_end":37703,"line_start":1149,"line_end":1149,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38393,"byte_end":38401,"line_start":1174,"line_end":1174,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38557,"byte_end":38565,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38704,"byte_end":38715,"line_start":1188,"line_end":1188,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/strnom.rs","byte_start":39276,"byte_end":39282,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":49678,"byte_end":49689,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":50336,"byte_end":50347,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":8571}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":50871,"byte_end":50882,"line_start":75,"line_end":75,"column_start":23,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52268,"byte_end":52279,"line_start":113,"line_end":113,"column_start":21,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52504,"byte_end":52515,"line_start":121,"line_end":121,"column_start":40,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52768,"byte_end":52779,"line_start":131,"line_end":131,"column_start":40,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":16,"index":3041},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":52995,"byte_end":53006,"line_start":140,"line_end":140,"column_start":26,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53145,"byte_end":53156,"line_start":146,"line_end":146,"column_start":40,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53430,"byte_end":53441,"line_start":158,"line_end":158,"column_start":42,"column_end":53},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53713,"byte_end":53724,"line_start":170,"line_end":170,"column_start":28,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":53875,"byte_end":53886,"line_start":176,"line_end":176,"column_start":30,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54135,"byte_end":54146,"line_start":185,"line_end":185,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":522},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54377,"byte_end":54387,"line_start":199,"line_end":199,"column_start":6,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":54648,"byte_end":54658,"line_start":211,"line_end":211,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":530},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":58248,"byte_end":58252,"line_start":353,"line_end":353,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":60355,"byte_end":60359,"line_start":432,"line_end":432,"column_start":21,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":556},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":60883,"byte_end":60888,"line_start":455,"line_end":455,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":61510,"byte_end":61515,"line_start":489,"line_end":489,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":61952,"byte_end":61957,"line_start":506,"line_end":506,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":62374,"byte_end":62379,"line_start":524,"line_end":524,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64087,"byte_end":64092,"line_start":598,"line_end":598,"column_start":20,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64226,"byte_end":64231,"line_start":604,"line_end":604,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64514,"byte_end":64519,"line_start":618,"line_end":618,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":64692,"byte_end":64697,"line_start":627,"line_end":627,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":65805,"byte_end":65812,"line_start":671,"line_end":671,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":68888,"byte_end":68895,"line_start":787,"line_end":787,"column_start":23,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/fallback.rs","byte_start":69011,"byte_end":69018,"line_start":793,"line_end":793,"column_start":21,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89224,"byte_end":89243,"line_start":93,"line_end":93,"column_start":6,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":89711,"byte_end":89722,"line_start":115,"line_end":115,"column_start":6,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":90585,"byte_end":90596,"line_start":146,"line_end":146,"column_start":18,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":8571}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":90935,"byte_end":90946,"line_start":160,"line_end":160,"column_start":23,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91223,"byte_end":91234,"line_start":169,"line_end":169,"column_start":40,"column_end":51},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91409,"byte_end":91420,"line_start":175,"line_end":175,"column_start":40,"column_end":51},"kind":{"Impl":{"id":33}},"from":{"krate":16,"index":3041},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":91713,"byte_end":91724,"line_start":184,"line_end":184,"column_start":38,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":92563,"byte_end":92574,"line_start":208,"line_end":208,"column_start":26,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":92871,"byte_end":92882,"line_start":218,"line_end":218,"column_start":40,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":93271,"byte_end":93282,"line_start":230,"line_end":230,"column_start":42,"column_end":53},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":94194,"byte_end":94205,"line_start":254,"line_end":254,"column_start":28,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":94636,"byte_end":94647,"line_start":267,"line_end":267,"column_start":30,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95139,"byte_end":95150,"line_start":282,"line_end":282,"column_start":21,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95424,"byte_end":95432,"line_start":291,"line_end":291,"column_start":37,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95559,"byte_end":95567,"line_start":297,"line_end":297,"column_start":35,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":95678,"byte_end":95686,"line_start":303,"line_end":303,"column_start":21,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":96038,"byte_end":96049,"line_start":318,"line_end":318,"column_start":23,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":96434,"byte_end":96447,"line_start":332,"line_end":332,"column_start":19,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":97689,"byte_end":97702,"line_start":364,"line_end":364,"column_start":21,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":99005,"byte_end":99009,"line_start":421,"line_end":421,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102650,"byte_end":102654,"line_start":533,"line_end":533,"column_start":40,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102807,"byte_end":102811,"line_start":539,"line_end":539,"column_start":31,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":102918,"byte_end":102922,"line_start":545,"line_end":545,"column_start":21,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":658},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":103483,"byte_end":103488,"line_start":569,"line_end":569,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106315,"byte_end":106320,"line_start":649,"line_end":649,"column_start":32,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106423,"byte_end":106428,"line_start":655,"line_end":655,"column_start":23,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":106678,"byte_end":106683,"line_start":664,"line_end":664,"column_start":21,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":107019,"byte_end":107024,"line_start":679,"line_end":679,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":108537,"byte_end":108542,"line_start":727,"line_end":727,"column_start":20,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":108842,"byte_end":108847,"line_start":737,"line_end":737,"column_start":26,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":109124,"byte_end":109129,"line_start":750,"line_end":750,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":109339,"byte_end":109344,"line_start":759,"line_end":759,"column_start":21,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":110325,"byte_end":110332,"line_start":798,"line_end":798,"column_start":6,"column_end":13},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113484,"byte_end":113491,"line_start":905,"line_end":905,"column_start":34,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113601,"byte_end":113608,"line_start":911,"line_end":911,"column_start":23,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/wrapper.rs","byte_start":113822,"byte_end":113829,"line_start":920,"line_end":920,"column_start":21,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":4556,"byte_end":4567,"line_start":128,"line_end":128,"column_start":6,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5311,"byte_end":5322,"line_start":156,"line_end":156,"column_start":18,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":5794,"byte_end":5805,"line_start":170,"line_end":170,"column_start":18,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":8571}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6128,"byte_end":6139,"line_start":183,"line_end":183,"column_start":40,"column_end":51},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6314,"byte_end":6325,"line_start":190,"line_end":190,"column_start":40,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":16,"index":3041},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6450,"byte_end":6461,"line_start":196,"line_end":196,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6597,"byte_end":6608,"line_start":202,"line_end":202,"column_start":28,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":6758,"byte_end":6769,"line_start":208,"line_end":208,"column_start":30,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7036,"byte_end":7047,"line_start":216,"line_end":216,"column_start":34,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7224,"byte_end":7235,"line_start":221,"line_end":221,"column_start":36,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7670,"byte_end":7681,"line_start":231,"line_end":231,"column_start":23,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7851,"byte_end":7862,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":7979,"byte_end":7987,"line_start":244,"line_end":244,"column_start":21,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":10137,"byte_end":10141,"line_start":321,"line_end":321,"column_start":6,"column_end":10},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14370,"byte_end":14374,"line_start":442,"line_end":442,"column_start":21,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":14893,"byte_end":14902,"line_start":461,"line_end":461,"column_start":6,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":15918,"byte_end":15927,"line_start":488,"line_end":488,"column_start":22,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16025,"byte_end":16034,"line_start":494,"line_end":494,"column_start":22,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16132,"byte_end":16141,"line_start":500,"line_end":500,"column_start":22,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16241,"byte_end":16250,"line_start":506,"line_end":506,"column_start":24,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16600,"byte_end":16609,"line_start":516,"line_end":516,"column_start":23,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":16988,"byte_end":16997,"line_start":528,"line_end":528,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":18452,"byte_end":18457,"line_start":574,"line_end":574,"column_start":6,"column_end":11},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":20903,"byte_end":20908,"line_start":654,"line_end":654,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21057,"byte_end":21062,"line_start":660,"line_end":660,"column_start":21,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":21924,"byte_end":21929,"line_start":690,"line_end":690,"column_start":6,"column_end":11},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23406,"byte_end":23411,"line_start":733,"line_end":733,"column_start":23,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":771},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":23525,"byte_end":23530,"line_start":739,"line_end":739,"column_start":21,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":771},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":26067,"byte_end":26072,"line_start":819,"line_end":819,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28651,"byte_end":28656,"line_start":886,"line_end":886,"column_start":20,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28769,"byte_end":28774,"line_start":892,"line_end":892,"column_start":26,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28898,"byte_end":28903,"line_start":901,"line_end":901,"column_start":13,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":28928,"byte_end":28933,"line_start":903,"line_end":903,"column_start":21,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29051,"byte_end":29056,"line_start":909,"line_end":909,"column_start":14,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":1796}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29178,"byte_end":29183,"line_start":915,"line_end":915,"column_start":15,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":6787}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29414,"byte_end":29419,"line_start":923,"line_end":923,"column_start":23,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":29536,"byte_end":29541,"line_start":929,"line_end":929,"column_start":21,"column_end":26},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":31881,"byte_end":31888,"line_start":987,"line_end":987,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37570,"byte_end":37577,"line_start":1143,"line_end":1143,"column_start":21,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":37696,"byte_end":37703,"line_start":1149,"line_end":1149,"column_start":23,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38393,"byte_end":38401,"line_start":1174,"line_end":1174,"column_start":23,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":827},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38557,"byte_end":38565,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":827},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro2-1.0.6/src/lib.rs","byte_start":38704,"byte_end":38715,"line_start":1188,"line_end":1188,"column_start":27,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":5210}}]}