{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bit_vec","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=63cd926710d0ca6e","-C","extra-filename=-63cd926710d0ca6e","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libbit_vec-63cd926710d0ca6e.rmeta"},"prelude":{"crate_id":{"name":"bit_vec","disambiguator":[11714817005772177859,2350563430619341729]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1592,"byte_end":65885,"line_start":31,"line_end":2138,"column_start":1,"column_end":50}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1592,"byte_end":65885,"line_start":31,"line_end":2138,"column_start":1,"column_end":50},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":183},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":207},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":51},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":123},{"krate":0,"index":127},{"krate":0,"index":213},{"krate":0,"index":218},{"krate":0,"index":129},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":180}],"decl_id":null,"docs":" Collections implemented with bit vectors.","sig":null,"attributes":[{"value":"/ Collections implemented with bit vectors.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1592,"byte_end":1637,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1638,"byte_end":1641,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1642,"byte_end":1656,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1657,"byte_end":1660,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This is a simple example of the [Sieve of Eratosthenes][sieve]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1661,"byte_end":1727,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ which calculates prime numbers up to a given limit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1728,"byte_end":1783,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1784,"byte_end":1787,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [sieve]: http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1788,"byte_end":1851,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1852,"byte_end":1855,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1856,"byte_end":1863,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1864,"byte_end":1888,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1889,"byte_end":1892,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let max_prime = 10000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1893,"byte_end":1919,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1920,"byte_end":1923,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Store the primes as a BitVec","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1924,"byte_end":1959,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ let primes = {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1960,"byte_end":1978,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     // Assume all numbers are prime to begin, and then we","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":1979,"byte_end":2040,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/     // cross off non-primes progressively","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2041,"byte_end":2086,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"/     let mut bv = BitVec::from_elem(max_prime, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2087,"byte_end":2143,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2144,"byte_end":2147,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // Neither 0 nor 1 are prime","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2148,"byte_end":2184,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     bv.set(0, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2185,"byte_end":2210,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/     bv.set(1, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2211,"byte_end":2236,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     for i in 2.. 1 + (max_prime as f64).sqrt() as usize {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2241,"byte_end":2302,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/         // if i is a prime","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2303,"byte_end":2333,"line_start":56,"line_end":56,"column_start":1,"column_end":31}},{"value":"/         if bv[i] {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2334,"byte_end":2356,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/             // Mark all multiples of i as non-prime (any multiples below i * i","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2357,"byte_end":2439,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/             // will have been marked as non-prime previously)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2440,"byte_end":2505,"line_start":59,"line_end":59,"column_start":1,"column_end":66}},{"value":"/             for j in i.. {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2506,"byte_end":2536,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/                 if i * j >= max_prime {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2537,"byte_end":2580,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/                     break;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2581,"byte_end":2611,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/                 }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2612,"byte_end":2633,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/                 bv.set(i * j, false)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2634,"byte_end":2674,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2675,"byte_end":2692,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2693,"byte_end":2706,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2707,"byte_end":2716,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/     bv","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2717,"byte_end":2727,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2728,"byte_end":2734,"line_start":69,"line_end":69,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2735,"byte_end":2738,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Simple primality tests below our max bound","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2739,"byte_end":2788,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ let print_primes = 20;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2789,"byte_end":2815,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ print!(\"The primes below {} are: \", print_primes);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2816,"byte_end":2870,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/ for x in 0..print_primes {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2871,"byte_end":2901,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     if primes.get(x).unwrap_or(false) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2902,"byte_end":2945,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/         print!(\"{} \", x);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2946,"byte_end":2975,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2976,"byte_end":2985,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2986,"byte_end":2991,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ println!(\"\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":2992,"byte_end":3009,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3010,"byte_end":3013,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let num_primes = primes.iter().filter(|x| *x).count();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3014,"byte_end":3072,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ println!(\"There are {} primes below {}\", num_primes, max_prime);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3073,"byte_end":3141,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(num_primes, 1_229);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3142,"byte_end":3176,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3177,"byte_end":3184,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3186,"byte_end":3196,"line_start":86,"line_end":86,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4070,"byte_end":4078,"line_start":121,"line_end":121,"column_start":11,"column_end":19},"name":"BitBlock","qualname":"::BitBlock","value":"BitBlock: Copy + Add<Self, Output = Self> + Sub<Self, Output = Self> + Shl<usize, Output\n= Self> + Shr<usize, Output = Self> + Not<Output = Self> + BitAnd<Self, Output\n= Self> + BitOr<Self, Output = Self> + BitXor<Self, Output = Self> + Rem<Self,\nOutput = Self> + Eq + Ord + hash::Hash","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Abstracts over a pile of bits (basically unsigned primitives)\n","sig":null,"attributes":[{"value":"/ Abstracts over a pile of bits (basically unsigned primitives)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":3994,"byte_end":4059,"line_start":120,"line_end":120,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4388,"byte_end":4392,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"bits","qualname":"::BitBlock::bits","value":"pub fn bits() -> usize","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" How many bits it has\n","sig":null,"attributes":[{"value":"/ How many bits it has","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4356,"byte_end":4380,"line_start":136,"line_end":136,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4456,"byte_end":4461,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"bytes","qualname":"::BitBlock::bytes","value":"pub fn bytes() -> usize","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" How many bytes it has\n","sig":null,"attributes":[{"value":"/ How many bytes it has","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4409,"byte_end":4434,"line_start":138,"line_end":138,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4439,"byte_end":4448,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4563,"byte_end":4572,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"from_byte","qualname":"::BitBlock::from_byte","value":"pub fn from_byte(u8) -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert a byte into this type (lowest-order bits set)\n","sig":null,"attributes":[{"value":"/ Convert a byte into this type (lowest-order bits set)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4498,"byte_end":4555,"line_start":141,"line_end":141,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4651,"byte_end":4661,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::BitBlock::count_ones","value":"pub fn count_ones(Self) -> usize","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Count the number of 1's in the bitwise repr\n","sig":null,"attributes":[{"value":"/ Count the number of 1's in the bitwise repr","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4596,"byte_end":4643,"line_start":143,"line_end":143,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4701,"byte_end":4705,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"zero","qualname":"::BitBlock::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Get `0`\n","sig":null,"attributes":[{"value":"/ Get `0`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4682,"byte_end":4693,"line_start":145,"line_end":145,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4740,"byte_end":4743,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"one","qualname":"::BitBlock::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Get `1`\n","sig":null,"attributes":[{"value":"/ Get `1`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4721,"byte_end":4732,"line_start":147,"line_end":147,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6320,"byte_end":6326,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The bitvector type.","sig":null,"attributes":[{"value":"/ The bitvector type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5588,"byte_end":5611,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5612,"byte_end":5615,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5616,"byte_end":5630,"line_start":190,"line_end":190,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5631,"byte_end":5634,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5635,"byte_end":5642,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5643,"byte_end":5667,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5668,"byte_end":5671,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let mut bv = BitVec::from_elem(10, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5672,"byte_end":5718,"line_start":195,"line_end":195,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5719,"byte_end":5722,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ // insert all primes less than 10","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5723,"byte_end":5760,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"/ bv.set(2, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5761,"byte_end":5781,"line_start":198,"line_end":198,"column_start":1,"column_end":21}},{"value":"/ bv.set(3, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5782,"byte_end":5802,"line_start":199,"line_end":199,"column_start":1,"column_end":21}},{"value":"/ bv.set(5, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5803,"byte_end":5823,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/ bv.set(7, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5824,"byte_end":5844,"line_start":201,"line_end":201,"column_start":1,"column_end":21}},{"value":"/ println!(\"{:?}\", bv);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5845,"byte_end":5870,"line_start":202,"line_end":202,"column_start":1,"column_end":26}},{"value":"/ println!(\"total bits set to true: {}\", bv.iter().filter(|x| *x).count());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5871,"byte_end":5948,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5949,"byte_end":5952,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ // flip all values in bitvector, producing non-primes less than 10","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":5953,"byte_end":6023,"line_start":205,"line_end":205,"column_start":1,"column_end":71}},{"value":"/ bv.negate();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6024,"byte_end":6040,"line_start":206,"line_end":206,"column_start":1,"column_end":17}},{"value":"/ println!(\"{:?}\", bv);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6041,"byte_end":6066,"line_start":207,"line_end":207,"column_start":1,"column_end":26}},{"value":"/ println!(\"total bits set to true: {}\", bv.iter().filter(|x| *x).count());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6067,"byte_end":6144,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6145,"byte_end":6148,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ // reset bitvector to empty","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6149,"byte_end":6180,"line_start":210,"line_end":210,"column_start":1,"column_end":32}},{"value":"/ bv.clear();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6181,"byte_end":6196,"line_start":211,"line_end":211,"column_start":1,"column_end":16}},{"value":"/ println!(\"{:?}\", bv);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6197,"byte_end":6222,"line_start":212,"line_end":212,"column_start":1,"column_end":26}},{"value":"/ println!(\"total bits set to true: {}\", bv.iter().filter(|x| *x).count());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6223,"byte_end":6300,"line_start":213,"line_end":213,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6301,"byte_end":6308,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8118,"byte_end":8121,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"new","qualname":"<BitVec<u32>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitVec`.","sig":null,"attributes":[{"value":"/ Creates an empty `BitVec`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7938,"byte_end":7968,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7973,"byte_end":7976,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7981,"byte_end":7995,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8000,"byte_end":8003,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8008,"byte_end":8015,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8020,"byte_end":8044,"line_start":268,"line_end":268,"column_start":5,"column_end":29}},{"value":"/ let mut bv = BitVec::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8049,"byte_end":8080,"line_start":269,"line_end":269,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8085,"byte_end":8092,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8097,"byte_end":8106,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8542,"byte_end":8551,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<BitVec<u32>>::from_elem","value":"pub fn from_elem(usize, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` that holds `nbits` elements, setting each element\n to `bit`.","sig":null,"attributes":[{"value":"/ Creates a `BitVec` that holds `nbits` elements, setting each element","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8172,"byte_end":8244,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ to `bit`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8249,"byte_end":8262,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8267,"byte_end":8270,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8275,"byte_end":8289,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8294,"byte_end":8297,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8302,"byte_end":8309,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8314,"byte_end":8338,"line_start":282,"line_end":282,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8343,"byte_end":8346,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(10, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8351,"byte_end":8397,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(bv.len(), 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8402,"byte_end":8431,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/ for x in bv.iter() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8436,"byte_end":8460,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(x, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8465,"byte_end":8494,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8499,"byte_end":8504,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8509,"byte_end":8516,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8521,"byte_end":8530,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9230,"byte_end":9243,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitVec<u32>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `BitVec` with the specified capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8842,"byte_end":8907,"line_start":301,"line_end":301,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8912,"byte_end":8915,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The bitvector will be able to hold at least `capacity` bits without","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8920,"byte_end":8991,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, it will not allocate.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":8996,"byte_end":9055,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9060,"byte_end":9063,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ It is important to note that this function does not specify the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9068,"byte_end":9135,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/ *length* of the returned bitvector, but only the *capacity*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9140,"byte_end":9204,"line_start":307,"line_end":307,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9209,"byte_end":9218,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":10006,"byte_end":10016,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<BitVec<u32>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\n with the most significant bits of each byte coming first. Each\n bit becomes `true` if equal to 1 or `false` if equal to 0.","sig":null,"attributes":[{"value":"/ Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9398,"byte_end":9473,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ with the most significant bits of each byte coming first. Each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9478,"byte_end":9544,"line_start":317,"line_end":317,"column_start":5,"column_end":71}},{"value":"/ bit becomes `true` if equal to 1 or `false` if equal to 0.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9549,"byte_end":9611,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9616,"byte_end":9619,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9624,"byte_end":9638,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9643,"byte_end":9646,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9651,"byte_end":9658,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9663,"byte_end":9687,"line_start":323,"line_end":323,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9692,"byte_end":9695,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let bv = BitVec::from_bytes(&[0b10100000, 0b00010010]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9700,"byte_end":9759,"line_start":325,"line_end":325,"column_start":5,"column_end":64}},{"value":"/ assert!(bv.eq_vec(&[true, false, true, false,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9764,"byte_end":9813,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/                     false, false, false, false,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9818,"byte_end":9869,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/                     false, false, false, true,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9874,"byte_end":9924,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/                     false, false, true, false]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9929,"byte_end":9982,"line_start":329,"line_end":329,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":9987,"byte_end":9994,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11321,"byte_end":11328,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<BitVec<u32>>::from_fn","value":"pub fn from_fn<F>(usize, F) -> Self where F: FnMut(usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` of the specified length where the value at each index\n is `f(index)`.","sig":null,"attributes":[{"value":"/ Creates a `BitVec` of the specified length where the value at each index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":10980,"byte_end":11056,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ is `f(index)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11061,"byte_end":11079,"line_start":361,"line_end":361,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11084,"byte_end":11087,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11092,"byte_end":11106,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11111,"byte_end":11114,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11119,"byte_end":11126,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11131,"byte_end":11155,"line_start":366,"line_end":366,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11160,"byte_end":11163,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let bv = BitVec::from_fn(5, |i| { i % 2 == 0 });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11168,"byte_end":11220,"line_start":368,"line_end":368,"column_start":5,"column_end":57}},{"value":"/ assert!(bv.eq_vec(&[true, false, true, false, true]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11225,"byte_end":11283,"line_start":369,"line_end":369,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11288,"byte_end":11295,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11300,"byte_end":11309,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12560,"byte_end":12566,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"blocks","qualname":"<BitVec<B>>::blocks","value":"pub fn blocks(&Self) -> Blocks<, B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the underlying blocks of data\n","sig":null,"attributes":[{"value":"/ Iterator over the underlying blocks of data","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12487,"byte_end":12534,"line_start":409,"line_end":409,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12539,"byte_end":12548,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12780,"byte_end":12787,"line_start":420,"line_end":420,"column_start":12,"column_end":19},"name":"storage","qualname":"<BitVec<B>>::storage","value":"pub fn storage(&Self) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"/ Exposes the raw block storage of this BitVec","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12657,"byte_end":12705,"line_start":416,"line_end":416,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12710,"byte_end":12713,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Only really intended for BitSet.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12718,"byte_end":12754,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12759,"byte_end":12768,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12994,"byte_end":13005,"line_start":428,"line_end":428,"column_start":19,"column_end":30},"name":"storage_mut","qualname":"<BitVec<B>>::storage_mut","value":"pub unsafe fn storage_mut(&mut Self) -> &mut Vec<B>","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"/ Exposes the raw block storage of this BitVec","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12835,"byte_end":12883,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12888,"byte_end":12891,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Can probably cause unsafety. Only really intended for BitSet.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12896,"byte_end":12961,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":12966,"byte_end":12975,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14021,"byte_end":14024,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"get","qualname":"<BitVec<B>>::get","value":"pub fn get(&Self, usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value at index `i`, or `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Retrieves the value at index `i`, or `None` if the index is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13563,"byte_end":13641,"line_start":445,"line_end":445,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13646,"byte_end":13649,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13654,"byte_end":13668,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13673,"byte_end":13676,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13681,"byte_end":13688,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13693,"byte_end":13717,"line_start":450,"line_end":450,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13722,"byte_end":13725,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let bv = BitVec::from_bytes(&[0b01100000]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13730,"byte_end":13777,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(bv.get(0), Some(false));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13782,"byte_end":13821,"line_start":453,"line_end":453,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(bv.get(1), Some(true));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13826,"byte_end":13864,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(bv.get(100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13869,"byte_end":13903,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13908,"byte_end":13911,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ // Can also use array indexing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13916,"byte_end":13950,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(bv[1], true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13955,"byte_end":13983,"line_start":458,"line_end":458,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":13988,"byte_end":13995,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14000,"byte_end":14009,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14646,"byte_end":14649,"line_start":488,"line_end":488,"column_start":12,"column_end":15},"name":"set","qualname":"<BitVec<B>>::set","value":"pub fn set(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of a bit at an index `i`.","sig":null,"attributes":[{"value":"/ Sets the value of a bit at an index `i`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14299,"byte_end":14343,"line_start":472,"line_end":472,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14348,"byte_end":14351,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14356,"byte_end":14368,"line_start":474,"line_end":474,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14373,"byte_end":14376,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Panics if `i` is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14381,"byte_end":14416,"line_start":476,"line_end":476,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14421,"byte_end":14424,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14429,"byte_end":14443,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14448,"byte_end":14451,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14456,"byte_end":14463,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14468,"byte_end":14492,"line_start":481,"line_end":481,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14497,"byte_end":14500,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(5, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14505,"byte_end":14550,"line_start":483,"line_end":483,"column_start":5,"column_end":50}},{"value":"/ bv.set(3, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14555,"byte_end":14575,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(bv[3], true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14580,"byte_end":14608,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14613,"byte_end":14620,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":14625,"byte_end":14634,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15354,"byte_end":15361,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"set_all","qualname":"<BitVec<B>>::set_all","value":"pub fn set_all(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets all bits to 1.","sig":null,"attributes":[{"value":"/ Sets all bits to 1.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15007,"byte_end":15030,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15035,"byte_end":15038,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15043,"byte_end":15057,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15062,"byte_end":15065,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15070,"byte_end":15077,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15082,"byte_end":15106,"line_start":503,"line_end":503,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15111,"byte_end":15114,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let before = 0b01100000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15119,"byte_end":15147,"line_start":505,"line_end":505,"column_start":5,"column_end":33}},{"value":"/ let after  = 0b11111111;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15152,"byte_end":15180,"line_start":506,"line_end":506,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15185,"byte_end":15188,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_bytes(&[before]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15193,"byte_end":15240,"line_start":508,"line_end":508,"column_start":5,"column_end":52}},{"value":"/ bv.set_all();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15245,"byte_end":15262,"line_start":509,"line_end":509,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(bv, BitVec::from_bytes(&[after]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15267,"byte_end":15316,"line_start":510,"line_end":510,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15321,"byte_end":15328,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15333,"byte_end":15342,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15815,"byte_end":15821,"line_start":533,"line_end":533,"column_start":12,"column_end":18},"name":"negate","qualname":"<BitVec<B>>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Flips all bits.","sig":null,"attributes":[{"value":"/ Flips all bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15473,"byte_end":15492,"line_start":518,"line_end":518,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15497,"byte_end":15500,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15505,"byte_end":15519,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15524,"byte_end":15527,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15532,"byte_end":15539,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15544,"byte_end":15568,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15573,"byte_end":15576,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let before = 0b01100000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15581,"byte_end":15609,"line_start":525,"line_end":525,"column_start":5,"column_end":33}},{"value":"/ let after  = 0b10011111;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15614,"byte_end":15642,"line_start":526,"line_end":526,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15647,"byte_end":15650,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_bytes(&[before]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15655,"byte_end":15702,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ bv.negate();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15707,"byte_end":15723,"line_start":529,"line_end":529,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(bv, BitVec::from_bytes(&[after]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15728,"byte_end":15777,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15782,"byte_end":15789,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15794,"byte_end":15803,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16655,"byte_end":16660,"line_start":564,"line_end":564,"column_start":12,"column_end":17},"name":"union","qualname":"<BitVec<B>>::union","value":"pub fn union(&mut Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the union of two bitvectors. This acts like the bitwise `or`\n function.","sig":null,"attributes":[{"value":"/ Calculates the union of two bitvectors. This acts like the bitwise `or`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":15926,"byte_end":16001,"line_start":538,"line_end":538,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16006,"byte_end":16019,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16024,"byte_end":16027,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ Sets `self` to the union of `self` and `other`. Both bitvectors must be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16032,"byte_end":16107,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ the same length. Returns `true` if `self` changed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16112,"byte_end":16166,"line_start":542,"line_end":542,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16171,"byte_end":16174,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16179,"byte_end":16191,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16196,"byte_end":16199,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Panics if the bitvectors are of different lengths.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16204,"byte_end":16258,"line_start":546,"line_end":546,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16263,"byte_end":16266,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16271,"byte_end":16285,"line_start":548,"line_end":548,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16290,"byte_end":16293,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16298,"byte_end":16305,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16310,"byte_end":16334,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16339,"byte_end":16342,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let a   = 0b01100100;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16347,"byte_end":16372,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/ let b   = 0b01011010;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16377,"byte_end":16402,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ let res = 0b01111110;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16407,"byte_end":16432,"line_start":555,"line_end":555,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16437,"byte_end":16440,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let mut a = BitVec::from_bytes(&[a]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16445,"byte_end":16486,"line_start":557,"line_end":557,"column_start":5,"column_end":46}},{"value":"/ let b = BitVec::from_bytes(&[b]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16491,"byte_end":16528,"line_start":558,"line_end":558,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16533,"byte_end":16536,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert!(a.union(&b));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16541,"byte_end":16566,"line_start":560,"line_end":560,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a, BitVec::from_bytes(&[res]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16571,"byte_end":16617,"line_start":561,"line_end":561,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16622,"byte_end":16629,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16634,"byte_end":16643,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17503,"byte_end":17512,"line_start":594,"line_end":594,"column_start":12,"column_end":21},"name":"intersect","qualname":"<BitVec<B>>::intersect","value":"pub fn intersect(&mut Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the intersection of two bitvectors. This acts like the\n bitwise `and` function.","sig":null,"attributes":[{"value":"/ Calculates the intersection of two bitvectors. This acts like the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16755,"byte_end":16824,"line_start":568,"line_end":568,"column_start":5,"column_end":74}},{"value":"/ bitwise `and` function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16829,"byte_end":16856,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16861,"byte_end":16864,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Sets `self` to the intersection of `self` and `other`. Both bitvectors","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16869,"byte_end":16943,"line_start":571,"line_end":571,"column_start":5,"column_end":79}},{"value":"/ must be the same length. Returns `true` if `self` changed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":16948,"byte_end":17010,"line_start":572,"line_end":572,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17015,"byte_end":17018,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17023,"byte_end":17035,"line_start":574,"line_end":574,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17040,"byte_end":17043,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Panics if the bitvectors are of different lengths.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17048,"byte_end":17102,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17107,"byte_end":17110,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17115,"byte_end":17129,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17134,"byte_end":17137,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17142,"byte_end":17149,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17154,"byte_end":17178,"line_start":581,"line_end":581,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17183,"byte_end":17186,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let a   = 0b01100100;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17191,"byte_end":17216,"line_start":583,"line_end":583,"column_start":5,"column_end":30}},{"value":"/ let b   = 0b01011010;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17221,"byte_end":17246,"line_start":584,"line_end":584,"column_start":5,"column_end":30}},{"value":"/ let res = 0b01000000;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17251,"byte_end":17276,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17281,"byte_end":17284,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let mut a = BitVec::from_bytes(&[a]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17289,"byte_end":17330,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/ let b = BitVec::from_bytes(&[b]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17335,"byte_end":17372,"line_start":588,"line_end":588,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17377,"byte_end":17380,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ assert!(a.intersect(&b));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17385,"byte_end":17414,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a, BitVec::from_bytes(&[res]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17419,"byte_end":17465,"line_start":591,"line_end":591,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17470,"byte_end":17477,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17482,"byte_end":17491,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18623,"byte_end":18633,"line_start":631,"line_end":631,"column_start":12,"column_end":22},"name":"difference","qualname":"<BitVec<B>>::difference","value":"pub fn difference(&mut Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the difference between two bitvectors.","sig":null,"attributes":[{"value":"/ Calculates the difference between two bitvectors.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17607,"byte_end":17660,"line_start":598,"line_end":598,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17665,"byte_end":17668,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Sets each element of `self` to the value of that element minus the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17673,"byte_end":17743,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ element of `other` at the same index. Both bitvectors must be the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17748,"byte_end":17822,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ length. Returns `true` if `self` changed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17827,"byte_end":17872,"line_start":602,"line_end":602,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17877,"byte_end":17880,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17885,"byte_end":17897,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17902,"byte_end":17905,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Panics if the bitvectors are of different length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17910,"byte_end":17963,"line_start":606,"line_end":606,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17968,"byte_end":17971,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17976,"byte_end":17990,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":17995,"byte_end":17998,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18003,"byte_end":18010,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18015,"byte_end":18039,"line_start":611,"line_end":611,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18044,"byte_end":18047,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a   = 0b01100100;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18052,"byte_end":18077,"line_start":613,"line_end":613,"column_start":5,"column_end":30}},{"value":"/ let b   = 0b01011010;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18082,"byte_end":18107,"line_start":614,"line_end":614,"column_start":5,"column_end":30}},{"value":"/ let a_b = 0b00100100; // a - b","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18112,"byte_end":18146,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/ let b_a = 0b00011010; // b - a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18151,"byte_end":18185,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18190,"byte_end":18193,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ let mut bva = BitVec::from_bytes(&[a]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18198,"byte_end":18241,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ let bvb = BitVec::from_bytes(&[b]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18246,"byte_end":18285,"line_start":619,"line_end":619,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18290,"byte_end":18293,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ assert!(bva.difference(&bvb));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18298,"byte_end":18332,"line_start":621,"line_end":621,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(bva, BitVec::from_bytes(&[a_b]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18337,"byte_end":18385,"line_start":622,"line_end":622,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18390,"byte_end":18393,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let bva = BitVec::from_bytes(&[a]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18398,"byte_end":18437,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/ let mut bvb = BitVec::from_bytes(&[b]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18442,"byte_end":18485,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18490,"byte_end":18493,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ assert!(bvb.difference(&bva));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18498,"byte_end":18532,"line_start":627,"line_end":627,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(bvb, BitVec::from_bytes(&[b_a]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18537,"byte_end":18585,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18590,"byte_end":18597,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18602,"byte_end":18611,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19044,"byte_end":19047,"line_start":649,"line_end":649,"column_start":12,"column_end":15},"name":"all","qualname":"<BitVec<B>>::all","value":"pub fn all(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 1.","sig":null,"attributes":[{"value":"/ Returns `true` if all bits are 1.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18729,"byte_end":18766,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18771,"byte_end":18774,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18779,"byte_end":18793,"line_start":637,"line_end":637,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18798,"byte_end":18801,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18806,"byte_end":18813,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18818,"byte_end":18842,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18847,"byte_end":18850,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(5, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18855,"byte_end":18899,"line_start":642,"line_end":642,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(bv.all(), true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18904,"byte_end":18935,"line_start":643,"line_end":643,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18940,"byte_end":18943,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ bv.set(1, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18948,"byte_end":18969,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(bv.all(), false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":18974,"byte_end":19006,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19011,"byte_end":19018,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19023,"byte_end":19032,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19724,"byte_end":19728,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"iter","qualname":"<BitVec<B>>::iter","value":"pub fn iter(&Self) -> Iter<, B>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the elements of the vector in order.","sig":null,"attributes":[{"value":"/ Returns an iterator over the elements of the vector in order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19416,"byte_end":19481,"line_start":660,"line_end":660,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19486,"byte_end":19489,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19494,"byte_end":19508,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19513,"byte_end":19516,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19521,"byte_end":19528,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19533,"byte_end":19557,"line_start":665,"line_end":665,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19562,"byte_end":19565,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ let bv = BitVec::from_bytes(&[0b01110100, 0b10010010]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19570,"byte_end":19629,"line_start":667,"line_end":667,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bv.iter().filter(|x| *x).count(), 7);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19634,"byte_end":19686,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19691,"byte_end":19698,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":19703,"byte_end":19712,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23088,"byte_end":23092,"line_start":794,"line_end":794,"column_start":12,"column_end":16},"name":"none","qualname":"<BitVec<B>>::none","value":"pub fn none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 0.","sig":null,"attributes":[{"value":"/ Returns `true` if all bits are 0.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22770,"byte_end":22807,"line_start":780,"line_end":780,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22812,"byte_end":22815,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22820,"byte_end":22834,"line_start":782,"line_end":782,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22839,"byte_end":22842,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22847,"byte_end":22854,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22859,"byte_end":22883,"line_start":785,"line_end":785,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22888,"byte_end":22891,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(10, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22896,"byte_end":22942,"line_start":787,"line_end":787,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(bv.none(), true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22947,"byte_end":22979,"line_start":788,"line_end":788,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22984,"byte_end":22987,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ bv.set(3, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":22992,"byte_end":23012,"line_start":790,"line_end":790,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(bv.none(), false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23017,"byte_end":23050,"line_start":791,"line_end":791,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23055,"byte_end":23062,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23067,"byte_end":23076,"line_start":793,"line_end":793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23481,"byte_end":23484,"line_start":812,"line_end":812,"column_start":12,"column_end":15},"name":"any","qualname":"<BitVec<B>>::any","value":"pub fn any(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any bit is 1.","sig":null,"attributes":[{"value":"/ Returns `true` if any bit is 1.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23167,"byte_end":23202,"line_start":798,"line_end":798,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23207,"byte_end":23210,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23215,"byte_end":23229,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23234,"byte_end":23237,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23242,"byte_end":23249,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23254,"byte_end":23278,"line_start":803,"line_end":803,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23283,"byte_end":23286,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(10, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23291,"byte_end":23337,"line_start":805,"line_end":805,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(bv.any(), false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23342,"byte_end":23374,"line_start":806,"line_end":806,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23379,"byte_end":23382,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ bv.set(3, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23387,"byte_end":23407,"line_start":808,"line_end":808,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(bv.any(), true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23412,"byte_end":23443,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23448,"byte_end":23455,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23460,"byte_end":23469,"line_start":811,"line_end":811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24201,"byte_end":24209,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<BitVec<B>>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Organises the bits into bytes, such that the first bit in the\n `BitVec` becomes the high-order bit of the first byte. If the\n size of the `BitVec` is not a multiple of eight then trailing bits\n will be filled-in with `false`.","sig":null,"attributes":[{"value":"/ Organises the bits into bytes, such that the first bit in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23534,"byte_end":23599,"line_start":816,"line_end":816,"column_start":5,"column_end":70}},{"value":"/ `BitVec` becomes the high-order bit of the first byte. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23604,"byte_end":23669,"line_start":817,"line_end":817,"column_start":5,"column_end":70}},{"value":"/ size of the `BitVec` is not a multiple of eight then trailing bits","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23674,"byte_end":23744,"line_start":818,"line_end":818,"column_start":5,"column_end":75}},{"value":"/ will be filled-in with `false`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23749,"byte_end":23784,"line_start":819,"line_end":819,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23789,"byte_end":23792,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23797,"byte_end":23811,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23816,"byte_end":23819,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23824,"byte_end":23831,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23836,"byte_end":23860,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23865,"byte_end":23868,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(3, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23873,"byte_end":23917,"line_start":826,"line_end":826,"column_start":5,"column_end":49}},{"value":"/ bv.set(1, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23922,"byte_end":23943,"line_start":827,"line_end":827,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23948,"byte_end":23951,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bv.to_bytes(), [0b10100000]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":23956,"byte_end":24000,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24005,"byte_end":24008,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(9, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24013,"byte_end":24058,"line_start":831,"line_end":831,"column_start":5,"column_end":50}},{"value":"/ bv.set(2, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24063,"byte_end":24083,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/ bv.set(8, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24088,"byte_end":24108,"line_start":833,"line_end":833,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24113,"byte_end":24116,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bv.to_bytes(), [0b00100000, 0b10000000]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24121,"byte_end":24177,"line_start":835,"line_end":835,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24182,"byte_end":24189,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25459,"byte_end":25465,"line_start":880,"line_end":880,"column_start":12,"column_end":18},"name":"eq_vec","qualname":"<BitVec<B>>::eq_vec","value":"pub fn eq_vec(&Self, &[bool]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares a `BitVec` to a slice of `bool`s.\n Both the `BitVec` and slice must have the same length.","sig":null,"attributes":[{"value":"/ Compares a `BitVec` to a slice of `bool`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":24956,"byte_end":25002,"line_start":862,"line_end":862,"column_start":5,"column_end":51}},{"value":"/ Both the `BitVec` and slice must have the same length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25007,"byte_end":25065,"line_start":863,"line_end":863,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25070,"byte_end":25073,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25078,"byte_end":25090,"line_start":865,"line_end":865,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25095,"byte_end":25098,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Panics if the `BitVec` and slice are of different length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25103,"byte_end":25164,"line_start":867,"line_end":867,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25169,"byte_end":25172,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25177,"byte_end":25191,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25196,"byte_end":25199,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25204,"byte_end":25211,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25216,"byte_end":25240,"line_start":872,"line_end":872,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25245,"byte_end":25248,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ let bv = BitVec::from_bytes(&[0b10100000]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25253,"byte_end":25300,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25305,"byte_end":25308,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ assert!(bv.eq_vec(&[true, false, true, false,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25313,"byte_end":25362,"line_start":876,"line_end":876,"column_start":5,"column_end":54}},{"value":"/                     false, false, false, false]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25367,"byte_end":25421,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25426,"byte_end":25433,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25438,"byte_end":25447,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26009,"byte_end":26017,"line_start":900,"line_end":900,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BitVec<B>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens a `BitVec`, dropping excess elements.","sig":null,"attributes":[{"value":"/ Shortens a `BitVec`, dropping excess elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25615,"byte_end":25665,"line_start":885,"line_end":885,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25670,"byte_end":25673,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the vector's current length, this has no","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25678,"byte_end":25747,"line_start":887,"line_end":887,"column_start":5,"column_end":74}},{"value":"/ effect.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25752,"byte_end":25763,"line_start":888,"line_end":888,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25768,"byte_end":25771,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25776,"byte_end":25790,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25795,"byte_end":25798,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25803,"byte_end":25810,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25815,"byte_end":25839,"line_start":893,"line_end":893,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25844,"byte_end":25847,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_bytes(&[0b01001011]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25852,"byte_end":25903,"line_start":895,"line_end":895,"column_start":5,"column_end":56}},{"value":"/ bv.truncate(2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25908,"byte_end":25927,"line_start":896,"line_end":896,"column_start":5,"column_end":24}},{"value":"/ assert!(bv.eq_vec(&[false, true]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25932,"byte_end":25971,"line_start":897,"line_end":897,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25976,"byte_end":25983,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":25988,"byte_end":25997,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26780,"byte_end":26787,"line_start":927,"line_end":927,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BitVec<B>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits to be inserted in the given\n `BitVec`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bits to be inserted in the given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26252,"byte_end":26337,"line_start":909,"line_end":909,"column_start":5,"column_end":90}},{"value":"/ `BitVec`. The collection may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26342,"byte_end":26426,"line_start":910,"line_end":910,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26431,"byte_end":26434,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26439,"byte_end":26451,"line_start":912,"line_end":912,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26456,"byte_end":26459,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26464,"byte_end":26513,"line_start":914,"line_end":914,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26518,"byte_end":26521,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26526,"byte_end":26540,"line_start":916,"line_end":916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26545,"byte_end":26548,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26553,"byte_end":26560,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26565,"byte_end":26589,"line_start":919,"line_end":919,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26594,"byte_end":26597,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(3, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26602,"byte_end":26647,"line_start":921,"line_end":921,"column_start":5,"column_end":50}},{"value":"/ bv.reserve(10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26652,"byte_end":26671,"line_start":922,"line_end":922,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(bv.len(), 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26676,"byte_end":26704,"line_start":923,"line_end":923,"column_start":5,"column_end":33}},{"value":"/ assert!(bv.capacity() >= 13);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26709,"byte_end":26742,"line_start":924,"line_end":924,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26747,"byte_end":26754,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":26759,"byte_end":26768,"line_start":926,"line_end":926,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27851,"byte_end":27864,"line_start":957,"line_end":957,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<BitVec<B>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\n given `BitVec`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more bits to be inserted in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27103,"byte_end":27193,"line_start":935,"line_end":935,"column_start":5,"column_end":95}},{"value":"/ given `BitVec`. Does nothing if the capacity is already sufficient.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27198,"byte_end":27269,"line_start":936,"line_end":936,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27274,"byte_end":27277,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Note that the allocator may give the collection more space than it requests. Therefore","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27282,"byte_end":27372,"line_start":938,"line_end":938,"column_start":5,"column_end":95}},{"value":"/ capacity can not be relied upon to be precisely minimal. Prefer `reserve` if future","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27377,"byte_end":27464,"line_start":939,"line_end":939,"column_start":5,"column_end":92}},{"value":"/ insertions are expected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27469,"byte_end":27497,"line_start":940,"line_end":940,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27502,"byte_end":27505,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27510,"byte_end":27522,"line_start":942,"line_end":942,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27527,"byte_end":27530,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27535,"byte_end":27584,"line_start":944,"line_end":944,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27589,"byte_end":27592,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27597,"byte_end":27611,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27616,"byte_end":27619,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27624,"byte_end":27631,"line_start":948,"line_end":948,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27636,"byte_end":27660,"line_start":949,"line_end":949,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27665,"byte_end":27668,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_elem(3, false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27673,"byte_end":27718,"line_start":951,"line_end":951,"column_start":5,"column_end":50}},{"value":"/ bv.reserve(10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27723,"byte_end":27742,"line_start":952,"line_end":952,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(bv.len(), 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27747,"byte_end":27775,"line_start":953,"line_end":953,"column_start":5,"column_end":33}},{"value":"/ assert!(bv.capacity() >= 13);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27780,"byte_end":27813,"line_start":954,"line_end":954,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27818,"byte_end":27825,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":27830,"byte_end":27839,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28540,"byte_end":28548,"line_start":978,"line_end":978,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitVec<B>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits for this bit vector. Inserting any\n element less than this amount will not trigger a resizing.","sig":null,"attributes":[{"value":"/ Returns the capacity in bits for this bit vector. Inserting any","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28186,"byte_end":28253,"line_start":965,"line_end":965,"column_start":5,"column_end":72}},{"value":"/ element less than this amount will not trigger a resizing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28258,"byte_end":28320,"line_start":966,"line_end":966,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28325,"byte_end":28328,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28333,"byte_end":28347,"line_start":968,"line_end":968,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28352,"byte_end":28355,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28360,"byte_end":28367,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28372,"byte_end":28396,"line_start":971,"line_end":971,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28401,"byte_end":28404,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28409,"byte_end":28440,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/ bv.reserve(10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28445,"byte_end":28464,"line_start":974,"line_end":974,"column_start":5,"column_end":24}},{"value":"/ assert!(bv.capacity() >= 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28469,"byte_end":28502,"line_start":975,"line_end":975,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28507,"byte_end":28514,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28519,"byte_end":28528,"line_start":977,"line_end":977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":29102,"byte_end":29106,"line_start":998,"line_end":998,"column_start":12,"column_end":16},"name":"grow","qualname":"<BitVec<B>>::grow","value":"pub fn grow(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.","sig":null,"attributes":[{"value":"/ Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28655,"byte_end":28733,"line_start":982,"line_end":982,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28738,"byte_end":28741,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28746,"byte_end":28758,"line_start":984,"line_end":984,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28763,"byte_end":28766,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ Panics if the new len overflows a `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28771,"byte_end":28817,"line_start":986,"line_end":986,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28822,"byte_end":28825,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28830,"byte_end":28844,"line_start":988,"line_end":988,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28849,"byte_end":28852,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28857,"byte_end":28864,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28869,"byte_end":28893,"line_start":991,"line_end":991,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28898,"byte_end":28901,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_bytes(&[0b01001011]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28906,"byte_end":28957,"line_start":993,"line_end":993,"column_start":5,"column_end":56}},{"value":"/ bv.grow(2, true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28962,"byte_end":28983,"line_start":994,"line_end":994,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(bv.len(), 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":28988,"byte_end":29017,"line_start":995,"line_end":995,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(bv.to_bytes(), [0b01001011, 0b11000000]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":29022,"byte_end":29078,"line_start":996,"line_end":996,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":29083,"byte_end":29090,"line_start":997,"line_end":997,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31051,"byte_end":31054,"line_start":1050,"line_end":1050,"column_start":12,"column_end":15},"name":"pop","qualname":"<BitVec<B>>::pop","value":"pub fn pop(&mut Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.","sig":null,"attributes":[{"value":"/ Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30661,"byte_end":30755,"line_start":1037,"line_end":1037,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30760,"byte_end":30763,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30768,"byte_end":30782,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30787,"byte_end":30790,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30795,"byte_end":30802,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30807,"byte_end":30831,"line_start":1042,"line_end":1042,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30836,"byte_end":30839,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::from_bytes(&[0b01001001]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30844,"byte_end":30895,"line_start":1044,"line_end":1044,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(bv.pop(), Some(true));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30900,"byte_end":30937,"line_start":1045,"line_end":1045,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(bv.pop(), Some(false));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30942,"byte_end":30980,"line_start":1046,"line_end":1046,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":30985,"byte_end":31013,"line_start":1047,"line_end":1047,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31018,"byte_end":31025,"line_start":1048,"line_end":1048,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31030,"byte_end":31039,"line_start":1049,"line_end":1049,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31736,"byte_end":31740,"line_start":1080,"line_end":1080,"column_start":12,"column_end":16},"name":"push","qualname":"<BitVec<B>>::push","value":"pub fn push(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a `bool` onto the end.","sig":null,"attributes":[{"value":"/ Pushes a `bool` onto the end.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31454,"byte_end":31487,"line_start":1067,"line_end":1067,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31492,"byte_end":31495,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31500,"byte_end":31514,"line_start":1069,"line_end":1069,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31519,"byte_end":31522,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31527,"byte_end":31534,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use bit_vec::BitVec;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31539,"byte_end":31563,"line_start":1072,"line_end":1072,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31568,"byte_end":31571,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let mut bv = BitVec::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31576,"byte_end":31607,"line_start":1074,"line_end":1074,"column_start":5,"column_end":36}},{"value":"/ bv.push(true);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31612,"byte_end":31630,"line_start":1075,"line_end":1075,"column_start":5,"column_end":23}},{"value":"/ bv.push(false);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31635,"byte_end":31654,"line_start":1076,"line_end":1076,"column_start":5,"column_end":24}},{"value":"/ assert!(bv.eq_vec(&[true, false]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31659,"byte_end":31698,"line_start":1077,"line_end":1077,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31703,"byte_end":31710,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":31715,"byte_end":31724,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32096,"byte_end":32099,"line_start":1091,"line_end":1091,"column_start":12,"column_end":15},"name":"len","qualname":"<BitVec<B>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bits in this vector\n","sig":null,"attributes":[{"value":"/ Returns the total number of bits in this vector","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32019,"byte_end":32070,"line_start":1089,"line_end":1089,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32075,"byte_end":32084,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32323,"byte_end":32330,"line_start":1097,"line_end":1097,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BitVec<B>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits that this BitVec considers initialized.","sig":null,"attributes":[{"value":"/ Sets the number of bits that this BitVec considers initialized.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32136,"byte_end":32203,"line_start":1093,"line_end":1093,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32208,"byte_end":32211,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Almost certainly can cause bad stuff. Only really intended for BitSet.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32216,"byte_end":32290,"line_start":1095,"line_end":1095,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32295,"byte_end":32304,"line_start":1096,"line_end":1096,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32468,"byte_end":32476,"line_start":1103,"line_end":1103,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitVec<B>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no bits in this vector\n","sig":null,"attributes":[{"value":"/ Returns true if there are no bits in this vector","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32390,"byte_end":32442,"line_start":1101,"line_end":1101,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32447,"byte_end":32456,"line_start":1102,"line_end":1102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32578,"byte_end":32583,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitVec<B>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits in this vector.\n","sig":null,"attributes":[{"value":"/ Clears all bits in this vector.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32517,"byte_end":32552,"line_start":1105,"line_end":1105,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32557,"byte_end":32566,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32947,"byte_end":32960,"line_start":1117,"line_end":1117,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<BitVec<B>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying storage as much as\n possible.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the underlying storage as much as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32663,"byte_end":32724,"line_start":1111,"line_end":1111,"column_start":5,"column_end":66}},{"value":"/ possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32729,"byte_end":32742,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32747,"byte_end":32750,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ It will drop down as close as possible to the length but the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32755,"byte_end":32819,"line_start":1114,"line_end":1114,"column_start":5,"column_end":69}},{"value":"/ allocator may still inform the underlying storage that there","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32824,"byte_end":32888,"line_start":1115,"line_end":1115,"column_start":5,"column_end":69}},{"value":"/ is space for a few more elements/bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":32893,"byte_end":32935,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35600,"byte_end":35604,"line_start":1221,"line_end":1221,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" An iterator for `BitVec`.\n","sig":null,"attributes":[{"value":"/ An iterator for `BitVec`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35542,"byte_end":35571,"line_start":1219,"line_end":1219,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":150},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36620,"byte_end":36628,"line_start":1262,"line_end":1262,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37461,"byte_end":37467,"line_start":1298,"line_end":1298,"column_start":12,"column_end":18},"name":"Blocks","qualname":"::Blocks","value":"Blocks {  }","parent":null,"children":[{"krate":0,"index":225}],"decl_id":null,"docs":" An iterator over the blocks of a `BitVec`.\n","sig":null,"attributes":[{"value":"/ An iterator over the blocks of a `BitVec`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37386,"byte_end":37432,"line_start":1296,"line_end":1296,"column_start":1,"column_end":47}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6599,"byte_end":6605,"line_start":223,"line_end":223,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7919,"byte_end":7925,"line_start":261,"line_end":261,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11576,"byte_end":11582,"line_start":383,"line_end":383,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33051,"byte_end":33057,"line_start":1122,"line_end":1122,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33191,"byte_end":33197,"line_start":1127,"line_end":1127,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33411,"byte_end":33417,"line_start":1136,"line_end":1136,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33734,"byte_end":33740,"line_start":1148,"line_end":1148,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34052,"byte_end":34058,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34205,"byte_end":34211,"line_start":1168,"line_end":1168,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34819,"byte_end":34825,"line_start":1188,"line_end":1188,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35047,"byte_end":35053,"line_start":1197,"line_end":1197,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35280,"byte_end":35286,"line_start":1207,"line_end":1207,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35528,"byte_end":35534,"line_start":1217,"line_end":1217,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35715,"byte_end":35719,"line_start":1226,"line_end":1226,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36201,"byte_end":36205,"line_start":1241,"line_end":1241,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36397,"byte_end":36401,"line_start":1248,"line_end":1248,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36721,"byte_end":36729,"line_start":1267,"line_end":1267,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36928,"byte_end":36936,"line_start":1276,"line_end":1276,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37120,"byte_end":37128,"line_start":1283,"line_end":1283,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37171,"byte_end":37177,"line_start":1285,"line_end":1285,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37549,"byte_end":37555,"line_start":1302,"line_end":1302,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37829,"byte_end":37835,"line_start":1316,"line_end":1316,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37994,"byte_end":38000,"line_start":1323,"line_end":1323,"column_start":45,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4081,"byte_end":4085,"line_start":122,"line_end":122,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4089,"byte_end":4092,"line_start":123,"line_end":123,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4115,"byte_end":4118,"line_start":124,"line_end":124,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4141,"byte_end":4144,"line_start":125,"line_end":125,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4168,"byte_end":4171,"line_start":126,"line_end":126,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4195,"byte_end":4198,"line_start":127,"line_end":127,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2162},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4215,"byte_end":4221,"line_start":128,"line_end":128,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2166},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4244,"byte_end":4249,"line_start":129,"line_end":129,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2171},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4272,"byte_end":4278,"line_start":130,"line_end":130,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4301,"byte_end":4304,"line_start":131,"line_end":131,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":2131},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4327,"byte_end":4329,"line_start":132,"line_end":132,"column_start":2,"column_end":4},"kind":"SuperTrait","from":{"krate":1,"index":1775},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4333,"byte_end":4336,"line_start":133,"line_end":133,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1796},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":4346,"byte_end":4350,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6787},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":6599,"byte_end":6605,"line_start":223,"line_end":223,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":7919,"byte_end":7925,"line_start":261,"line_end":261,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":11576,"byte_end":11582,"line_start":383,"line_end":383,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33051,"byte_end":33057,"line_start":1122,"line_end":1122,"column_start":31,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33191,"byte_end":33197,"line_start":1127,"line_end":1127,"column_start":42,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33411,"byte_end":33417,"line_start":1136,"line_end":1136,"column_start":36,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":33734,"byte_end":33740,"line_start":1148,"line_end":1148,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34052,"byte_end":34058,"line_start":1161,"line_end":1161,"column_start":34,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":1807}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34205,"byte_end":34211,"line_start":1168,"line_end":1168,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":1796}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":34819,"byte_end":34825,"line_start":1188,"line_end":1188,"column_start":34,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35047,"byte_end":35053,"line_start":1197,"line_end":1197,"column_start":34,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":6787}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35280,"byte_end":35286,"line_start":1207,"line_end":1207,"column_start":38,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35528,"byte_end":35534,"line_start":1217,"line_end":1217,"column_start":31,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":35715,"byte_end":35719,"line_start":1226,"line_end":1226,"column_start":36,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36201,"byte_end":36205,"line_start":1241,"line_end":1241,"column_start":47,"column_end":51},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36397,"byte_end":36401,"line_start":1248,"line_end":1248,"column_start":45,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36721,"byte_end":36729,"line_start":1267,"line_end":1267,"column_start":32,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":150},"to":{"krate":1,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":36928,"byte_end":36936,"line_start":1276,"line_end":1276,"column_start":43,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":150},"to":{"krate":1,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37120,"byte_end":37128,"line_start":1283,"line_end":1283,"column_start":41,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":150},"to":{"krate":1,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37171,"byte_end":37177,"line_start":1285,"line_end":1285,"column_start":36,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":31},"to":{"krate":1,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37549,"byte_end":37555,"line_start":1302,"line_end":1302,"column_start":36,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37829,"byte_end":37835,"line_start":1316,"line_end":1316,"column_start":47,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/bit-vec-0.5.1/src/lib.rs","byte_start":37994,"byte_end":38000,"line_start":1323,"line_end":1323,"column_start":45,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":5258}}]}