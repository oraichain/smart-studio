{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ra_hir","--edition=2018","/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=ead38db5559b6120","-C","extra-filename=-ead38db5559b6120","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--extern","arrayvec=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libarrayvec-46c7dd03e7126256.rmeta","--extern","chalk_ir=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_ir-1e5e89b3cc5185bc.rmeta","--extern","chalk_rust_ir=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_rust_ir-9ae5fbb66b305adc.rmeta","--extern","chalk_solve=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_solve-a991d70194eb8c3e.rmeta","--extern","ena=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libena-e3ceccd4259c015a.rmeta","--extern","lalrpop_intern=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/liblalrpop_intern-5f9f083371716a9c.rmeta","--extern","log=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/liblog-da34158c634c799b.rmeta","--extern","once_cell=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libonce_cell-afee82941330c152.rmeta","--extern","parking_lot=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libparking_lot-53befc39ceec24e2.rmeta","--extern","ra_arena=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_arena-3afc6f67ded86950.rmeta","--extern","ra_cfg=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_cfg-15003ac47ffd68cb.rmeta","--extern","ra_db=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_db-75b471f5546baa4a.rmeta","--extern","hir_def=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_hir_def-ef5b1ebc3055bd78.rmeta","--extern","hir_expand=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_hir_expand-72d6c1fc8801a0db.rmeta","--extern","mbe=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_mbe-0c89a033576aacc8.rmeta","--extern","ra_prof=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_prof-dd3643eeec5bb35b.rmeta","--extern","ra_syntax=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_syntax-2aba06987eb18f9d.rmeta","--extern","tt=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_tt-55901e819550b1f5.rmeta","--extern","rustc_hash=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/librustc_hash-29dd9c019c1e078f.rmeta","--extern","test_utils=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libtest_utils-cd7d70a858963a01.rmeta","--cap-lints","allow","-L","native=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/build/stacker-6b8b89857712dd33/out","-L","native=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/build/backtrace-sys-fd405c80dc88855b/out","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libra_hir-ead38db5559b6120.rmeta"},"prelude":{"crate_id":{"name":"ra_hir","disambiguator":[12046196201630068445,11993568061429862823]},"crate_root":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":16,"id":{"name":"ra_db","disambiguator":[13514602016044204508,2895218790101610262]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","num":17,"id":{"name":"rustc_hash","disambiguator":[3456451224187360230,12806063198043075384]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":18,"id":{"name":"byteorder","disambiguator":[7786802486158187971,17904586164133949077]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":19,"id":{"name":"ra_cfg","disambiguator":[9617305327681346205,16472272024920018403]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","num":20,"id":{"name":"ra_syntax","disambiguator":[6017157174809020218,17342902421728176174]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":21,"id":{"name":"ra_parser","disambiguator":[6202674596152575022,10063805416328571014]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":22,"id":{"name":"drop_bomb","disambiguator":[835321677760435634,7883867579572832290]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":23,"id":{"name":"rowan","disambiguator":[7364708545227428757,1487819378199914263]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":24,"id":{"name":"smol_str","disambiguator":[2359847949402732802,12297710153863183451]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":25,"id":{"name":"serde","disambiguator":[3795599373807056810,9645814863151822075]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":26,"id":{"name":"serde_derive","disambiguator":[3106346296033655556,6166322219666150086]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":27,"id":{"name":"text_unit","disambiguator":[1907187077424803309,9903573065150484162]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":28,"id":{"name":"ra_text_edit","disambiguator":[5287943118873003987,3844211129363222453]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":29,"id":{"name":"proptest","disambiguator":[7888314708398998460,1674186781635847175]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":30,"id":{"name":"bitflags","disambiguator":[622889312128496731,14058552020937752200]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":31,"id":{"name":"bit_set","disambiguator":[411299896075596528,14494213663561086723]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":32,"id":{"name":"bit_vec","disambiguator":[11714817005772177859,2350563430619341729]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":33,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":34,"id":{"name":"quick_error","disambiguator":[3303871828495858037,18313164495320216514]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":35,"id":{"name":"rand","disambiguator":[15086897560799486387,2195993094552401120]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":36,"id":{"name":"rand_jitter","disambiguator":[9722969824998433621,12516819470701090958]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":37,"id":{"name":"rand_core","disambiguator":[5460231549421434409,15865894254418864318]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":38,"id":{"name":"libc","disambiguator":[9237417759301744298,10325578486291660160]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":39,"id":{"name":"rand_os","disambiguator":[15058647198650524279,1582290634601720534]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":40,"id":{"name":"rand_isaac","disambiguator":[6909012432282155752,6313861071166275964]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":41,"id":{"name":"rand_core","disambiguator":[12405013758789132769,3407458179584151645]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":42,"id":{"name":"rand_chacha","disambiguator":[9609897921705256742,12809745230773698349]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":43,"id":{"name":"rand_hc","disambiguator":[7303808825180323089,12701593348286893446]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":44,"id":{"name":"rand_pcg","disambiguator":[1377988497577294644,16382208805226870294]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":45,"id":{"name":"rand_xorshift","disambiguator":[15305277909717914666,1362979776396206868]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":46,"id":{"name":"regex_syntax","disambiguator":[11300356349072891021,9408724544888489490]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":47,"id":{"name":"rustc_lexer","disambiguator":[12782955803588362551,50728466628285914]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":48,"id":{"name":"unicode_xid","disambiguator":[7458300891392791699,12119139462212598063]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":49,"id":{"name":"itertools","disambiguator":[8284181664245312689,13408076743838181652]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":50,"id":{"name":"either","disambiguator":[3196927647482315206,6397018130719852552]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","num":51,"id":{"name":"arrayvec","disambiguator":[7305020066704600719,16542989575829028435]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":52,"id":{"name":"once_cell","disambiguator":[13963646476386097214,17748679796721965030]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":53,"id":{"name":"ra_tt","disambiguator":[13278189818993388993,13859264633178946988]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","num":54,"id":{"name":"test_utils","disambiguator":[8632373064763113979,11843144570198251610]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":55,"id":{"name":"serde_json","disambiguator":[8373092338145935068,17183630481345831641]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":56,"id":{"name":"itoa","disambiguator":[6254256392908067853,17314620337906477012]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":57,"id":{"name":"ryu","disambiguator":[522647149428054330,2274329215829952017]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":58,"id":{"name":"difference","disambiguator":[3397180304406553207,7505085908250749763]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":59,"id":{"name":"ra_prof","disambiguator":[1827831806963321540,7783580524691407218]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":60,"id":{"name":"backtrace","disambiguator":[400748790317873537,9576235211713472950]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":61,"id":{"name":"rustc_demangle","disambiguator":[15178318995272263499,10534646657617132253]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":62,"id":{"name":"cfg_if","disambiguator":[13347268434212277074,12294355231220403985]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":63,"id":{"name":"backtrace_sys","disambiguator":[4893513409548697556,7533850650868208295]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":64,"id":{"name":"relative_path","disambiguator":[3000478488350266957,2676492796874950822]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":65,"id":{"name":"salsa","disambiguator":[7859525190542342272,6533134884485531434]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":66,"id":{"name":"salsa_macros","disambiguator":[4064923358937187407,850008975848728019]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":67,"id":{"name":"parking_lot","disambiguator":[4552154132360785775,9432889705364795466]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":68,"id":{"name":"lock_api","disambiguator":[7267522734155392517,3849345717129937994]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":69,"id":{"name":"scopeguard","disambiguator":[11446728332522292093,5394066327141724718]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":70,"id":{"name":"parking_lot_core","disambiguator":[1759748039726088195,10525474717954385191]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":71,"id":{"name":"smallvec","disambiguator":[15313276779515438508,12461007851175261342]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":72,"id":{"name":"maybe_uninit","disambiguator":[14152455124215252849,1355212663840290307]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/autoderef.rs","num":73,"id":{"name":"log","disambiguator":[14672335122730529813,15102547447802631915]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":74,"id":{"name":"crossbeam","disambiguator":[15019099028092943526,3886604170331324048]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":75,"id":{"name":"crossbeam_epoch","disambiguator":[14420741299535073908,10248206487536145030]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":76,"id":{"name":"crossbeam_utils","disambiguator":[14307052095890395788,6789502377077177303]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":77,"id":{"name":"memoffset","disambiguator":[3604475180142515173,14573634165810913662]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":78,"id":{"name":"crossbeam_deque","disambiguator":[3721348735634613319,11451777956061441322]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":79,"id":{"name":"crossbeam_channel","disambiguator":[1012206666419542459,12341187960823559665]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":80,"id":{"name":"crossbeam_queue","disambiguator":[18111398189609910776,8744475590700064947]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":81,"id":{"name":"rand","disambiguator":[17536554904587731937,9527586076958749226]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":82,"id":{"name":"rand_core","disambiguator":[2703189571366266177,8547800664203987570]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":83,"id":{"name":"getrandom","disambiguator":[1592401073305829413,16850572841007330548]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":84,"id":{"name":"rand_chacha","disambiguator":[17247619000235057183,13298703709467907148]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":85,"id":{"name":"c2_chacha","disambiguator":[5817414901828016502,3330009473208512596]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":86,"id":{"name":"ppv_lite86","disambiguator":[10885030026292962613,13753152712653694820]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":87,"id":{"name":"rand_pcg","disambiguator":[11673348037223122743,7467237973274729593]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":88,"id":{"name":"derive_new","disambiguator":[2180928129286147836,7254145626086869472]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","num":89,"id":{"name":"indexmap","disambiguator":[11779391736593060625,14747929116582263463]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","num":90,"id":{"name":"ra_hir_def","disambiguator":[10938729069077490450,2980679626448262672]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","num":91,"id":{"name":"ra_hir_expand","disambiguator":[8546900635084685780,6675133131810933615]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","num":92,"id":{"name":"ra_mbe","disambiguator":[6651985382784276108,10385771368992317079]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","num":93,"id":{"name":"smallvec","disambiguator":[2176912171838341202,7891882211655254214]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","num":94,"id":{"name":"ra_arena","disambiguator":[15370533748981479534,16086240377959329592]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":95,"id":{"name":"chalk_ir","disambiguator":[8687016659245799572,18068387536485845382]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":96,"id":{"name":"chalk_engine","disambiguator":[5209660885642139136,14615587430389361100]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":97,"id":{"name":"chalk_macros","disambiguator":[2603500555905971854,3241400604075703882]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":98,"id":{"name":"stacker","disambiguator":[11270618004102534773,1134865246925311322]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":99,"id":{"name":"lalrpop_intern","disambiguator":[1262538648943620944,9338744506893008660]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","num":100,"id":{"name":"chalk_derive","disambiguator":[538635478023077110,229961810911492659]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":101,"id":{"name":"chalk_rust_ir","disambiguator":[3731637730378716808,12704496021679373835]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","num":102,"id":{"name":"ena","disambiguator":[13144800139407249106,4652648976298980245]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":103,"id":{"name":"chalk_solve","disambiguator":[8981489942743601112,8069238320686825470]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":104,"id":{"name":"petgraph","disambiguator":[8838636884296936769,4448080757316076414]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":105,"id":{"name":"fixedbitset","disambiguator":[4184422968409117594,2478214682307357160]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","num":106,"id":{"name":"ordermap","disambiguator":[14413334921063817060,4097412733286418061]}}],"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":0,"byte_end":2322,"line_start":1,"line_end":89,"column_start":1,"column_end":58}},"imports":[{"kind":"Use","ref_id":{"krate":90,"index":1569},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6141,"byte_end":6150,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"alias_span":null,"name":"BodyQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1570},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6141,"byte_end":6150,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"alias_span":null,"name":"BodyQuery","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":90,"index":1563},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6152,"byte_end":6174,"line_start":27,"line_end":27,"column_start":16,"column_end":38},"alias_span":null,"name":"BodyWithSourceMapQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1564},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6152,"byte_end":6174,"line_start":27,"line_end":27,"column_start":16,"column_end":38},"alias_span":null,"name":"BodyWithSourceMapQuery","value":"","parent":{"krate":0,"index":93}},{"kind":"Use","ref_id":{"krate":90,"index":1539},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6176,"byte_end":6192,"line_start":27,"line_end":27,"column_start":40,"column_end":56},"alias_span":null,"name":"CrateDefMapQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1540},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6176,"byte_end":6192,"line_start":27,"line_end":27,"column_start":40,"column_end":56},"alias_span":null,"name":"CrateDefMapQuery","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":90,"index":1366},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6194,"byte_end":6206,"line_start":27,"line_end":27,"column_start":58,"column_end":70},"alias_span":null,"name":"DefDatabase2","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1376},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6208,"byte_end":6227,"line_start":27,"line_end":27,"column_start":72,"column_end":91},"alias_span":null,"name":"DefDatabase2Storage","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1551},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6233,"byte_end":6246,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"EnumDataQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1552},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6233,"byte_end":6246,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"EnumDataQuery","value":"","parent":{"krate":0,"index":97}},{"kind":"Use","ref_id":{"krate":90,"index":1575},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6248,"byte_end":6263,"line_start":28,"line_end":28,"column_start":20,"column_end":35},"alias_span":null,"name":"ExprScopesQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1576},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6248,"byte_end":6263,"line_start":28,"line_end":28,"column_start":20,"column_end":35},"alias_span":null,"name":"ExprScopesQuery","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":90,"index":1557},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6265,"byte_end":6278,"line_start":28,"line_end":28,"column_start":37,"column_end":50},"alias_span":null,"name":"ImplDataQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1558},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6265,"byte_end":6278,"line_start":28,"line_end":28,"column_start":37,"column_end":50},"alias_span":null,"name":"ImplDataQuery","value":"","parent":{"krate":0,"index":99}},{"kind":"Use","ref_id":{"krate":90,"index":982},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6280,"byte_end":6294,"line_start":28,"line_end":28,"column_start":52,"column_end":66},"alias_span":null,"name":"InternDatabase","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":999},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6296,"byte_end":6317,"line_start":28,"line_end":28,"column_start":68,"column_end":89},"alias_span":null,"name":"InternDatabaseStorage","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1533},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6323,"byte_end":6336,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"alias_span":null,"name":"RawItemsQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1534},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6323,"byte_end":6336,"line_start":29,"line_end":29,"column_start":5,"column_end":18},"alias_span":null,"name":"RawItemsQuery","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":90,"index":1527},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6338,"byte_end":6364,"line_start":29,"line_end":29,"column_start":20,"column_end":46},"alias_span":null,"name":"RawItemsWithSourceMapQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1528},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6338,"byte_end":6364,"line_start":29,"line_end":29,"column_start":20,"column_end":46},"alias_span":null,"name":"RawItemsWithSourceMapQuery","value":"","parent":{"krate":0,"index":103}},{"kind":"Use","ref_id":{"krate":90,"index":1545},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6366,"byte_end":6381,"line_start":29,"line_end":29,"column_start":48,"column_end":63},"alias_span":null,"name":"StructDataQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":90,"index":1546},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6366,"byte_end":6381,"line_start":29,"line_end":29,"column_start":48,"column_end":63},"alias_span":null,"name":"StructDataQuery","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":91,"index":346},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6416,"byte_end":6427,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"alias_span":null,"name":"AstDatabase","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":355},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6429,"byte_end":6447,"line_start":32,"line_end":32,"column_start":18,"column_end":36},"alias_span":null,"name":"AstDatabaseStorage","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":471},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6449,"byte_end":6462,"line_start":32,"line_end":32,"column_start":38,"column_end":51},"alias_span":null,"name":"AstIdMapQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":472},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6449,"byte_end":6462,"line_start":32,"line_end":32,"column_start":38,"column_end":51},"alias_span":null,"name":"AstIdMapQuery","value":"","parent":{"krate":0,"index":108}},{"kind":"Use","ref_id":{"krate":91,"index":489},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6464,"byte_end":6477,"line_start":32,"line_end":32,"column_start":53,"column_end":66},"alias_span":null,"name":"MacroArgQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":490},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6464,"byte_end":6477,"line_start":32,"line_end":32,"column_start":53,"column_end":66},"alias_span":null,"name":"MacroArgQuery","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":91,"index":495},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6479,"byte_end":6492,"line_start":32,"line_end":32,"column_start":68,"column_end":81},"alias_span":null,"name":"MacroDefQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":496},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6479,"byte_end":6492,"line_start":32,"line_end":32,"column_start":68,"column_end":81},"alias_span":null,"name":"MacroDefQuery","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":91,"index":507},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6494,"byte_end":6510,"line_start":32,"line_end":32,"column_start":83,"column_end":99},"alias_span":null,"name":"MacroExpandQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":508},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6494,"byte_end":6510,"line_start":32,"line_end":32,"column_start":83,"column_end":99},"alias_span":null,"name":"MacroExpandQuery","value":"","parent":{"krate":0,"index":111}},{"kind":"Use","ref_id":{"krate":91,"index":501},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6516,"byte_end":6531,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"alias_span":null,"name":"ParseMacroQuery","value":"","parent":{"krate":0,"index":49}},{"kind":"Use","ref_id":{"krate":91,"index":502},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6516,"byte_end":6531,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"alias_span":null,"name":"ParseMacroQuery","value":"","parent":{"krate":0,"index":112}},{"kind":"Use","ref_id":{"krate":90,"index":2583},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/expr.rs","byte_start":264950,"byte_end":264960,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"alias_span":null,"name":"ExprScopes","value":"","parent":{"krate":0,"index":1630}},{"kind":"Use","ref_id":{"krate":90,"index":2098},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301276,"byte_end":301292,"line_start":9,"line_end":9,"column_start":31,"column_end":47},"alias_span":null,"name":"UnresolvedModule","value":"","parent":{"krate":0,"index":1945}},{"kind":"Use","ref_id":{"krate":91,"index":197},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301328,"byte_end":301341,"line_start":10,"line_end":10,"column_start":35,"column_end":48},"alias_span":null,"name":"AstDiagnostic","value":"","parent":{"krate":0,"index":1945}},{"kind":"Use","ref_id":{"krate":91,"index":192},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301343,"byte_end":301353,"line_start":10,"line_end":10,"column_start":50,"column_end":60},"alias_span":null,"name":"Diagnostic","value":"","parent":{"krate":0,"index":1945}},{"kind":"Use","ref_id":{"krate":91,"index":206},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301355,"byte_end":301369,"line_start":10,"line_end":10,"column_start":62,"column_end":76},"alias_span":null,"name":"DiagnosticSink","value":"","parent":{"krate":0,"index":1945}},{"kind":"Use","ref_id":{"krate":0,"index":3799},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1186,"byte_end":1196,"line_start":60,"line_end":60,"column_start":10,"column_end":20},"alias_span":null,"name":"VariantDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5726},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1214,"byte_end":1223,"line_start":61,"line_end":61,"column_start":17,"column_end":26},"alias_span":null,"name":"ImplBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5180},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1259,"byte_end":1266,"line_start":63,"line_end":63,"column_start":17,"column_end":24},"alias_span":null,"name":"AttrDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2172},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1268,"byte_end":1273,"line_start":63,"line_end":63,"column_start":26,"column_end":31},"alias_span":null,"name":"Attrs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5094},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1291,"byte_end":1297,"line_start":64,"line_end":64,"column_start":16,"column_end":22},"alias_span":null,"name":"DocDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2135},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1299,"byte_end":1303,"line_start":64,"line_end":64,"column_start":24,"column_end":28},"alias_span":null,"name":"Docs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5166},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1305,"byte_end":1318,"line_start":64,"line_end":64,"column_start":30,"column_end":43},"alias_span":null,"name":"Documentation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2099},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1335,"byte_end":1348,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"HasBodySource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2040},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1350,"byte_end":1359,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"alias_span":null,"name":"HasSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5461},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1370,"byte_end":1373,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"alias_span":null,"name":"Adt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5659},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1375,"byte_end":1384,"line_start":66,"line_end":66,"column_start":14,"column_end":23},"alias_span":null,"name":"AssocItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5556},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1386,"byte_end":1391,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"alias_span":null,"name":"Const","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5573},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1393,"byte_end":1402,"line_start":66,"line_end":66,"column_start":32,"column_end":41},"alias_span":null,"name":"ConstData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1404,"byte_end":1413,"line_start":66,"line_end":66,"column_start":43,"column_end":52},"alias_span":null,"name":"Container","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5252},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1415,"byte_end":1420,"line_start":66,"line_end":66,"column_start":54,"column_end":59},"alias_span":null,"name":"Crate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5269},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1422,"byte_end":1437,"line_start":66,"line_end":66,"column_start":61,"column_end":76},"alias_span":null,"name":"CrateDependency","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5492},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1439,"byte_end":1450,"line_start":66,"line_end":66,"column_start":78,"column_end":89},"alias_span":null,"name":"DefWithBody","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5426},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1452,"byte_end":1456,"line_start":66,"line_end":66,"column_start":91,"column_end":95},"alias_span":null,"name":"Enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5443},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1466,"byte_end":1477,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"alias_span":null,"name":"EnumVariant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5376},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1479,"byte_end":1490,"line_start":67,"line_end":67,"column_start":22,"column_end":33},"alias_span":null,"name":"FieldSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5540},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1492,"byte_end":1498,"line_start":67,"line_end":67,"column_start":35,"column_end":41},"alias_span":null,"name":"FnData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5523},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1500,"byte_end":1508,"line_start":67,"line_end":67,"column_start":43,"column_end":51},"alias_span":null,"name":"Function","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5708},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1510,"byte_end":1522,"line_start":67,"line_end":67,"column_start":53,"column_end":65},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2387},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1524,"byte_end":1531,"line_start":67,"line_end":67,"column_start":67,"column_end":74},"alias_span":null,"name":"HasBody","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5690},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1533,"byte_end":1538,"line_start":67,"line_end":67,"column_start":76,"column_end":81},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5638},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1540,"byte_end":1548,"line_start":67,"line_end":67,"column_start":83,"column_end":91},"alias_span":null,"name":"MacroDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5274},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1550,"byte_end":1556,"line_start":67,"line_end":67,"column_start":93,"column_end":99},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5291},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1566,"byte_end":1575,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"alias_span":null,"name":"ModuleDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":883},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1577,"byte_end":1589,"line_start":68,"line_end":68,"column_start":20,"column_end":32},"alias_span":null,"name":"ModuleSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5587},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1591,"byte_end":1597,"line_start":68,"line_end":68,"column_start":34,"column_end":40},"alias_span":null,"name":"Static","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5392},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1599,"byte_end":1605,"line_start":68,"line_end":68,"column_start":42,"column_end":48},"alias_span":null,"name":"Struct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5358},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1607,"byte_end":1618,"line_start":68,"line_end":68,"column_start":50,"column_end":61},"alias_span":null,"name":"StructField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5604},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1620,"byte_end":1625,"line_start":68,"line_end":68,"column_start":63,"column_end":68},"alias_span":null,"name":"Trait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5621},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1627,"byte_end":1636,"line_start":68,"line_end":68,"column_start":70,"column_end":79},"alias_span":null,"name":"TypeAlias","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5409},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1638,"byte_end":1643,"line_start":68,"line_end":68,"column_start":81,"column_end":86},"alias_span":null,"name":"Union","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":2583},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1662,"byte_end":1672,"line_start":70,"line_end":70,"column_start":11,"column_end":21},"alias_span":null,"name":"ExprScopes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2626},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1691,"byte_end":1701,"line_start":71,"line_end":71,"column_start":18,"column_end":28},"alias_span":null,"name":"FromSource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1717,"byte_end":1727,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"alias_span":null,"name":"GenericDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":762},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1739,"byte_end":1748,"line_start":73,"line_end":73,"column_start":11,"column_end":20},"alias_span":null,"name":"HirFileId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":839},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1750,"byte_end":1761,"line_start":73,"line_end":73,"column_start":22,"column_end":33},"alias_span":null,"name":"MacroCallId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":897},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1763,"byte_end":1775,"line_start":73,"line_end":73,"column_start":35,"column_end":47},"alias_span":null,"name":"MacroCallLoc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":857},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1777,"byte_end":1787,"line_start":73,"line_end":73,"column_start":49,"column_end":59},"alias_span":null,"name":"MacroDefId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":802},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1789,"byte_end":1798,"line_start":73,"line_end":73,"column_start":61,"column_end":70},"alias_span":null,"name":"MacroFile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1910},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1814,"byte_end":1822,"line_start":74,"line_end":74,"column_start":14,"column_end":22},"alias_span":null,"name":"ScopeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3687},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1844,"byte_end":1858,"line_start":75,"line_end":75,"column_start":21,"column_end":35},"alias_span":null,"name":"PathResolution","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1860,"byte_end":1880,"line_start":75,"line_end":75,"column_start":37,"column_end":57},"alias_span":null,"name":"ScopeEntryWithSyntax","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3678},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1882,"byte_end":1896,"line_start":75,"line_end":75,"column_start":59,"column_end":73},"alias_span":null,"name":"SourceAnalyzer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1926,"byte_end":1936,"line_start":77,"line_end":77,"column_start":18,"column_end":28},"alias_span":null,"name":"HirDisplay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1891},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1958,"byte_end":1970,"line_start":78,"line_end":78,"column_start":21,"column_end":33},"alias_span":null,"name":"FloatBitness","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3913},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1972,"byte_end":1979,"line_start":78,"line_end":78,"column_start":35,"column_end":42},"alias_span":null,"name":"FloatTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1864},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1981,"byte_end":1991,"line_start":78,"line_end":78,"column_start":44,"column_end":54},"alias_span":null,"name":"IntBitness","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1993,"byte_end":1998,"line_start":78,"line_end":78,"column_start":56,"column_end":61},"alias_span":null,"name":"IntTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1845},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2000,"byte_end":2010,"line_start":78,"line_end":78,"column_start":63,"column_end":73},"alias_span":null,"name":"Signedness","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3867},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2012,"byte_end":2021,"line_start":78,"line_end":78,"column_start":75,"column_end":84},"alias_span":null,"name":"Uncertain","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4594},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2032,"byte_end":2045,"line_start":79,"line_end":79,"column_start":9,"column_end":22},"alias_span":null,"name":"ApplicationTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2047,"byte_end":2058,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"alias_span":null,"name":"CallableDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4666},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2060,"byte_end":2066,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"alias_span":null,"name":"Substs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4690},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2068,"byte_end":2076,"line_start":79,"line_end":79,"column_start":45,"column_end":53},"alias_span":null,"name":"TraitRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4628},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2078,"byte_end":2080,"line_start":79,"line_end":79,"column_start":55,"column_end":57},"alias_span":null,"name":"Ty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2082,"byte_end":2090,"line_start":79,"line_end":79,"column_start":59,"column_end":67},"alias_span":null,"name":"TypeCtor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2092,"byte_end":2100,"line_start":79,"line_end":79,"column_start":69,"column_end":77},"alias_span":null,"name":"TypeWalk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1945},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2150,"byte_end":2161,"line_start":84,"line_end":84,"column_start":19,"column_end":30},"alias_span":null,"name":"BuiltinType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":2938},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2185,"byte_end":2190,"line_start":85,"line_end":85,"column_start":23,"column_end":28},"alias_span":null,"name":"PerNs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":2761},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2197,"byte_end":2205,"line_start":85,"line_end":85,"column_start":35,"column_end":43},"alias_span":null,"name":"ImportId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1655},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2219,"byte_end":2223,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1725},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2225,"byte_end":2233,"line_start":86,"line_end":86,"column_start":18,"column_end":26},"alias_span":null,"name":"PathKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":90,"index":1756},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2250,"byte_end":2260,"line_start":87,"line_end":87,"column_start":15,"column_end":25},"alias_span":null,"name":"Mutability","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":599},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2294,"byte_end":2300,"line_start":89,"line_end":89,"column_start":30,"column_end":36},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":651},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2308,"byte_end":2312,"line_start":89,"line_end":89,"column_start":44,"column_end":48},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":91,"index":939},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":2314,"byte_end":2320,"line_start":89,"line_end":89,"column_start":50,"column_end":56},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":0,"byte_end":2322,"line_start":1,"line_end":89,"column_start":1,"column_end":58},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":49},{"krate":0,"index":113},{"krate":0,"index":252},{"krate":0,"index":273},{"krate":0,"index":297},{"krate":0,"index":329},{"krate":0,"index":346},{"krate":0,"index":1581},{"krate":0,"index":1630},{"krate":0,"index":1706},{"krate":0,"index":1756},{"krate":0,"index":1828},{"krate":0,"index":1945},{"krate":0,"index":1982},{"krate":0,"index":1986},{"krate":0,"index":2010},{"krate":0,"index":2580},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781}],"decl_id":null,"docs":" HIR (previously known as descriptors) provides a high-level object oriented\n access to Rust code.","sig":null,"attributes":[{"value":"/ HIR (previously known as descriptors) provides a high-level object oriented","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ access to Rust code.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":80,"byte_end":104,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":105,"byte_end":108,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The principal difference between HIR and syntax trees is that HIR is bound","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":109,"byte_end":187,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to a particular crate instance. That is, it has cfg flags and features","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":188,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ applied. So, the relation between syntax and HIR is many-to-one.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":263,"byte_end":331,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"recursion_limit = \"512\"","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":333,"byte_end":360,"line_start":8,"line_end":8,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"debug","qualname":"::debug","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":5745},{"krate":0,"index":8},{"krate":0,"index":5747},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":20},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":39}],"decl_id":null,"docs":" printf debugging infrastructure for rust-analyzer.","sig":null,"attributes":[{"value":"/ printf debugging infrastructure for rust-analyzer.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2324,"byte_end":2378,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2379,"byte_end":2382,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When you print a hir type, like a module, using `eprintln!(\"{:?}\", module)`,","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2383,"byte_end":2463,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ you usually get back a numeric ID, which doesn't tell you much:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2464,"byte_end":2531,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/ `Module(92)`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2532,"byte_end":2549,"line_start":5,"line_end":5,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2550,"byte_end":2553,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module adds convenience `debug` methods to various types, which resolve","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2554,"byte_end":2634,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the id to a human-readable location info:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2635,"byte_end":2680,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2681,"byte_end":2684,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2685,"byte_end":2700,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ eprintln!(\"{:?}\", module.debug(db));","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2701,"byte_end":2741,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ =>","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2742,"byte_end":2748,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/ Module { name: collections, path: \"liballoc/collections/mod.rs\" }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2749,"byte_end":2818,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2819,"byte_end":2826,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2827,"byte_end":2830,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Note that to get this info, we might need to execute queries! So","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2831,"byte_end":2899,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2900,"byte_end":2903,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * don't use the `debug` methods for logging","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2904,"byte_end":2951,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ * when debugging, be aware that interference is possible.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":2952,"byte_end":3013,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3148,"byte_end":3153,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"debug","qualname":"<Crate>::debug","value":"pub fn debug<impl HirDebugDatabase: HirDebugDatabase>(Self,\n                                                      &impl HirDebugDatabase)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3303,"byte_end":3308,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"debug","qualname":"<Module>::debug","value":"pub fn debug<impl HirDebugDatabase: HirDebugDatabase>(Self,\n                                                      &impl HirDebugDatabase)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3444,"byte_end":3458,"line_start":39,"line_end":39,"column_start":11,"column_end":25},"name":"HirDebugHelper","qualname":"::debug::HirDebugHelper","value":"HirDebugHelper: HirDatabase","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3481,"byte_end":3491,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"crate_name","qualname":"::debug::HirDebugHelper::crate_name","value":"pub fn crate_name(&Self, CrateId) -> Option<String>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3562,"byte_end":3571,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"file_path","qualname":"::debug::HirDebugHelper::file_path","value":"pub fn file_path(&Self, FileId) -> Option<String>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3649,"byte_end":3665,"line_start":48,"line_end":48,"column_start":11,"column_end":27},"name":"HirDebugDatabase","qualname":"::debug::HirDebugDatabase","value":"HirDebugDatabase","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3675,"byte_end":3686,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"debug_crate","qualname":"::debug::HirDebugDatabase::debug_crate","value":"pub fn debug_crate(&Self, Crate, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3761,"byte_end":3773,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"debug_module","qualname":"::debug::HirDebugDatabase::debug_module","value":"pub fn debug_module(&Self, Module, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3850,"byte_end":3867,"line_start":51,"line_end":51,"column_start":8,"column_end":25},"name":"debug_hir_file_id","qualname":"::debug::HirDebugDatabase::debug_hir_file_id","value":"pub fn debug_hir_file_id(&Self, HirFileId, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"db","qualname":"::db","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":5831},{"krate":0,"index":93},{"krate":0,"index":5833},{"krate":0,"index":94},{"krate":0,"index":5835},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":5841},{"krate":0,"index":98},{"krate":0,"index":5843},{"krate":0,"index":99},{"krate":0,"index":5845},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":5851},{"krate":0,"index":103},{"krate":0,"index":5853},{"krate":0,"index":104},{"krate":0,"index":5855},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":5861},{"krate":0,"index":109},{"krate":0,"index":5863},{"krate":0,"index":110},{"krate":0,"index":5865},{"krate":0,"index":111},{"krate":0,"index":5867},{"krate":0,"index":112},{"krate":0,"index":5869},{"krate":0,"index":2782},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2801},{"krate":0,"index":2991},{"krate":0,"index":2995},{"krate":0,"index":2993},{"krate":0,"index":2815},{"krate":0,"index":2825},{"krate":0,"index":2997},{"krate":0,"index":3001},{"krate":0,"index":2999},{"krate":0,"index":2828},{"krate":0,"index":2838},{"krate":0,"index":3003},{"krate":0,"index":3007},{"krate":0,"index":3005},{"krate":0,"index":2841},{"krate":0,"index":2851},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3011},{"krate":0,"index":2854},{"krate":0,"index":2864},{"krate":0,"index":3015},{"krate":0,"index":3019},{"krate":0,"index":3017},{"krate":0,"index":2867},{"krate":0,"index":2877},{"krate":0,"index":3021},{"krate":0,"index":3025},{"krate":0,"index":3023},{"krate":0,"index":2880},{"krate":0,"index":2890},{"krate":0,"index":3027},{"krate":0,"index":3031},{"krate":0,"index":3029},{"krate":0,"index":2893},{"krate":0,"index":2903},{"krate":0,"index":3033},{"krate":0,"index":3037},{"krate":0,"index":3035},{"krate":0,"index":2906},{"krate":0,"index":2916},{"krate":0,"index":3039},{"krate":0,"index":3043},{"krate":0,"index":3041},{"krate":0,"index":2919},{"krate":0,"index":2929},{"krate":0,"index":3045},{"krate":0,"index":3049},{"krate":0,"index":3047},{"krate":0,"index":2932},{"krate":0,"index":2942},{"krate":0,"index":3051},{"krate":0,"index":3055},{"krate":0,"index":3053},{"krate":0,"index":2945},{"krate":0,"index":2955},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3059},{"krate":0,"index":2958},{"krate":0,"index":2968},{"krate":0,"index":3063},{"krate":0,"index":3112},{"krate":0,"index":3110},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3100},{"krate":0,"index":2971},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":3114},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3143},{"krate":0,"index":3465},{"krate":0,"index":3469},{"krate":0,"index":3467},{"krate":0,"index":3167},{"krate":0,"index":3177},{"krate":0,"index":3471},{"krate":0,"index":3475},{"krate":0,"index":3473},{"krate":0,"index":3180},{"krate":0,"index":3190},{"krate":0,"index":3477},{"krate":0,"index":3481},{"krate":0,"index":3479},{"krate":0,"index":3193},{"krate":0,"index":3203},{"krate":0,"index":3483},{"krate":0,"index":3487},{"krate":0,"index":3485},{"krate":0,"index":3206},{"krate":0,"index":3216},{"krate":0,"index":3489},{"krate":0,"index":3493},{"krate":0,"index":3491},{"krate":0,"index":3219},{"krate":0,"index":3229},{"krate":0,"index":3495},{"krate":0,"index":3499},{"krate":0,"index":3497},{"krate":0,"index":3232},{"krate":0,"index":3242},{"krate":0,"index":3501},{"krate":0,"index":3505},{"krate":0,"index":3503},{"krate":0,"index":3245},{"krate":0,"index":3255},{"krate":0,"index":3507},{"krate":0,"index":3511},{"krate":0,"index":3509},{"krate":0,"index":3258},{"krate":0,"index":3268},{"krate":0,"index":3513},{"krate":0,"index":3517},{"krate":0,"index":3515},{"krate":0,"index":3271},{"krate":0,"index":3281},{"krate":0,"index":3519},{"krate":0,"index":3523},{"krate":0,"index":3521},{"krate":0,"index":3284},{"krate":0,"index":3294},{"krate":0,"index":3525},{"krate":0,"index":3529},{"krate":0,"index":3527},{"krate":0,"index":3297},{"krate":0,"index":3531},{"krate":0,"index":3535},{"krate":0,"index":3533},{"krate":0,"index":3307},{"krate":0,"index":3537},{"krate":0,"index":3541},{"krate":0,"index":3539},{"krate":0,"index":3317},{"krate":0,"index":3543},{"krate":0,"index":3547},{"krate":0,"index":3545},{"krate":0,"index":3327},{"krate":0,"index":3549},{"krate":0,"index":3553},{"krate":0,"index":3551},{"krate":0,"index":3337},{"krate":0,"index":3555},{"krate":0,"index":3559},{"krate":0,"index":3557},{"krate":0,"index":3347},{"krate":0,"index":3561},{"krate":0,"index":3565},{"krate":0,"index":3563},{"krate":0,"index":3357},{"krate":0,"index":3367},{"krate":0,"index":3567},{"krate":0,"index":3571},{"krate":0,"index":3569},{"krate":0,"index":3370},{"krate":0,"index":3380},{"krate":0,"index":3573},{"krate":0,"index":3577},{"krate":0,"index":3575},{"krate":0,"index":3383},{"krate":0,"index":3393},{"krate":0,"index":3579},{"krate":0,"index":3583},{"krate":0,"index":3581},{"krate":0,"index":3396},{"krate":0,"index":3406},{"krate":0,"index":3585},{"krate":0,"index":3589},{"krate":0,"index":3587},{"krate":0,"index":3409},{"krate":0,"index":3419},{"krate":0,"index":3591},{"krate":0,"index":3595},{"krate":0,"index":3593},{"krate":0,"index":3422},{"krate":0,"index":3432},{"krate":0,"index":3597},{"krate":0,"index":3676},{"krate":0,"index":3674},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3667},{"krate":0,"index":3668},{"krate":0,"index":3664},{"krate":0,"index":3435},{"krate":0,"index":3459},{"krate":0,"index":3462}],"decl_id":null,"docs":" FIXME: write short doc here\n","sig":null,"attributes":[{"value":"/ FIXME: write short doc here","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":5459,"byte_end":5490,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6669,"byte_end":6680,"line_start":39,"line_end":39,"column_start":11,"column_end":22},"name":"DefDatabase","qualname":"::db::DefDatabase","value":"DefDatabase: HirDebugDatabase + DefDatabase2","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6788,"byte_end":6798,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"trait_data","qualname":"::db::DefDatabase::trait_data","value":"pub fn trait_data(&Self, Trait) -> Arc<TraitData>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6915,"byte_end":6932,"line_start":44,"line_end":44,"column_start":8,"column_end":25},"name":"trait_items_index","qualname":"::db::DefDatabase::trait_items_index","value":"pub fn trait_items_index(&Self, Module) -> crate::traits::TraitItemsIndex","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7074,"byte_end":7088,"line_start":47,"line_end":47,"column_start":8,"column_end":22},"name":"generic_params","qualname":"::db::DefDatabase::generic_params","value":"pub fn generic_params(&Self, GenericDef) -> Arc<GenericParams>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7188,"byte_end":7195,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"fn_data","qualname":"::db::DefDatabase::fn_data","value":"pub fn fn_data(&Self, Function) -> Arc<FnData>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7302,"byte_end":7317,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"type_alias_data","qualname":"::db::DefDatabase::type_alias_data","value":"pub fn type_alias_data(&Self, TypeAlias) -> Arc<TypeAliasData>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7422,"byte_end":7432,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"const_data","qualname":"::db::DefDatabase::const_data","value":"pub fn const_data(&Self, Const) -> Arc<ConstData>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7532,"byte_end":7543,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"static_data","qualname":"::db::DefDatabase::static_data","value":"pub fn static_data(&Self, Static) -> Arc<ConstData>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7650,"byte_end":7667,"line_start":62,"line_end":62,"column_start":8,"column_end":25},"name":"module_lang_items","qualname":"::db::DefDatabase::module_lang_items","value":"pub fn module_lang_items(&Self, Module) -> Option<Arc<LangItems>>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7782,"byte_end":7798,"line_start":65,"line_end":65,"column_start":8,"column_end":24},"name":"crate_lang_items","qualname":"::db::DefDatabase::crate_lang_items","value":"pub fn crate_lang_items(&Self, Crate) -> Arc<LangItems>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7896,"byte_end":7905,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"lang_item","qualname":"::db::DefDatabase::lang_item","value":"pub fn lang_item(&Self, Crate, SmolStr) -> Option<LangItemTarget>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8050,"byte_end":8063,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"documentation","qualname":"::db::DefDatabase::documentation","value":"pub fn documentation(&Self, crate::DocDef) -> Option<crate::Documentation>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8197,"byte_end":8202,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"attrs","qualname":"::db::DefDatabase::attrs","value":"pub fn attrs(&Self, crate::AttrDef) -> Option<Arc<[Attr]>>","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6606,"byte_end":6624,"line_start":37,"line_end":37,"column_start":22,"column_end":40},"name":"DefDatabaseStorage","qualname":"::db::DefDatabaseStorage","value":"DefDatabaseStorage {  }","parent":null,"children":[],"decl_id":null,"docs":" Representative struct for the query group.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6788,"byte_end":6798,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"trait_data","qualname":"::db::DefDatabaseGroupStorage__::trait_data","value":"<db::TraitDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6915,"byte_end":6932,"line_start":44,"line_end":44,"column_start":8,"column_end":25},"name":"trait_items_index","qualname":"::db::DefDatabaseGroupStorage__::trait_items_index","value":"<db::TraitItemsIndexQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7074,"byte_end":7088,"line_start":47,"line_end":47,"column_start":8,"column_end":22},"name":"generic_params","qualname":"::db::DefDatabaseGroupStorage__::generic_params","value":"<db::GenericParamsQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7188,"byte_end":7195,"line_start":50,"line_end":50,"column_start":8,"column_end":15},"name":"fn_data","qualname":"::db::DefDatabaseGroupStorage__::fn_data","value":"<db::FnDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7302,"byte_end":7317,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"type_alias_data","qualname":"::db::DefDatabaseGroupStorage__::type_alias_data","value":"<db::TypeAliasDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7422,"byte_end":7432,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"const_data","qualname":"::db::DefDatabaseGroupStorage__::const_data","value":"<db::ConstDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7532,"byte_end":7543,"line_start":59,"line_end":59,"column_start":8,"column_end":19},"name":"static_data","qualname":"::db::DefDatabaseGroupStorage__::static_data","value":"<db::StaticDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7650,"byte_end":7667,"line_start":62,"line_end":62,"column_start":8,"column_end":25},"name":"module_lang_items","qualname":"::db::DefDatabaseGroupStorage__::module_lang_items","value":"<db::ModuleLangItemsQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7782,"byte_end":7798,"line_start":65,"line_end":65,"column_start":8,"column_end":24},"name":"crate_lang_items","qualname":"::db::DefDatabaseGroupStorage__::crate_lang_items","value":"<db::CrateLangItemsQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":7896,"byte_end":7905,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"lang_item","qualname":"::db::DefDatabaseGroupStorage__::lang_item","value":"<db::LangItemQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8050,"byte_end":8063,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"documentation","qualname":"::db::DefDatabaseGroupStorage__::documentation","value":"<db::DocumentationQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8197,"byte_end":8202,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"attrs","qualname":"::db::DefDatabaseGroupStorage__::attrs","value":"<db::AttrsQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8346,"byte_end":8357,"line_start":79,"line_end":79,"column_start":11,"column_end":22},"name":"HirDatabase","qualname":"::db::HirDatabase","value":"HirDatabase: DefDatabase + AstDatabase","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8439,"byte_end":8444,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"infer","qualname":"::db::HirDatabase::infer","value":"pub fn infer(&Self, DefWithBody) -> Arc<InferenceResult>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8549,"byte_end":8561,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"type_for_def","qualname":"::db::HirDatabase::type_for_def","value":"pub fn type_for_def(&Self, TypableDef, Namespace) -> Ty","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8664,"byte_end":8678,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"type_for_field","qualname":"::db::HirDatabase::type_for_field","value":"pub fn type_for_field(&Self, StructField) -> Ty","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8772,"byte_end":8795,"line_start":90,"line_end":90,"column_start":8,"column_end":31},"name":"callable_item_signature","qualname":"::db::HirDatabase::callable_item_signature","value":"pub fn callable_item_signature(&Self, CallableDef) -> FnSig","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8907,"byte_end":8935,"line_start":93,"line_end":93,"column_start":8,"column_end":36},"name":"generic_predicates_for_param","qualname":"::db::HirDatabase::generic_predicates_for_param","value":"pub fn generic_predicates_for_param(&Self, GenericDef, u32)\n-> Arc<[GenericPredicate]>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9101,"byte_end":9119,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"generic_predicates","qualname":"::db::HirDatabase::generic_predicates","value":"pub fn generic_predicates(&Self, GenericDef) -> Arc<[GenericPredicate]>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9236,"byte_end":9252,"line_start":103,"line_end":103,"column_start":8,"column_end":24},"name":"generic_defaults","qualname":"::db::HirDatabase::generic_defaults","value":"pub fn generic_defaults(&Self, GenericDef) -> Substs","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9386,"byte_end":9400,"line_start":106,"line_end":106,"column_start":8,"column_end":22},"name":"impls_in_crate","qualname":"::db::HirDatabase::impls_in_crate","value":"pub fn impls_in_crate(&Self, Crate) -> Arc<CrateImplBlocks>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9518,"byte_end":9533,"line_start":109,"line_end":109,"column_start":8,"column_end":23},"name":"impls_for_trait","qualname":"::db::HirDatabase::impls_for_trait","value":"pub fn impls_for_trait(&Self, Crate, Trait) -> Arc<[ImplBlock]>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10031,"byte_end":10043,"line_start":117,"line_end":117,"column_start":8,"column_end":20},"name":"trait_solver","qualname":"::db::HirDatabase::trait_solver","value":"pub fn trait_solver(&Self, Crate) -> crate::ty::traits::TraitSolver","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":" This provides the Chalk trait solver instance. Because Chalk always\n works from a specific crate, this query is keyed on the crate; and\n because Chalk does its own internal caching, the solver is wrapped in a\n Mutex and the query does an untracked read internally, to make sure the\n cached state is thrown away when input facts change.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10173,"byte_end":10189,"line_start":121,"line_end":121,"column_start":8,"column_end":24},"name":"intern_type_ctor","qualname":"::db::HirDatabase::intern_type_ctor","value":"pub fn intern_type_ctor(&Self, TypeCtor) -> ids::TypeCtorId","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10173,"byte_end":10189,"line_start":121,"line_end":121,"column_start":8,"column_end":24},"name":"lookup_intern_type_ctor","qualname":"::db::HirDatabase::lookup_intern_type_ctor","value":"pub fn lookup_intern_type_ctor(&Self, ids::TypeCtorId) -> TypeCtor","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10268,"byte_end":10285,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"intern_chalk_impl","qualname":"::db::HirDatabase::intern_chalk_impl","value":"pub fn intern_chalk_impl(&Self, Impl) -> ids::GlobalImplId","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10268,"byte_end":10285,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"lookup_intern_chalk_impl","qualname":"::db::HirDatabase::lookup_intern_chalk_impl","value":"pub fn lookup_intern_chalk_impl(&Self, ids::GlobalImplId) -> Impl","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10358,"byte_end":10379,"line_start":125,"line_end":125,"column_start":8,"column_end":29},"name":"intern_assoc_ty_value","qualname":"::db::HirDatabase::intern_assoc_ty_value","value":"pub fn intern_assoc_ty_value(&Self, AssocTyValue) -> ids::AssocTyValueId","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10358,"byte_end":10379,"line_start":125,"line_end":125,"column_start":8,"column_end":29},"name":"lookup_intern_assoc_ty_value","qualname":"::db::HirDatabase::lookup_intern_assoc_ty_value","value":"pub fn lookup_intern_assoc_ty_value(&Self, ids::AssocTyValueId)\n-> AssocTyValue","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10522,"byte_end":10540,"line_start":128,"line_end":128,"column_start":8,"column_end":26},"name":"associated_ty_data","qualname":"::db::HirDatabase::associated_ty_data","value":"pub fn associated_ty_data(&Self, chalk_ir::TypeId)\n-> Arc<chalk_rust_ir::AssociatedTyDatum<chalk_ir::family::ChalkIr>>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10736,"byte_end":10747,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"trait_datum","qualname":"::db::HirDatabase::trait_datum","value":"pub fn trait_datum(&Self, Crate, chalk_ir::TraitId)\n-> Arc<chalk_rust_ir::TraitDatum<chalk_ir::family::ChalkIr>>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10966,"byte_end":10978,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"struct_datum","qualname":"::db::HirDatabase::struct_datum","value":"pub fn struct_datum(&Self, Crate, chalk_ir::StructId)\n-> Arc<chalk_rust_ir::StructDatum<chalk_ir::family::ChalkIr>>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11198,"byte_end":11208,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"impl_datum","qualname":"::db::HirDatabase::impl_datum","value":"pub fn impl_datum(&Self, Crate, chalk_ir::ImplId)\n-> Arc<chalk_rust_ir::ImplDatum<chalk_ir::family::ChalkIr>>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11431,"byte_end":11450,"line_start":155,"line_end":155,"column_start":8,"column_end":27},"name":"associated_ty_value","qualname":"::db::HirDatabase::associated_ty_value","value":"pub fn associated_ty_value(&Self, Crate, chalk_rust_ir::AssociatedTyValueId)\n-> Arc<chalk_rust_ir::AssociatedTyValue<chalk_ir::family::ChalkIr>>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11679,"byte_end":11690,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"trait_solve","qualname":"::db::HirDatabase::trait_solve","value":"pub fn trait_solve(&Self, Crate,\n                   crate::ty::Canonical<crate::ty::InEnvironment<crate::ty::Obligation>>)\n-> Option<crate::ty::traits::Solution>","parent":{"krate":0,"index":3114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8279,"byte_end":8297,"line_start":77,"line_end":77,"column_start":22,"column_end":40},"name":"HirDatabaseStorage","qualname":"::db::HirDatabaseStorage","value":"HirDatabaseStorage {  }","parent":null,"children":[],"decl_id":null,"docs":" Representative struct for the query group.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8439,"byte_end":8444,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"infer","qualname":"::db::HirDatabaseGroupStorage__::infer","value":"<db::InferQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8549,"byte_end":8561,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"type_for_def","qualname":"::db::HirDatabaseGroupStorage__::type_for_def","value":"<db::TypeForDefQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8664,"byte_end":8678,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"type_for_field","qualname":"::db::HirDatabaseGroupStorage__::type_for_field","value":"<db::TypeForFieldQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8772,"byte_end":8795,"line_start":90,"line_end":90,"column_start":8,"column_end":31},"name":"callable_item_signature","qualname":"::db::HirDatabaseGroupStorage__::callable_item_signature","value":"<db::CallableItemSignatureQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8907,"byte_end":8935,"line_start":93,"line_end":93,"column_start":8,"column_end":36},"name":"generic_predicates_for_param","qualname":"::db::HirDatabaseGroupStorage__::generic_predicates_for_param","value":"<db::GenericPredicatesForParamQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3442},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9101,"byte_end":9119,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"generic_predicates","qualname":"::db::HirDatabaseGroupStorage__::generic_predicates","value":"<db::GenericPredicatesQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9236,"byte_end":9252,"line_start":103,"line_end":103,"column_start":8,"column_end":24},"name":"generic_defaults","qualname":"::db::HirDatabaseGroupStorage__::generic_defaults","value":"<db::GenericDefaultsQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9386,"byte_end":9400,"line_start":106,"line_end":106,"column_start":8,"column_end":22},"name":"impls_in_crate","qualname":"::db::HirDatabaseGroupStorage__::impls_in_crate","value":"<db::ImplsInCrateQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":9518,"byte_end":9533,"line_start":109,"line_end":109,"column_start":8,"column_end":23},"name":"impls_for_trait","qualname":"::db::HirDatabaseGroupStorage__::impls_for_trait","value":"<db::ImplsForTraitQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10031,"byte_end":10043,"line_start":117,"line_end":117,"column_start":8,"column_end":20},"name":"trait_solver","qualname":"::db::HirDatabaseGroupStorage__::trait_solver","value":"<db::TraitSolverQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10173,"byte_end":10189,"line_start":121,"line_end":121,"column_start":8,"column_end":24},"name":"intern_type_ctor","qualname":"::db::HirDatabaseGroupStorage__::intern_type_ctor","value":"<db::InternTypeCtorQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3448},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10173,"byte_end":10189,"line_start":121,"line_end":121,"column_start":8,"column_end":24},"name":"lookup_intern_type_ctor","qualname":"::db::HirDatabaseGroupStorage__::lookup_intern_type_ctor","value":"<db::InternTypeCtorLookupQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10268,"byte_end":10285,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"intern_chalk_impl","qualname":"::db::HirDatabaseGroupStorage__::intern_chalk_impl","value":"<db::InternChalkImplQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10268,"byte_end":10285,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"lookup_intern_chalk_impl","qualname":"::db::HirDatabaseGroupStorage__::lookup_intern_chalk_impl","value":"<db::InternChalkImplLookupQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10358,"byte_end":10379,"line_start":125,"line_end":125,"column_start":8,"column_end":29},"name":"intern_assoc_ty_value","qualname":"::db::HirDatabaseGroupStorage__::intern_assoc_ty_value","value":"<db::InternAssocTyValueQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3452},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10358,"byte_end":10379,"line_start":125,"line_end":125,"column_start":8,"column_end":29},"name":"lookup_intern_assoc_ty_value","qualname":"::db::HirDatabaseGroupStorage__::lookup_intern_assoc_ty_value","value":"<db::InternAssocTyValueLookupQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10522,"byte_end":10540,"line_start":128,"line_end":128,"column_start":8,"column_end":26},"name":"associated_ty_data","qualname":"::db::HirDatabaseGroupStorage__::associated_ty_data","value":"<db::AssociatedTyDataQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10736,"byte_end":10747,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"trait_datum","qualname":"::db::HirDatabaseGroupStorage__::trait_datum","value":"<db::TraitDatumQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":10966,"byte_end":10978,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"struct_datum","qualname":"::db::HirDatabaseGroupStorage__::struct_datum","value":"<db::StructDatumQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3456},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11198,"byte_end":11208,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"impl_datum","qualname":"::db::HirDatabaseGroupStorage__::impl_datum","value":"<db::ImplDatumQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11431,"byte_end":11450,"line_start":155,"line_end":155,"column_start":8,"column_end":27},"name":"associated_ty_value","qualname":"::db::HirDatabaseGroupStorage__::associated_ty_value","value":"<db::AssociatedTyValueQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":11679,"byte_end":11690,"line_start":162,"line_end":162,"column_start":8,"column_end":19},"name":"trait_solve","qualname":"::db::HirDatabaseGroupStorage__::trait_solve","value":"<db::TraitSolveQuery as ra_db::salsa::Query<DB__>>::Storage","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"source_binder","qualname":"::source_binder","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":3678},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3715},{"krate":0,"index":3713},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3717},{"krate":0,"index":3729},{"krate":0,"index":3727},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":177},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":244}],"decl_id":null,"docs":" Lookup hir elements using positions in the source code. This is a lossy\n transformation: in general, a single source might correspond to several\n modules, functions, etc, due to macros, cfgs and `#[path=]` attributes on\n modules.","sig":null,"attributes":[{"value":"/ Lookup hir elements using positions in the source code. This is a lossy","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":11960,"byte_end":12035,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ transformation: in general, a single source might correspond to several","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12036,"byte_end":12111,"line_start":2,"line_end":2,"column_start":1,"column_end":76}},{"value":"/ modules, functions, etc, due to macros, cfgs and `#[path=]` attributes on","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12112,"byte_end":12189,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ modules.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12190,"byte_end":12202,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12203,"byte_end":12206,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ So, this modules should not be used during hir construction, it exists","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12207,"byte_end":12281,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ purely for \"IDE needs\".","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":12282,"byte_end":12309,"line_start":7,"line_end":7,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15086,"byte_end":15100,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"SourceAnalyzer","qualname":"::source_binder::SourceAnalyzer","value":"SourceAnalyzer {  }","parent":null,"children":[{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":" `SourceAnalyzer` is a convenience wrapper which exposes HIR API in terms of\n original source files. It should not be used inside the HIR itself.\n","sig":null,"attributes":[{"value":"/ `SourceAnalyzer` is a convenience wrapper which exposes HIR API in terms of","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":14906,"byte_end":14985,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ original source files. It should not be used inside the HIR itself.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":14986,"byte_end":15057,"line_start":83,"line_end":83,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15427,"byte_end":15430,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Def","qualname":"::source_binder::PathResolution::Def","value":"PathResolution::Def(crate::ModuleDef)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":" An item\n","sig":null,"attributes":[{"value":"/ An item","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15411,"byte_end":15422,"line_start":96,"line_end":96,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15501,"byte_end":15506,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Local","qualname":"::source_binder::PathResolution::Local","value":"PathResolution::Local(Local)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":" A local binding (only value namespace)\n","sig":null,"attributes":[{"value":"/ A local binding (only value namespace)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15454,"byte_end":15496,"line_start":98,"line_end":98,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15547,"byte_end":15559,"line_start":101,"line_end":101,"column_start":5,"column_end":17},"name":"GenericParam","qualname":"::source_binder::PathResolution::GenericParam","value":"PathResolution::GenericParam(GenericParam)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":" A generic parameter\n","sig":null,"attributes":[{"value":"/ A generic parameter","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15519,"byte_end":15542,"line_start":100,"line_end":100,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3697},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15579,"byte_end":15587,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"SelfType","qualname":"::source_binder::PathResolution::SelfType","value":"PathResolution::SelfType(crate::ImplBlock)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15611,"byte_end":15616,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"Macro","qualname":"::source_binder::PathResolution::Macro","value":"PathResolution::Macro(MacroDef)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15632,"byte_end":15641,"line_start":104,"line_end":104,"column_start":5,"column_end":14},"name":"AssocItem","qualname":"::source_binder::PathResolution::AssocItem","value":"PathResolution::AssocItem(crate::AssocItem)","parent":{"krate":0,"index":3687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15390,"byte_end":15404,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"PathResolution","qualname":"::source_binder::PathResolution","value":"pub enum PathResolution {\n\n    /// An item\n    Def(crate::ModuleDef),\n\n    /// A local binding (only value namespace)\n    Local(Local),\n\n    /// A generic parameter\n    GenericParam(GenericParam),\n    SelfType(crate::ImplBlock),\n    Macro(MacroDef),\n    AssocItem(crate::AssocItem),\n}","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":3691},{"krate":0,"index":3694},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15714,"byte_end":15734,"line_start":108,"line_end":108,"column_start":12,"column_end":32},"name":"ScopeEntryWithSyntax","qualname":"::source_binder::ScopeEntryWithSyntax","value":"ScopeEntryWithSyntax {  }","parent":null,"children":[{"krate":0,"index":3718},{"krate":0,"index":3719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15876,"byte_end":15880,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopeEntryWithSyntax>::name","value":"pub fn name(&Self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15936,"byte_end":15939,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"ptr","qualname":"<ScopeEntryWithSyntax>::ptr","value":"pub fn ptr(&Self) -> Either<AstPtr<ast::Pat>, AstPtr<ast::SelfParam>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16055,"byte_end":16074,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"ReferenceDescriptor","qualname":"::source_binder::ReferenceDescriptor","value":"ReferenceDescriptor { range, name }","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16085,"byte_end":16090,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"name":"range","qualname":"::source_binder::ReferenceDescriptor::range","value":"ra_syntax::TextRange","parent":{"krate":0,"index":3731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3733},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16111,"byte_end":16115,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"name","qualname":"::source_binder::ReferenceDescriptor::name","value":"std::string::String","parent":{"krate":0,"index":3731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16139,"byte_end":16148,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"Expansion","qualname":"::source_binder::Expansion","value":"Expansion {  }","parent":null,"children":[{"krate":0,"index":181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16214,"byte_end":16230,"line_start":134,"line_end":134,"column_start":12,"column_end":28},"name":"translate_offset","qualname":"<Expansion>::translate_offset","value":"pub fn translate_offset<impl HirDatabase: HirDatabase>(&Self,\n                                                       &impl HirDatabase,\n                                                       TextUnit)\n-> Option<TextUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16419,"byte_end":16426,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"file_id","qualname":"<Expansion>::file_id","value":"pub fn file_id(&Self) -> HirFileId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16548,"byte_end":16551,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<SourceAnalyzer>::new","value":"pub fn new<impl HirDatabase: HirDatabase>(&impl HirDatabase,\n                                          Source<&SyntaxNode>,\n                                          Option<TextUnit>) -> SourceAnalyzer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":18290,"byte_end":18297,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"type_of","qualname":"<SourceAnalyzer>::type_of","value":"pub fn type_of<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase,\n                                              &ast::Expr) -> Option<crate::Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":18483,"byte_end":18494,"line_start":197,"line_end":197,"column_start":12,"column_end":23},"name":"type_of_pat","qualname":"<SourceAnalyzer>::type_of_pat","value":"pub fn type_of_pat<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase,\n                                                  &ast::Pat)\n-> Option<crate::Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":18674,"byte_end":18693,"line_start":202,"line_end":202,"column_start":12,"column_end":31},"name":"resolve_method_call","qualname":"<SourceAnalyzer>::resolve_method_call","value":"pub fn resolve_method_call(&Self, &ast::MethodCallExpr) -> Option<Function>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":18884,"byte_end":18897,"line_start":207,"line_end":207,"column_start":12,"column_end":25},"name":"resolve_field","qualname":"<SourceAnalyzer>::resolve_field","value":"pub fn resolve_field(&Self, &ast::FieldExpr) -> Option<crate::StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":19094,"byte_end":19116,"line_start":212,"line_end":212,"column_start":12,"column_end":34},"name":"resolve_record_literal","qualname":"<SourceAnalyzer>::resolve_record_literal","value":"pub fn resolve_record_literal(&Self, &ast::RecordLit)\n-> Option<crate::VariantDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":19333,"byte_end":19355,"line_start":217,"line_end":217,"column_start":12,"column_end":34},"name":"resolve_record_pattern","qualname":"<SourceAnalyzer>::resolve_record_pattern","value":"pub fn resolve_record_pattern(&Self, &ast::RecordPat)\n-> Option<crate::VariantDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":19568,"byte_end":19586,"line_start":222,"line_end":222,"column_start":12,"column_end":30},"name":"resolve_macro_call","qualname":"<SourceAnalyzer>::resolve_macro_call","value":"pub fn resolve_macro_call<impl HirDatabase: HirDatabase>(&Self,\n                                                         &impl HirDatabase,\n                                                         &ast::MacroCall)\n-> Option<MacroDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":19905,"byte_end":19921,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"resolve_hir_path","qualname":"<SourceAnalyzer>::resolve_hir_path","value":"pub fn resolve_hir_path<impl HirDatabase: HirDatabase>(&Self,\n                                                       &impl HirDatabase,\n                                                       &crate::Path)\n-> Option<PathResolution>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":21828,"byte_end":21840,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"resolve_path","qualname":"<SourceAnalyzer>::resolve_path","value":"pub fn resolve_path<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase,\n                                                   &ast::Path)\n-> Option<PathResolution>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":23304,"byte_end":23321,"line_start":304,"line_end":304,"column_start":12,"column_end":29},"name":"process_all_names","qualname":"<SourceAnalyzer>::process_all_names","value":"pub fn process_all_names<impl HirDatabase: HirDatabase>(&Self,\n                                                        &impl HirDatabase,\n                                                        &mut FnMut(Name,\n                                                                   ScopeDef)\n                                                             -> ())","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":23594,"byte_end":23607,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"find_all_refs","qualname":"<SourceAnalyzer>::find_all_refs","value":"pub fn find_all_refs(&Self, &ast::BindPat) -> Vec<ReferenceDescriptor>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":24311,"byte_end":24336,"line_start":328,"line_end":328,"column_start":12,"column_end":37},"name":"iterate_method_candidates","qualname":"<SourceAnalyzer>::iterate_method_candidates","value":"pub fn iterate_method_candidates<T, impl HirDatabase: HirDatabase,\n                                 impl FnMut(&Ty, Function) -> Option<T>: FnMut(&Ty,\n                                                                               Function)\n                                 ->\n                                 Option<T>>(&Self, &impl HirDatabase, Ty,\n                                            Option<&Name>,\n                                            impl FnMut(&Ty, Function) -> Option<T>)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":25091,"byte_end":25114,"line_start":352,"line_end":352,"column_start":12,"column_end":35},"name":"iterate_path_candidates","qualname":"<SourceAnalyzer>::iterate_path_candidates","value":"pub fn iterate_path_candidates<T, impl HirDatabase: HirDatabase,\n                               impl FnMut(&Ty, AssocItem) -> Option<T>: FnMut(&Ty,\n                                                                              AssocItem)\n                               ->\n                               Option<T>>(&Self, &impl HirDatabase, Ty,\n                                          Option<&Name>,\n                                          impl FnMut(&Ty, AssocItem) -> Option<T>)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":25749,"byte_end":25758,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"autoderef","qualname":"<SourceAnalyzer>::autoderef","value":"pub fn autoderef<'a,\n                 impl HirDatabase: HirDatabase>(&'a Self,\n                                                &'a impl HirDatabase, Ty)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":26288,"byte_end":26300,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"impls_future","qualname":"<SourceAnalyzer>::impls_future","value":"pub fn impls_future<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase,\n                                                   Ty) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that particular type `ty` implements `std::future::Future`.\n This function is used in `.await` syntax completion.\n","sig":null,"attributes":[{"value":"/ Checks that particular type `ty` implements `std::future::Future`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":26145,"byte_end":26215,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/ This function is used in `.await` syntax completion.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":26220,"byte_end":26276,"line_start":385,"line_end":385,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":26880,"byte_end":26886,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"expand","qualname":"<SourceAnalyzer>::expand","value":"pub fn expand<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase,\n                                             &ast::MacroCall)\n-> Option<Expansion>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31253,"byte_end":31263,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"TypeCtorId","qualname":"::ids::TypeCtorId","value":"","parent":null,"children":[],"decl_id":null,"docs":" This exists just for Chalk, because Chalk just has a single `StructId` where\n we have different kinds of ADTs, primitive types and special type\n constructors like tuples and function pointers.\n","sig":null,"attributes":[{"value":"/ This exists just for Chalk, because Chalk just has a single `StructId` where","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":30988,"byte_end":31068,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ we have different kinds of ADTs, primitive types and special type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31069,"byte_end":31138,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ constructors like tuples and function pointers.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31139,"byte_end":31190,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31455,"byte_end":31467,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"GlobalImplId","qualname":"::ids::GlobalImplId","value":"","parent":null,"children":[],"decl_id":null,"docs":" This exists just for Chalk, because our ImplIds are only unique per module.\n","sig":null,"attributes":[{"value":"/ This exists just for Chalk, because our ImplIds are only unique per module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31313,"byte_end":31392,"line_start":36,"line_end":36,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31711,"byte_end":31725,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"AssocTyValueId","qualname":"::ids::AssocTyValueId","value":"","parent":null,"children":[],"decl_id":null,"docs":" This exists just for Chalk, because it needs a unique ID for each associated\n type value in an impl (even synthetic ones).\n","sig":null,"attributes":[{"value":"/ This exists just for Chalk, because it needs a unique ID for each associated","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31519,"byte_end":31599,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ type value in an impl (even synthetic ones).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ids.rs","byte_start":31600,"byte_end":31648,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32294,"byte_end":32300,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Struct","qualname":"::adt::VariantDef::Struct","value":"VariantDef::Struct(Struct)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32314,"byte_end":32325,"line_start":22,"line_end":22,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::adt::VariantDef::EnumVariant","value":"VariantDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":3799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3799},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32277,"byte_end":32287,"line_start":20,"line_end":20,"column_start":10,"column_end":20},"name":"VariantDef","qualname":"::adt::VariantDef","value":"pub enum VariantDef { Struct(Struct), EnumVariant(EnumVariant), }","parent":null,"children":[{"krate":0,"index":3800},{"krate":0,"index":3803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32418,"byte_end":32424,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"fields","qualname":"<VariantDef>::fields","value":"pub fn fields<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Vec<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32636,"byte_end":32641,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"field","qualname":"<VariantDef>::field","value":"pub fn field<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase, &Name)\n-> Option<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32879,"byte_end":32885,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"module","qualname":"<VariantDef>::module","value":"pub fn module<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":33672,"byte_end":33681,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"TraitData","qualname":"::traits::TraitData","value":"TraitData {  }","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":34996,"byte_end":35011,"line_start":62,"line_end":62,"column_start":12,"column_end":27},"name":"TraitItemsIndex","qualname":"::traits::TraitItemsIndex","value":"TraitItemsIndex {  }","parent":null,"children":[{"krate":0,"index":3841}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/type_alias.rs","byte_start":35985,"byte_end":35998,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"TypeAliasData","qualname":"::type_alias::TypeAliasData","value":"TypeAliasData {  }","parent":null,"children":[{"krate":0,"index":3854},{"krate":0,"index":3855}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":76909,"byte_end":76916,"line_start":9,"line_end":9,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ty::primitive::Uncertain::Unknown","value":"Uncertain::Unknown","parent":{"krate":0,"index":3867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":76922,"byte_end":76927,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Known","qualname":"::ty::primitive::Uncertain::Known","value":"Uncertain::Known(T)","parent":{"krate":0,"index":3867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":76890,"byte_end":76899,"line_start":8,"line_end":8,"column_start":10,"column_end":19},"name":"Uncertain","qualname":"::ty::primitive::Uncertain","value":"pub enum Uncertain<T> { Unknown, Known(T), }","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3871}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77734,"byte_end":77739,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"IntTy","qualname":"::ty::primitive::IntTy","value":"IntTy { signedness, bitness }","parent":null,"children":[{"krate":0,"index":3898},{"krate":0,"index":3899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77750,"byte_end":77760,"line_start":45,"line_end":45,"column_start":9,"column_end":19},"name":"signedness","qualname":"::ty::primitive::IntTy::signedness","value":"ra_hir_def::builtin_type::Signedness","parent":{"krate":0,"index":3897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77782,"byte_end":77789,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"bitness","qualname":"::ty::primitive::IntTy::bitness","value":"ra_hir_def::builtin_type::IntBitness","parent":{"krate":0,"index":3897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78104,"byte_end":78109,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"isize","qualname":"<IntTy>::isize","value":"pub fn isize() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78218,"byte_end":78220,"line_start":66,"line_end":66,"column_start":12,"column_end":14},"name":"i8","qualname":"<IntTy>::i8","value":"pub fn i8() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78326,"byte_end":78329,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"i16","qualname":"<IntTy>::i16","value":"pub fn i16() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78436,"byte_end":78439,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"i32","qualname":"<IntTy>::i32","value":"pub fn i32() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78546,"byte_end":78549,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"i64","qualname":"<IntTy>::i64","value":"pub fn i64() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78656,"byte_end":78660,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"i128","qualname":"<IntTy>::i128","value":"pub fn i128() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78768,"byte_end":78773,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"usize","qualname":"<IntTy>::usize","value":"pub fn usize() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78884,"byte_end":78886,"line_start":90,"line_end":90,"column_start":12,"column_end":14},"name":"u8","qualname":"<IntTy>::u8","value":"pub fn u8() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78994,"byte_end":78997,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"u16","qualname":"<IntTy>::u16","value":"pub fn u16() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":79106,"byte_end":79109,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"u32","qualname":"<IntTy>::u32","value":"pub fn u32() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":79218,"byte_end":79221,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"u64","qualname":"<IntTy>::u64","value":"pub fn u64() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":79330,"byte_end":79334,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"u128","qualname":"<IntTy>::u128","value":"pub fn u128() -> IntTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80350,"byte_end":80357,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"FloatTy","qualname":"::ty::primitive::FloatTy","value":"FloatTy { bitness }","parent":null,"children":[{"krate":0,"index":3914}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80368,"byte_end":80375,"line_start":130,"line_end":130,"column_start":9,"column_end":16},"name":"bitness","qualname":"::ty::primitive::FloatTy::bitness","value":"ra_hir_def::builtin_type::FloatBitness","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80698,"byte_end":80701,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"f32","qualname":"<FloatTy>::f32","value":"pub fn f32() -> FloatTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80782,"byte_end":80785,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"f64","qualname":"<FloatTy>::f64","value":"pub fn f64() -> FloatTy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":495},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":92928,"byte_end":92933,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Chalk","qualname":"::ty::traits::chalk::ToChalk::Chalk","value":"type Chalk;","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81513,"byte_end":81524,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"TraitSolver","qualname":"::ty::traits::TraitSolver","value":"TraitSolver {  }","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":3930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3951},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84514,"byte_end":84530,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"TraitEnvironment","qualname":"::ty::traits::TraitEnvironment","value":"TraitEnvironment { predicates }","parent":null,"children":[{"krate":0,"index":3952}],"decl_id":null,"docs":" A set of clauses that we assume to be true. E.g. if we are inside this function:\n ```rust\n fn foo<T: Default>(t: T) {}\n ```\n we assume that `T: Default`.\n","sig":null,"attributes":[{"value":"/ A set of clauses that we assume to be true. E.g. if we are inside this function:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84288,"byte_end":84372,"line_start":95,"line_end":95,"column_start":1,"column_end":85}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84373,"byte_end":84384,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ fn foo<T: Default>(t: T) {}","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84385,"byte_end":84416,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84417,"byte_end":84424,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ we assume that `T: Default`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84425,"byte_end":84457,"line_start":99,"line_end":99,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3952},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84541,"byte_end":84551,"line_start":102,"line_end":102,"column_start":9,"column_end":19},"name":"predicates","qualname":"::ty::traits::TraitEnvironment::predicates","value":"std::vec::Vec<ty::GenericPredicate>","parent":{"krate":0,"index":3951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85263,"byte_end":85276,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"InEnvironment","qualname":"::ty::traits::InEnvironment","value":"InEnvironment { environment, value }","parent":null,"children":[{"krate":0,"index":3969},{"krate":0,"index":3970}],"decl_id":null,"docs":" Something (usually a goal), along with an environment.\n","sig":null,"attributes":[{"value":"/ Something (usually a goal), along with an environment.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85148,"byte_end":85206,"line_start":120,"line_end":120,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85290,"byte_end":85301,"line_start":123,"line_end":123,"column_start":9,"column_end":20},"name":"environment","qualname":"::ty::traits::InEnvironment::environment","value":"std::sync::Arc<ty::traits::TraitEnvironment>","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85334,"byte_end":85339,"line_start":124,"line_end":124,"column_start":9,"column_end":14},"name":"value","qualname":"::ty::traits::InEnvironment::value","value":"T","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85385,"byte_end":85388,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<InEnvironment<T>>::new","value":"pub fn new(Arc<TraitEnvironment>, T) -> InEnvironment<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85923,"byte_end":85928,"line_start":140,"line_end":140,"column_start":5,"column_end":10},"name":"Trait","qualname":"::ty::traits::Obligation::Trait","value":"Obligation::Trait(TraitRef)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Prove that a certain type implements a trait (the type is the `Self` type\n parameter to the `TraitRef`).\n","sig":null,"attributes":[{"value":"/ Prove that a certain type implements a trait (the type is the `Self` type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85803,"byte_end":85880,"line_start":138,"line_end":138,"column_start":5,"column_end":82}},{"value":"/ parameter to the `TraitRef`).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85885,"byte_end":85918,"line_start":139,"line_end":139,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85944,"byte_end":85954,"line_start":141,"line_end":141,"column_start":5,"column_end":15},"name":"Projection","qualname":"::ty::traits::Obligation::Projection","value":"Obligation::Projection(ProjectionPredicate)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3992},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85786,"byte_end":85796,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"name":"Obligation","qualname":"::ty::traits::Obligation","value":"pub enum Obligation {\n\n    /// Prove that a certain type implements a trait (the type is the `Self` type\n    /// parameter to the `TraitRef`).\n    Trait(TraitRef),\n    Projection(ProjectionPredicate),\n}","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3996}],"decl_id":null,"docs":" Something that needs to be proven (by Chalk) during type checking, e.g. that\n a certain type implements a certain trait. Proving the Obligation might\n result in additional information about inference variables.\n","sig":null,"attributes":[{"value":"/ Something that needs to be proven (by Chalk) during type checking, e.g. that","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85511,"byte_end":85591,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/ a certain type implements a certain trait. Proving the Obligation might","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85592,"byte_end":85667,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ result in additional information about inference variables.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85668,"byte_end":85731,"line_start":135,"line_end":135,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86009,"byte_end":86023,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"from_predicate","qualname":"<Obligation>::from_predicate","value":"pub fn from_predicate(GenericPredicate) -> Option<Obligation>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86454,"byte_end":86473,"line_start":157,"line_end":157,"column_start":12,"column_end":31},"name":"ProjectionPredicate","qualname":"::ty::traits::ProjectionPredicate","value":"ProjectionPredicate { projection_ty, ty }","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4014},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86484,"byte_end":86497,"line_start":158,"line_end":158,"column_start":9,"column_end":22},"name":"projection_ty","qualname":"::ty::traits::ProjectionPredicate::projection_ty","value":"ty::ProjectionTy","parent":{"krate":0,"index":4013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4015},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86521,"byte_end":86523,"line_start":159,"line_end":159,"column_start":9,"column_end":11},"name":"ty","qualname":"::ty::traits::ProjectionPredicate::ty","value":"ty::Ty","parent":{"krate":0,"index":4013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89412,"byte_end":89429,"line_start":240,"line_end":240,"column_start":12,"column_end":29},"name":"SolutionVariables","qualname":"::ty::traits::SolutionVariables","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89430,"byte_end":89452,"line_start":240,"line_end":240,"column_start":30,"column_end":52},"name":"0","qualname":"::ty::traits::SolutionVariables::0","value":"ty::Canonical<std::vec::Vec<ty::Ty>>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89664,"byte_end":89670,"line_start":247,"line_end":247,"column_start":5,"column_end":11},"name":"Unique","qualname":"::ty::traits::Solution::Unique","value":"Solution::Unique(SolutionVariables)","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" The goal indeed holds, and there is a unique value for all existential\n variables.\n","sig":null,"attributes":[{"value":"/ The goal indeed holds, and there is a unique value for all existential","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89566,"byte_end":89640,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ variables.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89645,"byte_end":89659,"line_start":246,"line_end":246,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4048},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89950,"byte_end":89955,"line_start":253,"line_end":253,"column_start":5,"column_end":10},"name":"Ambig","qualname":"::ty::traits::Solution::Ambig","value":"Solution::Ambig(Guidance)","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" The goal may be provable in multiple ways, but regardless we may have some guidance\n for type inference. In this case, we don't return any lifetime\n constraints, since we have not \"committed\" to any particular solution\n yet.\n","sig":null,"attributes":[{"value":"/ The goal may be provable in multiple ways, but regardless we may have some guidance","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89696,"byte_end":89783,"line_start":249,"line_end":249,"column_start":5,"column_end":92}},{"value":"/ for type inference. In this case, we don't return any lifetime","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89788,"byte_end":89854,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ constraints, since we have not \"committed\" to any particular solution","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89859,"byte_end":89932,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ yet.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89937,"byte_end":89945,"line_start":252,"line_end":252,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89551,"byte_end":89559,"line_start":244,"line_end":244,"column_start":10,"column_end":18},"name":"Solution","qualname":"::ty::traits::Solution","value":"pub enum Solution {\n\n    /// The goal indeed holds, and there is a unique value for all existential\n    /// variables.\n    Unique(SolutionVariables),\n\n    /// The goal may be provable in multiple ways, but regardless we may have some guidance\n    /// for type inference. In this case, we don't return any lifetime\n    /// constraints, since we have not \"committed\" to any particular solution\n    /// yet.\n    Ambig(Guidance),\n}","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4048}],"decl_id":null,"docs":" A (possible) solution for a proposed goal.\n","sig":null,"attributes":[{"value":"/ A (possible) solution for a proposed goal.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":89495,"byte_end":89541,"line_start":243,"line_end":243,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90357,"byte_end":90365,"line_start":263,"line_end":263,"column_start":5,"column_end":13},"name":"Definite","qualname":"::ty::traits::Guidance::Definite","value":"Guidance::Definite(SolutionVariables)","parent":{"krate":0,"index":4062},"children":[],"decl_id":null,"docs":" The existential variables *must* have the given values if the goal is\n ever to hold, but that alone isn't enough to guarantee the goal will\n actually hold.\n","sig":null,"attributes":[{"value":"/ The existential variables *must* have the given values if the goal is","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90179,"byte_end":90252,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ ever to hold, but that alone isn't enough to guarantee the goal will","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90257,"byte_end":90329,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ actually hold.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90334,"byte_end":90352,"line_start":262,"line_end":262,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4066},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90594,"byte_end":90603,"line_start":268,"line_end":268,"column_start":5,"column_end":14},"name":"Suggested","qualname":"::ty::traits::Guidance::Suggested","value":"Guidance::Suggested(SolutionVariables)","parent":{"krate":0,"index":4062},"children":[],"decl_id":null,"docs":" There are multiple plausible values for the existentials, but the ones\n here are suggested as the preferred choice heuristically. These should\n be used for inference fallback only.\n","sig":null,"attributes":[{"value":"/ There are multiple plausible values for the existentials, but the ones","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90391,"byte_end":90465,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ here are suggested as the preferred choice heuristically. These should","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90470,"byte_end":90544,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ be used for inference fallback only.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90549,"byte_end":90589,"line_start":267,"line_end":267,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90698,"byte_end":90705,"line_start":271,"line_end":271,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ty::traits::Guidance::Unknown","value":"Guidance::Unknown","parent":{"krate":0,"index":4062},"children":[],"decl_id":null,"docs":" There's no useful information to feed back to type inference\n","sig":null,"attributes":[{"value":"/ There's no useful information to feed back to type inference","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90629,"byte_end":90693,"line_start":270,"line_end":270,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":4062},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90164,"byte_end":90172,"line_start":259,"line_end":259,"column_start":10,"column_end":18},"name":"Guidance","qualname":"::ty::traits::Guidance","value":"pub enum Guidance {\n\n    /// The existential variables *must* have the given values if the goal is\n    /// ever to hold, but that alone isn't enough to guarantee the goal will\n    /// actually hold.\n    Definite(SolutionVariables),\n\n    /// There are multiple plausible values for the existentials, but the ones\n    /// here are suggested as the preferred choice heuristically. These should\n    /// be used for inference fallback only.\n    Suggested(SolutionVariables),\n\n    /// There's no useful information to feed back to type inference\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4069}],"decl_id":null,"docs":" When a goal holds ambiguously (e.g., because there are multiple possible\n solutions), we issue a set of *guidance* back to type inference.\n","sig":null,"attributes":[{"value":"/ When a goal holds ambiguously (e.g., because there are multiple possible","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90009,"byte_end":90085,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ solutions), we issue a set of *guidance* back to type inference.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90086,"byte_end":90154,"line_start":258,"line_end":258,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4103},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91086,"byte_end":91108,"line_start":292,"line_end":292,"column_start":12,"column_end":34},"name":"ClosureFnTraitImplData","qualname":"::ty::traits::ClosureFnTraitImplData","value":"ClosureFnTraitImplData {  }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4122},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91385,"byte_end":91394,"line_start":303,"line_end":303,"column_start":5,"column_end":14},"name":"ImplBlock","qualname":"::ty::traits::Impl::ImplBlock","value":"Impl::ImplBlock(ImplBlock)","parent":{"krate":0,"index":4121},"children":[],"decl_id":null,"docs":" A normal impl from an impl block.\n","sig":null,"attributes":[{"value":"/ A normal impl from an impl block.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91343,"byte_end":91380,"line_start":302,"line_end":302,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91472,"byte_end":91490,"line_start":305,"line_end":305,"column_start":5,"column_end":23},"name":"ClosureFnTraitImpl","qualname":"::ty::traits::Impl::ClosureFnTraitImpl","value":"Impl::ClosureFnTraitImpl(ClosureFnTraitImplData)","parent":{"krate":0,"index":4121},"children":[],"decl_id":null,"docs":" Closure types implement the Fn traits synthetically.\n","sig":null,"attributes":[{"value":"/ Closure types implement the Fn traits synthetically.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91411,"byte_end":91467,"line_start":304,"line_end":304,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91332,"byte_end":91336,"line_start":301,"line_end":301,"column_start":10,"column_end":14},"name":"Impl","qualname":"::ty::traits::Impl","value":"pub enum Impl {\n\n    /// A normal impl from an impl block.\n    ImplBlock(ImplBlock),\n\n    /// Closure types implement the Fn traits synthetically.\n    ClosureFnTraitImpl(ClosureFnTraitImplData),\n}","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4125}],"decl_id":null,"docs":" An impl. Usually this comes from an impl block, but some built-in types get\n synthetic impls.\n","sig":null,"attributes":[{"value":"/ An impl. Usually this comes from an impl block, but some built-in types get","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91177,"byte_end":91256,"line_start":298,"line_end":298,"column_start":1,"column_end":80}},{"value":"/ synthetic impls.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91257,"byte_end":91277,"line_start":299,"line_end":299,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91871,"byte_end":91880,"line_start":314,"line_end":314,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::ty::traits::AssocTyValue::TypeAlias","value":"AssocTyValue::TypeAlias(TypeAlias)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" A normal assoc type value from an impl block.\n","sig":null,"attributes":[{"value":"/ A normal assoc type value from an impl block.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91817,"byte_end":91866,"line_start":313,"line_end":313,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4146},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91953,"byte_end":91977,"line_start":316,"line_end":316,"column_start":5,"column_end":29},"name":"ClosureFnTraitImplOutput","qualname":"::ty::traits::AssocTyValue::ClosureFnTraitImplOutput","value":"AssocTyValue::ClosureFnTraitImplOutput(ClosureFnTraitImplData)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" The output type of the Fn trait implementation.\n","sig":null,"attributes":[{"value":"/ The output type of the Fn trait implementation.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91897,"byte_end":91948,"line_start":315,"line_end":315,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4142},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91798,"byte_end":91810,"line_start":312,"line_end":312,"column_start":10,"column_end":22},"name":"AssocTyValue","qualname":"::ty::traits::AssocTyValue","value":"pub enum AssocTyValue {\n\n    /// A normal assoc type value from an impl block.\n    TypeAlias(TypeAlias),\n\n    /// The output type of the Fn trait implementation.\n    ClosureFnTraitImplOutput(ClosureFnTraitImplData),\n}","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4146}],"decl_id":null,"docs":" An associated type value. Usually this comes from a `type` declaration\n inside an impl block, but for built-in impls we have to synthesize it.\n (We only need this because Chalk wants a unique ID for each of these.)\n","sig":null,"attributes":[{"value":"/ An associated type value. Usually this comes from a `type` declaration","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91519,"byte_end":91593,"line_start":308,"line_end":308,"column_start":1,"column_end":75}},{"value":"/ inside an impl block, but for built-in impls we have to synthesize it.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91594,"byte_end":91668,"line_start":309,"line_end":309,"column_start":1,"column_end":75}},{"value":"/ (We only need this because Chalk wants a unique ID for each of these.)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":91669,"byte_end":91743,"line_start":310,"line_end":310,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":124986,"byte_end":125001,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"CrateImplBlocks","qualname":"::ty::method_resolution::CrateImplBlocks","value":"CrateImplBlocks {  }","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":125575,"byte_end":125593,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"lookup_impl_blocks","qualname":"<CrateImplBlocks>::lookup_impl_blocks","value":"pub fn lookup_impl_blocks(&Self, &Ty) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":125809,"byte_end":125837,"line_start":61,"line_end":61,"column_start":12,"column_end":40},"name":"lookup_impl_blocks_for_trait","qualname":"<CrateImplBlocks>::lookup_impl_blocks_for_trait","value":"pub fn lookup_impl_blocks_for_trait(&Self, Trait) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":125984,"byte_end":125993,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"all_impls","qualname":"<CrateImplBlocks>::all_impls","value":"pub fn all_impls<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":135567,"byte_end":135585,"line_start":321,"line_end":321,"column_start":12,"column_end":30},"name":"iterate_impl_items","qualname":"<Ty>::iterate_impl_items","value":"pub fn iterate_impl_items<T, impl HirDatabase: HirDatabase,\n                          impl FnMut(AssocItem) -> Option<T>: FnMut(AssocItem)\n                          ->\n                          Option<T>>(Self, &impl HirDatabase, Crate,\n                                     impl FnMut(AssocItem) -> Option<T>)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4233},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":140193,"byte_end":140198,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Types","qualname":"::ty::lower::Namespace::Types","value":"Namespace::Types","parent":{"krate":0,"index":4232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":140204,"byte_end":140210,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Values","qualname":"::ty::lower::Namespace::Values","value":"Namespace::Values","parent":{"krate":0,"index":4232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4232},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":140177,"byte_end":140186,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"Namespace","qualname":"::ty::lower::Namespace","value":"pub enum Namespace { Types, Values, }","parent":null,"children":[{"krate":0,"index":4233},{"krate":0,"index":4235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4256},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168091,"byte_end":168099,"line_start":765,"line_end":765,"column_start":5,"column_end":13},"name":"Function","qualname":"::ty::lower::TypableDef::Function","value":"TypableDef::Function(Function)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4259},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168115,"byte_end":168118,"line_start":766,"line_end":766,"column_start":5,"column_end":8},"name":"Adt","qualname":"::ty::lower::TypableDef::Adt","value":"TypableDef::Adt(Adt)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168129,"byte_end":168140,"line_start":767,"line_end":767,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::ty::lower::TypableDef::EnumVariant","value":"TypableDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4265},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168159,"byte_end":168168,"line_start":768,"line_end":768,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::ty::lower::TypableDef::TypeAlias","value":"TypableDef::TypeAlias(TypeAlias)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4268},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168185,"byte_end":168190,"line_start":769,"line_end":769,"column_start":5,"column_end":10},"name":"Const","qualname":"::ty::lower::TypableDef::Const","value":"TypableDef::Const(Const)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168203,"byte_end":168209,"line_start":770,"line_end":770,"column_start":5,"column_end":11},"name":"Static","qualname":"::ty::lower::TypableDef::Static","value":"TypableDef::Static(Static)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4274},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168223,"byte_end":168234,"line_start":771,"line_end":771,"column_start":5,"column_end":16},"name":"BuiltinType","qualname":"::ty::lower::TypableDef::BuiltinType","value":"TypableDef::BuiltinType(BuiltinType)","parent":{"krate":0,"index":4255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4255},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168074,"byte_end":168084,"line_start":764,"line_end":764,"column_start":10,"column_end":20},"name":"TypableDef","qualname":"::ty::lower::TypableDef","value":"pub enum TypableDef {\n    Function(Function),\n    Adt(Adt),\n    EnumVariant(EnumVariant),\n    TypeAlias(TypeAlias),\n    Const(Const),\n    Static(Static),\n    BuiltinType(BuiltinType),\n}","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4262},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4274}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169047,"byte_end":169055,"line_start":801,"line_end":801,"column_start":5,"column_end":13},"name":"Function","qualname":"::ty::lower::CallableDef::Function","value":"CallableDef::Function(Function)","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4316},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169071,"byte_end":169077,"line_start":802,"line_end":802,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ty::lower::CallableDef::Struct","value":"CallableDef::Struct(Struct)","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169091,"byte_end":169102,"line_start":803,"line_end":803,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::ty::lower::CallableDef::EnumVariant","value":"CallableDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4312},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169029,"byte_end":169040,"line_start":800,"line_end":800,"column_start":10,"column_end":21},"name":"CallableDef","qualname":"::ty::lower::CallableDef","value":"pub enum CallableDef {\n    Function(Function),\n    Struct(Struct),\n    EnumVariant(EnumVariant),\n}","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169207,"byte_end":169212,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"krate","qualname":"<CallableDef>::krate","value":"pub fn krate<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Option<crate::Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173305,"byte_end":173317,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"TypeMismatch","qualname":"::ty::infer::TypeMismatch","value":"TypeMismatch { expected, actual }","parent":null,"children":[{"krate":0,"index":4388},{"krate":0,"index":4389}],"decl_id":null,"docs":" A mismatch between an expected and an inferred type.\n","sig":null,"attributes":[{"value":"/ A mismatch between an expected and an inferred type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173192,"byte_end":173248,"line_start":114,"line_end":114,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4388},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173328,"byte_end":173336,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"expected","qualname":"::ty::infer::TypeMismatch::expected","value":"ty::Ty","parent":{"krate":0,"index":4387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173350,"byte_end":173356,"line_start":118,"line_end":118,"column_start":9,"column_end":15},"name":"actual","qualname":"::ty::infer::TypeMismatch::actual","value":"ty::Ty","parent":{"krate":0,"index":4387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4404},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173508,"byte_end":173523,"line_start":123,"line_end":123,"column_start":12,"column_end":27},"name":"InferenceResult","qualname":"::ty::infer::InferenceResult","value":"InferenceResult {  }","parent":null,"children":[{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412}],"decl_id":null,"docs":" The result of type inference: A mapping from expressions and patterns to types.\n","sig":null,"attributes":[{"value":"/ The result of type inference: A mapping from expressions and patterns to types.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173365,"byte_end":173448,"line_start":121,"line_end":121,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174268,"byte_end":174285,"line_start":139,"line_end":139,"column_start":12,"column_end":29},"name":"method_resolution","qualname":"<InferenceResult>::method_resolution","value":"pub fn method_resolution(&Self, ExprId) -> Option<Function>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174398,"byte_end":174414,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"field_resolution","qualname":"<InferenceResult>::field_resolution","value":"pub fn field_resolution(&Self, ExprId) -> Option<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174529,"byte_end":174556,"line_start":145,"line_end":145,"column_start":12,"column_end":39},"name":"variant_resolution_for_expr","qualname":"<InferenceResult>::variant_resolution_for_expr","value":"pub fn variant_resolution_for_expr(&Self, ExprId) -> Option<VariantDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174675,"byte_end":174701,"line_start":148,"line_end":148,"column_start":12,"column_end":38},"name":"variant_resolution_for_pat","qualname":"<InferenceResult>::variant_resolution_for_pat","value":"pub fn variant_resolution_for_pat(&Self, PatId) -> Option<VariantDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174819,"byte_end":174845,"line_start":151,"line_end":151,"column_start":12,"column_end":38},"name":"assoc_resolutions_for_expr","qualname":"<InferenceResult>::assoc_resolutions_for_expr","value":"pub fn assoc_resolutions_for_expr(&Self, ExprId) -> Option<AssocItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174961,"byte_end":174986,"line_start":154,"line_end":154,"column_start":12,"column_end":37},"name":"assoc_resolutions_for_pat","qualname":"<InferenceResult>::assoc_resolutions_for_pat","value":"pub fn assoc_resolutions_for_pat(&Self, PatId) -> Option<AssocItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":175101,"byte_end":175123,"line_start":157,"line_end":157,"column_start":12,"column_end":34},"name":"type_mismatch_for_expr","qualname":"<InferenceResult>::type_mismatch_for_expr","value":"pub fn type_mismatch_for_expr(&Self, ExprId) -> Option<&TypeMismatch>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4447},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192588,"byte_end":192597,"line_start":605,"line_end":605,"column_start":12,"column_end":21},"name":"TypeVarId","qualname":"::ty::infer::TypeVarId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The ID of a type variable.\n","sig":null,"attributes":[{"value":"/ The ID of a type variable.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192495,"byte_end":192525,"line_start":603,"line_end":603,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4466},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193016,"byte_end":193021,"line_start":627,"line_end":627,"column_start":5,"column_end":10},"name":"Known","qualname":"::ty::infer::TypeVarValue::Known","value":"TypeVarValue::Known(Ty)","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4469},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193031,"byte_end":193038,"line_start":628,"line_end":628,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ty::infer::TypeVarValue::Unknown","value":"TypeVarValue::Unknown","parent":{"krate":0,"index":4465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192997,"byte_end":193009,"line_start":626,"line_end":626,"column_start":10,"column_end":22},"name":"TypeVarValue","qualname":"::ty::infer::TypeVarValue","value":"pub enum TypeVarValue { Known(Ty), Unknown, }","parent":null,"children":[{"krate":0,"index":4466},{"krate":0,"index":4469}],"decl_id":null,"docs":" The value of a type variable: either we already know the type, or we don't\n know it yet.\n","sig":null,"attributes":[{"value":"/ The value of a type variable: either we already know the type, or we don't","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192853,"byte_end":192931,"line_start":623,"line_end":623,"column_start":1,"column_end":79}},{"value":"/ know it yet.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192932,"byte_end":192948,"line_start":624,"line_end":624,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194426,"byte_end":194433,"line_start":667,"line_end":667,"column_start":5,"column_end":12},"name":"TypeVar","qualname":"::ty::infer::InferTy::TypeVar","value":"InferTy::TypeVar(TypeVarId)","parent":{"krate":0,"index":4482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194450,"byte_end":194456,"line_start":668,"line_end":668,"column_start":5,"column_end":11},"name":"IntVar","qualname":"::ty::infer::InferTy::IntVar","value":"InferTy::IntVar(TypeVarId)","parent":{"krate":0,"index":4482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194473,"byte_end":194481,"line_start":669,"line_end":669,"column_start":5,"column_end":13},"name":"FloatVar","qualname":"::ty::infer::InferTy::FloatVar","value":"InferTy::FloatVar(TypeVarId)","parent":{"krate":0,"index":4482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194498,"byte_end":194515,"line_start":670,"line_end":670,"column_start":5,"column_end":22},"name":"MaybeNeverTypeVar","qualname":"::ty::infer::InferTy::MaybeNeverTypeVar","value":"InferTy::MaybeNeverTypeVar(TypeVarId)","parent":{"krate":0,"index":4482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194412,"byte_end":194419,"line_start":666,"line_end":666,"column_start":10,"column_end":17},"name":"InferTy","qualname":"::ty::infer::InferTy","value":"pub enum InferTy {\n    TypeVar(TypeVarId),\n    IntVar(TypeVarId),\n    FloatVar(TypeVarId),\n    MaybeNeverTypeVar(TypeVarId),\n}","parent":null,"children":[{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4489},{"krate":0,"index":4492}],"decl_id":null,"docs":" The kinds of placeholders we need during type inference. There's separate\n values for general types, and for integer and float variables. The latter\n two are used for inference of literal values (e.g. `100` could be one of\n several integer types).\n","sig":null,"attributes":[{"value":"/ The kinds of placeholders we need during type inference. There's separate","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194091,"byte_end":194168,"line_start":661,"line_end":661,"column_start":1,"column_end":78}},{"value":"/ values for general types, and for integer and float variables. The latter","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194169,"byte_end":194246,"line_start":662,"line_end":662,"column_start":1,"column_end":78}},{"value":"/ two are used for inference of literal values (e.g. `100` could be one of","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194247,"byte_end":194323,"line_start":663,"line_end":663,"column_start":1,"column_end":77}},{"value":"/ several integer types).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194324,"byte_end":194351,"line_start":664,"line_end":664,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":260830,"byte_end":260842,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"HirFormatter","qualname":"::ty::display::HirFormatter","value":"HirFormatter { db }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":260865,"byte_end":260867,"line_start":8,"line_end":8,"column_start":9,"column_end":11},"name":"db","qualname":"::ty::display::HirFormatter::db","value":"&'a DB","parent":{"krate":0,"index":1360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":260927,"byte_end":260937,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"HirDisplay","qualname":"::ty::display::HirDisplay","value":"HirDisplay","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":260947,"byte_end":260954,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"hir_fmt","qualname":"::ty::display::HirDisplay::hir_fmt","value":"pub fn hir_fmt<impl HirDatabase: HirDatabase>(&Self,\n                                              &mut HirFormatter<, ,\n                                                                impl HirDatabase>)\n-> fmt::Result","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261025,"byte_end":261032,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"display","qualname":"::ty::display::HirDisplay::display","value":"pub fn display<'a, DB>(&'a Self, &'a DB) -> HirDisplayWrapper where\nSelf: Sized","parent":{"krate":0,"index":1366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261262,"byte_end":261274,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"write_joined","qualname":"<HirFormatter>::write_joined","value":"pub fn write_joined<T: HirDisplay,\n                    impl IntoIterator<Item = T>: IntoIterator<Item =\n                    T>>(&mut Self, impl IntoIterator<Item = T>, &str)\n-> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261706,"byte_end":261715,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"<HirFormatter>::write_fmt","value":"pub fn write_fmt(&mut Self, fmt::Arguments) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" This allows using the `write!` macro directly with a `HirFormatter`.\n","sig":null,"attributes":[{"value":"/ This allows using the `write!` macro directly with a `HirFormatter`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261622,"byte_end":261694,"line_start":42,"line_end":42,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261821,"byte_end":261838,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"HirDisplayWrapper","qualname":"::ty::display::HirDisplayWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37811,"byte_end":37815,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ty::TypeCtor::Bool","value":"TypeCtor::Bool","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The primitive boolean type. Written as `bool`.\n","sig":null,"attributes":[{"value":"/ The primitive boolean type. Written as `bool`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37756,"byte_end":37806,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37946,"byte_end":37950,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Char","qualname":"::ty::TypeCtor::Char","value":"TypeCtor::Char","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The primitive character type; holds a Unicode scalar value\n (a non-surrogate code point). Written as `char`.\n","sig":null,"attributes":[{"value":"/ The primitive character type; holds a Unicode scalar value","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37822,"byte_end":37884,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ (a non-surrogate code point). Written as `char`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37889,"byte_end":37941,"line_start":46,"line_end":46,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38011,"byte_end":38014,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Int","qualname":"::ty::TypeCtor::Int","value":"TypeCtor::Int(Uncertain<IntTy>)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A primitive integer type. For example, `i32`.\n","sig":null,"attributes":[{"value":"/ A primitive integer type. For example, `i32`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37957,"byte_end":38006,"line_start":49,"line_end":49,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38100,"byte_end":38105,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Float","qualname":"::ty::TypeCtor::Float","value":"TypeCtor::Float(Uncertain<FloatTy>)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A primitive floating-point type. For example, `f64`.\n","sig":null,"attributes":[{"value":"/ A primitive floating-point type. For example, `f64`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38039,"byte_end":38095,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38177,"byte_end":38180,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Adt","qualname":"::ty::TypeCtor::Adt","value":"TypeCtor::Adt(Adt)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" Structures, enumerations and unions.\n","sig":null,"attributes":[{"value":"/ Structures, enumerations and unions.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38132,"byte_end":38172,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38249,"byte_end":38252,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Str","qualname":"::ty::TypeCtor::Str","value":"TypeCtor::Str","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The pointee of a string slice. Written as `str`.\n","sig":null,"attributes":[{"value":"/ The pointee of a string slice. Written as `str`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38192,"byte_end":38244,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4554},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38317,"byte_end":38322,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"Slice","qualname":"::ty::TypeCtor::Slice","value":"TypeCtor::Slice","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The pointee of an array slice.  Written as `[T]`.\n","sig":null,"attributes":[{"value":"/ The pointee of an array slice.  Written as `[T]`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38259,"byte_end":38312,"line_start":61,"line_end":61,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4556},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38390,"byte_end":38395,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Array","qualname":"::ty::TypeCtor::Array","value":"TypeCtor::Array","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" An array with the given length. Written as `[T; n]`.\n","sig":null,"attributes":[{"value":"/ An array with the given length. Written as `[T; n]`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38329,"byte_end":38385,"line_start":64,"line_end":64,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4558},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38459,"byte_end":38465,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"RawPtr","qualname":"::ty::TypeCtor::RawPtr","value":"TypeCtor::RawPtr(Mutability)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A raw pointer. Written as `*mut T` or `*const T`\n","sig":null,"attributes":[{"value":"/ A raw pointer. Written as `*mut T` or `*const T`","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38402,"byte_end":38454,"line_start":67,"line_end":67,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38587,"byte_end":38590,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"Ref","qualname":"::ty::TypeCtor::Ref","value":"TypeCtor::Ref(Mutability)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A reference; a pointer with an associated lifetime. Written as\n `&'a mut T` or `&'a T`.\n","sig":null,"attributes":[{"value":"/ A reference; a pointer with an associated lifetime. Written as","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38484,"byte_end":38550,"line_start":70,"line_end":70,"column_start":5,"column_end":71}},{"value":"/ `&'a mut T` or `&'a T`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38555,"byte_end":38582,"line_start":71,"line_end":71,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39058,"byte_end":39063,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"FnDef","qualname":"::ty::TypeCtor::FnDef","value":"TypeCtor::FnDef(CallableDef)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The anonymous type of a function declaration/definition. Each\n function has a unique type, which is output (for a function\n named `foo` returning an `i32`) as `fn() -> i32 {foo}`.","sig":null,"attributes":[{"value":"/ The anonymous type of a function declaration/definition. Each","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38609,"byte_end":38674,"line_start":74,"line_end":74,"column_start":5,"column_end":70}},{"value":"/ function has a unique type, which is output (for a function","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38679,"byte_end":38742,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ named `foo` returning an `i32`) as `fn() -> i32 {foo}`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38747,"byte_end":38806,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38811,"byte_end":38814,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This includes tuple struct / enum variant constructors as well.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38819,"byte_end":38886,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38891,"byte_end":38894,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ For example the type of `bar` here:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38899,"byte_end":38938,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38943,"byte_end":38946,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38951,"byte_end":38962,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ fn foo() -> i32 { 1 }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38967,"byte_end":38992,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/ let bar = foo; // bar: fn() -> i32 {foo}","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":38997,"byte_end":39041,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39046,"byte_end":39053,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39297,"byte_end":39302,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"FnPtr","qualname":"::ty::TypeCtor::FnPtr","value":"TypeCtor::FnPtr { num_args }","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A pointer to a function.  Written as `fn() -> i32`.","sig":null,"attributes":[{"value":"/ A pointer to a function.  Written as `fn() -> i32`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39083,"byte_end":39138,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39143,"byte_end":39146,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ For example the type of `bar` here:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39151,"byte_end":39190,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39195,"byte_end":39198,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39203,"byte_end":39214,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ fn foo() -> i32 { 1 }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39219,"byte_end":39244,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/ let bar: fn() -> i32 = foo;","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39249,"byte_end":39280,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39285,"byte_end":39292,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4569},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39355,"byte_end":39360,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Never","qualname":"::ty::TypeCtor::Never","value":"TypeCtor::Never","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The never type `!`.\n","sig":null,"attributes":[{"value":"/ The never type `!`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39327,"byte_end":39350,"line_start":98,"line_end":98,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39418,"byte_end":39423,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"name":"Tuple","qualname":"::ty::TypeCtor::Tuple","value":"TypeCtor::Tuple { cardinality }","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" A tuple type.  For example, `(i32, bool)`.\n","sig":null,"attributes":[{"value":"/ A tuple type.  For example, `(i32, bool)`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39367,"byte_end":39413,"line_start":101,"line_end":101,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4573},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39732,"byte_end":39746,"line_start":108,"line_end":108,"column_start":5,"column_end":19},"name":"AssociatedType","qualname":"::ty::TypeCtor::AssociatedType","value":"TypeCtor::AssociatedType(TypeAlias)","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" Represents an associated item like `Iterator::Item`.  This is used\n when we have tried to normalize a projection like `T::Item` but\n couldn't find a better representation.  In that case, we generate\n an **application type** like `(Iterator::Item)<T>`.\n","sig":null,"attributes":[{"value":"/ Represents an associated item like `Iterator::Item`.  This is used","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39451,"byte_end":39521,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ when we have tried to normalize a projection like `T::Item` but","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39526,"byte_end":39593,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ couldn't find a better representation.  In that case, we generate","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39598,"byte_end":39667,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ an **application type** like `(Iterator::Item)<T>`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39672,"byte_end":39727,"line_start":107,"line_end":107,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":4576},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39907,"byte_end":39914,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Closure","qualname":"::ty::TypeCtor::Closure","value":"TypeCtor::Closure { def, expr }","parent":{"krate":0,"index":4538},"children":[],"decl_id":null,"docs":" The type of a specific closure.","sig":null,"attributes":[{"value":"/ The type of a specific closure.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39764,"byte_end":39799,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39804,"byte_end":39807,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The closure signature is stored in a `FnPtr` type in the first type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39812,"byte_end":39883,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ parameter.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39888,"byte_end":39902,"line_start":113,"line_end":113,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37741,"byte_end":37749,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"TypeCtor","qualname":"::ty::TypeCtor","value":"pub enum TypeCtor {\n\n    /// The primitive boolean type. Written as `bool`.\n    Bool,\n\n    /// The primitive character type; holds a Unicode scalar value\n    /// (a non-surrogate code point). Written as `char`.\n    Char,\n\n    /// A primitive integer type. For example, `i32`.\n    Int(Uncertain<IntTy>),\n\n    /// A primitive floating-point type. For example, `f64`.\n    Float(Uncertain<FloatTy>),\n\n    /// Structures, enumerations and unions.\n    Adt(Adt),\n\n    /// The pointee of a string slice. Written as `str`.\n    Str,\n\n    /// The pointee of an array slice.  Written as `[T]`.\n    Slice,\n\n    /// An array with the given length. Written as `[T; n]`.\n    Array,\n\n    /// A raw pointer. Written as `*mut T` or `*const T`\n    RawPtr(Mutability),\n\n    /// A reference; a pointer with an associated lifetime. Written as\n    /// `&'a mut T` or `&'a T`.\n    Ref(Mutability),\n\n    /// The anonymous type of a function declaration/definition. Each\n    /// function has a unique type, which is output (for a function\n    /// named `foo` returning an `i32`) as `fn() -> i32 {foo}`.\n    ///\n    /// This includes tuple struct / enum variant constructors as well.\n    ///\n    /// For example the type of `bar` here:\n    ///\n    /// ```rust\n    /// fn foo() -> i32 { 1 }\n    /// let bar = foo; // bar: fn() -> i32 {foo}\n    /// ```\n    FnDef(CallableDef),\n\n    /// A pointer to a function.  Written as `fn() -> i32`.\n    ///\n    /// For example the type of `bar` here:\n    ///\n    /// ```rust\n    /// fn foo() -> i32 { 1 }\n    /// let bar: fn() -> i32 = foo;\n    /// ```\n    FnPtr {\n        num_args: u16,\n    },\n\n    /// The never type `!`.\n    Never,\n\n    /// A tuple type.  For example, `(i32, bool)`.\n    Tuple {\n        cardinality: u16,\n    },\n\n    /// Represents an associated item like `Iterator::Item`.  This is used\n    /// when we have tried to normalize a projection like `T::Item` but\n    /// couldn't find a better representation.  In that case, we generate\n    /// an **application type** like `(Iterator::Item)<T>`.\n    AssociatedType(TypeAlias),\n\n    /// The type of a specific closure.\n    ///\n    /// The closure signature is stored in a `FnPtr` type in the first type\n    /// parameter.\n    Closure {\n        def: DefWithBody,\n        expr: ExprId,\n    },\n}","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4549},{"krate":0,"index":4552},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4561},{"krate":0,"index":4564},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4576}],"decl_id":null,"docs":" A type constructor or type name: this might be something like the primitive\n type `bool`, a struct like `Vec`, or things like function pointers or\n tuples.\n","sig":null,"attributes":[{"value":"/ A type constructor or type name: this might be something like the primitive","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37515,"byte_end":37594,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ type `bool`, a struct like `Vec`, or things like function pointers or","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37595,"byte_end":37668,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ tuples.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":37669,"byte_end":37680,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39981,"byte_end":39994,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"num_ty_params","qualname":"<TypeCtor>::num_ty_params","value":"pub fn num_ty_params<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":41196,"byte_end":41201,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"krate","qualname":"<TypeCtor>::krate","value":"pub fn krate<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":41929,"byte_end":41943,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"as_generic_def","qualname":"<TypeCtor>::as_generic_def","value":"pub fn as_generic_def(Self) -> Option<crate::generics::GenericDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42878,"byte_end":42891,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"ApplicationTy","qualname":"::ty::ApplicationTy","value":"ApplicationTy { ctor, parameters }","parent":null,"children":[{"krate":0,"index":4595},{"krate":0,"index":4596}],"decl_id":null,"docs":" A nominal type with (maybe 0) type parameters. This might be a primitive\n type like `bool`, a struct, tuple, function pointer, reference or\n several other things.\n","sig":null,"attributes":[{"value":"/ A nominal type with (maybe 0) type parameters. This might be a primitive","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42649,"byte_end":42725,"line_start":192,"line_end":192,"column_start":1,"column_end":77}},{"value":"/ type like `bool`, a struct, tuple, function pointer, reference or","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42726,"byte_end":42795,"line_start":193,"line_end":193,"column_start":1,"column_end":70}},{"value":"/ several other things.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42796,"byte_end":42821,"line_start":194,"line_end":194,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4595},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42902,"byte_end":42906,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"ctor","qualname":"::ty::ApplicationTy::ctor","value":"ty::TypeCtor","parent":{"krate":0,"index":4594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42926,"byte_end":42936,"line_start":198,"line_end":198,"column_start":9,"column_end":19},"name":"parameters","qualname":"::ty::ApplicationTy::parameters","value":"ty::Substs","parent":{"krate":0,"index":4594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4611},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43176,"byte_end":43188,"line_start":205,"line_end":205,"column_start":12,"column_end":24},"name":"ProjectionTy","qualname":"::ty::ProjectionTy","value":"ProjectionTy { associated_ty, parameters }","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613}],"decl_id":null,"docs":" A \"projection\" type corresponds to an (unnormalized)\n projection like `<P0 as Trait<P1..Pn>>::Foo`. Note that the\n trait and all its parameters are fully known.\n","sig":null,"attributes":[{"value":"/ A \"projection\" type corresponds to an (unnormalized)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":42949,"byte_end":43005,"line_start":201,"line_end":201,"column_start":1,"column_end":57}},{"value":"/ projection like `<P0 as Trait<P1..Pn>>::Foo`. Note that the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43006,"byte_end":43069,"line_start":202,"line_end":202,"column_start":1,"column_end":64}},{"value":"/ trait and all its parameters are fully known.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43070,"byte_end":43119,"line_start":203,"line_end":203,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43199,"byte_end":43212,"line_start":206,"line_end":206,"column_start":9,"column_end":22},"name":"associated_ty","qualname":"::ty::ProjectionTy::associated_ty","value":"code_model::TypeAlias","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43233,"byte_end":43243,"line_start":207,"line_end":207,"column_start":9,"column_end":19},"name":"parameters","qualname":"::ty::ProjectionTy::parameters","value":"ty::Substs","parent":{"krate":0,"index":4611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43287,"byte_end":43296,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"trait_ref","qualname":"<ProjectionTy>::trait_ref","value":"pub fn trait_ref<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> TraitRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44275,"byte_end":44280,"line_start":243,"line_end":243,"column_start":5,"column_end":10},"name":"Apply","qualname":"::ty::Ty::Apply","value":"Ty::Apply(ApplicationTy)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A nominal type with (maybe 0) type parameters. This might be a primitive\n type like `bool`, a struct, tuple, function pointer, reference or\n several other things.\n","sig":null,"attributes":[{"value":"/ A nominal type with (maybe 0) type parameters. This might be a primitive","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44090,"byte_end":44166,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ type like `bool`, a struct, tuple, function pointer, reference or","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44171,"byte_end":44240,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ several other things.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44245,"byte_end":44270,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44485,"byte_end":44495,"line_start":248,"line_end":248,"column_start":5,"column_end":15},"name":"Projection","qualname":"::ty::Ty::Projection","value":"Ty::Projection(ProjectionTy)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A \"projection\" type corresponds to an (unnormalized)\n projection like `<P0 as Trait<P1..Pn>>::Foo`. Note that the\n trait and all its parameters are fully known.\n","sig":null,"attributes":[{"value":"/ A \"projection\" type corresponds to an (unnormalized)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44302,"byte_end":44358,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ projection like `<P0 as Trait<P1..Pn>>::Foo`. Note that the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44363,"byte_end":44426,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ trait and all its parameters are fully known.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44431,"byte_end":44480,"line_start":247,"line_end":247,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44580,"byte_end":44585,"line_start":251,"line_end":251,"column_start":5,"column_end":10},"name":"Param","qualname":"::ty::Ty::Param","value":"Ty::Param { idx, name }","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A type parameter; for example, `T` in `fn f<T>(x: T) {}\n","sig":null,"attributes":[{"value":"/ A type parameter; for example, `T` in `fn f<T>(x: T) {}","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44516,"byte_end":44575,"line_start":250,"line_end":250,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4638},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45019,"byte_end":45024,"line_start":262,"line_end":262,"column_start":5,"column_end":10},"name":"Bound","qualname":"::ty::Ty::Bound","value":"Ty::Bound(u32)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A bound type variable. Used during trait resolution to represent Chalk\n variables, and in `Dyn` and `Opaque` bounds to represent the `Self` type.\n","sig":null,"attributes":[{"value":"/ A bound type variable. Used during trait resolution to represent Chalk","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44858,"byte_end":44932,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ variables, and in `Dyn` and `Opaque` bounds to represent the `Self` type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44937,"byte_end":45014,"line_start":261,"line_end":261,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4641},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45137,"byte_end":45142,"line_start":266,"line_end":266,"column_start":5,"column_end":10},"name":"Infer","qualname":"::ty::Ty::Infer","value":"Ty::Infer(InferTy)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A type variable used during type checking. Not to be confused with a\n type parameter.\n","sig":null,"attributes":[{"value":"/ A type variable used during type checking. Not to be confused with a","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45036,"byte_end":45108,"line_start":264,"line_end":264,"column_start":5,"column_end":77}},{"value":"/ type parameter.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45113,"byte_end":45132,"line_start":265,"line_end":265,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4644},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45510,"byte_end":45513,"line_start":274,"line_end":274,"column_start":5,"column_end":8},"name":"Dyn","qualname":"::ty::Ty::Dyn","value":"Ty::Dyn(Arc<[GenericPredicate]>)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A trait object (`dyn Trait` or bare `Trait` in pre-2018 Rust).","sig":null,"attributes":[{"value":"/ A trait object (`dyn Trait` or bare `Trait` in pre-2018 Rust).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45158,"byte_end":45224,"line_start":268,"line_end":268,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45229,"byte_end":45232,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The predicates are quantified over the `Self` type, i.e. `Ty::Bound(0)`","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45237,"byte_end":45312,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ represents the `Self` type inside the bounds. This is currently","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45317,"byte_end":45384,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/ implicit; Chalk has the `Binders` struct to make it explicit, but it","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45389,"byte_end":45461,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ didn't seem worth the overhead yet.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45466,"byte_end":45505,"line_start":273,"line_end":273,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4647},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45684,"byte_end":45690,"line_start":280,"line_end":280,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::ty::Ty::Opaque","value":"Ty::Opaque(Arc<[GenericPredicate]>)","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" An opaque type (`impl Trait`).","sig":null,"attributes":[{"value":"/ An opaque type (`impl Trait`).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45545,"byte_end":45579,"line_start":276,"line_end":276,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45584,"byte_end":45587,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The predicates are quantified over the `Self` type; see `Ty::Dyn` for","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45592,"byte_end":45665,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ more.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45670,"byte_end":45679,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46111,"byte_end":46118,"line_start":287,"line_end":287,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ty::Ty::Unknown","value":"Ty::Unknown","parent":{"krate":0,"index":4628},"children":[],"decl_id":null,"docs":" A placeholder for a type which could not be computed; this is propagated\n to avoid useless error messages. Doubles as a placeholder where type\n variables are inserted before type checking, since we want to try to\n infer a better type here anyway -- for the IDE use case, we want to try\n to infer as much as possible even in the presence of type errors.\n","sig":null,"attributes":[{"value":"/ A placeholder for a type which could not be computed; this is propagated","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45722,"byte_end":45798,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ to avoid useless error messages. Doubles as a placeholder where type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45803,"byte_end":45875,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ variables are inserted before type checking, since we want to try to","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45880,"byte_end":45952,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ infer a better type here anyway -- for the IDE use case, we want to try","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":45957,"byte_end":46032,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ to infer as much as possible even in the presence of type errors.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46037,"byte_end":46106,"line_start":286,"line_end":286,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":44081,"byte_end":44083,"line_start":239,"line_end":239,"column_start":10,"column_end":12},"name":"Ty","qualname":"::ty::Ty","value":"pub enum Ty {\n\n    /// A nominal type with (maybe 0) type parameters. This might be a primitive\n    /// type like `bool`, a struct, tuple, function pointer, reference or\n    /// several other things.\n    Apply(ApplicationTy),\n\n    /// A \"projection\" type corresponds to an (unnormalized)\n    /// projection like `<P0 as Trait<P1..Pn>>::Foo`. Note that the\n    /// trait and all its parameters are fully known.\n    Projection(ProjectionTy),\n\n    /// A type parameter; for example, `T` in `fn f<T>(x: T) {}\n    Param {\n        /// The index of the parameter (starting with parameters from the\n        /// surrounding impl, then the current function).\n        idx: u32,\n        /// The name of the parameter, for displaying.\n        name: Name,\n    },\n\n    /// A bound type variable. Used during trait resolution to represent Chalk\n    /// variables, and in `Dyn` and `Opaque` bounds to represent the `Self` type.\n    Bound(u32),\n\n    /// A type variable used during type checking. Not to be confused with a\n    /// type parameter.\n    Infer(InferTy),\n\n    /// A trait object (`dyn Trait` or bare `Trait` in pre-2018 Rust).\n    ///\n    /// The predicates are quantified over the `Self` type, i.e. `Ty::Bound(0)`\n    /// represents the `Self` type inside the bounds. This is currently\n    /// implicit; Chalk has the `Binders` struct to make it explicit, but it\n    /// didn't seem worth the overhead yet.\n    Dyn(Arc<[GenericPredicate]>),\n\n    /// An opaque type (`impl Trait`).\n    ///\n    /// The predicates are quantified over the `Self` type; see `Ty::Dyn` for\n    /// more.\n    Opaque(Arc<[GenericPredicate]>),\n\n    /// A placeholder for a type which could not be computed; this is propagated\n    /// to avoid useless error messages. Doubles as a placeholder where type\n    /// variables are inserted before type checking, since we want to try to\n    /// infer a better type here anyway -- for the IDE use case, we want to try\n    /// to infer as much as possible even in the presence of type errors.\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4632},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4647},{"krate":0,"index":4650}],"decl_id":null,"docs":" A type.","sig":null,"attributes":[{"value":"/ A type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43848,"byte_end":43859,"line_start":232,"line_end":232,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43860,"byte_end":43863,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ See also the `TyKind` enum in rustc (librustc/ty/sty.rs), which represents","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43864,"byte_end":43942,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ the same thing (but in a different way).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43943,"byte_end":43987,"line_start":235,"line_end":235,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43988,"byte_end":43991,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ This should be cheap to clone.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43992,"byte_end":44026,"line_start":237,"line_end":237,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4666},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46231,"byte_end":46237,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"Substs","qualname":"::ty::Substs","value":"","parent":null,"children":[],"decl_id":null,"docs":" A list of substitutions for generic parameters.\n","sig":null,"attributes":[{"value":"/ A list of substitutions for generic parameters.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46123,"byte_end":46174,"line_start":290,"line_end":290,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46621,"byte_end":46626,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"empty","qualname":"<Substs>::empty","value":"pub fn empty() -> Substs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46688,"byte_end":46694,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"single","qualname":"<Substs>::single","value":"pub fn single(Ty) -> Substs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46764,"byte_end":46770,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Substs>::prefix","value":"pub fn prefix(&Self, usize) -> Substs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46882,"byte_end":46891,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"name":"as_single","qualname":"<Substs>::as_single","value":"pub fn as_single(&Self) -> &Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":47130,"byte_end":47138,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"identity","qualname":"<Substs>::identity","value":"pub fn identity(&GenericParams) -> Substs","parent":null,"children":[],"decl_id":null,"docs":" Return Substs that replace each parameter by itself (i.e. `Ty::Param`).\n","sig":null,"attributes":[{"value":"/ Return Substs that replace each parameter by itself (i.e. `Ty::Param`).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":47043,"byte_end":47118,"line_start":328,"line_end":328,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":47498,"byte_end":47508,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"bound_vars","qualname":"<Substs>::bound_vars","value":"pub fn bound_vars(&GenericParams) -> Substs","parent":null,"children":[],"decl_id":null,"docs":" Return Substs that replace each parameter by a bound variable.\n","sig":null,"attributes":[{"value":"/ Return Substs that replace each parameter by a bound variable.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":47420,"byte_end":47486,"line_start":339,"line_end":339,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":47767,"byte_end":47780,"line_start":350,"line_end":350,"column_start":12,"column_end":25},"name":"build_for_def","qualname":"<Substs>::build_for_def","value":"pub fn build_for_def<impl HirDatabase: HirDatabase,\n                     impl HasGenericParams: HasGenericParams>(&impl HirDatabase,\n                                                              impl HasGenericParams)\n-> SubstsBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48017,"byte_end":48035,"line_start":356,"line_end":356,"column_start":12,"column_end":30},"name":"build_for_generics","qualname":"<Substs>::build_for_generics","value":"pub fn build_for_generics(&GenericParams) -> SubstsBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48177,"byte_end":48196,"line_start":360,"line_end":360,"column_start":12,"column_end":31},"name":"build_for_type_ctor","qualname":"<Substs>::build_for_type_ctor","value":"pub fn build_for_type_ctor<impl HirDatabase: HirDatabase>(&impl HirDatabase,\n                                                          TypeCtor)\n-> SubstsBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4683},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48494,"byte_end":48507,"line_start":370,"line_end":370,"column_start":12,"column_end":25},"name":"SubstsBuilder","qualname":"::ty::SubstsBuilder","value":"SubstsBuilder {  }","parent":null,"children":[{"krate":0,"index":4684},{"krate":0,"index":4685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48587,"byte_end":48592,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"build","qualname":"<SubstsBuilder>::build","value":"pub fn build(Self) -> Substs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48715,"byte_end":48719,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"push","qualname":"<SubstsBuilder>::push","value":"pub fn push(Self, Ty) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48890,"byte_end":48910,"line_start":390,"line_end":390,"column_start":12,"column_end":32},"name":"fill_with_bound_vars","qualname":"<SubstsBuilder>::fill_with_bound_vars","value":"pub fn fill_with_bound_vars(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49017,"byte_end":49033,"line_start":394,"line_end":394,"column_start":12,"column_end":28},"name":"fill_with_params","qualname":"<SubstsBuilder>::fill_with_params","value":"pub fn fill_with_params(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49192,"byte_end":49209,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"fill_with_unknown","qualname":"<SubstsBuilder>::fill_with_unknown","value":"pub fn fill_with_unknown(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49289,"byte_end":49293,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"fill","qualname":"<SubstsBuilder>::fill","value":"pub fn fill<impl Iterator<Item = Ty>: Iterator<Item =\n            Ty>>(Self, impl Iterator<Item = Ty>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49476,"byte_end":49493,"line_start":409,"line_end":409,"column_start":12,"column_end":29},"name":"use_parent_substs","qualname":"<SubstsBuilder>::use_parent_substs","value":"pub fn use_parent_substs(Self, &Substs) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50049,"byte_end":50057,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"TraitRef","qualname":"::ty::TraitRef","value":"TraitRef { trait_, substs }","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692}],"decl_id":null,"docs":" A trait with type parameters. This includes the `Self`, so this represents a concrete type implementing the trait.\n Name to be bikeshedded: TraitBound? TraitImplements?\n","sig":null,"attributes":[{"value":"/ A trait with type parameters. This includes the `Self`, so this represents a concrete type implementing the trait.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49817,"byte_end":49935,"line_start":425,"line_end":425,"column_start":1,"column_end":119}},{"value":"/ Name to be bikeshedded: TraitBound? TraitImplements?","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49936,"byte_end":49992,"line_start":426,"line_end":426,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4691},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50088,"byte_end":50094,"line_start":430,"line_end":430,"column_start":9,"column_end":15},"name":"trait_","qualname":"::ty::TraitRef::trait_","value":"code_model::Trait","parent":{"krate":0,"index":4690},"children":[],"decl_id":null,"docs":" FIXME name?\n","sig":null,"attributes":[{"value":"/ FIXME name?","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50064,"byte_end":50079,"line_start":429,"line_end":429,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50111,"byte_end":50117,"line_start":431,"line_end":431,"column_start":9,"column_end":15},"name":"substs","qualname":"::ty::TraitRef::substs","value":"ty::Substs","parent":{"krate":0,"index":4690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50157,"byte_end":50164,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"self_ty","qualname":"<TraitRef>::self_ty","value":"pub fn self_ty(&Self) -> &Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50738,"byte_end":50749,"line_start":455,"line_end":455,"column_start":5,"column_end":16},"name":"Implemented","qualname":"::ty::GenericPredicate::Implemented","value":"GenericPredicate::Implemented(TraitRef)","parent":{"krate":0,"index":4707},"children":[],"decl_id":null,"docs":" The given trait needs to be implemented for its type parameters.\n","sig":null,"attributes":[{"value":"/ The given trait needs to be implemented for its type parameters.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50665,"byte_end":50733,"line_start":454,"line_end":454,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4711},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50831,"byte_end":50841,"line_start":457,"line_end":457,"column_start":5,"column_end":15},"name":"Projection","qualname":"::ty::GenericPredicate::Projection","value":"GenericPredicate::Projection(ProjectionPredicate)","parent":{"krate":0,"index":4707},"children":[],"decl_id":null,"docs":" An associated type bindings like in `Iterator<Item = T>`.\n","sig":null,"attributes":[{"value":"/ An associated type bindings like in `Iterator<Item = T>`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50765,"byte_end":50826,"line_start":456,"line_end":456,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4714},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50997,"byte_end":51002,"line_start":460,"line_end":460,"column_start":5,"column_end":10},"name":"Error","qualname":"::ty::GenericPredicate::Error","value":"GenericPredicate::Error","parent":{"krate":0,"index":4707},"children":[],"decl_id":null,"docs":" We couldn't resolve the trait reference. (If some type parameters can't\n be resolved, they will just be Unknown).\n","sig":null,"attributes":[{"value":"/ We couldn't resolve the trait reference. (If some type parameters can't","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50868,"byte_end":50943,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ be resolved, they will just be Unknown).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50948,"byte_end":50992,"line_start":459,"line_end":459,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":4707},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50642,"byte_end":50658,"line_start":453,"line_end":453,"column_start":10,"column_end":26},"name":"GenericPredicate","qualname":"::ty::GenericPredicate","value":"pub enum GenericPredicate {\n\n    /// The given trait needs to be implemented for its type parameters.\n    Implemented(TraitRef),\n\n    /// An associated type bindings like in `Iterator<Item = T>`.\n    Projection(ProjectionPredicate),\n\n    /// We couldn't resolve the trait reference. (If some type parameters can't\n    /// be resolved, they will just be Unknown).\n    Error,\n}","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4711},{"krate":0,"index":4714}],"decl_id":null,"docs":" Like `generics::WherePredicate`, but with resolved types: A condition on the\n parameters of a generic item.\n","sig":null,"attributes":[{"value":"/ Like `generics::WherePredicate`, but with resolved types: A condition on the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50473,"byte_end":50553,"line_start":450,"line_end":450,"column_start":1,"column_end":81}},{"value":"/ parameters of a generic item.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50554,"byte_end":50587,"line_start":451,"line_end":451,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51042,"byte_end":51050,"line_start":464,"line_end":464,"column_start":12,"column_end":20},"name":"is_error","qualname":"<GenericPredicate>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51186,"byte_end":51200,"line_start":471,"line_end":471,"column_start":12,"column_end":26},"name":"is_implemented","qualname":"<GenericPredicate>::is_implemented","value":"pub fn is_implemented(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51345,"byte_end":51354,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"trait_ref","qualname":"<GenericPredicate>::trait_ref","value":"pub fn trait_ref<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> Option<TraitRef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52786,"byte_end":52795,"line_start":513,"line_end":513,"column_start":12,"column_end":21},"name":"Canonical","qualname":"::ty::Canonical","value":"Canonical { value, num_vars }","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4733}],"decl_id":null,"docs":" Basically a claim (currently not validated / checked) that the contained\n type / trait ref contains no inference variables; any inference variables it\n contained have been replaced by bound variables, and `num_vars` tells us how\n many there are. This is used to erase irrelevant differences between types\n before using them in queries.\n","sig":null,"attributes":[{"value":"/ Basically a claim (currently not validated / checked) that the contained","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52378,"byte_end":52454,"line_start":507,"line_end":507,"column_start":1,"column_end":77}},{"value":"/ type / trait ref contains no inference variables; any inference variables it","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52455,"byte_end":52535,"line_start":508,"line_end":508,"column_start":1,"column_end":81}},{"value":"/ contained have been replaced by bound variables, and `num_vars` tells us how","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52536,"byte_end":52616,"line_start":509,"line_end":509,"column_start":1,"column_end":81}},{"value":"/ many there are. This is used to erase irrelevant differences between types","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52617,"byte_end":52695,"line_start":510,"line_end":510,"column_start":1,"column_end":79}},{"value":"/ before using them in queries.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52696,"byte_end":52729,"line_start":511,"line_end":511,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52809,"byte_end":52814,"line_start":514,"line_end":514,"column_start":9,"column_end":14},"name":"value","qualname":"::ty::Canonical::value","value":"T","parent":{"krate":0,"index":4730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4733},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52827,"byte_end":52835,"line_start":515,"line_end":515,"column_start":9,"column_end":17},"name":"num_vars","qualname":"::ty::Canonical::num_vars","value":"usize","parent":{"krate":0,"index":4730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52998,"byte_end":53003,"line_start":521,"line_end":521,"column_start":12,"column_end":17},"name":"FnSig","qualname":"::ty::FnSig","value":"FnSig {  }","parent":null,"children":[{"krate":0,"index":4756}],"decl_id":null,"docs":" A function signature as seen by type inference: Several parameter types and\n one return type.\n","sig":null,"attributes":[{"value":"/ A function signature as seen by type inference: Several parameter types and","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52847,"byte_end":52926,"line_start":518,"line_end":518,"column_start":1,"column_end":80}},{"value":"/ one return type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":52927,"byte_end":52947,"line_start":519,"line_end":519,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53067,"byte_end":53089,"line_start":526,"line_end":526,"column_start":12,"column_end":34},"name":"from_params_and_return","qualname":"<FnSig>::from_params_and_return","value":"pub fn from_params_and_return(Vec<Ty>, Ty) -> FnSig","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53226,"byte_end":53244,"line_start":531,"line_end":531,"column_start":12,"column_end":30},"name":"from_fn_ptr_substs","qualname":"<FnSig>::from_fn_ptr_substs","value":"pub fn from_fn_ptr_substs(&Substs) -> FnSig","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53350,"byte_end":53356,"line_start":535,"line_end":535,"column_start":12,"column_end":18},"name":"params","qualname":"<FnSig>::params","value":"pub fn params(&Self) -> &[Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53462,"byte_end":53465,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"ret","qualname":"<FnSig>::ret","value":"pub fn ret(&Self) -> &Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53954,"byte_end":53960,"line_start":559,"line_end":559,"column_start":12,"column_end":18},"name":"simple","qualname":"<Ty>::simple","value":"pub fn simple(TypeCtor) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54073,"byte_end":54082,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"apply_one","qualname":"<Ty>::apply_one","value":"pub fn apply_one(TypeCtor, Ty) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54212,"byte_end":54217,"line_start":565,"line_end":565,"column_start":12,"column_end":17},"name":"apply","qualname":"<Ty>::apply","value":"pub fn apply(TypeCtor, Substs) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54333,"byte_end":54337,"line_start":568,"line_end":568,"column_start":12,"column_end":16},"name":"unit","qualname":"<Ty>::unit","value":"pub fn unit() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54439,"byte_end":54451,"line_start":572,"line_end":572,"column_start":12,"column_end":24},"name":"as_reference","qualname":"<Ty>::as_reference","value":"pub fn as_reference(&Self) -> Option<(&Ty, Mutability)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54726,"byte_end":54732,"line_start":581,"line_end":581,"column_start":12,"column_end":18},"name":"as_adt","qualname":"<Ty>::as_adt","value":"pub fn as_adt(&Self) -> Option<(Adt, &Substs)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":54986,"byte_end":54994,"line_start":590,"line_end":590,"column_start":12,"column_end":20},"name":"as_tuple","qualname":"<Ty>::as_tuple","value":"pub fn as_tuple(&Self) -> Option<&Substs>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":55229,"byte_end":55240,"line_start":599,"line_end":599,"column_start":12,"column_end":23},"name":"as_callable","qualname":"<Ty>::as_callable","value":"pub fn as_callable(&Self) -> Option<(CallableDef, &Substs)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":56802,"byte_end":56814,"line_start":641,"line_end":641,"column_start":12,"column_end":24},"name":"apply_substs","qualname":"<Ty>::apply_substs","value":"pub fn apply_substs(Self, Substs) -> Ty","parent":null,"children":[],"decl_id":null,"docs":" If this is a type with type parameters (an ADT or function), replaces\n the `Substs` for these type parameters with the given ones. (So e.g. if\n `self` is `Option<_>` and the substs contain `u32`, we'll have\n `Option<u32>` afterwards.)\n","sig":null,"attributes":[{"value":"/ If this is a type with type parameters (an ADT or function), replaces","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":56531,"byte_end":56604,"line_start":637,"line_end":637,"column_start":5,"column_end":78}},{"value":"/ the `Substs` for these type parameters with the given ones. (So e.g. if","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":56609,"byte_end":56684,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ `self` is `Option<_>` and the substs contain `u32`, we'll have","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":56689,"byte_end":56755,"line_start":639,"line_end":639,"column_start":5,"column_end":71}},{"value":"/ `Option<u32>` afterwards.)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":56760,"byte_end":56790,"line_start":640,"line_end":640,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57303,"byte_end":57309,"line_start":653,"line_end":653,"column_start":12,"column_end":18},"name":"substs","qualname":"<Ty>::substs","value":"pub fn substs(&Self) -> Option<Substs>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type parameters of this type if it has some (i.e. is an ADT\n or function); so if `self` is `Option<u32>`, this returns the `u32`.\n","sig":null,"attributes":[{"value":"/ Returns the type parameters of this type if it has some (i.e. is an ADT","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57139,"byte_end":57214,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ or function); so if `self` is `Option<u32>`, this returns the `u32`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57219,"byte_end":57291,"line_start":652,"line_end":652,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57565,"byte_end":57579,"line_start":661,"line_end":661,"column_start":12,"column_end":26},"name":"inherent_trait","qualname":"<Ty>::inherent_trait","value":"pub fn inherent_trait(&Self) -> Option<Trait>","parent":null,"children":[],"decl_id":null,"docs":" If this is an `impl Trait` or `dyn Trait`, returns that trait.\n","sig":null,"attributes":[{"value":"/ If this is an `impl Trait` or `dyn Trait`, returns that trait.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57487,"byte_end":57553,"line_start":660,"line_end":660,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58067,"byte_end":58075,"line_start":676,"line_end":676,"column_start":11,"column_end":19},"name":"TypeWalk","qualname":"::ty::TypeWalk","value":"TypeWalk","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545}],"decl_id":null,"docs":" This allows walking structures that contain types to do something with those\n types, similar to Chalk's `Fold` trait.\n","sig":null,"attributes":[{"value":"/ This allows walking structures that contain types to do something with those","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":57932,"byte_end":58012,"line_start":674,"line_end":674,"column_start":1,"column_end":81}},{"value":"/ types, similar to Chalk's `Fold` trait.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58013,"byte_end":58056,"line_start":675,"line_end":675,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58085,"byte_end":58089,"line_start":677,"line_end":677,"column_start":8,"column_end":12},"name":"walk","qualname":"::ty::TypeWalk::walk","value":"pub fn walk<impl FnMut(&Ty): FnMut(&Ty) -> ()>(&Self, &mut impl FnMut(&Ty))","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58130,"byte_end":58138,"line_start":678,"line_end":678,"column_start":8,"column_end":16},"name":"walk_mut","qualname":"::ty::TypeWalk::walk_mut","value":"pub fn walk_mut<impl FnMut(&mut Ty): FnMut(&mut Ty) ->\n                ()>(&mut Self, &mut impl FnMut(&mut Ty))","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58886,"byte_end":58902,"line_start":691,"line_end":691,"column_start":8,"column_end":24},"name":"walk_mut_binders","qualname":"::ty::TypeWalk::walk_mut_binders","value":"pub fn walk_mut_binders<impl FnMut(&mut Ty, usize): FnMut(&mut Ty, usize) ->\n                        ()>(&mut Self, &mut impl FnMut(&mut Ty, usize), usize)","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Walk the type, counting entered binders.","sig":null,"attributes":[{"value":"/ Walk the type, counting entered binders.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58252,"byte_end":58296,"line_start":681,"line_end":681,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58301,"byte_end":58304,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ `Ty::Bound` variables use DeBruijn indexing, which means that 0 refers","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58309,"byte_end":58383,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/ to the innermost binder, 1 to the next, etc.. So when we want to","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58388,"byte_end":58456,"line_start":684,"line_end":684,"column_start":5,"column_end":73}},{"value":"/ substitute a certain bound variable, we can't just walk the whole type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58461,"byte_end":58535,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ and blindly replace each instance of a certain index; when we 'enter'","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58540,"byte_end":58613,"line_start":686,"line_end":686,"column_start":5,"column_end":78}},{"value":"/ things that introduce new bound variables, we have to keep track of","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58618,"byte_end":58689,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/ that. Currently, the only thing that introduces bound variables on our","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58694,"byte_end":58768,"line_start":688,"line_end":688,"column_start":5,"column_end":79}},{"value":"/ side are `Ty::Dyn` and `Ty::Opaque`, which each introduce a bound","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58773,"byte_end":58842,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ variable for the self type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58847,"byte_end":58878,"line_start":690,"line_end":690,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":58975,"byte_end":58979,"line_start":693,"line_end":693,"column_start":8,"column_end":12},"name":"fold","qualname":"::ty::TypeWalk::fold","value":"pub fn fold<impl FnMut(Ty) -> Ty: FnMut(Ty) ->\n            Ty>(Self, &mut impl FnMut(Ty) -> Ty) -> Self where Self: Sized","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59457,"byte_end":59462,"line_start":707,"line_end":707,"column_start":8,"column_end":13},"name":"subst","qualname":"::ty::TypeWalk::subst","value":"pub fn subst(Self, &Substs) -> Self where Self: Sized","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Replaces type parameters in this type using the given `Substs`. (So e.g.\n if `self` is `&[T]`, where type parameter T has index 0, and the\n `Substs` contain `u32` at index 0, we'll have `&[u32]` afterwards.)\n","sig":null,"attributes":[{"value":"/ Replaces type parameters in this type using the given `Substs`. (So e.g.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59224,"byte_end":59300,"line_start":704,"line_end":704,"column_start":5,"column_end":81}},{"value":"/ if `self` is `&[T]`, where type parameter T has index 0, and the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59305,"byte_end":59373,"line_start":705,"line_end":705,"column_start":5,"column_end":73}},{"value":"/ `Substs` contain `u32` at index 0, we'll have `&[u32]` afterwards.)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59378,"byte_end":59449,"line_start":706,"line_end":706,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59827,"byte_end":59843,"line_start":720,"line_end":720,"column_start":8,"column_end":24},"name":"subst_bound_vars","qualname":"::ty::TypeWalk::subst_bound_vars","value":"pub fn subst_bound_vars(Self, &Substs) -> Self where Self: Sized","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Substitutes `Ty::Bound` vars (as opposed to type parameters).\n","sig":null,"attributes":[{"value":"/ Substitutes `Ty::Bound` vars (as opposed to type parameters).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":59754,"byte_end":59819,"line_start":719,"line_end":719,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":60369,"byte_end":60385,"line_start":739,"line_end":739,"column_start":8,"column_end":24},"name":"shift_bound_vars","qualname":"::ty::TypeWalk::shift_bound_vars","value":"pub fn shift_bound_vars(Self, i32) -> Self where Self: Sized","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Shifts up `Ty::Bound` vars by `n`.\n","sig":null,"attributes":[{"value":"/ Shifts up `Ty::Bound` vars by `n`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":60323,"byte_end":60361,"line_start":738,"line_end":738,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263041,"byte_end":263053,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"target_trait","qualname":"<ImplBlock>::target_trait","value":"pub fn target_trait<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase)\n-> Option<TypeRef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263177,"byte_end":263188,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"target_type","qualname":"<ImplBlock>::target_type","value":"pub fn target_type<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase)\n-> TypeRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263302,"byte_end":263311,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"target_ty","qualname":"<ImplBlock>::target_ty","value":"pub fn target_ty<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263436,"byte_end":263452,"line_start":42,"line_end":42,"column_start":12,"column_end":28},"name":"target_trait_ref","qualname":"<ImplBlock>::target_trait_ref","value":"pub fn target_trait_ref<impl HirDatabase: HirDatabase>(&Self,\n                                                       &impl HirDatabase)\n-> Option<TraitRef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263660,"byte_end":263665,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"items","qualname":"<ImplBlock>::items","value":"pub fn items<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase)\n-> Vec<AssocItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263812,"byte_end":263823,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<ImplBlock>::is_negative","value":"pub fn is_negative<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":263926,"byte_end":263932,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"module","qualname":"<ImplBlock>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":264027,"byte_end":264032,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"krate","qualname":"<ImplBlock>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(&Self, &impl DefDatabase) -> Crate","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4769},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270119,"byte_end":270123,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Enum","qualname":"::lang_item::LangItemTarget::Enum","value":"LangItemTarget::Enum(Enum)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4772},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270135,"byte_end":270143,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"Function","qualname":"::lang_item::LangItemTarget::Function","value":"LangItemTarget::Function(Function)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4775},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270159,"byte_end":270168,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"ImplBlock","qualname":"::lang_item::LangItemTarget::ImplBlock","value":"LangItemTarget::ImplBlock(ImplBlock)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4778},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270185,"byte_end":270191,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Static","qualname":"::lang_item::LangItemTarget::Static","value":"LangItemTarget::Static(Static)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270205,"byte_end":270211,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Struct","qualname":"::lang_item::LangItemTarget::Struct","value":"LangItemTarget::Struct(Struct)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270225,"byte_end":270230,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Trait","qualname":"::lang_item::LangItemTarget::Trait","value":"LangItemTarget::Trait(Trait)","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4768},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270098,"byte_end":270112,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LangItemTarget","qualname":"::lang_item::LangItemTarget","value":"pub enum LangItemTarget {\n    Enum(Enum),\n    Function(Function),\n    ImplBlock(ImplBlock),\n    Static(Static),\n    Struct(Struct),\n    Trait(Trait),\n}","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":4772},{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4781},{"krate":0,"index":4784}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270813,"byte_end":270822,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"LangItems","qualname":"::lang_item::LangItems","value":"LangItems {  }","parent":null,"children":[{"krate":0,"index":4803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270903,"byte_end":270909,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"target","qualname":"<LangItems>::target","value":"pub fn target<'a>(&'a Self, &str) -> Option<&'a LangItemTarget>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"generics","qualname":"::generics","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":4817},{"krate":0,"index":4830},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4821},{"krate":0,"index":4832},{"krate":0,"index":4846},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4837},{"krate":0,"index":4848},{"krate":0,"index":4860},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4851},{"krate":0,"index":4862},{"krate":0,"index":4897},{"krate":0,"index":4896},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4887},{"krate":0,"index":4884},{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4903},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4913},{"krate":0,"index":4915},{"krate":0,"index":4917},{"krate":0,"index":1790},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1824}],"decl_id":null,"docs":" Many kinds of items or constructs can have generic parameters: functions,\n structs, impls, traits, etc. This module provides a common HIR for these\n generic parameters. See also the `Generics` type and the `generics_of` query\n in rustc.\n","sig":null,"attributes":[{"value":"/ Many kinds of items or constructs can have generic parameters: functions,","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":274934,"byte_end":275011,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ structs, impls, traits, etc. This module provides a common HIR for these","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275012,"byte_end":275088,"line_start":2,"line_end":2,"column_start":1,"column_end":77}},{"value":"/ generic parameters. See also the `Generics` type and the `generics_of` query","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275089,"byte_end":275169,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ in rustc.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275170,"byte_end":275183,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275719,"byte_end":275731,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"GenericParam","qualname":"::generics::GenericParam","value":"GenericParam {  }","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820}],"decl_id":null,"docs":" Data about a generic parameter (to a function, struct, impl, ...).\n","sig":null,"attributes":[{"value":"/ Data about a generic parameter (to a function, struct, impl, ...).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275598,"byte_end":275668,"line_start":21,"line_end":21,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":4832},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275994,"byte_end":276007,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"GenericParams","qualname":"::generics::GenericParams","value":"GenericParams {  }","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836}],"decl_id":null,"docs":" Data about the generic parameters of a function, struct, impl, etc.\n","sig":null,"attributes":[{"value":"/ Data about the generic parameters of a function, struct, impl, etc.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":275872,"byte_end":275943,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276540,"byte_end":276554,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"WherePredicate {  }","parent":null,"children":[{"krate":0,"index":4849},{"krate":0,"index":4850}],"decl_id":null,"docs":" A single predicate from a where clause, i.e. `where Type: Trait`. Combined\n where clauses like `where T: Foo + Bar` are turned into multiple of these.\n It might still result in multiple actual predicates though, because of\n associated type bindings like `Iterator<Item = u32>`.\n","sig":null,"attributes":[{"value":"/ A single predicate from a where clause, i.e. `where Type: Trait`. Combined","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276199,"byte_end":276277,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ where clauses like `where T: Foo + Bar` are turned into multiple of these.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276278,"byte_end":276356,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ It might still result in multiple actual predicates though, because of","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276357,"byte_end":276431,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ associated type bindings like `Iterator<Item = u32>`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276432,"byte_end":276489,"line_start":42,"line_end":42,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276704,"byte_end":276712,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Function","qualname":"::generics::GenericDef::Function","value":"GenericDef::Function(Function)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276728,"byte_end":276731,"line_start":52,"line_end":52,"column_start":5,"column_end":8},"name":"Adt","qualname":"::generics::GenericDef::Adt","value":"GenericDef::Adt(Adt)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4869},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276742,"byte_end":276747,"line_start":53,"line_end":53,"column_start":5,"column_end":10},"name":"Trait","qualname":"::generics::GenericDef::Trait","value":"GenericDef::Trait(Trait)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276760,"byte_end":276769,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::generics::GenericDef::TypeAlias","value":"GenericDef::TypeAlias(TypeAlias)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4875},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276786,"byte_end":276795,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"ImplBlock","qualname":"::generics::GenericDef::ImplBlock","value":"GenericDef::ImplBlock(ImplBlock)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276942,"byte_end":276953,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::generics::GenericDef::EnumVariant","value":"GenericDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4881},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":277065,"byte_end":277070,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"name":"Const","qualname":"::generics::GenericDef::Const","value":"GenericDef::Const(Const)","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":276687,"byte_end":276697,"line_start":50,"line_end":50,"column_start":10,"column_end":20},"name":"GenericDef","qualname":"::generics::GenericDef","value":"pub enum GenericDef {\n    Function(Function),\n    Adt(Adt),\n    Trait(Trait),\n    TypeAlias(TypeAlias),\n    ImplBlock(ImplBlock),\n    EnumVariant(EnumVariant),\n    Const(Const),\n}","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4866},{"krate":0,"index":4869},{"krate":0,"index":4872},{"krate":0,"index":4875},{"krate":0,"index":4878},{"krate":0,"index":4881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":281984,"byte_end":282003,"line_start":179,"line_end":179,"column_start":12,"column_end":31},"name":"count_parent_params","qualname":"<GenericParams>::count_parent_params","value":"pub fn count_parent_params(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":282132,"byte_end":282161,"line_start":183,"line_end":183,"column_start":12,"column_end":41},"name":"count_params_including_parent","qualname":"<GenericParams>::count_params_including_parent","value":"pub fn count_params_including_parent(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":282517,"byte_end":282540,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"params_including_parent","qualname":"<GenericParams>::params_including_parent","value":"pub fn params_including_parent(&Self) -> Vec<&GenericParam>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283550,"byte_end":283566,"line_start":225,"line_end":225,"column_start":11,"column_end":27},"name":"HasGenericParams","qualname":"::generics::HasGenericParams","value":"HasGenericParams: Copy","parent":null,"children":[{"krate":0,"index":1822}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283582,"byte_end":283596,"line_start":226,"line_end":226,"column_start":8,"column_end":22},"name":"generic_params","qualname":"::generics::HasGenericParams::generic_params","value":"pub fn generic_params<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Arc<GenericParams>","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298484,"byte_end":298493,"line_start":412,"line_end":412,"column_start":5,"column_end":14},"name":"ModuleDef","qualname":"::resolve::ScopeDef::ModuleDef","value":"ScopeDef::ModuleDef(ModuleDef)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298510,"byte_end":298518,"line_start":413,"line_end":413,"column_start":5,"column_end":13},"name":"MacroDef","qualname":"::resolve::ScopeDef::MacroDef","value":"ScopeDef::MacroDef(MacroDef)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298534,"byte_end":298546,"line_start":414,"line_end":414,"column_start":5,"column_end":17},"name":"GenericParam","qualname":"::resolve::ScopeDef::GenericParam","value":"ScopeDef::GenericParam(u32)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298557,"byte_end":298569,"line_start":415,"line_end":415,"column_start":5,"column_end":17},"name":"ImplSelfType","qualname":"::resolve::ScopeDef::ImplSelfType","value":"ScopeDef::ImplSelfType(ImplBlock)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298586,"byte_end":298597,"line_start":416,"line_end":416,"column_start":5,"column_end":16},"name":"AdtSelfType","qualname":"::resolve::ScopeDef::AdtSelfType","value":"ScopeDef::AdtSelfType(Adt)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298608,"byte_end":298613,"line_start":417,"line_end":417,"column_start":5,"column_end":10},"name":"Local","qualname":"::resolve::ScopeDef::Local","value":"ScopeDef::Local(Local)","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298626,"byte_end":298633,"line_start":418,"line_end":418,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::resolve::ScopeDef::Unknown","value":"ScopeDef::Unknown","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298469,"byte_end":298477,"line_start":411,"line_end":411,"column_start":10,"column_end":18},"name":"ScopeDef","qualname":"::resolve::ScopeDef","value":"pub enum ScopeDef {\n    ModuleDef(ModuleDef),\n    MacroDef(MacroDef),\n    GenericParam(u32),\n    ImplSelfType(ImplBlock),\n    AdtSelfType(Adt),\n    Local(Local),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1929}],"decl_id":null,"docs":" For IDE only\n","sig":null,"attributes":[{"value":"/ For IDE only","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298443,"byte_end":298459,"line_start":410,"line_end":410,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"diagnostics","qualname":"::diagnostics","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":1962},{"krate":0,"index":5061},{"krate":0,"index":5065},{"krate":0,"index":1966},{"krate":0,"index":1970},{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":1974},{"krate":0,"index":1978}],"decl_id":null,"docs":" FIXME: write short doc here\n","sig":null,"attributes":[{"value":"/ FIXME: write short doc here","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301082,"byte_end":301113,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5056},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301401,"byte_end":301412,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"NoSuchField","qualname":"::diagnostics::NoSuchField","value":"NoSuchField { file, field }","parent":null,"children":[{"krate":0,"index":5057},{"krate":0,"index":5058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5057},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301423,"byte_end":301427,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"file","qualname":"::diagnostics::NoSuchField::file","value":"ra_hir_expand::HirFileId","parent":{"krate":0,"index":5056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5058},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301448,"byte_end":301453,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"field","qualname":"::diagnostics::NoSuchField::field","value":"ra_syntax::AstPtr<ra_syntax::ast::RecordField>","parent":{"krate":0,"index":5056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5061},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301816,"byte_end":301829,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"MissingFields","qualname":"::diagnostics::MissingFields","value":"MissingFields { file, field_list, missed_fields }","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5062},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301840,"byte_end":301844,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"name":"file","qualname":"::diagnostics::MissingFields::file","value":"ra_hir_expand::HirFileId","parent":{"krate":0,"index":5061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5063},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301865,"byte_end":301875,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"field_list","qualname":"::diagnostics::MissingFields::field_list","value":"ra_syntax::AstPtr<ra_syntax::ast::RecordFieldList>","parent":{"krate":0,"index":5061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5064},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301915,"byte_end":301928,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"missed_fields","qualname":"::diagnostics::MissingFields::missed_fields","value":"std::vec::Vec<ra_hir_expand::name::Name>","parent":{"krate":0,"index":5061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5067},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302605,"byte_end":302624,"line_start":62,"line_end":62,"column_start":12,"column_end":31},"name":"MissingOkInTailExpr","qualname":"::diagnostics::MissingOkInTailExpr","value":"MissingOkInTailExpr { file, expr }","parent":null,"children":[{"krate":0,"index":5068},{"krate":0,"index":5069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5068},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302635,"byte_end":302639,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"name":"file","qualname":"::diagnostics::MissingOkInTailExpr::file","value":"ra_hir_expand::HirFileId","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5069},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302660,"byte_end":302664,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"expr","qualname":"::diagnostics::MissingOkInTailExpr::expr","value":"ra_syntax::AstPtr<ra_syntax::ast::Expr>","parent":{"krate":0,"index":5067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":341937,"byte_end":341946,"line_start":15,"line_end":15,"column_start":11,"column_end":20},"name":"HasSource","qualname":"::code_model::src::HasSource","value":"HasSource","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":341958,"byte_end":341961,"line_start":16,"line_end":16,"column_start":10,"column_end":13},"name":"Ast","qualname":"::code_model::src::HasSource::Ast","value":"type Ast;","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":341970,"byte_end":341976,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"source","qualname":"::code_model::src::HasSource::source","value":"pub fn source<impl DefDatabase + AstDatabase: DefDatabase +\n              AstDatabase>(Self, &impl DefDatabase + AstDatabase)\n-> Source<Self::Ast>","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342280,"byte_end":342297,"line_start":24,"line_end":24,"column_start":12,"column_end":29},"name":"definition_source","qualname":"<Module>::definition_source","value":"pub fn definition_source<impl DefDatabase + AstDatabase: DefDatabase +\n                         AstDatabase>(Self, &impl DefDatabase + AstDatabase)\n-> Source<ModuleSource>","parent":null,"children":[],"decl_id":null,"docs":" Returns a node which defines this module. That is, a file or a `mod foo {}` with items.\n","sig":null,"attributes":[{"value":"/ Returns a node which defines this module. That is, a file or a `mod foo {}` with items.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342177,"byte_end":342268,"line_start":23,"line_end":23,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342879,"byte_end":342897,"line_start":35,"line_end":35,"column_start":12,"column_end":30},"name":"declaration_source","qualname":"<Module>::declaration_source","value":"pub fn declaration_source<impl DefDatabase + AstDatabase: DefDatabase +\n                          AstDatabase>(Self, &impl DefDatabase + AstDatabase)\n-> Option<Source<ast::Module>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a node which declares this module, either a `mod foo;` or a `mod foo {}`.\n `None` for the crate root.\n","sig":null,"attributes":[{"value":"/ Returns a node which declares this module, either a `mod foo;` or a `mod foo {}`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342747,"byte_end":342832,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ `None` for the crate root.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342837,"byte_end":342867,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346627,"byte_end":346640,"line_start":150,"line_end":150,"column_start":11,"column_end":24},"name":"HasBodySource","qualname":"::code_model::src::HasBodySource","value":"HasBodySource: HasBody + HasSource","parent":null,"children":[{"krate":0,"index":2100}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346701,"byte_end":346712,"line_start":154,"line_end":154,"column_start":8,"column_end":19},"name":"expr_source","qualname":"::code_model::src::HasBodySource::expr_source","value":"pub fn expr_source<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase,\n                                                  crate::expr::ExprId)\n-> Option<Source<Either<ast::Expr, ast::RecordField>>>","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5095},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347594,"byte_end":347600,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Module","qualname":"::code_model::docs::DocDef::Module","value":"DocDef::Module(Module)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347614,"byte_end":347625,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"StructField","qualname":"::code_model::docs::DocDef::StructField","value":"DocDef::StructField(StructField)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347644,"byte_end":347647,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"Adt","qualname":"::code_model::docs::DocDef::Adt","value":"DocDef::Adt(Adt)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5104},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347658,"byte_end":347669,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::code_model::docs::DocDef::EnumVariant","value":"DocDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5107},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347688,"byte_end":347694,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Static","qualname":"::code_model::docs::DocDef::Static","value":"DocDef::Static(Static)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347708,"byte_end":347713,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Const","qualname":"::code_model::docs::DocDef::Const","value":"DocDef::Const(Const)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5113},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347726,"byte_end":347734,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Function","qualname":"::code_model::docs::DocDef::Function","value":"DocDef::Function(Function)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5116},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347750,"byte_end":347755,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Trait","qualname":"::code_model::docs::DocDef::Trait","value":"DocDef::Trait(Trait)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5119},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347768,"byte_end":347777,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::code_model::docs::DocDef::TypeAlias","value":"DocDef::TypeAlias(TypeAlias)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5122},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347794,"byte_end":347802,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"MacroDef","qualname":"::code_model::docs::DocDef::MacroDef","value":"DocDef::MacroDef(MacroDef)","parent":{"krate":0,"index":5094},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5094},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347581,"byte_end":347587,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"DocDef","qualname":"::code_model::docs::DocDef","value":"pub enum DocDef {\n    Module(Module),\n    StructField(StructField),\n    Adt(Adt),\n    EnumVariant(EnumVariant),\n    Static(Static),\n    Const(Const),\n    Function(Function),\n    Trait(Trait),\n    TypeAlias(TypeAlias),\n    MacroDef(MacroDef),\n}","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5113},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5166},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348068,"byte_end":348081,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"Documentation","qualname":"::code_model::docs::Documentation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds documentation\n","sig":null,"attributes":[{"value":"/ Holds documentation","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":347994,"byte_end":348017,"line_start":40,"line_end":40,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348204,"byte_end":348210,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Documentation>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348374,"byte_end":348378,"line_start":60,"line_end":60,"column_start":11,"column_end":15},"name":"Docs","qualname":"::code_model::docs::Docs","value":"Docs","parent":null,"children":[{"krate":0,"index":2136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348388,"byte_end":348392,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"docs","qualname":"::code_model::docs::Docs::docs","value":"pub fn docs<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> Option<Documentation>","parent":{"krate":0,"index":2135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5181},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350299,"byte_end":350305,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Module","qualname":"::code_model::attrs::AttrDef::Module","value":"AttrDef::Module(Module)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350319,"byte_end":350330,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"StructField","qualname":"::code_model::attrs::AttrDef::StructField","value":"AttrDef::StructField(StructField)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350349,"byte_end":350352,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"Adt","qualname":"::code_model::attrs::AttrDef::Adt","value":"AttrDef::Adt(Adt)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5190},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350363,"byte_end":350371,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Function","qualname":"::code_model::attrs::AttrDef::Function","value":"AttrDef::Function(Function)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5193},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350387,"byte_end":350398,"line_start":19,"line_end":19,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::code_model::attrs::AttrDef::EnumVariant","value":"AttrDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5196},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350417,"byte_end":350423,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Static","qualname":"::code_model::attrs::AttrDef::Static","value":"AttrDef::Static(Static)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5199},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350437,"byte_end":350442,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Const","qualname":"::code_model::attrs::AttrDef::Const","value":"AttrDef::Const(Const)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5202},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350455,"byte_end":350460,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Trait","qualname":"::code_model::attrs::AttrDef::Trait","value":"AttrDef::Trait(Trait)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5205},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350473,"byte_end":350482,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::code_model::attrs::AttrDef::TypeAlias","value":"AttrDef::TypeAlias(TypeAlias)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5208},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350499,"byte_end":350507,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"MacroDef","qualname":"::code_model::attrs::AttrDef::MacroDef","value":"AttrDef::MacroDef(MacroDef)","parent":{"krate":0,"index":5180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350285,"byte_end":350292,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"AttrDef","qualname":"::code_model::attrs::AttrDef","value":"pub enum AttrDef {\n    Module(Module),\n    StructField(StructField),\n    Adt(Adt),\n    Function(Function),\n    EnumVariant(EnumVariant),\n    Static(Static),\n    Const(Const),\n    Trait(Trait),\n    TypeAlias(TypeAlias),\n    MacroDef(MacroDef),\n}","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5184},{"krate":0,"index":5187},{"krate":0,"index":5190},{"krate":0,"index":5193},{"krate":0,"index":5196},{"krate":0,"index":5199},{"krate":0,"index":5202},{"krate":0,"index":5205},{"krate":0,"index":5208}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350710,"byte_end":350715,"line_start":40,"line_end":40,"column_start":11,"column_end":16},"name":"Attrs","qualname":"::code_model::attrs::Attrs","value":"Attrs","parent":null,"children":[{"krate":0,"index":2173}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":350725,"byte_end":350730,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"attrs","qualname":"::code_model::attrs::Attrs::attrs","value":"pub fn attrs<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> Option<Arc<[Attr]>>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5252},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307813,"byte_end":307818,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"Crate","qualname":"::code_model::Crate","value":"Crate {  }","parent":null,"children":[{"krate":0,"index":5253}],"decl_id":null,"docs":" hir::Crate describes a single crate. It's the main interface with which\n a crate's dependencies interact. Mostly, it should be just a proxy for the\n root module.\n","sig":null,"attributes":[{"value":"/ hir::Crate describes a single crate. It's the main interface with which","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307579,"byte_end":307654,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ a crate's dependencies interact. Mostly, it should be just a proxy for the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307655,"byte_end":307733,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ root module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307734,"byte_end":307750,"line_start":40,"line_end":40,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":5269},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307886,"byte_end":307901,"line_start":47,"line_end":47,"column_start":12,"column_end":27},"name":"CrateDependency","qualname":"::code_model::CrateDependency","value":"CrateDependency { krate, name }","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5270},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307912,"byte_end":307917,"line_start":48,"line_end":48,"column_start":9,"column_end":14},"name":"krate","qualname":"::code_model::CrateDependency::krate","value":"code_model::Crate","parent":{"krate":0,"index":5269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5271},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307934,"byte_end":307938,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"name","qualname":"::code_model::CrateDependency::name","value":"ra_hir_expand::name::Name","parent":{"krate":0,"index":5269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307973,"byte_end":307981,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"crate_id","qualname":"<Crate>::crate_id","value":"pub fn crate_id(Self) -> CrateId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308041,"byte_end":308053,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"dependencies","qualname":"<Crate>::dependencies","value":"pub fn dependencies<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Vec<CrateDependency>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308410,"byte_end":308421,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"root_module","qualname":"<Crate>::root_module","value":"pub fn root_module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Module>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308596,"byte_end":308603,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"edition","qualname":"<Crate>::edition","value":"pub fn edition<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Edition","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308751,"byte_end":308754,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"all","qualname":"<Crate>::all","value":"pub fn all<impl DefDatabase: DefDatabase>(&impl DefDatabase) -> Vec<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308942,"byte_end":308948,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Module","qualname":"::code_model::Module","value":"Module {  }","parent":null,"children":[{"krate":0,"index":5275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5292},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309108,"byte_end":309114,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Module","qualname":"::code_model::ModuleDef::Module","value":"ModuleDef::Module(Module)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309128,"byte_end":309136,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"name":"Function","qualname":"::code_model::ModuleDef::Function","value":"ModuleDef::Function(Function)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309152,"byte_end":309155,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Adt","qualname":"::code_model::ModuleDef::Adt","value":"ModuleDef::Adt(Adt)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309222,"byte_end":309233,"line_start":95,"line_end":95,"column_start":5,"column_end":16},"name":"EnumVariant","qualname":"::code_model::ModuleDef::EnumVariant","value":"ModuleDef::EnumVariant(EnumVariant)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309252,"byte_end":309257,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Const","qualname":"::code_model::ModuleDef::Const","value":"ModuleDef::Const(Const)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309270,"byte_end":309276,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Static","qualname":"::code_model::ModuleDef::Static","value":"ModuleDef::Static(Static)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309290,"byte_end":309295,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Trait","qualname":"::code_model::ModuleDef::Trait","value":"ModuleDef::Trait(Trait)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309308,"byte_end":309317,"line_start":99,"line_end":99,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::code_model::ModuleDef::TypeAlias","value":"ModuleDef::TypeAlias(TypeAlias)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309334,"byte_end":309345,"line_start":100,"line_end":100,"column_start":5,"column_end":16},"name":"BuiltinType","qualname":"::code_model::ModuleDef::BuiltinType","value":"ModuleDef::BuiltinType(BuiltinType)","parent":{"krate":0,"index":5291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5291},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309092,"byte_end":309101,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"ModuleDef","qualname":"::code_model::ModuleDef","value":"pub enum ModuleDef {\n    Module(Module),\n    Function(Function),\n    Adt(Adt),\n    EnumVariant(EnumVariant),\n    Const(Const),\n    Static(Static),\n    Trait(Trait),\n    TypeAlias(TypeAlias),\n    BuiltinType(BuiltinType),\n}","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5304},{"krate":0,"index":5307},{"krate":0,"index":5310},{"krate":0,"index":5313},{"krate":0,"index":5316}],"decl_id":null,"docs":" The defs which can be visible in the module.\n","sig":null,"attributes":[{"value":"/ The defs which can be visible in the module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":308983,"byte_end":309031,"line_start":88,"line_end":88,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309787,"byte_end":309791,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"name","qualname":"<Module>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":" Name of this module.\n","sig":null,"attributes":[{"value":"/ Name of this module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309751,"byte_end":309775,"line_start":121,"line_end":121,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310272,"byte_end":310285,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"import_source","qualname":"<Module>::import_source","value":"pub fn import_source<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase,\n                                                    ImportId)\n-> Either<ast::UseTree, ast::ExternCrateItem>","parent":null,"children":[],"decl_id":null,"docs":" Returns the syntax of the last path segment corresponding to this import\n","sig":null,"attributes":[{"value":"/ Returns the syntax of the last path segment corresponding to this import","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310184,"byte_end":310260,"line_start":134,"line_end":134,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310640,"byte_end":310645,"line_start":146,"line_end":146,"column_start":12,"column_end":17},"name":"krate","qualname":"<Module>::krate","value":"pub fn krate(Self) -> Crate","parent":null,"children":[],"decl_id":null,"docs":" Returns the crate this module is part of.\n","sig":null,"attributes":[{"value":"/ Returns the crate this module is part of.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310583,"byte_end":310628,"line_start":145,"line_end":145,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310947,"byte_end":310957,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"crate_root","qualname":"<Module>::crate_root","value":"pub fn crate_root<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":" Topmost parent of this module. Every module has a `crate_root`, but some\n might be missing `krate`. This can happen if a module's file is not included\n in the module tree of any target in `Cargo.toml`.\n","sig":null,"attributes":[{"value":"/ Topmost parent of this module. Every module has a `crate_root`, but some","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310716,"byte_end":310792,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ might be missing `krate`. This can happen if a module's file is not included","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310797,"byte_end":310877,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/ in the module tree of any target in `Cargo.toml`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":310882,"byte_end":310935,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311170,"byte_end":311175,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"child","qualname":"<Module>::child","value":"pub fn child<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase, &Name)\n-> Option<Module>","parent":null,"children":[],"decl_id":null,"docs":" Finds a child module with the specified name.\n","sig":null,"attributes":[{"value":"/ Finds a child module with the specified name.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311109,"byte_end":311158,"line_start":158,"line_end":158,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311468,"byte_end":311476,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"children","qualname":"<Module>::children","value":"pub fn children<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all child modules.\n","sig":null,"attributes":[{"value":"/ Iterates over all child modules.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311420,"byte_end":311456,"line_start":165,"line_end":165,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311866,"byte_end":311872,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"parent","qualname":"<Module>::parent","value":"pub fn parent<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Module>","parent":null,"children":[],"decl_id":null,"docs":" Finds a parent module.\n","sig":null,"attributes":[{"value":"/ Finds a parent module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":311828,"byte_end":311854,"line_start":176,"line_end":176,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":312100,"byte_end":312112,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"path_to_root","qualname":"<Module>::path_to_root","value":"pub fn path_to_root<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Vec<Module>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":312436,"byte_end":312441,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"scope","qualname":"<Module>::scope","value":"pub fn scope<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Vec<(Name, ScopeDef, Option<ImportId>)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ModuleScope`: a set of items, visible in this module.\n","sig":null,"attributes":[{"value":"/ Returns a `ModuleScope`: a set of items, visible in this module.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":312356,"byte_end":312424,"line_start":193,"line_end":193,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":312733,"byte_end":312744,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"diagnostics","qualname":"<Module>::diagnostics","value":"pub fn diagnostics<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase,\n                                                  &mut DiagnosticSink)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":313828,"byte_end":313840,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"declarations","qualname":"<Module>::declarations","value":"pub fn declarations<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Vec<ModuleDef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314329,"byte_end":314340,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"impl_blocks","qualname":"<Module>::impl_blocks","value":"pub fn impl_blocks<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Vec<ImplBlock>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5358},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314722,"byte_end":314733,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"StructField","qualname":"::code_model::StructField","value":"StructField {  }","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5360}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5377},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314872,"byte_end":314877,"line_start":262,"line_end":262,"column_start":5,"column_end":10},"name":"Named","qualname":"::code_model::FieldSource::Named","value":"FieldSource::Named(ast::RecordFieldDef)","parent":{"krate":0,"index":5376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314904,"byte_end":314907,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Pos","qualname":"::code_model::FieldSource::Pos","value":"FieldSource::Pos(ast::TupleFieldDef)","parent":{"krate":0,"index":5376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314854,"byte_end":314865,"line_start":261,"line_end":261,"column_start":10,"column_end":21},"name":"FieldSource","qualname":"::code_model::FieldSource","value":"pub enum FieldSource { Named(ast::RecordFieldDef), Pos(ast::TupleFieldDef), }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314962,"byte_end":314966,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"name","qualname":"<StructField>::name","value":"pub fn name<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase) -> Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315102,"byte_end":315104,"line_start":271,"line_end":271,"column_start":12,"column_end":14},"name":"ty","qualname":"<StructField>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315194,"byte_end":315204,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"parent_def","qualname":"<StructField>::parent_def","value":"pub fn parent_def<impl HirDatabase: HirDatabase>(&Self, &impl HirDatabase)\n-> VariantDef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315343,"byte_end":315349,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"Struct","qualname":"::code_model::Struct","value":"Struct {  }","parent":null,"children":[{"krate":0,"index":5393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315409,"byte_end":315415,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"module","qualname":"<Struct>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315519,"byte_end":315524,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"krate","qualname":"<Struct>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315629,"byte_end":315633,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"name","qualname":"<Struct>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315751,"byte_end":315757,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"fields","qualname":"<Struct>::fields","value":"pub fn fields<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Vec<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":316068,"byte_end":316073,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"field","qualname":"<Struct>::field","value":"pub fn field<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase, &Name)\n-> Option<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":316429,"byte_end":316431,"line_start":318,"line_end":318,"column_start":12,"column_end":14},"name":"ty","qualname":"<Struct>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":316542,"byte_end":316556,"line_start":322,"line_end":322,"column_start":12,"column_end":26},"name":"constructor_ty","qualname":"<Struct>::constructor_ty","value":"pub fn constructor_ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317173,"byte_end":317178,"line_start":339,"line_end":339,"column_start":12,"column_end":17},"name":"Union","qualname":"::code_model::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":5410}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317236,"byte_end":317240,"line_start":344,"line_end":344,"column_start":12,"column_end":16},"name":"name","qualname":"<Union>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317358,"byte_end":317364,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"module","qualname":"<Union>::module","value":"pub fn module<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317468,"byte_end":317470,"line_start":352,"line_end":352,"column_start":12,"column_end":14},"name":"ty","qualname":"<Union>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5426},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318085,"byte_end":318089,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"Enum","qualname":"::code_model::Enum","value":"Enum {  }","parent":null,"children":[{"krate":0,"index":5427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318145,"byte_end":318151,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"module","qualname":"<Enum>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318253,"byte_end":318258,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"krate","qualname":"<Enum>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318363,"byte_end":318367,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"name","qualname":"<Enum>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318476,"byte_end":318484,"line_start":386,"line_end":386,"column_start":12,"column_end":20},"name":"variants","qualname":"<Enum>::variants","value":"pub fn variants<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Vec<EnumVariant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318710,"byte_end":318717,"line_start":394,"line_end":394,"column_start":12,"column_end":19},"name":"variant","qualname":"<Enum>::variant","value":"pub fn variant<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase, &Name)\n-> Option<EnumVariant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319002,"byte_end":319004,"line_start":402,"line_end":402,"column_start":12,"column_end":14},"name":"ty","qualname":"<Enum>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5443},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319662,"byte_end":319673,"line_start":419,"line_end":419,"column_start":12,"column_end":23},"name":"EnumVariant","qualname":"::code_model::EnumVariant","value":"EnumVariant {  }","parent":null,"children":[{"krate":0,"index":5444},{"krate":0,"index":5445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319777,"byte_end":319783,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"module","qualname":"<EnumVariant>::module","value":"pub fn module<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319873,"byte_end":319884,"line_start":428,"line_end":428,"column_start":12,"column_end":23},"name":"parent_enum","qualname":"<EnumVariant>::parent_enum","value":"pub fn parent_enum<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Enum","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319963,"byte_end":319967,"line_start":432,"line_end":432,"column_start":12,"column_end":16},"name":"name","qualname":"<EnumVariant>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320101,"byte_end":320107,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"fields","qualname":"<EnumVariant>::fields","value":"pub fn fields<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Vec<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320383,"byte_end":320388,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"field","qualname":"<EnumVariant>::field","value":"pub fn field<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase, &Name)\n-> Option<StructField>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5462},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320951,"byte_end":320957,"line_start":462,"line_end":462,"column_start":5,"column_end":11},"name":"Struct","qualname":"::code_model::Adt::Struct","value":"Adt::Struct(Struct)","parent":{"krate":0,"index":5461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5465},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320971,"byte_end":320976,"line_start":463,"line_end":463,"column_start":5,"column_end":10},"name":"Union","qualname":"::code_model::Adt::Union","value":"Adt::Union(Union)","parent":{"krate":0,"index":5461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5468},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320989,"byte_end":320993,"line_start":464,"line_end":464,"column_start":5,"column_end":9},"name":"Enum","qualname":"::code_model::Adt::Enum","value":"Adt::Enum(Enum)","parent":{"krate":0,"index":5461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5461},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320941,"byte_end":320944,"line_start":461,"line_end":461,"column_start":10,"column_end":13},"name":"Adt","qualname":"::code_model::Adt","value":"pub enum Adt { Struct(Struct), Union(Union), Enum(Enum), }","parent":null,"children":[{"krate":0,"index":5462},{"krate":0,"index":5465},{"krate":0,"index":5468}],"decl_id":null,"docs":" A Data Type\n","sig":null,"attributes":[{"value":"/ A Data Type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":320865,"byte_end":320880,"line_start":459,"line_end":459,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321065,"byte_end":321067,"line_start":469,"line_end":469,"column_start":12,"column_end":14},"name":"ty","qualname":"<Adt>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321277,"byte_end":321282,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"krate","qualname":"<Adt>::krate","value":"pub fn krate<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5493},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321925,"byte_end":321933,"line_start":500,"line_end":500,"column_start":5,"column_end":13},"name":"Function","qualname":"::code_model::DefWithBody::Function","value":"DefWithBody::Function(Function)","parent":{"krate":0,"index":5492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5496},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321949,"byte_end":321955,"line_start":501,"line_end":501,"column_start":5,"column_end":11},"name":"Static","qualname":"::code_model::DefWithBody::Static","value":"DefWithBody::Static(Static)","parent":{"krate":0,"index":5492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5499},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321969,"byte_end":321974,"line_start":502,"line_end":502,"column_start":5,"column_end":10},"name":"Const","qualname":"::code_model::DefWithBody::Const","value":"DefWithBody::Const(Const)","parent":{"krate":0,"index":5492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5492},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321907,"byte_end":321918,"line_start":499,"line_end":499,"column_start":10,"column_end":21},"name":"DefWithBody","qualname":"::code_model::DefWithBody","value":"pub enum DefWithBody { Function(Function), Static(Static), Const(Const), }","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":5499}],"decl_id":null,"docs":" The defs which have a body.\n","sig":null,"attributes":[{"value":"/ The defs which have a body.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321815,"byte_end":321846,"line_start":497,"line_end":497,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322656,"byte_end":322662,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"module","qualname":"<DefWithBody>::module","value":"pub fn module<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2387},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322911,"byte_end":322918,"line_start":534,"line_end":534,"column_start":11,"column_end":18},"name":"HasBody","qualname":"::code_model::HasBody","value":"HasBody: Copy","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322934,"byte_end":322939,"line_start":535,"line_end":535,"column_start":8,"column_end":13},"name":"infer","qualname":"::code_model::HasBody::infer","value":"pub fn infer<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<InferenceResult>","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323001,"byte_end":323005,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"body","qualname":"::code_model::HasBody::body","value":"pub fn body<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<Body>","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323056,"byte_end":323071,"line_start":537,"line_end":537,"column_start":8,"column_end":23},"name":"body_source_map","qualname":"::code_model::HasBody::body_source_map","value":"pub fn body_source_map<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<BodySourceMap>","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323131,"byte_end":323142,"line_start":538,"line_end":538,"column_start":8,"column_end":19},"name":"expr_scopes","qualname":"::code_model::HasBody::expr_scopes","value":"pub fn expr_scopes<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<ExprScopes>","parent":{"krate":0,"index":2387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5523},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":324231,"byte_end":324239,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"Function","qualname":"::code_model::Function","value":"Function {  }","parent":null,"children":[{"krate":0,"index":5524}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5540},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":324326,"byte_end":324332,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"FnData","qualname":"::code_model::FnData","value":"FnData {  }","parent":null,"children":[{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326351,"byte_end":326355,"line_start":637,"line_end":637,"column_start":12,"column_end":16},"name":"name","qualname":"<FnData>::name","value":"pub fn name(&Self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326411,"byte_end":326417,"line_start":641,"line_end":641,"column_start":12,"column_end":18},"name":"params","qualname":"<FnData>::params","value":"pub fn params(&Self) -> &[TypeRef]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326480,"byte_end":326488,"line_start":645,"line_end":645,"column_start":12,"column_end":20},"name":"ret_type","qualname":"<FnData>::ret_type","value":"pub fn ret_type(&Self) -> &TypeRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326667,"byte_end":326681,"line_start":651,"line_end":651,"column_start":12,"column_end":26},"name":"has_self_param","qualname":"<FnData>::has_self_param","value":"pub fn has_self_param(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the first arg is `self`. This is relevant to decide whether this\n can be called as a method.\n","sig":null,"attributes":[{"value":"/ True if the first arg is `self`. This is relevant to decide whether this","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326544,"byte_end":326620,"line_start":649,"line_end":649,"column_start":5,"column_end":81}},{"value":"/ can be called as a method.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326625,"byte_end":326655,"line_start":650,"line_end":650,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326763,"byte_end":326769,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"module","qualname":"<Function>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326871,"byte_end":326876,"line_start":661,"line_end":661,"column_start":12,"column_end":17},"name":"krate","qualname":"<Function>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326981,"byte_end":326985,"line_start":665,"line_end":665,"column_start":12,"column_end":16},"name":"name","qualname":"<Function>::name","value":"pub fn name<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327222,"byte_end":327226,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"body","qualname":"<Function>::body","value":"pub fn body<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<Body>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327321,"byte_end":327323,"line_start":677,"line_end":677,"column_start":12,"column_end":14},"name":"ty","qualname":"<Function>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327435,"byte_end":327439,"line_start":681,"line_end":681,"column_start":12,"column_end":16},"name":"data","qualname":"<Function>::data","value":"pub fn data<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<FnData>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327529,"byte_end":327534,"line_start":685,"line_end":685,"column_start":12,"column_end":17},"name":"infer","qualname":"<Function>::infer","value":"pub fn infer<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<InferenceResult>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327694,"byte_end":327704,"line_start":690,"line_end":690,"column_start":12,"column_end":22},"name":"impl_block","qualname":"<Function>::impl_block","value":"pub fn impl_block<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<ImplBlock>","parent":null,"children":[],"decl_id":null,"docs":" The containing impl block, if this is a method.\n","sig":null,"attributes":[{"value":"/ The containing impl block, if this is a method.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327631,"byte_end":327682,"line_start":689,"line_end":689,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327890,"byte_end":327902,"line_start":695,"line_end":695,"column_start":12,"column_end":24},"name":"parent_trait","qualname":"<Function>::parent_trait","value":"pub fn parent_trait<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Trait>","parent":null,"children":[],"decl_id":null,"docs":" The containing trait, if this is a trait method definition.\n","sig":null,"attributes":[{"value":"/ The containing trait, if this is a trait method definition.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":327815,"byte_end":327878,"line_start":694,"line_end":694,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":328045,"byte_end":328054,"line_start":699,"line_end":699,"column_start":12,"column_end":21},"name":"container","qualname":"<Function>::container","value":"pub fn container<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Container>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":328873,"byte_end":328884,"line_start":720,"line_end":720,"column_start":12,"column_end":23},"name":"diagnostics","qualname":"<Function>::diagnostics","value":"pub fn diagnostics<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase,\n                                                  &mut DiagnosticSink)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5556},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329201,"byte_end":329206,"line_start":729,"line_end":729,"column_start":12,"column_end":17},"name":"Const","qualname":"::code_model::Const","value":"Const {  }","parent":null,"children":[{"krate":0,"index":5557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329264,"byte_end":329270,"line_start":734,"line_end":734,"column_start":12,"column_end":18},"name":"module","qualname":"<Const>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329372,"byte_end":329377,"line_start":738,"line_end":738,"column_start":12,"column_end":17},"name":"krate","qualname":"<Const>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329482,"byte_end":329486,"line_start":742,"line_end":742,"column_start":12,"column_end":16},"name":"data","qualname":"<Const>::data","value":"pub fn data<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<ConstData>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329582,"byte_end":329586,"line_start":746,"line_end":746,"column_start":12,"column_end":16},"name":"name","qualname":"<Const>::name","value":"pub fn name<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329690,"byte_end":329695,"line_start":750,"line_end":750,"column_start":12,"column_end":17},"name":"infer","qualname":"<Const>::infer","value":"pub fn infer<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<InferenceResult>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329855,"byte_end":329865,"line_start":755,"line_end":755,"column_start":12,"column_end":22},"name":"impl_block","qualname":"<Const>::impl_block","value":"pub fn impl_block<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<ImplBlock>","parent":null,"children":[],"decl_id":null,"docs":" The containing impl block, if this is a method.\n","sig":null,"attributes":[{"value":"/ The containing impl block, if this is a method.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329792,"byte_end":329843,"line_start":754,"line_end":754,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329983,"byte_end":329995,"line_start":759,"line_end":759,"column_start":12,"column_end":24},"name":"parent_trait","qualname":"<Const>::parent_trait","value":"pub fn parent_trait<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Trait>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":330138,"byte_end":330147,"line_start":763,"line_end":763,"column_start":12,"column_end":21},"name":"container","qualname":"<Const>::container","value":"pub fn container<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Container>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5573},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":330879,"byte_end":330888,"line_start":786,"line_end":786,"column_start":12,"column_end":21},"name":"ConstData","qualname":"::code_model::ConstData","value":"ConstData {  }","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":330991,"byte_end":330995,"line_start":792,"line_end":792,"column_start":12,"column_end":16},"name":"name","qualname":"<ConstData>::name","value":"pub fn name(&Self) -> Option<&Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":331067,"byte_end":331075,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"type_ref","qualname":"<ConstData>::type_ref","value":"pub fn type_ref(&Self) -> &TypeRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5587},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":331873,"byte_end":331879,"line_start":825,"line_end":825,"column_start":12,"column_end":18},"name":"Static","qualname":"::code_model::Static","value":"Static {  }","parent":null,"children":[{"krate":0,"index":5588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":331939,"byte_end":331945,"line_start":830,"line_end":830,"column_start":12,"column_end":18},"name":"module","qualname":"<Static>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332047,"byte_end":332052,"line_start":834,"line_end":834,"column_start":12,"column_end":17},"name":"krate","qualname":"<Static>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332157,"byte_end":332161,"line_start":838,"line_end":838,"column_start":12,"column_end":16},"name":"data","qualname":"<Static>::data","value":"pub fn data<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<ConstData>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332460,"byte_end":332465,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"infer","qualname":"<Static>::infer","value":"pub fn infer<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Arc<InferenceResult>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5604},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332622,"byte_end":332627,"line_start":854,"line_end":854,"column_start":12,"column_end":17},"name":"Trait","qualname":"::code_model::Trait","value":"Trait {  }","parent":null,"children":[{"krate":0,"index":5605}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332685,"byte_end":332691,"line_start":859,"line_end":859,"column_start":12,"column_end":18},"name":"module","qualname":"<Trait>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332793,"byte_end":332797,"line_start":863,"line_end":863,"column_start":12,"column_end":16},"name":"name","qualname":"<Trait>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332906,"byte_end":332911,"line_start":867,"line_end":867,"column_start":12,"column_end":17},"name":"items","qualname":"<Trait>::items","value":"pub fn items<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Vec<AssocItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":334013,"byte_end":334029,"line_start":893,"line_end":893,"column_start":12,"column_end":28},"name":"all_super_traits","qualname":"<Trait>::all_super_traits","value":"pub fn all_super_traits<impl HirDatabase: HirDatabase>(Self,\n                                                       &impl HirDatabase)\n-> Vec<Trait>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the whole super trait hierarchy (including the\n trait itself).\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the whole super trait hierarchy (including the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":333903,"byte_end":333978,"line_start":891,"line_end":891,"column_start":5,"column_end":80}},{"value":"/ trait itself).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":333983,"byte_end":334001,"line_start":892,"line_end":892,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":334687,"byte_end":334710,"line_start":912,"line_end":912,"column_start":12,"column_end":35},"name":"associated_type_by_name","qualname":"<Trait>::associated_type_by_name","value":"pub fn associated_type_by_name<impl DefDatabase: DefDatabase>(Self,\n                                                              &impl DefDatabase,\n                                                              &Name)\n-> Option<TypeAlias>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":335082,"byte_end":335128,"line_start":924,"line_end":924,"column_start":12,"column_end":58},"name":"associated_type_by_name_including_super_traits","qualname":"<Trait>::associated_type_by_name_including_super_traits","value":"pub fn associated_type_by_name_including_super_traits<impl HirDatabase: HirDatabase>(Self,\n                                                                                     &impl HirDatabase,\n                                                                                     &Name)\n-> Option<TypeAlias>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":335452,"byte_end":335461,"line_start":936,"line_end":936,"column_start":12,"column_end":21},"name":"trait_ref","qualname":"<Trait>::trait_ref","value":"pub fn trait_ref<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> TraitRef","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":335561,"byte_end":335568,"line_start":940,"line_end":940,"column_start":12,"column_end":19},"name":"is_auto","qualname":"<Trait>::is_auto","value":"pub fn is_auto<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5621},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336020,"byte_end":336029,"line_start":954,"line_end":954,"column_start":12,"column_end":21},"name":"TypeAlias","qualname":"::code_model::TypeAlias","value":"TypeAlias {  }","parent":null,"children":[{"krate":0,"index":5622}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336095,"byte_end":336101,"line_start":959,"line_end":959,"column_start":12,"column_end":18},"name":"module","qualname":"<TypeAlias>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336203,"byte_end":336208,"line_start":963,"line_end":963,"column_start":12,"column_end":17},"name":"krate","qualname":"<TypeAlias>::krate","value":"pub fn krate<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Crate>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336369,"byte_end":336379,"line_start":968,"line_end":968,"column_start":12,"column_end":22},"name":"impl_block","qualname":"<TypeAlias>::impl_block","value":"pub fn impl_block<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<ImplBlock>","parent":null,"children":[],"decl_id":null,"docs":" The containing impl block, if this is a method.\n","sig":null,"attributes":[{"value":"/ The containing impl block, if this is a method.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336306,"byte_end":336357,"line_start":967,"line_end":967,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336565,"byte_end":336577,"line_start":973,"line_end":973,"column_start":12,"column_end":24},"name":"parent_trait","qualname":"<TypeAlias>::parent_trait","value":"pub fn parent_trait<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Trait>","parent":null,"children":[],"decl_id":null,"docs":" The containing trait, if this is a trait method definition.\n","sig":null,"attributes":[{"value":"/ The containing trait, if this is a trait method definition.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336490,"byte_end":336553,"line_start":972,"line_end":972,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336720,"byte_end":336729,"line_start":977,"line_end":977,"column_start":12,"column_end":21},"name":"container","qualname":"<TypeAlias>::container","value":"pub fn container<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<Container>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337029,"byte_end":337037,"line_start":987,"line_end":987,"column_start":12,"column_end":20},"name":"type_ref","qualname":"<TypeAlias>::type_ref","value":"pub fn type_ref<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Option<TypeRef>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337156,"byte_end":337158,"line_start":991,"line_end":991,"column_start":12,"column_end":14},"name":"ty","qualname":"<TypeAlias>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337269,"byte_end":337273,"line_start":995,"line_end":995,"column_start":12,"column_end":16},"name":"name","qualname":"<TypeAlias>::name","value":"pub fn name<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase) -> Name","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5638},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337949,"byte_end":337957,"line_start":1014,"line_end":1014,"column_start":12,"column_end":20},"name":"MacroDef","qualname":"::code_model::MacroDef","value":"MacroDef {  }","parent":null,"children":[{"krate":0,"index":5639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338037,"byte_end":338042,"line_start":1021,"line_end":1021,"column_start":5,"column_end":10},"name":"Trait","qualname":"::code_model::Container::Trait","value":"Container::Trait(Trait)","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338055,"byte_end":338064,"line_start":1022,"line_end":1022,"column_start":5,"column_end":14},"name":"ImplBlock","qualname":"::code_model::Container::ImplBlock","value":"Container::ImplBlock(ImplBlock)","parent":{"krate":0,"index":2545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338021,"byte_end":338030,"line_start":1020,"line_end":1020,"column_start":10,"column_end":19},"name":"Container","qualname":"::code_model::Container","value":"pub enum Container { Trait(Trait), ImplBlock(ImplBlock), }","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5660},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338459,"byte_end":338467,"line_start":1037,"line_end":1037,"column_start":5,"column_end":13},"name":"Function","qualname":"::code_model::AssocItem::Function","value":"AssocItem::Function(Function)","parent":{"krate":0,"index":5659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5663},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338483,"byte_end":338488,"line_start":1038,"line_end":1038,"column_start":5,"column_end":10},"name":"Const","qualname":"::code_model::AssocItem::Const","value":"AssocItem::Const(Const)","parent":{"krate":0,"index":5659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5666},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338501,"byte_end":338510,"line_start":1039,"line_end":1039,"column_start":5,"column_end":14},"name":"TypeAlias","qualname":"::code_model::AssocItem::TypeAlias","value":"AssocItem::TypeAlias(TypeAlias)","parent":{"krate":0,"index":5659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5659},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338443,"byte_end":338452,"line_start":1036,"line_end":1036,"column_start":10,"column_end":19},"name":"AssocItem","qualname":"::code_model::AssocItem","value":"pub enum AssocItem { Function(Function), Const(Const), TypeAlias(TypeAlias), }","parent":null,"children":[{"krate":0,"index":5660},{"krate":0,"index":5663},{"krate":0,"index":5666}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339202,"byte_end":339208,"line_start":1058,"line_end":1058,"column_start":12,"column_end":18},"name":"module","qualname":"<AssocItem>::module","value":"pub fn module<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339453,"byte_end":339462,"line_start":1066,"line_end":1066,"column_start":12,"column_end":21},"name":"container","qualname":"<AssocItem>::container","value":"pub fn container<impl DefDatabase: DefDatabase>(Self, &impl DefDatabase)\n-> Container","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5690},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339819,"byte_end":339824,"line_start":1077,"line_end":1077,"column_start":12,"column_end":17},"name":"Local","qualname":"::code_model::Local","value":"Local {  }","parent":null,"children":[{"krate":0,"index":5691},{"krate":0,"index":5692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339920,"byte_end":339924,"line_start":1083,"line_end":1083,"column_start":12,"column_end":16},"name":"name","qualname":"<Local>::name","value":"pub fn name<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Option<Name>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340157,"byte_end":340164,"line_start":1091,"line_end":1091,"column_start":12,"column_end":19},"name":"is_self","qualname":"<Local>::is_self","value":"pub fn is_self<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340270,"byte_end":340276,"line_start":1095,"line_end":1095,"column_start":12,"column_end":18},"name":"is_mut","qualname":"<Local>::is_mut","value":"pub fn is_mut<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340618,"byte_end":340624,"line_start":1106,"line_end":1106,"column_start":12,"column_end":18},"name":"parent","qualname":"<Local>::parent","value":"pub fn parent<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> DefWithBody","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340710,"byte_end":340716,"line_start":1110,"line_end":1110,"column_start":12,"column_end":18},"name":"module","qualname":"<Local>::module","value":"pub fn module<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Module","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340807,"byte_end":340809,"line_start":1114,"line_end":1114,"column_start":12,"column_end":14},"name":"ty","qualname":"<Local>::ty","value":"pub fn ty<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":340943,"byte_end":340949,"line_start":1119,"line_end":1119,"column_start":12,"column_end":18},"name":"source","qualname":"<Local>::source","value":"pub fn source<impl HirDatabase: HirDatabase>(Self, &impl HirDatabase)\n-> Source<Either<ast::BindPat, ast::SelfParam>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5708},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":341366,"byte_end":341378,"line_start":1128,"line_end":1128,"column_start":12,"column_end":24},"name":"GenericParam","qualname":"::code_model::GenericParam","value":"GenericParam {  }","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5726},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":341506,"byte_end":341515,"line_start":1134,"line_end":1134,"column_start":12,"column_end":21},"name":"ImplBlock","qualname":"::code_model::ImplBlock","value":"ImplBlock {  }","parent":null,"children":[{"krate":0,"index":5727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"from_source","qualname":"::from_source","value":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":7367},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":7371},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2630},{"krate":0,"index":2634},{"krate":0,"index":2638},{"krate":0,"index":2642},{"krate":0,"index":2646},{"krate":0,"index":2650},{"krate":0,"index":2654},{"krate":0,"index":2658},{"krate":0,"index":2662},{"krate":0,"index":2667},{"krate":0,"index":2671},{"krate":0,"index":2676},{"krate":0,"index":2683},{"krate":0,"index":2687},{"krate":0,"index":2693}],"decl_id":null,"docs":" FIXME: write short doc here\n","sig":null,"attributes":[{"value":"/ FIXME: write short doc here","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":352513,"byte_end":352544,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353075,"byte_end":353085,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"FromSource","qualname":"::from_source::FromSource","value":"FromSource: Sized","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353104,"byte_end":353107,"line_start":19,"line_end":19,"column_start":10,"column_end":13},"name":"Ast","qualname":"::from_source::FromSource::Ast","value":"type Ast;","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353116,"byte_end":353127,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"from_source","qualname":"::from_source::FromSource::from_source","value":"pub fn from_source<impl DefDatabase + AstDatabase: DefDatabase +\n                   AstDatabase>(&impl DefDatabase + AstDatabase,\n                                Source<Self::Ast>) -> Option<Self>","parent":{"krate":0,"index":2626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":357684,"byte_end":357695,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"from_source","qualname":"<Local>::from_source","value":"pub fn from_source<impl HirDatabase: HirDatabase>(&impl HirDatabase,\n                                                  Source<ast::BindPat>)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":358580,"byte_end":358596,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"from_declaration","qualname":"<Module>::from_declaration","value":"pub fn from_declaration<impl DefDatabase: DefDatabase>(&impl DefDatabase,\n                                                       Source<ast::Module>)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":359434,"byte_end":359449,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"from_definition","qualname":"<Module>::from_definition","value":"pub fn from_definition<impl DefDatabase: DefDatabase>(&impl DefDatabase,\n                                                      Source<ModuleSource>)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3129,"byte_end":3134,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3283,"byte_end":3289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3990,"byte_end":3992,"line_start":54,"line_end":54,"column_start":47,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":5315,"byte_end":5322,"line_start":84,"line_end":84,"column_start":72,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15842,"byte_end":15862,"line_start":113,"line_end":113,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16191,"byte_end":16200,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16520,"byte_end":16534,"line_start":143,"line_end":143,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":231},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32057,"byte_end":32063,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32394,"byte_end":32404,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":33759,"byte_end":33768,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":35070,"byte_end":35085,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/type_alias.rs","byte_start":36078,"byte_end":36091,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":76956,"byte_end":76965,"line_start":13,"line_end":13,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77068,"byte_end":77077,"line_start":19,"line_end":19,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77327,"byte_end":77336,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77443,"byte_end":77452,"line_start":34,"line_end":34,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77826,"byte_end":77831,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77959,"byte_end":77964,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78085,"byte_end":78090,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80414,"byte_end":80421,"line_start":133,"line_end":133,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80549,"byte_end":80556,"line_start":139,"line_end":139,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80677,"byte_end":80684,"line_start":145,"line_end":145,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":93237,"byte_end":93239,"line_start":42,"line_end":42,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":97890,"byte_end":97896,"line_start":135,"line_end":135,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":98561,"byte_end":98569,"line_start":154,"line_end":154,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99135,"byte_end":99140,"line_start":170,"line_end":170,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99460,"byte_end":99468,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99791,"byte_end":99795,"line_start":194,"line_end":194,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100106,"byte_end":100115,"line_start":206,"line_end":206,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100449,"byte_end":100461,"line_start":218,"line_end":218,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100885,"byte_end":100901,"line_start":233,"line_end":233,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":102806,"byte_end":102818,"line_start":279,"line_end":279,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":103458,"byte_end":103477,"line_start":300,"line_end":300,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":103894,"byte_end":103904,"line_start":315,"line_end":315,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":104345,"byte_end":104354,"line_start":330,"line_end":330,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":104984,"byte_end":104987,"line_start":348,"line_end":348,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":105794,"byte_end":105807,"line_start":372,"line_end":372,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":107394,"byte_end":107406,"line_start":421,"line_end":421,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122646,"byte_end":122656,"line_start":850,"line_end":850,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122804,"byte_end":122812,"line_start":856,"line_end":856,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122982,"byte_end":122994,"line_start":862,"line_end":862,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123138,"byte_end":123144,"line_start":868,"line_end":868,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123322,"byte_end":123336,"line_start":874,"line_end":874,"column_start":63,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123495,"byte_end":123514,"line_start":880,"line_end":880,"column_start":58,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81645,"byte_end":81656,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81775,"byte_end":81786,"line_start":30,"line_end":30,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81796,"byte_end":81807,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84584,"byte_end":84600,"line_start":105,"line_end":105,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85355,"byte_end":85368,"line_start":127,"line_end":127,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85985,"byte_end":85995,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86550,"byte_end":86569,"line_start":162,"line_end":162,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90819,"byte_end":90826,"line_start":281,"line_end":281,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":124504,"byte_end":124517,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":125119,"byte_end":125134,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":135396,"byte_end":135398,"line_start":318,"line_end":318,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":140321,"byte_end":140323,"line_start":47,"line_end":47,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":153886,"byte_end":153894,"line_start":387,"line_end":387,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":156173,"byte_end":156189,"line_start":458,"line_end":458,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164593,"byte_end":164598,"line_start":665,"line_end":665,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164738,"byte_end":164745,"line_start":671,"line_end":671,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164869,"byte_end":164878,"line_start":677,"line_end":677,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":165097,"byte_end":165106,"line_start":686,"line_end":686,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168420,"byte_end":168426,"line_start":783,"line_end":783,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169182,"byte_end":169193,"line_start":807,"line_end":807,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169511,"byte_end":169521,"line_start":817,"line_end":817,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":197068,"byte_end":197084,"line_start":11,"line_end":11,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":197783,"byte_end":197796,"line_start":37,"line_end":37,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":201401,"byte_end":201414,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/path.rs","byte_start":202815,"byte_end":202831,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/expr.rs","byte_start":212625,"byte_end":212641,"line_start":25,"line_end":25,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/pat.rs","byte_start":241647,"byte_end":241663,"line_start":16,"line_end":16,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/coerce.rs","byte_start":248534,"byte_end":248550,"line_start":20,"line_end":20,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":172726,"byte_end":172737,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173116,"byte_end":173127,"line_start":108,"line_end":108,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174239,"byte_end":174254,"line_start":138,"line_end":138,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":175472,"byte_end":175487,"line_start":170,"line_end":170,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":175647,"byte_end":175662,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":176588,"byte_end":176604,"line_start":207,"line_end":207,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192634,"byte_end":192643,"line_start":607,"line_end":607,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193048,"byte_end":193060,"line_start":631,"line_end":631,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193252,"byte_end":193264,"line_start":640,"line_end":640,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194536,"byte_end":194543,"line_start":673,"line_end":673,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":195610,"byte_end":195621,"line_start":703,"line_end":703,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":196228,"byte_end":196247,"line_start":726,"line_end":726,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261197,"byte_end":261209,"line_start":22,"line_end":22,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261900,"byte_end":261917,"line_start":50,"line_end":50,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39959,"byte_end":39967,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1441},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43261,"byte_end":43273,"line_start":210,"line_end":210,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43595,"byte_end":43607,"line_start":222,"line_end":222,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46269,"byte_end":46275,"line_start":294,"line_end":294,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46601,"byte_end":46607,"line_start":308,"line_end":308,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48560,"byte_end":48573,"line_start":375,"line_end":375,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49727,"byte_end":49733,"line_start":417,"line_end":417,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50135,"byte_end":50143,"line_start":434,"line_end":434,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50232,"byte_end":50240,"line_start":440,"line_end":440,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51012,"byte_end":51028,"line_start":463,"line_end":463,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51667,"byte_end":51683,"line_start":487,"line_end":487,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53048,"byte_end":53053,"line_start":525,"line_end":525,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53575,"byte_end":53580,"line_start":544,"line_end":544,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53938,"byte_end":53940,"line_start":558,"line_end":558,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":60684,"byte_end":60686,"line_start":753,"line_end":753,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":62169,"byte_end":62182,"line_start":801,"line_end":801,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":66440,"byte_end":66452,"line_start":902,"line_end":902,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":67056,"byte_end":67058,"line_start":920,"line_end":920,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":70912,"byte_end":70920,"line_start":1002,"line_end":1002,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":71446,"byte_end":71454,"line_start":1020,"line_end":1020,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":71766,"byte_end":71782,"line_start":1032,"line_end":1032,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":72507,"byte_end":72517,"line_start":1052,"line_end":1052,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":262440,"byte_end":262449,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":262611,"byte_end":262620,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/expr.rs","byte_start":266129,"byte_end":266142,"line_start":59,"line_end":59,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270247,"byte_end":270261,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270880,"byte_end":270889,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":277227,"byte_end":277240,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":282729,"byte_end":282739,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283332,"byte_end":283342,"line_start":216,"line_end":216,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283681,"byte_end":283682,"line_start":229,"line_end":229,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":285964,"byte_end":285972,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":297512,"byte_end":297520,"line_start":378,"line_end":378,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298659,"byte_end":298667,"line_start":421,"line_end":421,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":299038,"byte_end":299043,"line_start":433,"line_end":433,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301504,"byte_end":301515,"line_start":18,"line_end":18,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301964,"byte_end":301977,"line_start":39,"line_end":39,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302284,"byte_end":302297,"line_start":51,"line_end":51,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302708,"byte_end":302727,"line_start":67,"line_end":67,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":303035,"byte_end":303054,"line_start":79,"line_end":79,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":304704,"byte_end":304707,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":304981,"byte_end":304992,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":305138,"byte_end":305147,"line_start":50,"line_end":50,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":305904,"byte_end":305917,"line_start":66,"line_end":66,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":306241,"byte_end":306250,"line_start":76,"line_end":76,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342164,"byte_end":342170,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":343232,"byte_end":343243,"line_start":46,"line_end":46,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344373,"byte_end":344379,"line_start":78,"line_end":78,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344556,"byte_end":344561,"line_start":84,"line_end":84,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344738,"byte_end":344742,"line_start":90,"line_end":90,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344913,"byte_end":344924,"line_start":96,"line_end":96,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345491,"byte_end":345499,"line_start":113,"line_end":113,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345666,"byte_end":345671,"line_start":119,"line_end":119,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345844,"byte_end":345850,"line_start":125,"line_end":125,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346025,"byte_end":346030,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346203,"byte_end":346212,"line_start":137,"line_end":137,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346393,"byte_end":346401,"line_start":143,"line_end":143,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":347173,"byte_end":347174,"line_start":167,"line_end":167,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348099,"byte_end":348112,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348276,"byte_end":348289,"line_start":54,"line_end":54,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":349759,"byte_end":349760,"line_start":93,"line_end":93,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":352399,"byte_end":352400,"line_start":88,"line_end":88,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307954,"byte_end":307959,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309565,"byte_end":309571,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2296},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314937,"byte_end":314948,"line_start":266,"line_end":266,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315389,"byte_end":315395,"line_start":285,"line_end":285,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2317},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317217,"byte_end":317222,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318127,"byte_end":318131,"line_start":373,"line_end":373,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2351},{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319752,"byte_end":319763,"line_start":424,"line_end":424,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2366},{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321048,"byte_end":321051,"line_start":468,"line_end":468,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322043,"byte_end":322054,"line_start":507,"line_end":507,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323215,"byte_end":323216,"line_start":541,"line_end":541,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323721,"byte_end":323732,"line_start":562,"line_end":562,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":324596,"byte_end":324602,"line_start":595,"line_end":595,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2416},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326741,"byte_end":326749,"line_start":656,"line_end":656,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329245,"byte_end":329250,"line_start":733,"line_end":733,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":330968,"byte_end":330977,"line_start":791,"line_end":791,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":331919,"byte_end":331925,"line_start":829,"line_end":829,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332666,"byte_end":332671,"line_start":858,"line_end":858,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336072,"byte_end":336081,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337999,"byte_end":338007,"line_start":1018,"line_end":1018,"column_start":6,"column_end":14},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338127,"byte_end":338136,"line_start":1026,"line_end":1026,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338940,"byte_end":338950,"line_start":1047,"line_end":1047,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339179,"byte_end":339188,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339901,"byte_end":339906,"line_start":1082,"line_end":1082,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2565},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353327,"byte_end":353333,"line_start":24,"line_end":24,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353594,"byte_end":353599,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353858,"byte_end":353862,"line_start":38,"line_end":38,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354088,"byte_end":354093,"line_start":45,"line_end":45,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354321,"byte_end":354329,"line_start":52,"line_end":52,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354557,"byte_end":354562,"line_start":59,"line_end":59,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354790,"byte_end":354796,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355026,"byte_end":355035,"line_start":73,"line_end":73,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355272,"byte_end":355280,"line_start":81,"line_end":81,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355910,"byte_end":355919,"line_start":97,"line_end":97,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":356153,"byte_end":356164,"line_start":105,"line_end":105,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":356581,"byte_end":356592,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":357665,"byte_end":357670,"line_start":142,"line_end":142,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":358560,"byte_end":358566,"line_start":163,"line_end":163,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":824,"byte_end":829,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":840,"byte_end":842,"line_start":31,"line_end":31,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":49}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":852,"byte_end":865,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":971,"byte_end":979,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1756}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1002,"byte_end":1013,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1945}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lib.rs","byte_start":1064,"byte_end":1075,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2580}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3129,"byte_end":3134,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3283,"byte_end":3289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3460,"byte_end":3471,"line_start":39,"line_end":39,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3114},"to":{"krate":0,"index":25}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":3990,"byte_end":3992,"line_start":54,"line_end":54,"column_start":47,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/debug.rs","byte_start":5315,"byte_end":5322,"line_start":84,"line_end":84,"column_start":72,"column_end":79},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":42},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6682,"byte_end":6698,"line_start":39,"line_end":39,"column_start":24,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":28},"to":{"krate":0,"index":2782}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":6701,"byte_end":6713,"line_start":39,"line_end":39,"column_start":43,"column_end":55},"kind":"SuperTrait","from":{"krate":90,"index":1366},"to":{"krate":0,"index":2782}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8359,"byte_end":8370,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2782},"to":{"krate":0,"index":3114}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/db.rs","byte_start":8373,"byte_end":8384,"line_start":79,"line_end":79,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":91,"index":346},"to":{"krate":0,"index":3114}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":15842,"byte_end":15862,"line_start":113,"line_end":113,"column_start":6,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16191,"byte_end":16200,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/source_binder.rs","byte_start":16520,"byte_end":16534,"line_start":143,"line_end":143,"column_start":6,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32057,"byte_end":32063,"line_start":13,"line_end":13,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/adt.rs","byte_start":32394,"byte_end":32404,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":33759,"byte_end":33768,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/traits.rs","byte_start":35070,"byte_end":35085,"line_start":66,"line_end":66,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/type_alias.rs","byte_start":36078,"byte_end":36091,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":76956,"byte_end":76965,"line_start":13,"line_end":13,"column_start":22,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77068,"byte_end":77077,"line_start":19,"line_end":19,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77327,"byte_end":77336,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77443,"byte_end":77452,"line_start":34,"line_end":34,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77826,"byte_end":77831,"line_start":49,"line_end":49,"column_start":21,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":77959,"byte_end":77964,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":78085,"byte_end":78090,"line_start":61,"line_end":61,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80414,"byte_end":80421,"line_start":133,"line_end":133,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3913},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80549,"byte_end":80556,"line_start":139,"line_end":139,"column_start":23,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3913},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/primitive.rs","byte_start":80677,"byte_end":80684,"line_start":145,"line_end":145,"column_start":6,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":93237,"byte_end":93239,"line_start":42,"line_end":42,"column_start":18,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4628},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":97890,"byte_end":97896,"line_start":135,"line_end":135,"column_start":18,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4666},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":98561,"byte_end":98569,"line_start":154,"line_end":154,"column_start":18,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4690},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99135,"byte_end":99140,"line_start":170,"line_end":170,"column_start":18,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5604},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99460,"byte_end":99468,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4538},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":99791,"byte_end":99795,"line_start":194,"line_end":194,"column_start":18,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4121},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100106,"byte_end":100115,"line_start":206,"line_end":206,"column_start":18,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5621},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100449,"byte_end":100461,"line_start":218,"line_end":218,"column_start":18,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":100885,"byte_end":100901,"line_start":233,"line_end":233,"column_start":18,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4707},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":102806,"byte_end":102818,"line_start":279,"line_end":279,"column_start":18,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4611},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":103458,"byte_end":103477,"line_start":300,"line_end":300,"column_start":25,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4013},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":103894,"byte_end":103904,"line_start":315,"line_end":315,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":104345,"byte_end":104354,"line_start":330,"line_end":330,"column_start":21,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4730},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":104984,"byte_end":104987,"line_start":348,"line_end":348,"column_start":18,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":105794,"byte_end":105807,"line_start":372,"line_end":372,"column_start":37,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3967},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":107394,"byte_end":107406,"line_start":421,"line_end":421,"column_start":55,"column_end":67},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3935},"to":{"krate":103,"index":1069}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122646,"byte_end":122656,"line_start":850,"line_end":850,"column_start":47,"column_end":57},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3736},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122804,"byte_end":122812,"line_start":856,"line_end":856,"column_start":49,"column_end":57},"kind":{"Impl":{"id":41}},"from":{"krate":95,"index":1330},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":122982,"byte_end":122994,"line_start":862,"line_end":862,"column_start":45,"column_end":57},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3757},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123138,"byte_end":123144,"line_start":868,"line_end":868,"column_start":51,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":95,"index":1378},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123322,"byte_end":123336,"line_start":874,"line_end":874,"column_start":63,"column_end":77},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits/chalk.rs","byte_start":123495,"byte_end":123514,"line_start":880,"line_end":880,"column_start":58,"column_end":77},"kind":{"Impl":{"id":45}},"from":{"krate":101,"index":103},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81645,"byte_end":81656,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3928},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81775,"byte_end":81786,"line_start":30,"line_end":30,"column_start":13,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3928},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":81796,"byte_end":81807,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":84584,"byte_end":84600,"line_start":105,"line_end":105,"column_start":6,"column_end":22},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85355,"byte_end":85368,"line_start":127,"line_end":127,"column_start":9,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":85985,"byte_end":85995,"line_start":144,"line_end":144,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":86550,"byte_end":86569,"line_start":162,"line_end":162,"column_start":19,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4013},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/traits.rs","byte_start":90819,"byte_end":90826,"line_start":281,"line_end":281,"column_start":6,"column_end":13},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":124504,"byte_end":124517,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":125119,"byte_end":125134,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/method_resolution.rs","byte_start":135396,"byte_end":135398,"line_start":318,"line_end":318,"column_start":6,"column_end":8},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":140321,"byte_end":140323,"line_start":47,"line_end":47,"column_start":6,"column_end":8},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":153886,"byte_end":153894,"line_start":387,"line_end":387,"column_start":6,"column_end":14},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":156173,"byte_end":156189,"line_start":458,"line_end":458,"column_start":6,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164593,"byte_end":164598,"line_start":665,"line_end":665,"column_start":27,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164738,"byte_end":164745,"line_start":671,"line_end":671,"column_start":29,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3913},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":164869,"byte_end":164878,"line_start":677,"line_end":677,"column_start":35,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":165097,"byte_end":165106,"line_start":686,"line_end":686,"column_start":37,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3867},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":168420,"byte_end":168426,"line_start":783,"line_end":783,"column_start":26,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":32315},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169182,"byte_end":169193,"line_start":807,"line_end":807,"column_start":6,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/lower.rs","byte_start":169511,"byte_end":169521,"line_start":817,"line_end":817,"column_start":28,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":197068,"byte_end":197084,"line_start":11,"line_end":11,"column_start":26,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":197783,"byte_end":197796,"line_start":37,"line_end":37,"column_start":30,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/unify.rs","byte_start":201401,"byte_end":201414,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/path.rs","byte_start":202815,"byte_end":202831,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/expr.rs","byte_start":212625,"byte_end":212641,"line_start":25,"line_end":25,"column_start":26,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/pat.rs","byte_start":241647,"byte_end":241663,"line_start":16,"line_end":16,"column_start":26,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer/coerce.rs","byte_start":248534,"byte_end":248550,"line_start":20,"line_end":20,"column_start":26,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":172726,"byte_end":172737,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":173116,"byte_end":173127,"line_start":108,"line_end":108,"column_start":18,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4369},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":174239,"byte_end":174254,"line_start":138,"line_end":138,"column_start":6,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":175472,"byte_end":175487,"line_start":170,"line_end":170,"column_start":24,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":175647,"byte_end":175662,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4404},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":176588,"byte_end":176604,"line_start":207,"line_end":207,"column_start":26,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":192634,"byte_end":192643,"line_start":607,"line_end":607,"column_start":19,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4447},"to":{"krate":102,"index":141}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193048,"byte_end":193060,"line_start":631,"line_end":631,"column_start":6,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":193252,"byte_end":193264,"line_start":640,"line_end":640,"column_start":21,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4465},"to":{"krate":102,"index":147}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":194536,"byte_end":194543,"line_start":673,"line_end":673,"column_start":6,"column_end":13},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":195610,"byte_end":195621,"line_start":703,"line_end":703,"column_start":6,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/infer.rs","byte_start":196228,"byte_end":196247,"line_start":726,"line_end":726,"column_start":10,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261197,"byte_end":261209,"line_start":22,"line_end":22,"column_start":18,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty/display.rs","byte_start":261900,"byte_end":261917,"line_start":50,"line_end":50,"column_start":34,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":39959,"byte_end":39967,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43261,"byte_end":43273,"line_start":210,"line_end":210,"column_start":6,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":43595,"byte_end":43607,"line_start":222,"line_end":222,"column_start":19,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4611},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46269,"byte_end":46275,"line_start":294,"line_end":294,"column_start":19,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4666},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":46601,"byte_end":46607,"line_start":308,"line_end":308,"column_start":6,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":48560,"byte_end":48573,"line_start":375,"line_end":375,"column_start":6,"column_end":19},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":49727,"byte_end":49733,"line_start":417,"line_end":417,"column_start":16,"column_end":22},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4666},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50135,"byte_end":50143,"line_start":434,"line_end":434,"column_start":6,"column_end":14},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":50232,"byte_end":50240,"line_start":440,"line_end":440,"column_start":19,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4690},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51012,"byte_end":51028,"line_start":463,"line_end":463,"column_start":6,"column_end":22},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":51667,"byte_end":51683,"line_start":487,"line_end":487,"column_start":19,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4707},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53048,"byte_end":53053,"line_start":525,"line_end":525,"column_start":6,"column_end":11},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53575,"byte_end":53580,"line_start":544,"line_end":544,"column_start":19,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4755},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":53938,"byte_end":53940,"line_start":558,"line_end":558,"column_start":6,"column_end":8},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":60684,"byte_end":60686,"line_start":753,"line_end":753,"column_start":19,"column_end":21},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4628},"to":{"krate":0,"index":1530}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":62169,"byte_end":62182,"line_start":801,"line_end":801,"column_start":21,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4594},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":66440,"byte_end":66452,"line_start":902,"line_end":902,"column_start":21,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4611},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":67056,"byte_end":67058,"line_start":920,"line_end":920,"column_start":21,"column_end":23},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4628},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":70912,"byte_end":70920,"line_start":1002,"line_end":1002,"column_start":6,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":71446,"byte_end":71454,"line_start":1020,"line_end":1020,"column_start":21,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4690},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":71766,"byte_end":71782,"line_start":1032,"line_end":1032,"column_start":21,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4707},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/ty.rs","byte_start":72507,"byte_end":72517,"line_start":1052,"line_end":1052,"column_start":21,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3992},"to":{"krate":0,"index":1366}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":262440,"byte_end":262449,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5726},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/impl_block.rs","byte_start":262611,"byte_end":262620,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/expr.rs","byte_start":266129,"byte_end":266142,"line_start":59,"line_end":59,"column_start":14,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270247,"byte_end":270261,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/lang_item.rs","byte_start":270880,"byte_end":270889,"line_start":41,"line_end":41,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":277227,"byte_end":277240,"line_start":72,"line_end":72,"column_start":6,"column_end":19},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":282729,"byte_end":282739,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283332,"byte_end":283342,"line_start":216,"line_end":216,"column_start":26,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283568,"byte_end":283572,"line_start":225,"line_end":225,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":1821}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/generics.rs","byte_start":283681,"byte_end":283682,"line_start":229,"line_end":229,"column_start":30,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1825},"to":{"krate":0,"index":1821}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":285964,"byte_end":285972,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":297512,"byte_end":297520,"line_start":378,"line_end":378,"column_start":6,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":298659,"byte_end":298667,"line_start":421,"line_end":421,"column_start":22,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1910},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/resolve.rs","byte_start":299038,"byte_end":299043,"line_start":433,"line_end":433,"column_start":6,"column_end":11},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301504,"byte_end":301515,"line_start":18,"line_end":18,"column_start":21,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5056},"to":{"krate":91,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":301964,"byte_end":301977,"line_start":39,"line_end":39,"column_start":21,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5061},"to":{"krate":91,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302284,"byte_end":302297,"line_start":51,"line_end":51,"column_start":24,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5061},"to":{"krate":91,"index":197}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":302708,"byte_end":302727,"line_start":67,"line_end":67,"column_start":21,"column_end":40},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5067},"to":{"krate":91,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/diagnostics.rs","byte_start":303035,"byte_end":303054,"line_start":79,"line_end":79,"column_start":24,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5067},"to":{"krate":91,"index":197}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":304704,"byte_end":304707,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5461},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":304981,"byte_end":304992,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5443},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":305138,"byte_end":305147,"line_start":50,"line_end":50,"column_start":28,"column_end":37},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5291},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":305904,"byte_end":305917,"line_start":66,"line_end":66,"column_start":28,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":90,"index":3568},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_id.rs","byte_start":306241,"byte_end":306250,"line_start":76,"line_end":76,"column_start":28,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5659},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":342164,"byte_end":342170,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":343232,"byte_end":343243,"line_start":46,"line_end":46,"column_start":20,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5358},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344373,"byte_end":344379,"line_start":78,"line_end":78,"column_start":20,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5392},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344556,"byte_end":344561,"line_start":84,"line_end":84,"column_start":20,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344738,"byte_end":344742,"line_start":90,"line_end":90,"column_start":20,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5426},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":344913,"byte_end":344924,"line_start":96,"line_end":96,"column_start":20,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5443},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345491,"byte_end":345499,"line_start":113,"line_end":113,"column_start":20,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5523},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345666,"byte_end":345671,"line_start":119,"line_end":119,"column_start":20,"column_end":25},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5556},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":345844,"byte_end":345850,"line_start":125,"line_end":125,"column_start":20,"column_end":26},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5587},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346025,"byte_end":346030,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5604},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346203,"byte_end":346212,"line_start":137,"line_end":137,"column_start":20,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5621},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346393,"byte_end":346401,"line_start":143,"line_end":143,"column_start":20,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5638},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346642,"byte_end":346649,"line_start":150,"line_end":150,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":2387},"to":{"krate":0,"index":2099}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":346652,"byte_end":346661,"line_start":150,"line_end":150,"column_start":36,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2040},"to":{"krate":0,"index":2099}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/src.rs","byte_start":347173,"byte_end":347174,"line_start":167,"line_end":167,"column_start":27,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2106},"to":{"krate":0,"index":2099}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348099,"byte_end":348112,"line_start":44,"line_end":44,"column_start":6,"column_end":19},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":348276,"byte_end":348289,"line_start":54,"line_end":54,"column_start":23,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/docs.rs","byte_start":349759,"byte_end":349760,"line_start":93,"line_end":93,"column_start":39,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2144},"to":{"krate":0,"index":2135}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model/attrs.rs","byte_start":352399,"byte_end":352400,"line_start":88,"line_end":88,"column_start":41,"column_end":42},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2181},"to":{"krate":0,"index":2172}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":307954,"byte_end":307959,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":309565,"byte_end":309571,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":314937,"byte_end":314948,"line_start":266,"line_end":266,"column_start":6,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":315389,"byte_end":315395,"line_start":285,"line_end":285,"column_start":6,"column_end":12},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":317217,"byte_end":317222,"line_start":343,"line_end":343,"column_start":6,"column_end":11},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":318127,"byte_end":318131,"line_start":373,"line_end":373,"column_start":6,"column_end":10},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":319752,"byte_end":319763,"line_start":424,"line_end":424,"column_start":6,"column_end":17},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":321048,"byte_end":321051,"line_start":468,"line_end":468,"column_start":6,"column_end":9},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322043,"byte_end":322054,"line_start":507,"line_end":507,"column_start":6,"column_end":17},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":322920,"byte_end":322924,"line_start":534,"line_end":534,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323215,"byte_end":323216,"line_start":541,"line_end":541,"column_start":21,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2397},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":323721,"byte_end":323732,"line_start":562,"line_end":562,"column_start":18,"column_end":29},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5492},"to":{"krate":0,"index":2387}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":324596,"byte_end":324602,"line_start":595,"line_end":595,"column_start":6,"column_end":12},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":326741,"byte_end":326749,"line_start":656,"line_end":656,"column_start":6,"column_end":14},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":329245,"byte_end":329250,"line_start":733,"line_end":733,"column_start":6,"column_end":11},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":330968,"byte_end":330977,"line_start":791,"line_end":791,"column_start":6,"column_end":15},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":331919,"byte_end":331925,"line_start":829,"line_end":829,"column_start":6,"column_end":12},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":332666,"byte_end":332671,"line_start":858,"line_end":858,"column_start":6,"column_end":11},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":336072,"byte_end":336081,"line_start":958,"line_end":958,"column_start":6,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":337999,"byte_end":338007,"line_start":1018,"line_end":1018,"column_start":6,"column_end":14},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338127,"byte_end":338136,"line_start":1026,"line_end":1026,"column_start":6,"column_end":15},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":338940,"byte_end":338950,"line_start":1047,"line_end":1047,"column_start":43,"column_end":53},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339179,"byte_end":339188,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/code_model.rs","byte_start":339901,"byte_end":339906,"line_start":1082,"line_end":1082,"column_start":6,"column_end":11},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353087,"byte_end":353092,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353327,"byte_end":353333,"line_start":24,"line_end":24,"column_start":21,"column_end":27},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5392},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353594,"byte_end":353599,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":353858,"byte_end":353862,"line_start":38,"line_end":38,"column_start":21,"column_end":25},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5426},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354088,"byte_end":354093,"line_start":45,"line_end":45,"column_start":21,"column_end":26},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5604},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354321,"byte_end":354329,"line_start":52,"line_end":52,"column_start":21,"column_end":29},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5523},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354557,"byte_end":354562,"line_start":59,"line_end":59,"column_start":21,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5556},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":354790,"byte_end":354796,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5587},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355026,"byte_end":355035,"line_start":73,"line_end":73,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5621},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355272,"byte_end":355280,"line_start":81,"line_end":81,"column_start":21,"column_end":29},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5638},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":355910,"byte_end":355919,"line_start":97,"line_end":97,"column_start":21,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5726},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":356153,"byte_end":356164,"line_start":105,"line_end":105,"column_start":21,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5443},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":356581,"byte_end":356592,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5358},"to":{"krate":0,"index":2626}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":357665,"byte_end":357670,"line_start":142,"line_end":142,"column_start":6,"column_end":11},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/rust-analyzer-5e0f1308176aaeda/1adc352/crates/ra_hir/src/from_source.rs","byte_start":358560,"byte_end":358566,"line_start":163,"line_end":163,"column_start":6,"column_end":12},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}}]}