{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","petgraph","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"graphmap\"","--cfg","feature=\"ordermap\"","--cfg","feature=\"stable_graph\"","-C","metadata=1746d2377235e490","-C","extra-filename=-1746d2377235e490","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--extern","fixedbitset=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libfixedbitset-a7bae390a5cc6b4d.rmeta","--extern","ordermap=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libordermap-97d7d426fdf429bf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libpetgraph-1746d2377235e490.rmeta"},"prelude":{"crate_id":{"name":"petgraph","disambiguator":[8838636884296936769,4448080757316076414]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":16,"id":{"name":"fixedbitset","disambiguator":[4184422968409117594,2478214682307357160]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","num":17,"id":{"name":"ordermap","disambiguator":[14413334921063817060,4097412733286418061]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1029,"byte_end":1034,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1057,"byte_end":1065,"line_start":36,"line_end":36,"column_start":21,"column_end":29},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4014},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1057,"byte_end":1065,"line_start":36,"line_end":36,"column_start":21,"column_end":29},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1067,"byte_end":1075,"line_start":36,"line_end":36,"column_start":31,"column_end":39},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4017},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1067,"byte_end":1075,"line_start":36,"line_end":36,"column_start":31,"column_end":39},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8376,"byte_end":8377,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8403,"byte_end":8404,"line_start":43,"line_end":43,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Reversed","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8486,"byte_end":8487,"line_start":49,"line_end":49,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"depth_first_search, DfsEvent","parent":{"krate":0,"index":28}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8514,"byte_end":8515,"line_start":50,"line_end":50,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"DfsPostOrder, Dfs, Bfs, Walker","parent":{"krate":0,"index":28}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76079,"byte_end":76092,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"alias_span":null,"name":"is_isomorphic","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2857},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76098,"byte_end":76120,"line_start":44,"line_end":44,"column_start":5,"column_end":27},"alias_span":null,"name":"is_isomorphic_matching","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2491},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76150,"byte_end":76158,"line_start":46,"line_end":46,"column_start":26,"column_end":34},"alias_span":null,"name":"dijkstra","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":2511},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76182,"byte_end":76187,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"alias_span":null,"name":"astar","value":"","parent":{"krate":0,"index":859}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193210,"byte_end":193219,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193225,"byte_end":193234,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193240,"byte_end":193250,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193256,"byte_end":193265,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193271,"byte_end":193280,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1421},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193286,"byte_end":193296,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193302,"byte_end":193312,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268326,"byte_end":268335,"line_start":16,"line_end":16,"column_start":17,"column_end":26},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2525}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268337,"byte_end":268346,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2525}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315078,"byte_end":315083,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315089,"byte_end":315098,"line_start":11,"line_end":11,"column_start":5,"column_end":14},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315104,"byte_end":315113,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315119,"byte_end":315126,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315132,"byte_end":315139,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3597},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315215,"byte_end":315223,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"alias_span":null,"name":"GraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315229,"byte_end":315239,"line_start":20,"line_end":20,"column_start":5,"column_end":15},"alias_span":null,"name":"DiGraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1054},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315245,"byte_end":315255,"line_start":21,"line_end":21,"column_start":5,"column_end":15},"alias_span":null,"name":"UnGraphMap","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315339,"byte_end":315350,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"alias_span":null,"name":"StableGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315356,"byte_end":315369,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"StableDiGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":1957},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315375,"byte_end":315388,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"alias_span":null,"name":"StableUnGraph","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315432,"byte_end":315435,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"alias_span":null,"name":"Bfs","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315441,"byte_end":315444,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"alias_span":null,"name":"Dfs","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3125},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315450,"byte_end":315462,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"alias_span":null,"name":"DfsPostOrder","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315501,"byte_end":315510,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"alias_span":null,"name":"Direction","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315516,"byte_end":315524,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4017},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315516,"byte_end":315524,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2946}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315530,"byte_end":315538,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4014},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315530,"byte_end":315538,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"alias_span":null,"name":"Outgoing","value":"","parent":{"krate":0,"index":2947}},{"kind":"Use","ref_id":{"krate":0,"index":4037},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315544,"byte_end":315552,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"alias_span":null,"name":"Directed","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":4043},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315558,"byte_end":315568,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"Undirected","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315613,"byte_end":315620,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"EdgeRef","value":"","parent":{"krate":0,"index":2925}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1747,"byte_end":1751,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"alias_span":null,"name":"Edge","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1761,"byte_end":1770,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"alias_span":null,"name":"EdgeIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3741},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1780,"byte_end":1791,"line_start":76,"line_end":76,"column_start":9,"column_end":20},"alias_span":null,"name":"EdgeIndices","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3751},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1801,"byte_end":1814,"line_start":77,"line_end":77,"column_start":9,"column_end":22},"alias_span":null,"name":"EdgeReference","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1824,"byte_end":1838,"line_start":78,"line_end":78,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeReferences","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1710},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1848,"byte_end":1862,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"alias_span":null,"name":"EdgeWeightsMut","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1872,"byte_end":1877,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"alias_span":null,"name":"Edges","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1887,"byte_end":1896,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"alias_span":null,"name":"Externals","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":2386},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1906,"byte_end":1912,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"alias_span":null,"name":"Frozen","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1922,"byte_end":1927,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"alias_span":null,"name":"Graph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1613},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1937,"byte_end":1946,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"alias_span":null,"name":"Neighbors","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1956,"byte_end":1960,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1970,"byte_end":1979,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"alias_span":null,"name":"NodeIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":3731},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1989,"byte_end":2000,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"alias_span":null,"name":"NodeIndices","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1697},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2010,"byte_end":2024,"line_start":88,"line_end":88,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeWeightsMut","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2034,"byte_end":2048,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"alias_span":null,"name":"NodeReferences","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1766},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2058,"byte_end":2071,"line_start":90,"line_end":90,"column_start":9,"column_end":22},"alias_span":null,"name":"WalkNeighbors","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"alias_span":null,"name":"GraphIndex","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2101,"byte_end":2110,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"alias_span":null,"name":"IndexType","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1423},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2120,"byte_end":2130,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"alias_span":null,"name":"edge_index","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1421},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2140,"byte_end":2150,"line_start":94,"line_end":94,"column_start":9,"column_end":19},"alias_span":null,"name":"node_index","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2160,"byte_end":2169,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"alias_span":null,"name":"DefaultIx","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2179,"byte_end":2186,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"alias_span":null,"name":"DiGraph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2196,"byte_end":2203,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"alias_span":null,"name":"UnGraph","value":"","parent":{"krate":0,"index":2952}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2268,"byte_end":2280,"line_start":102,"line_end":102,"column_start":21,"column_end":33},"alias_span":null,"name":"stable_graph","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3208,"byte_end":3217,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"alias_span":null,"name":"EdgeDirection","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":5007,"line_start":2,"line_end":227,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":4051},{"krate":0,"index":8},{"krate":0,"index":4053},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":28},{"krate":0,"index":713},{"krate":0,"index":859},{"krate":0,"index":1013},{"krate":0,"index":1358},{"krate":0,"index":2391},{"krate":0,"index":2464},{"krate":0,"index":2476},{"krate":0,"index":2495},{"krate":0,"index":2525},{"krate":0,"index":2778},{"krate":0,"index":2809},{"krate":0,"index":2819},{"krate":0,"index":2888},{"krate":0,"index":2918},{"krate":0,"index":2925},{"krate":0,"index":2952},{"krate":0,"index":2978},{"krate":0,"index":4012},{"krate":0,"index":4034},{"krate":0,"index":4032},{"krate":0,"index":4029},{"krate":0,"index":4030},{"krate":0,"index":4027},{"krate":0,"index":4025},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4019},{"krate":0,"index":4035},{"krate":0,"index":2980},{"krate":0,"index":2983},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2994},{"krate":0,"index":2999},{"krate":0,"index":3004},{"krate":0,"index":3010},{"krate":0,"index":3016}],"decl_id":null,"docs":" **petgraph** is a graph data structure library.","sig":null,"attributes":[{"value":"/ **petgraph** is a graph data structure library.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":53,"byte_end":56,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ - [`Graph`](./graph/struct.Graph.html) which is an adjacency list graph with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":57,"byte_end":137,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ arbitrary associated data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":138,"byte_end":168,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":169,"byte_end":172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - [`StableGraph`](./stable_graph/struct.StableGraph.html) is similar","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":173,"byte_end":245,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ to `Graph`, but it keeps indices stable across removals.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":246,"byte_end":306,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":307,"byte_end":310,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - [`GraphMap`](./graphmap/struct.GraphMap.html) is an adjacency list graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":311,"byte_end":389,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ which is backed by a hash table and the node identifiers are the keys","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":390,"byte_end":463,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ into the table.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":464,"byte_end":483,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ - [`CSR`](./csr/struct.Csr.html) is a sparse adjacency matrix graph with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":484,"byte_end":560,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ arbitrary associated data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":561,"byte_end":591,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":592,"byte_end":595,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Optional crate feature: `\"serde-1\"`, see the Readme for more information.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":596,"byte_end":673,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":674,"byte_end":677,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::visit","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":38},{"krate":0,"index":75},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":4085},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3179},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":209},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3194},{"krate":0,"index":216},{"krate":0,"index":224},{"krate":0,"index":232},{"krate":0,"index":240},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3216},{"krate":0,"index":3219},{"krate":0,"index":247},{"krate":0,"index":255},{"krate":0,"index":261},{"krate":0,"index":269},{"krate":0,"index":3224},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3238},{"krate":0,"index":275},{"krate":0,"index":283},{"krate":0,"index":294},{"krate":0,"index":3244},{"krate":0,"index":3248},{"krate":0,"index":299},{"krate":0,"index":306},{"krate":0,"index":3255},{"krate":0,"index":3259},{"krate":0,"index":314},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":320},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":3274},{"krate":0,"index":3278},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":346},{"krate":0,"index":354},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":3297},{"krate":0,"index":3301},{"krate":0,"index":380},{"krate":0,"index":387},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":423},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":430},{"krate":0,"index":437},{"krate":0,"index":653}],"decl_id":null,"docs":" Graph traits and graph traversals.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1167,"byte_end":1179,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ Graph traits and graph traversals.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6790,"byte_end":6828,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6829,"byte_end":6832,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ### The `Into-` Traits","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6833,"byte_end":6859,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6860,"byte_end":6863,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Graph traits like [`IntoNeighbors`][in] create iterators and use the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6864,"byte_end":6941,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ pattern that `IntoIterator` does: the trait takes a reference to a graph,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":6942,"byte_end":7019,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ and produces an iterator. These traits are quite composable, but with the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7020,"byte_end":7097,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ limitation that they only use shared references to graphs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7098,"byte_end":7160,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7161,"byte_end":7164,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Graph Traversal","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7165,"byte_end":7188,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7189,"byte_end":7192,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Dfs`](struct.Dfs.html), [`Bfs`][bfs], [`DfsPostOrder`][dfspo] and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7193,"byte_end":7264,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ [`Topo`][topo]  are basic visitors and they use “walker” methods: the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7265,"byte_end":7342,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ visitors don't hold the graph as borrowed during traversal, only for the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7343,"byte_end":7419,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ `.next()` call on the walker. They can be converted to iterators","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7420,"byte_end":7488,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ through the [`Walker`][w] trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7489,"byte_end":7525,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7526,"byte_end":7529,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ There is also the callback based traversal [`depth_first_search`][dfs].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7530,"byte_end":7605,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7606,"byte_end":7609,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [bfs]: struct.Bfs.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7610,"byte_end":7636,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [dfspo]: struct.DfsPostOrder.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7637,"byte_end":7674,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/ [topo]: struct.Topo.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7675,"byte_end":7703,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [dfs]: fn.depth_first_search.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7704,"byte_end":7741,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ [w]: trait.Walker.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7742,"byte_end":7768,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7769,"byte_end":7772,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ### Other Graph Traits","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7773,"byte_end":7799,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7800,"byte_end":7803,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The traits are rather loosely coupled at the moment (which is intentional,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7804,"byte_end":7882,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ but will develop a bit), and there are traits missing that could be added.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7883,"byte_end":7961,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7962,"byte_end":7965,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Not much is needed to be able to use the visitors on a graph. A graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":7966,"byte_end":8039,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ needs to define [`GraphBase`][gb], [`IntoNeighbors`][in] and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8040,"byte_end":8104,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ [`Visitable`][vis] as a minimum.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8105,"byte_end":8141,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8142,"byte_end":8145,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [gb]: trait.GraphBase.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8146,"byte_end":8176,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ [in]: trait.IntoNeighbors.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8177,"byte_end":8211,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ [vis]: trait.Visitable.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8212,"byte_end":8243,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":8244,"byte_end":8247,"line_start":38,"line_end":38,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30047,"byte_end":30051,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Time","qualname":"::visit::dfsvisit::Time","value":"","parent":null,"children":[],"decl_id":null,"docs":" Strictly monotonically increasing event time for a depth first search.\n","sig":null,"attributes":[{"value":"/ Strictly monotonically increasing event time for a depth first search.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":29884,"byte_end":29958,"line_start":6,"line_end":6,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30052,"byte_end":30061,"line_start":8,"line_end":8,"column_start":17,"column_end":26},"name":"0","qualname":"::visit::dfsvisit::Time::0","value":"usize","parent":{"krate":0,"index":3039},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30168,"byte_end":30176,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Discover","qualname":"::visit::dfsvisit::DfsEvent::Discover","value":"DfsEvent::Discover(N, Time)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30244,"byte_end":30252,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"TreeEdge","qualname":"::visit::dfsvisit::DfsEvent::TreeEdge","value":"DfsEvent::TreeEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" An edge of the tree formed by the traversal.\n","sig":null,"attributes":[{"value":"/ An edge of the tree formed by the traversal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30191,"byte_end":30239,"line_start":14,"line_end":14,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30308,"byte_end":30316,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"BackEdge","qualname":"::visit::dfsvisit::DfsEvent::BackEdge","value":"DfsEvent::BackEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" An edge to an already visited node.\n","sig":null,"attributes":[{"value":"/ An edge to an already visited node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30264,"byte_end":30303,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30502,"byte_end":30518,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"CrossForwardEdge","qualname":"::visit::dfsvisit::DfsEvent::CrossForwardEdge","value":"DfsEvent::CrossForwardEdge(N, N)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":" A cross or forward edge.","sig":null,"attributes":[{"value":"/ A cross or forward edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30328,"byte_end":30356,"line_start":18,"line_end":18,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30361,"byte_end":30364,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ For an edge *(u, v)*, if the discover time of *v* is greater than *u*,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30369,"byte_end":30443,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ then it is a forward edge, else a cross edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30448,"byte_end":30497,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30530,"byte_end":30536,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Finish","qualname":"::visit::dfsvisit::DfsEvent::Finish","value":"DfsEvent::Finish(N, Time)","parent":{"krate":0,"index":3067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30150,"byte_end":30158,"line_start":12,"line_end":12,"column_start":10,"column_end":18},"name":"DfsEvent","qualname":"::visit::dfsvisit::DfsEvent","value":"pub enum DfsEvent<N> {\n    Discover(N, Time),\n\n    /// An edge of the tree formed by the traversal.\n    TreeEdge(N, N),\n\n    /// An edge to an already visited node.\n    BackEdge(N, N),\n\n    /// A cross or forward edge.\n    ///\n    /// For an edge *(u, v)*, if the discover time of *v* is greater than *u*,\n    /// then it is a forward edge, else a cross edge.\n    CrossForwardEdge(N, N),\n    Finish(N, Time),\n}","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3073},{"krate":0,"index":3077},{"krate":0,"index":3081},{"krate":0,"index":3085}],"decl_id":null,"docs":" A depth first search (DFS) visitor event.\n","sig":null,"attributes":[{"value":"/ A depth first search (DFS) visitor event.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30065,"byte_end":30110,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30883,"byte_end":30891,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Continue","qualname":"::visit::dfsvisit::Control::Continue","value":"Control::Continue","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30897,"byte_end":30902,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Break","qualname":"::visit::dfsvisit::Control::Break","value":"Control::Break(B)","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30866,"byte_end":30873,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Control","qualname":"::visit::dfsvisit::Control","value":"pub enum Control<B> { Continue, Break(B), }","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3101}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30760,"byte_end":30791,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30792,"byte_end":30795,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `Break` can carry a value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30796,"byte_end":30826,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30942,"byte_end":30950,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"breaking","qualname":"<Control<B>>::breaking","value":"pub fn breaking() -> Control<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31060,"byte_end":31071,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"break_value","qualname":"<Control<B>>::break_value","value":"pub fn break_value(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" Get the value in `Control::Break(_)`, if present.\n","sig":null,"attributes":[{"value":"/ Get the value in `Control::Break(_)`, if present.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30995,"byte_end":31048,"line_start":48,"line_end":48,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31319,"byte_end":31330,"line_start":60,"line_end":60,"column_start":11,"column_end":22},"name":"ControlFlow","qualname":"::visit::dfsvisit::ControlFlow","value":"ControlFlow","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Control flow for callbacks.","sig":null,"attributes":[{"value":"/ Control flow for callbacks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31214,"byte_end":31245,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31246,"byte_end":31249,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The empty return value `()` is equivalent to continue.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31250,"byte_end":31308,"line_start":59,"line_end":59,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31340,"byte_end":31350,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"continuing","qualname":"::visit::dfsvisit::ControlFlow::continuing","value":"pub fn continuing() -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31369,"byte_end":31381,"line_start":62,"line_end":62,"column_start":8,"column_end":20},"name":"should_break","qualname":"::visit::dfsvisit::ControlFlow::should_break","value":"pub fn should_break(&Self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33780,"byte_end":33798,"line_start":148,"line_end":148,"column_start":8,"column_end":26},"name":"depth_first_search","qualname":"::visit::dfsvisit::depth_first_search","value":"pub fn depth_first_search<G, I, F, C>(G, I, F) -> C where G: IntoNeighbors +\nVisitable, I: IntoIterator<Item = G::NodeId>, F: FnMut(DfsEvent<G::NodeId>) ->\nC, C: ControlFlow","parent":null,"children":[],"decl_id":null,"docs":" A recursive depth first search.","sig":null,"attributes":[{"value":"/ A recursive depth first search.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31972,"byte_end":32007,"line_start":90,"line_end":90,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32008,"byte_end":32011,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Starting points are the nodes in the iterator `starts` (specify just one","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32012,"byte_end":32088,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ start vertex *x* by using `Some(x)`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32089,"byte_end":32130,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32131,"byte_end":32134,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The traversal emits discovery and finish events for each reachable vertex,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32135,"byte_end":32213,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ and edge classification of each reachable edge. `visitor` is called for each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32214,"byte_end":32294,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/ event, see [`DfsEvent`][de] for possible values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32295,"byte_end":32347,"line_start":97,"line_end":97,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32348,"byte_end":32351,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ If the return value of the visitor is simply `()`, the visit runs until it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32352,"byte_end":32430,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ is finished. If the return value is a `Control<B>`, it can be used to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32431,"byte_end":32504,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/ break the visit early, and the last control value is returned by the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32505,"byte_end":32577,"line_start":101,"line_end":101,"column_start":1,"column_end":73}},{"value":"/ function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32578,"byte_end":32591,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32592,"byte_end":32595,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [de]: enum.DfsEvent.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32596,"byte_end":32624,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32625,"byte_end":32628,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32629,"byte_end":32642,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32643,"byte_end":32646,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Find a path from vertex 0 to 5, and exit the visit as soon as we reach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32647,"byte_end":32721,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ the goal vertex.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32722,"byte_end":32742,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32743,"byte_end":32746,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32747,"byte_end":32754,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32755,"byte_end":32784,"line_start":112,"line_end":112,"column_start":1,"column_end":30}},{"value":"/ use petgraph::graph::node_index as n;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32785,"byte_end":32826,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/ use petgraph::visit::depth_first_search;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32827,"byte_end":32871,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/ use petgraph::visit::{DfsEvent, Control};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32872,"byte_end":32917,"line_start":115,"line_end":115,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32918,"byte_end":32921,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let gr: Graph<(), ()> = Graph::from_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32922,"byte_end":32970,"line_start":117,"line_end":117,"column_start":1,"column_end":49}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":32971,"byte_end":33002,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/     (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33003,"byte_end":33018,"line_start":119,"line_end":119,"column_start":1,"column_end":16}},{"value":"/     (2, 3), (2, 4),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33019,"byte_end":33042,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/     (4, 0), (4, 5),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33043,"byte_end":33066,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33067,"byte_end":33074,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33075,"byte_end":33078,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // record each predecessor, mapping node → node","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33079,"byte_end":33132,"line_start":124,"line_end":124,"column_start":1,"column_end":52}},{"value":"/ let mut predecessor = vec![NodeIndex::end(); gr.node_count()];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33133,"byte_end":33199,"line_start":125,"line_end":125,"column_start":1,"column_end":67}},{"value":"/ let start = n(0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33200,"byte_end":33221,"line_start":126,"line_end":126,"column_start":1,"column_end":22}},{"value":"/ let goal = n(5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33222,"byte_end":33242,"line_start":127,"line_end":127,"column_start":1,"column_end":21}},{"value":"/ depth_first_search(&gr, Some(start), |event| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33243,"byte_end":33293,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     if let DfsEvent::TreeEdge(u, v) = event {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33294,"byte_end":33343,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"/         predecessor[v.index()] = u;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33344,"byte_end":33383,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/         if v == goal {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33384,"byte_end":33410,"line_start":131,"line_end":131,"column_start":1,"column_end":27}},{"value":"/             return Control::Break(v);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33411,"byte_end":33452,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/         }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33453,"byte_end":33466,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33467,"byte_end":33476,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/     Control::Continue","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33477,"byte_end":33502,"line_start":135,"line_end":135,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33503,"byte_end":33510,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33511,"byte_end":33514,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let mut next = goal;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33515,"byte_end":33539,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/ let mut path = vec![next];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33540,"byte_end":33570,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/ while next != start {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33571,"byte_end":33596,"line_start":140,"line_end":140,"column_start":1,"column_end":26}},{"value":"/     let pred = predecessor[next.index()];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33597,"byte_end":33642,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/     path.push(pred);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33643,"byte_end":33667,"line_start":142,"line_end":142,"column_start":1,"column_end":25}},{"value":"/     next = pred;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33668,"byte_end":33688,"line_start":143,"line_end":143,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33689,"byte_end":33694,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/ path.reverse();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33695,"byte_end":33714,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(&path, &[n(0), n(2), n(4), n(5)]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33715,"byte_end":33764,"line_start":146,"line_end":146,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":33765,"byte_end":33772,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36542,"byte_end":36545,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Dfs","qualname":"::visit::traversal::Dfs","value":"Dfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116}],"decl_id":null,"docs":" Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in\n preorder (when they are first discovered).","sig":null,"attributes":[{"value":"/ Visit nodes of a graph in a depth-first-search (DFS) emitting nodes in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35556,"byte_end":35630,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ preorder (when they are first discovered).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35631,"byte_end":35677,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35678,"byte_end":35681,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35682,"byte_end":35757,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35758,"byte_end":35770,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35771,"byte_end":35774,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Dfs` is not recursive.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35775,"byte_end":35802,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35803,"byte_end":35806,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Dfs` does not itself borrow the graph, and because of this you can run","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35807,"byte_end":35882,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ a traversal over a graph while still retaining mutable access to it, if you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35883,"byte_end":35962,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ use it like the following example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":35963,"byte_end":36001,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36002,"byte_end":36005,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36006,"byte_end":36013,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36014,"byte_end":36038,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36039,"byte_end":36068,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36069,"byte_end":36072,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_,()>::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36073,"byte_end":36114,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ let a = graph.add_node(0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36115,"byte_end":36145,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36146,"byte_end":36149,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut dfs = Dfs::new(&graph, a);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36150,"byte_end":36188,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ while let Some(nx) = dfs.next(&graph) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36189,"byte_end":36232,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/     // we can access `graph` mutably here still","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36233,"byte_end":36284,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/     graph[nx] += 1;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36285,"byte_end":36308,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36309,"byte_end":36314,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36315,"byte_end":36318,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(graph[a], 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36319,"byte_end":36347,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36348,"byte_end":36355,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36356,"byte_end":36359,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Note:** The algorithm may not behave correctly if nodes are removed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36360,"byte_end":36433,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ during iteration. It may not necessarily visit added nodes or edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36434,"byte_end":36506,"line_start":36,"line_end":36,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36599,"byte_end":36604,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Dfs::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[{"value":"/ The stack of nodes to visit","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36559,"byte_end":36590,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36658,"byte_end":36668,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Dfs::discovered","value":"VM","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36618,"byte_end":36649,"line_start":41,"line_end":41,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36890,"byte_end":36893,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Dfs<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new **Dfs**, using the graph's visitor map, and put **start**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36764,"byte_end":36838,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ in the stack of nodes to visit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36843,"byte_end":36878,"line_start":50,"line_end":50,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37139,"byte_end":37149,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Dfs<N, VM>>::from_parts","value":"pub fn from_parts(Vec<N>, VM) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dfs` from a vector and a visit map\n","sig":null,"attributes":[{"value":"/ Create a `Dfs` from a vector and a visit map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37079,"byte_end":37127,"line_start":59,"line_end":59,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37325,"byte_end":37330,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"reset","qualname":"<Dfs<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: GraphRef + Visitable<NodeId = N, Map =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[{"value":"/ Clear the visit state","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37288,"byte_end":37313,"line_start":67,"line_end":67,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37584,"byte_end":37589,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"empty","qualname":"<Dfs<N, VM>>::empty","value":"pub fn empty<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Dfs** using the graph's visitor map, and no stack.\n","sig":null,"attributes":[{"value":"/ Create a new **Dfs** using the graph's visitor map, and no stack.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37503,"byte_end":37572,"line_start":75,"line_end":75,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37900,"byte_end":37907,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Dfs<N, VM>>::move_to","value":"pub fn move_to(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[{"value":"/ Keep the discovered map, but clear the visit stack and restart","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37782,"byte_end":37848,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/ the dfs from a particular node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":37853,"byte_end":37888,"line_start":86,"line_end":86,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38130,"byte_end":38134,"line_start":95,"line_end":95,"column_start":12,"column_end":16},"name":"next","qualname":"<Dfs<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the dfs, or **None** if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the dfs, or **None** if the traversal is done.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38044,"byte_end":38118,"line_start":94,"line_end":94,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38807,"byte_end":38819,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"DfsPostOrder","qualname":"::visit::traversal::DfsPostOrder","value":"DfsPostOrder { stack, discovered, finished }","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130}],"decl_id":null,"docs":" Visit nodes in a depth-first-search (DFS) emitting nodes in postorder\n (each node after all its descendants have been emitted).","sig":null,"attributes":[{"value":"/ Visit nodes in a depth-first-search (DFS) emitting nodes in postorder","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38503,"byte_end":38576,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ (each node after all its descendants have been emitted).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38577,"byte_end":38637,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38638,"byte_end":38641,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ `DfsPostOrder` is not recursive.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38642,"byte_end":38678,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38679,"byte_end":38682,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38683,"byte_end":38758,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38759,"byte_end":38771,"line_start":117,"line_end":117,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38873,"byte_end":38878,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::DfsPostOrder::stack","value":"std::vec::Vec<N>","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The stack of nodes to visit\n","sig":null,"attributes":[{"value":"/ The stack of nodes to visit","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38833,"byte_end":38864,"line_start":120,"line_end":120,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38932,"byte_end":38942,"line_start":123,"line_end":123,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::DfsPostOrder::discovered","value":"VM","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38892,"byte_end":38923,"line_start":122,"line_end":122,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38990,"byte_end":38998,"line_start":125,"line_end":125,"column_start":9,"column_end":17},"name":"finished","qualname":"::visit::traversal::DfsPostOrder::finished","value":"VM","parent":{"krate":0,"index":3125},"children":[],"decl_id":null,"docs":" The map of finished nodes\n","sig":null,"attributes":[{"value":"/ The map of finished nodes","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":38952,"byte_end":38981,"line_start":124,"line_end":124,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39233,"byte_end":39236,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsPostOrder<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and put\n `start` in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new `DfsPostOrder` using the graph's visitor map, and put","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39103,"byte_end":39173,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/ `start` in the stack of nodes to visit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39178,"byte_end":39221,"line_start":133,"line_end":133,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39511,"byte_end":39516,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"empty","qualname":"<DfsPostOrder<N, VM>>::empty","value":"pub fn empty<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DfsPostOrder` using the graph's visitor map, and no stack.\n","sig":null,"attributes":[{"value":"/ Create a new `DfsPostOrder` using the graph's visitor map, and no stack.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39423,"byte_end":39499,"line_start":142,"line_end":142,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39796,"byte_end":39801,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"reset","qualname":"<DfsPostOrder<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: GraphRef + Visitable<NodeId = N, Map =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Clear the visit state\n","sig":null,"attributes":[{"value":"/ Clear the visit state","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39759,"byte_end":39784,"line_start":153,"line_end":153,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40150,"byte_end":40157,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"move_to","qualname":"<DfsPostOrder<N, VM>>::move_to","value":"pub fn move_to(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Keep the discovered and finished map, but clear the visit stack and restart\n the dfs from a particular node.\n","sig":null,"attributes":[{"value":"/ Keep the discovered and finished map, but clear the visit stack and restart","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40019,"byte_end":40098,"line_start":162,"line_end":162,"column_start":5,"column_end":84}},{"value":"/ the dfs from a particular node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40103,"byte_end":40138,"line_start":163,"line_end":163,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40346,"byte_end":40350,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"next","qualname":"<DfsPostOrder<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the traversal, or `None` if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the traversal, or `None` if the traversal is done.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":40256,"byte_end":40334,"line_start":170,"line_end":170,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41985,"byte_end":41988,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"Bfs","qualname":"::visit::traversal::Bfs","value":"Bfs { stack, discovered }","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"decl_id":null,"docs":" A breadth first search (BFS) of a graph.","sig":null,"attributes":[{"value":"/ A breadth first search (BFS) of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41083,"byte_end":41127,"line_start":194,"line_end":194,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41128,"byte_end":41131,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ The traversal starts at a given node and only traverses nodes reachable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41132,"byte_end":41207,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ from it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41208,"byte_end":41220,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41221,"byte_end":41224,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ `Bfs` is not recursive.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41225,"byte_end":41252,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41253,"byte_end":41256,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ `Bfs` does not itself borrow the graph, and because of this you can run","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41257,"byte_end":41332,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/ a traversal over a graph while still retaining mutable access to it, if you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41333,"byte_end":41412,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/ use it like the following example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41413,"byte_end":41451,"line_start":203,"line_end":203,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41452,"byte_end":41455,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41456,"byte_end":41463,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41464,"byte_end":41488,"line_start":206,"line_end":206,"column_start":1,"column_end":25}},{"value":"/ use petgraph::visit::Bfs;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41489,"byte_end":41518,"line_start":207,"line_end":207,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41519,"byte_end":41522,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_,()>::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41523,"byte_end":41564,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ let a = graph.add_node(0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41565,"byte_end":41595,"line_start":210,"line_end":210,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41596,"byte_end":41599,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ let mut bfs = Bfs::new(&graph, a);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41600,"byte_end":41638,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/ while let Some(nx) = bfs.next(&graph) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41639,"byte_end":41682,"line_start":213,"line_end":213,"column_start":1,"column_end":44}},{"value":"/     // we can access `graph` mutably here still","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41683,"byte_end":41734,"line_start":214,"line_end":214,"column_start":1,"column_end":52}},{"value":"/     graph[nx] += 1;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41735,"byte_end":41758,"line_start":215,"line_end":215,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41759,"byte_end":41764,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41765,"byte_end":41768,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(graph[a], 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41769,"byte_end":41797,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41798,"byte_end":41805,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41806,"byte_end":41809,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ **Note:** The algorithm may not behave correctly if nodes are removed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41810,"byte_end":41883,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ during iteration. It may not necessarily visit added nodes or edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":41884,"byte_end":41956,"line_start":222,"line_end":222,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42042,"byte_end":42047,"line_start":226,"line_end":226,"column_start":9,"column_end":14},"name":"stack","qualname":"::visit::traversal::Bfs::stack","value":"std::collections::VecDeque<N>","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The queue of nodes to visit\n","sig":null,"attributes":[{"value":"/ The queue of nodes to visit","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42002,"byte_end":42033,"line_start":225,"line_end":225,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42106,"byte_end":42116,"line_start":228,"line_end":228,"column_start":9,"column_end":19},"name":"discovered","qualname":"::visit::traversal::Bfs::discovered","value":"VM","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" The map of discovered nodes\n","sig":null,"attributes":[{"value":"/ The map of discovered nodes","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42066,"byte_end":42097,"line_start":227,"line_end":227,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42338,"byte_end":42341,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<Bfs<N, VM>>::new","value":"pub fn new<G>(G, N) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Bfs**, using the graph's visitor map, and put **start**\n in the stack of nodes to visit.\n","sig":null,"attributes":[{"value":"/ Create a new **Bfs**, using the graph's visitor map, and put **start**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42212,"byte_end":42286,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ in the stack of nodes to visit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42291,"byte_end":42326,"line_start":236,"line_end":236,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42773,"byte_end":42777,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"next","qualname":"<Bfs<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighbors<NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the bfs, or **None** if the traversal is done.\n","sig":null,"attributes":[{"value":"/ Return the next node in the bfs, or **None** if the traversal is done.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42687,"byte_end":42761,"line_start":250,"line_end":250,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43452,"byte_end":43456,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"Topo","qualname":"::visit::traversal::Topo","value":"Topo {  }","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152}],"decl_id":null,"docs":" A topological order traversal for a graph.","sig":null,"attributes":[{"value":"/ A topological order traversal for a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43157,"byte_end":43203,"line_start":268,"line_end":268,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43204,"byte_end":43207,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ **Note** that `Topo` only visits nodes that are not part of cycles,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43208,"byte_end":43279,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/ i.e. nodes in a true DAG. Use other visitors like `DfsPostOrder` or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43280,"byte_end":43351,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ algorithms like kosaraju_scc to handle graphs with possible cycles.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43352,"byte_end":43423,"line_start":272,"line_end":272,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43718,"byte_end":43721,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"new","qualname":"<Topo<N, VM>>::new","value":"pub fn new<G>(G) -> Self where G: IntoNodeIdentifiers +\nIntoNeighborsDirected + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Topo`, using the graph's visitor map, and put all\n initial nodes in the to visit list.\n","sig":null,"attributes":[{"value":"/ Create a new `Topo`, using the graph's visitor map, and put all","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43595,"byte_end":43662,"line_start":283,"line_end":283,"column_start":5,"column_end":72}},{"value":"/ initial nodes in the to visit list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43667,"byte_end":43706,"line_start":284,"line_end":284,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":44723,"byte_end":44728,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"reset","qualname":"<Topo<N, VM>>::reset","value":"pub fn reset<G>(&mut Self, G) where G: IntoNodeIdentifiers +\nIntoNeighborsDirected + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Clear visited state, and put all initial nodes in the to visit list.\n","sig":null,"attributes":[{"value":"/ Clear visited state, and put all initial nodes in the to visit list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":44639,"byte_end":44711,"line_start":313,"line_end":313,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45284,"byte_end":45288,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"next","qualname":"<Topo<N, VM>>::next","value":"pub fn next<G>(&mut Self, G) -> Option<N> where G: IntoNeighborsDirected +\nVisitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":" Return the next node in the current topological order traversal, or\n `None` if the traversal is at the end.","sig":null,"attributes":[{"value":"/ Return the next node in the current topological order traversal, or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":44978,"byte_end":45049,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ `None` if the traversal is at the end.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45054,"byte_end":45096,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45101,"byte_end":45104,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ *Note:* The graph may not have a complete topological order, and the only","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45109,"byte_end":45186,"line_start":325,"line_end":325,"column_start":5,"column_end":82}},{"value":"/ way to know is to run the whole traversal and make sure it visits every node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":45191,"byte_end":45272,"line_start":326,"line_end":326,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46328,"byte_end":46334,"line_start":355,"line_end":355,"column_start":11,"column_end":17},"name":"Walker","qualname":"::visit::traversal::Walker","value":"Walker<Context>","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A walker is a traversal state, but where part of the traversal\n information is supplied manually to each next call.","sig":null,"attributes":[{"value":"/ A walker is a traversal state, but where part of the traversal","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46083,"byte_end":46149,"line_start":350,"line_end":350,"column_start":1,"column_end":67}},{"value":"/ information is supplied manually to each next call.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46150,"byte_end":46205,"line_start":351,"line_end":351,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46206,"byte_end":46209,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ This for example allows graph traversals that don't hold a borrow of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46210,"byte_end":46286,"line_start":353,"line_end":353,"column_start":1,"column_end":77}},{"value":"/ graph they are traversing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46287,"byte_end":46317,"line_start":354,"line_end":354,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46355,"byte_end":46359,"line_start":356,"line_end":356,"column_start":10,"column_end":14},"name":"Item","qualname":"::visit::traversal::Walker::Item","value":"type Item;","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46401,"byte_end":46410,"line_start":358,"line_end":358,"column_start":8,"column_end":17},"name":"walk_next","qualname":"::visit::traversal::Walker::walk_next","value":"pub fn walk_next(&mut Self, Context) -> Option<Self::Item>","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Advance to the next item\n","sig":null,"attributes":[{"value":"/ Advance to the next item","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46365,"byte_end":46393,"line_start":357,"line_end":357,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46537,"byte_end":46541,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"iter","qualname":"::visit::traversal::Walker::iter","value":"pub fn iter(Self, Context) -> WalkerIter<Self, Context> where Self: Sized,\nContext: Clone","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Create an iterator out of the walker and given `context`.\n","sig":null,"attributes":[{"value":"/ Create an iterator out of the walker and given `context`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46468,"byte_end":46529,"line_start":360,"line_end":360,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46844,"byte_end":46854,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"WalkerIter","qualname":"::visit::traversal::WalkerIter","value":"WalkerIter {  }","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161}],"decl_id":null,"docs":" A walker and its context wrapped into an iterator.\n","sig":null,"attributes":[{"value":"/ A walker and its context wrapped into an iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46754,"byte_end":46808,"line_start":372,"line_end":372,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46982,"byte_end":46989,"line_start":383,"line_end":383,"column_start":12,"column_end":19},"name":"context","qualname":"<WalkerIter<W, C>>::context","value":"pub fn context(&Self) -> C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47051,"byte_end":47060,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<WalkerIter<W, C>>::inner_ref","value":"pub fn inner_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47115,"byte_end":47124,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WalkerIter<W, C>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9130,"byte_end":9139,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"GraphBase","qualname":"::visit::GraphBase","value":"GraphBase","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3173}],"decl_id":null,"docs":" Base graph trait: defines the associated node identifier and\n edge identifier types.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9319,"byte_end":9325,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::GraphBase::EdgeId","value":"type EdgeId: Copy + PartialEq;","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" edge identifier\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9378,"byte_end":9384,"line_start":93,"line_end":93,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::GraphBase::NodeId","value":"type NodeId: Copy + PartialEq;","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" node identifier\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9543,"byte_end":9551,"line_start":101,"line_end":101,"column_start":11,"column_end":19},"name":"GraphRef","qualname":"::visit::GraphRef","value":"GraphRef: Copy + GraphBase","parent":null,"children":[],"decl_id":null,"docs":" A copyable reference to a graph.\n","sig":null,"attributes":[{"value":"/ A copyable reference to a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9496,"byte_end":9532,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10624,"byte_end":10637,"line_start":141,"line_end":141,"column_start":11,"column_end":24},"name":"IntoNeighbors","qualname":"::visit::IntoNeighbors","value":"IntoNeighbors: GraphRef","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187}],"decl_id":null,"docs":" Access to the neighbors of each node","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10678,"byte_end":10687,"line_start":143,"line_end":143,"column_start":10,"column_end":19},"name":"Neighbors","qualname":"::visit::IntoNeighbors::Neighbors","value":"type Neighbors: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10800,"byte_end":10809,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"neighbors","qualname":"::visit::IntoNeighbors::neighbors","value":"pub fn neighbors(Self, Self::NodeId) -> Self::Neighbors","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Return an iterator of the neighbors of node `a`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11290,"byte_end":11311,"line_start":161,"line_end":161,"column_start":11,"column_end":32},"name":"IntoNeighborsDirected","qualname":"::visit::IntoNeighborsDirected","value":"IntoNeighborsDirected: IntoNeighbors","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196}],"decl_id":null,"docs":" Access to the neighbors of each node, through incoming or outgoing edges.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11357,"byte_end":11374,"line_start":163,"line_end":163,"column_start":10,"column_end":27},"name":"NeighborsDirected","qualname":"::visit::IntoNeighborsDirected::NeighborsDirected","value":"type NeighborsDirected: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11430,"byte_end":11448,"line_start":165,"line_end":165,"column_start":8,"column_end":26},"name":"neighbors_directed","qualname":"::visit::IntoNeighborsDirected::neighbors_directed","value":"pub fn neighbors_directed(Self, Self::NodeId, Direction)\n-> Self::NeighborsDirected","parent":{"krate":0,"index":3194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13415,"byte_end":13424,"line_start":233,"line_end":233,"column_start":11,"column_end":20},"name":"IntoEdges","qualname":"::visit::IntoEdges","value":"IntoEdges: IntoEdgeReferences + IntoNeighbors","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200}],"decl_id":null,"docs":" Access to the edges of each node.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13491,"byte_end":13496,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Edges","qualname":"::visit::IntoEdges::Edges","value":"type Edges: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13553,"byte_end":13558,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"edges","qualname":"::visit::IntoEdges::edges","value":"pub fn edges(Self, Self::NodeId) -> Self::Edges","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14199,"byte_end":14216,"line_start":258,"line_end":258,"column_start":11,"column_end":28},"name":"IntoEdgesDirected","qualname":"::visit::IntoEdgesDirected","value":"IntoEdgesDirected: IntoEdges + IntoNeighborsDirected","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"decl_id":null,"docs":" Access to all edges of each node, in the specified direction.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14282,"byte_end":14295,"line_start":260,"line_end":260,"column_start":10,"column_end":23},"name":"EdgesDirected","qualname":"::visit::IntoEdgesDirected::EdgesDirected","value":"type EdgesDirected: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14352,"byte_end":14366,"line_start":262,"line_end":262,"column_start":8,"column_end":22},"name":"edges_directed","qualname":"::visit::IntoEdgesDirected::edges_directed","value":"pub fn edges_directed(Self, Self::NodeId, Direction) -> Self::EdgesDirected","parent":{"krate":0,"index":3207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14556,"byte_end":14575,"line_start":270,"line_end":270,"column_start":11,"column_end":30},"name":"IntoNodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers","value":"IntoNodeIdentifiers: GraphRef","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218}],"decl_id":null,"docs":" Access to the sequence of the graph’s `NodeId`s.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14616,"byte_end":14631,"line_start":272,"line_end":272,"column_start":10,"column_end":25},"name":"NodeIdentifiers","qualname":"::visit::IntoNodeIdentifiers::NodeIdentifiers","value":"type NodeIdentifiers: Iterator<Item=Self::NodeId>;","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14687,"byte_end":14703,"line_start":274,"line_end":274,"column_start":8,"column_end":24},"name":"node_identifiers","qualname":"::visit::IntoNodeIdentifiers::node_identifiers","value":"pub fn node_identifiers(Self) -> Self::NodeIdentifiers","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15901,"byte_end":15905,"line_start":324,"line_end":324,"column_start":11,"column_end":15},"name":"Data","qualname":"::visit::Data","value":"Data: GraphBase","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232}],"decl_id":null,"docs":" Define associated data for nodes and edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15947,"byte_end":15957,"line_start":326,"line_end":326,"column_start":10,"column_end":20},"name":"NodeWeight","qualname":"::visit::Data::NodeWeight","value":"type NodeWeight;","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3232},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15968,"byte_end":15978,"line_start":327,"line_end":327,"column_start":10,"column_end":20},"name":"EdgeWeight","qualname":"::visit::Data::EdgeWeight","value":"type EdgeWeight;","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16176,"byte_end":16183,"line_start":337,"line_end":337,"column_start":11,"column_end":18},"name":"EdgeRef","qualname":"::visit::EdgeRef","value":"EdgeRef: Copy","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"decl_id":null,"docs":" An edge reference.","sig":null,"attributes":[{"value":"/ An edge reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16062,"byte_end":16084,"line_start":334,"line_end":334,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16085,"byte_end":16088,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ Edge references are used by traits `IntoEdges` and `IntoEdgeReferences`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16089,"byte_end":16165,"line_start":336,"line_end":336,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":276},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16202,"byte_end":16208,"line_start":338,"line_end":338,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::EdgeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16219,"byte_end":16225,"line_start":339,"line_end":339,"column_start":10,"column_end":16},"name":"EdgeId","qualname":"::visit::EdgeRef::EdgeId","value":"type EdgeId;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16236,"byte_end":16242,"line_start":340,"line_end":340,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::EdgeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16288,"byte_end":16294,"line_start":342,"line_end":342,"column_start":8,"column_end":14},"name":"source","qualname":"::visit::EdgeRef::source","value":"pub fn source(&Self) -> Self::NodeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The source node of the edge.\n","sig":null,"attributes":[{"value":"/ The source node of the edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16248,"byte_end":16280,"line_start":341,"line_end":341,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16363,"byte_end":16369,"line_start":344,"line_end":344,"column_start":8,"column_end":14},"name":"target","qualname":"::visit::EdgeRef::target","value":"pub fn target(&Self) -> Self::NodeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The target node of the edge.\n","sig":null,"attributes":[{"value":"/ The target node of the edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16323,"byte_end":16355,"line_start":343,"line_end":343,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16448,"byte_end":16454,"line_start":346,"line_end":346,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::EdgeRef::weight","value":"pub fn weight(&Self) -> &Self::Weight","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" A reference to the weight of the edge.\n","sig":null,"attributes":[{"value":"/ A reference to the weight of the edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16398,"byte_end":16440,"line_start":345,"line_end":345,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16520,"byte_end":16522,"line_start":348,"line_end":348,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::EdgeRef::id","value":"pub fn id(&Self) -> Self::EdgeId","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The edge’s identifier.\n","sig":null,"attributes":[{"value":"/ The edge’s identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16484,"byte_end":16512,"line_start":347,"line_end":347,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16875,"byte_end":16882,"line_start":365,"line_end":365,"column_start":11,"column_end":18},"name":"NodeRef","qualname":"::visit::NodeRef","value":"NodeRef: Copy","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" A node reference.\n","sig":null,"attributes":[{"value":"/ A node reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16843,"byte_end":16864,"line_start":364,"line_end":364,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":295},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16901,"byte_end":16907,"line_start":366,"line_end":366,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::visit::NodeRef::NodeId","value":"type NodeId;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16918,"byte_end":16924,"line_start":367,"line_end":367,"column_start":10,"column_end":16},"name":"Weight","qualname":"::visit::NodeRef::Weight","value":"type Weight;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16933,"byte_end":16935,"line_start":368,"line_end":368,"column_start":8,"column_end":10},"name":"id","qualname":"::visit::NodeRef::id","value":"pub fn id(&Self) -> Self::NodeId","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16967,"byte_end":16973,"line_start":369,"line_end":369,"column_start":8,"column_end":14},"name":"weight","qualname":"::visit::NodeRef::weight","value":"pub fn weight(&Self) -> &Self::Weight","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17080,"byte_end":17098,"line_start":374,"line_end":374,"column_start":11,"column_end":29},"name":"IntoNodeReferences","qualname":"::visit::IntoNodeReferences","value":"IntoNodeReferences: Data + IntoNodeIdentifiers","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"decl_id":null,"docs":" Access to the sequence of the graph’s nodes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17157,"byte_end":17164,"line_start":376,"line_end":376,"column_start":10,"column_end":17},"name":"NodeRef","qualname":"::visit::IntoNodeReferences::NodeRef","value":"type NodeRef: NodeRef<NodeId=Self::NodeId, Weight=Self::NodeWeight>;","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17230,"byte_end":17244,"line_start":377,"line_end":377,"column_start":10,"column_end":24},"name":"NodeReferences","qualname":"::visit::IntoNodeReferences::NodeReferences","value":"type NodeReferences: Iterator<Item=Self::NodeRef>;","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17301,"byte_end":17316,"line_start":379,"line_end":379,"column_start":8,"column_end":23},"name":"node_references","qualname":"::visit::IntoNodeReferences::node_references","value":"pub fn node_references(Self) -> Self::NodeReferences","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17907,"byte_end":17925,"line_start":409,"line_end":409,"column_start":11,"column_end":29},"name":"IntoEdgeReferences","qualname":"::visit::IntoEdgeReferences","value":"IntoEdgeReferences: Data + GraphRef","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" Access to the sequence of the graph’s edges\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17973,"byte_end":17980,"line_start":411,"line_end":411,"column_start":10,"column_end":17},"name":"EdgeRef","qualname":"::visit::IntoEdgeReferences::EdgeRef","value":"type EdgeRef: EdgeRef<NodeId=Self::NodeId, EdgeId=Self::EdgeId,\n                          Weight=Self::EdgeWeight>;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18093,"byte_end":18107,"line_start":413,"line_end":413,"column_start":10,"column_end":24},"name":"EdgeReferences","qualname":"::visit::IntoEdgeReferences::EdgeReferences","value":"type EdgeReferences: Iterator<Item=Self::EdgeRef>;","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18164,"byte_end":18179,"line_start":415,"line_end":415,"column_start":8,"column_end":23},"name":"edge_references","qualname":"::visit::IntoEdgeReferences::edge_references","value":"pub fn edge_references(Self) -> Self::EdgeReferences","parent":{"krate":0,"index":3255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18524,"byte_end":18533,"line_start":432,"line_end":432,"column_start":11,"column_end":20},"name":"GraphProp","qualname":"::visit::GraphProp","value":"GraphProp: GraphBase","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268}],"decl_id":null,"docs":" Edge kind property (directed or undirected edges)\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18612,"byte_end":18620,"line_start":435,"line_end":435,"column_start":10,"column_end":18},"name":"EdgeType","qualname":"::visit::GraphProp::EdgeType","value":"type EdgeType: EdgeType;","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":" The kind edges in the graph.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18664,"byte_end":18675,"line_start":438,"line_end":438,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::visit::GraphProp::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19648,"byte_end":19661,"line_start":484,"line_end":484,"column_start":15,"column_end":28},"name":"NodeIndexable","qualname":"::visit::NodeIndexable","value":"NodeIndexable: GraphBase","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277}],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19825,"byte_end":19835,"line_start":488,"line_end":488,"column_start":12,"column_end":22},"name":"node_bound","qualname":"::visit::NodeIndexable::node_bound","value":"pub fn node_bound(&Self) -> usize","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Return an upper bound of the node indices in the graph\n (suitable for the size of a bitmap).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19915,"byte_end":19923,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"to_index","qualname":"::visit::NodeIndexable::to_index","value":"pub fn to_index(&Self, Self::NodeId) -> usize","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Convert `a` to an integer index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20015,"byte_end":20025,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"from_index","qualname":"::visit::NodeIndexable::from_index","value":"pub fn from_index(&Self, usize) -> Self::NodeId","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Convert `i` to a node index\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20174,"byte_end":20183,"line_start":500,"line_end":500,"column_start":11,"column_end":20},"name":"NodeCount","qualname":"::visit::NodeCount","value":"NodeCount: GraphBase","parent":null,"children":[{"krate":0,"index":3286}],"decl_id":null,"docs":" A graph with a known node count.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20223,"byte_end":20233,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"node_count","qualname":"::visit::NodeCount::node_count","value":"pub fn node_count(&Self) -> usize","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20489,"byte_end":20509,"line_start":513,"line_end":513,"column_start":11,"column_end":31},"name":"NodeCompactIndexable","qualname":"::visit::NodeCompactIndexable","value":"NodeCompactIndexable: NodeIndexable + NodeCount","parent":null,"children":[],"decl_id":null,"docs":" The graph’s `NodeId`s map to indices, in a range without holes.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21083,"byte_end":21091,"line_start":533,"line_end":533,"column_start":11,"column_end":19},"name":"VisitMap","qualname":"::visit::VisitMap","value":"VisitMap<N>","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" A mapping for storing the visited status for NodeId `N`.\n","sig":null,"attributes":[{"value":"/ A mapping for storing the visited status for NodeId `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21012,"byte_end":21072,"line_start":532,"line_end":532,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21210,"byte_end":21215,"line_start":537,"line_end":537,"column_start":8,"column_end":13},"name":"visit","qualname":"::visit::VisitMap::visit","value":"pub fn visit(&mut Self, N) -> bool","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Mark `a` as visited.","sig":null,"attributes":[{"value":"/ Mark `a` as visited.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21101,"byte_end":21125,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21130,"byte_end":21133,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Return **true** if this is the first visit, false otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21138,"byte_end":21202,"line_start":536,"line_end":536,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21302,"byte_end":21312,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"is_visited","qualname":"::visit::VisitMap::is_visited","value":"pub fn is_visited(&Self, &N) -> bool","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Return whether `a` has been visited before.\n","sig":null,"attributes":[{"value":"/ Return whether `a` has been visited before.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21247,"byte_end":21294,"line_start":539,"line_end":539,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22469,"byte_end":22478,"line_start":590,"line_end":590,"column_start":11,"column_end":20},"name":"Visitable","qualname":"::visit::Visitable","value":"Visitable: GraphBase","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300}],"decl_id":null,"docs":" A graph that can create a map that tracks the visited status of its nodes.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22552,"byte_end":22555,"line_start":593,"line_end":593,"column_start":10,"column_end":13},"name":"Map","qualname":"::visit::Visitable::Map","value":"type Map: VisitMap<Self::NodeId>;","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The associated map type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22639,"byte_end":22648,"line_start":596,"line_end":596,"column_start":8,"column_end":17},"name":"visit_map","qualname":"::visit::Visitable::visit_map","value":"pub fn visit_map(&Self) -> Self::Map","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" Create a new visitor map\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22757,"byte_end":22766,"line_start":598,"line_end":598,"column_start":8,"column_end":17},"name":"reset_map","qualname":"::visit::Visitable::reset_map","value":"pub fn reset_map(&Self, &mut Self::Map) -> ()","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" Reset the visitor map (and resize to new size of graph if needed)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24832,"byte_end":24850,"line_start":681,"line_end":681,"column_start":11,"column_end":29},"name":"GetAdjacencyMatrix","qualname":"::visit::GetAdjacencyMatrix","value":"GetAdjacencyMatrix: GraphBase","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311}],"decl_id":null,"docs":" Create or access the adjacency matrix of a graph.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24937,"byte_end":24946,"line_start":684,"line_end":684,"column_start":10,"column_end":19},"name":"AdjMatrix","qualname":"::visit::GetAdjacencyMatrix::AdjMatrix","value":"type AdjMatrix;","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" The associated adjacency matrix type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25009,"byte_end":25025,"line_start":687,"line_end":687,"column_start":8,"column_end":24},"name":"adjacency_matrix","qualname":"::visit::GetAdjacencyMatrix::adjacency_matrix","value":"pub fn adjacency_matrix(&Self) -> Self::AdjMatrix","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" Create the adjacency matrix\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25179,"byte_end":25190,"line_start":691,"line_end":691,"column_start":8,"column_end":19},"name":"is_adjacent","qualname":"::visit::GetAdjacencyMatrix::is_adjacent","value":"pub fn is_adjacent(&Self, &Self::AdjMatrix, Self::NodeId, Self::NodeId)\n-> bool","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":" Return true if there is an edge from `a` to `b`, false otherwise.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48738,"byte_end":48748,"line_start":26,"line_end":26,"column_start":11,"column_end":21},"name":"FilterNode","qualname":"::visit::filter::FilterNode","value":"FilterNode<N>","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" A graph filter for nodes.\n","sig":null,"attributes":[{"value":"/ A graph filter for nodes.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48698,"byte_end":48727,"line_start":25,"line_end":25,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48819,"byte_end":48831,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"include_node","qualname":"::visit::filter::FilterNode::include_node","value":"pub fn include_node(&Self, N) -> bool","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Return true to have the node be part of the graph\n","sig":null,"attributes":[{"value":"/ Return true to have the node be part of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48758,"byte_end":48811,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49520,"byte_end":49532,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"NodeFiltered","qualname":"::visit::filter::NodeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" A node-filtering graph adaptor.\n","sig":null,"attributes":[{"value":"/ A node-filtering graph adaptor.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49443,"byte_end":49478,"line_start":58,"line_end":58,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49539,"byte_end":49544,"line_start":60,"line_end":60,"column_start":31,"column_end":36},"name":"0","qualname":"::visit::filter::NodeFiltered::0","value":"G","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3323},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49546,"byte_end":49551,"line_start":60,"line_end":60,"column_start":38,"column_end":43},"name":"1","qualname":"::visit::filter::NodeFiltered::1","value":"F","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49726,"byte_end":49733,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<NodeFiltered<G, F>>::from_fn","value":"pub fn from_fn(G, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `NodeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[{"value":"/ Create an `NodeFiltered` adaptor from the closure `filter`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49651,"byte_end":49714,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50393,"byte_end":50414,"line_start":92,"line_end":92,"column_start":12,"column_end":33},"name":"NodeFilteredNeighbors","qualname":"::visit::filter::NodeFilteredNeighbors","value":"NodeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[{"value":"/ A filtered neighbors iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50347,"byte_end":50381,"line_start":91,"line_end":91,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":523},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52290,"byte_end":52307,"line_start":160,"line_end":160,"column_start":12,"column_end":29},"name":"NodeFilteredNodes","qualname":"::visit::filter::NodeFilteredNodes","value":"NodeFilteredNodes {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A filtered node references iterator.\n","sig":null,"attributes":[{"value":"/ A filtered node references iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52238,"byte_end":52278,"line_start":159,"line_end":159,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":544},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53304,"byte_end":53330,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"NodeFilteredEdgeReferences","qualname":"::visit::filter::NodeFilteredEdgeReferences","value":"NodeFilteredEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53262,"byte_end":53292,"line_start":198,"line_end":198,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":566},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54283,"byte_end":54300,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"NodeFilteredEdges","qualname":"::visit::filter::NodeFilteredEdges","value":"NodeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54241,"byte_end":54271,"line_start":235,"line_end":235,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":589},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55598,"byte_end":55608,"line_start":288,"line_end":288,"column_start":11,"column_end":21},"name":"FilterEdge","qualname":"::visit::filter::FilterEdge","value":"FilterEdge<Edge>","parent":null,"children":[{"krate":0,"index":591}],"decl_id":null,"docs":" A graph filter for edges\n","sig":null,"attributes":[{"value":"/ A graph filter for edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55559,"byte_end":55587,"line_start":287,"line_end":287,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55682,"byte_end":55694,"line_start":290,"line_end":290,"column_start":8,"column_end":20},"name":"include_edge","qualname":"::visit::filter::FilterEdge::include_edge","value":"pub fn include_edge(&Self, Edge) -> bool","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Return true to have the edge be part of the graph\n","sig":null,"attributes":[{"value":"/ Return true to have the edge be part of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55621,"byte_end":55674,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56217,"byte_end":56229,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"EdgeFiltered","qualname":"::visit::filter::EdgeFiltered","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-filtering graph adaptor.","sig":null,"attributes":[{"value":"/ An edge-filtering graph adaptor.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55858,"byte_end":55894,"line_start":301,"line_end":301,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55895,"byte_end":55898,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ The adaptor may filter out edges. The filter implements the trait","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55899,"byte_end":55968,"line_start":303,"line_end":303,"column_start":1,"column_end":70}},{"value":"/ `FilterEdge`. Closures of type `Fn(G::EdgeRef) -> bool` already","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55969,"byte_end":56036,"line_start":304,"line_end":304,"column_start":1,"column_end":68}},{"value":"/ implement this trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56037,"byte_end":56062,"line_start":305,"line_end":305,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56063,"byte_end":56066,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The filter may use edge source, target, id, and weight to select whether to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56067,"byte_end":56146,"line_start":307,"line_end":307,"column_start":1,"column_end":80}},{"value":"/ include the edge or not.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56147,"byte_end":56175,"line_start":308,"line_end":308,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56236,"byte_end":56241,"line_start":310,"line_end":310,"column_start":31,"column_end":36},"name":"0","qualname":"::visit::filter::EdgeFiltered::0","value":"G","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56243,"byte_end":56248,"line_start":310,"line_end":310,"column_start":38,"column_end":43},"name":"1","qualname":"::visit::filter::EdgeFiltered::1","value":"F","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56433,"byte_end":56440,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<EdgeFiltered<G, F>>::from_fn","value":"pub fn from_fn(G, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EdgeFiltered` adaptor from the closure `filter`.\n","sig":null,"attributes":[{"value":"/ Create an `EdgeFiltered` adaptor from the closure `filter`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56358,"byte_end":56421,"line_start":316,"line_end":316,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57030,"byte_end":57051,"line_start":341,"line_end":341,"column_start":12,"column_end":33},"name":"EdgeFilteredNeighbors","qualname":"::visit::filter::EdgeFilteredNeighbors","value":"EdgeFilteredNeighbors {  }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"decl_id":null,"docs":" A filtered neighbors iterator.\n","sig":null,"attributes":[{"value":"/ A filtered neighbors iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56984,"byte_end":57018,"line_start":340,"line_end":340,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58370,"byte_end":58387,"line_start":393,"line_end":393,"column_start":12,"column_end":29},"name":"EdgeFilteredEdges","qualname":"::visit::filter::EdgeFilteredEdges","value":"EdgeFilteredEdges {  }","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"decl_id":null,"docs":" A filtered edges iterator.\n","sig":null,"attributes":[{"value":"/ A filtered edges iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58328,"byte_end":58358,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59844,"byte_end":59852,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Reversed","qualname":"::visit::reversed::Reversed","value":"","parent":null,"children":[],"decl_id":null,"docs":" An edge-reversing graph adaptor.","sig":null,"attributes":[{"value":"/ An edge-reversing graph adaptor.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59703,"byte_end":59739,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59740,"byte_end":59743,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ All edges have the opposite direction with `Reversed`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59744,"byte_end":59802,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59856,"byte_end":59861,"line_start":28,"line_end":28,"column_start":24,"column_end":29},"name":"0","qualname":"::visit::reversed::Reversed::0","value":"G","parent":{"krate":0,"index":3414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60905,"byte_end":60926,"line_start":74,"line_end":74,"column_start":12,"column_end":33},"name":"ReversedEdgeReference","qualname":"::visit::reversed::ReversedEdgeReference","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reversed edge reference\n","sig":null,"attributes":[{"value":"/ A reversed edge reference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60834,"byte_end":60863,"line_start":72,"line_end":72,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61788,"byte_end":61810,"line_start":110,"line_end":110,"column_start":12,"column_end":34},"name":"ReversedEdgeReferences","qualname":"::visit::reversed::ReversedEdgeReferences","value":"ReversedEdgeReferences {  }","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" A reversed edge references iterator.\n","sig":null,"attributes":[{"value":"/ A reversed edge references iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61736,"byte_end":61776,"line_start":109,"line_end":109,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":4201},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3473},{"krate":0,"index":3478},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3491},{"krate":0,"index":728},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":741},{"krate":0,"index":748},{"krate":0,"index":755},{"krate":0,"index":762},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":792},{"krate":0,"index":798},{"krate":0,"index":804},{"krate":0,"index":3495},{"krate":0,"index":3523},{"krate":0,"index":3519},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":816},{"krate":0,"index":823},{"krate":0,"index":830},{"krate":0,"index":836},{"krate":0,"index":841},{"krate":0,"index":845},{"krate":0,"index":852}],"decl_id":null,"docs":" Graph traits for associated data and graph construction.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1195,"byte_end":1207,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/ Graph traits for associated data and graph construction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62517,"byte_end":62577,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62926,"byte_end":62933,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"DataMap","qualname":"::data::DataMap","value":"DataMap: Data","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" Access node and edge weights (associated data).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62968,"byte_end":62979,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"node_weight","qualname":"::data::DataMap::node_weight","value":"pub fn node_weight(&Self, Self::NodeId) -> Option<&Self::NodeWeight>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63048,"byte_end":63059,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"edge_weight","qualname":"::data::DataMap::edge_weight","value":"pub fn edge_weight(&Self, Self::EdgeId) -> Option<&Self::EdgeWeight>","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63395,"byte_end":63405,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"DataMapMut","qualname":"::data::DataMapMut","value":"DataMapMut: DataMap","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485}],"decl_id":null,"docs":" Access node and edge weights mutably.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63443,"byte_end":63458,"line_start":41,"line_end":41,"column_start":8,"column_end":23},"name":"node_weight_mut","qualname":"::data::DataMapMut::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, Self::NodeId)\n-> Option<&mut Self::NodeWeight>","parent":{"krate":0,"index":3483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63535,"byte_end":63550,"line_start":42,"line_end":42,"column_start":8,"column_end":23},"name":"edge_weight_mut","qualname":"::data::DataMapMut::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, Self::EdgeId)\n-> Option<&mut Self::EdgeWeight>","parent":{"krate":0,"index":3483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":728},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63820,"byte_end":63825,"line_start":50,"line_end":50,"column_start":11,"column_end":16},"name":"Build","qualname":"::data::Build","value":"Build: Data + NodeCount","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":" A graph that can be extended with further nodes and edges\n","sig":null,"attributes":[{"value":"/ A graph that can be extended with further nodes and edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63748,"byte_end":63809,"line_start":49,"line_end":49,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63854,"byte_end":63862,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"add_node","qualname":"::data::Build::add_node","value":"pub fn add_node(&mut Self, Self::NodeWeight) -> Self::NodeId","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64046,"byte_end":64054,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"add_edge","qualname":"::data::Build::add_edge","value":"pub fn add_edge(&mut Self, Self::NodeId, Self::NodeId, Self::EdgeWeight)\n-> Option<Self::EdgeId>","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Add a new edge. If parallel edges (duplicate) are not allowed and\n the edge already exists, return `None`.\n","sig":null,"attributes":[{"value":"/ Add a new edge. If parallel edges (duplicate) are not allowed and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63921,"byte_end":63990,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ the edge already exists, return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63995,"byte_end":64038,"line_start":53,"line_end":53,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64350,"byte_end":64361,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"update_edge","qualname":"::data::Build::update_edge","value":"pub fn update_edge(&mut Self, Self::NodeId, Self::NodeId, Self::EdgeWeight)\n-> Self::EdgeId","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" Add or update the edge from `a` to `b`. Return the id of the affected\n edge.\n","sig":null,"attributes":[{"value":"/ Add or update the edge from `a` to `b`. Return the id of the affected","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64255,"byte_end":64328,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64333,"byte_end":64342,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":732},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64552,"byte_end":64558,"line_start":69,"line_end":69,"column_start":11,"column_end":17},"name":"Create","qualname":"::data::Create","value":"Create: Build + Default","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" A graph that can be created\n","sig":null,"attributes":[{"value":"/ A graph that can be created","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64510,"byte_end":64541,"line_start":68,"line_end":68,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64586,"byte_end":64599,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::data::Create::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69383,"byte_end":69387,"line_start":246,"line_end":246,"column_start":5,"column_end":9},"name":"Node","qualname":"::data::Element::Node","value":"Element::Node { weight }","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":" A graph node.\n","sig":null,"attributes":[{"value":"/ A graph node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69361,"byte_end":69378,"line_start":245,"line_end":245,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69442,"byte_end":69446,"line_start":250,"line_end":250,"column_start":5,"column_end":9},"name":"Edge","qualname":"::data::Element::Edge","value":"Element::Edge { source, target, weight }","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":" A graph edge.\n","sig":null,"attributes":[{"value":"/ A graph edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69420,"byte_end":69437,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69341,"byte_end":69348,"line_start":244,"line_end":244,"column_start":10,"column_end":17},"name":"Element","qualname":"::data::Element","value":"pub enum Element<N, E> {\n\n    /// A graph node.\n    Node {\n        weight: N,\n    },\n\n    /// A graph edge.\n    Edge {\n        source: usize,\n        target: usize,\n        weight: E,\n    },\n}","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3500}],"decl_id":null,"docs":" A graph element.","sig":null,"attributes":[{"value":"/ A graph element.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69047,"byte_end":69067,"line_start":238,"line_end":238,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69068,"byte_end":69071,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ A sequence of Elements, for example an iterator, is laid out as follows:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69072,"byte_end":69148,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ Nodes are implicitly given the index of their appearance in the sequence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69149,"byte_end":69226,"line_start":241,"line_end":241,"column_start":1,"column_end":78}},{"value":"/ The edges’ source and target fields refer to these indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69227,"byte_end":69292,"line_start":242,"line_end":242,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":809},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69582,"byte_end":69594,"line_start":258,"line_end":258,"column_start":11,"column_end":23},"name":"FromElements","qualname":"::data::FromElements","value":"FromElements: Create","parent":null,"children":[{"krate":0,"index":810}],"decl_id":null,"docs":" Create a graph from an iterator of elements.\n","sig":null,"attributes":[{"value":"/ Create a graph from an iterator of elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69523,"byte_end":69571,"line_start":257,"line_end":257,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69613,"byte_end":69626,"line_start":259,"line_end":259,"column_start":8,"column_end":21},"name":"from_elements","qualname":"::data::FromElements::from_elements","value":"pub fn from_elements<I>(I) -> Self where Self: Sized, I: IntoIterator<Item =\nElement<Self::NodeWeight, Self::EdgeWeight>>","parent":{"krate":0,"index":809},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":836},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71954,"byte_end":71969,"line_start":341,"line_end":341,"column_start":11,"column_end":26},"name":"ElementIterator","qualname":"::data::ElementIterator","value":"ElementIterator<N, E>: Iterator<Item = Element<N, E>>","parent":null,"children":[{"krate":0,"index":839}],"decl_id":null,"docs":" Iterator adaptors for iterators of `Element`.\n","sig":null,"attributes":[{"value":"/ Iterator adaptors for iterators of `Element`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71894,"byte_end":71943,"line_start":340,"line_end":340,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72520,"byte_end":72535,"line_start":351,"line_end":351,"column_start":8,"column_end":23},"name":"filter_elements","qualname":"::data::ElementIterator::filter_elements","value":"pub fn filter_elements<F>(Self, F) -> FilterElements<Self, F> where\nSelf: Sized, F: FnMut(Element<&mut N, &mut E>) -> bool","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" Create an iterator adaptor that filters graph elements.","sig":null,"attributes":[{"value":"/ Create an iterator adaptor that filters graph elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72013,"byte_end":72072,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72077,"byte_end":72080,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The function `f` is called with each element and if its return value","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72085,"byte_end":72157,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ is `true` the element is accepted and if `false` it is removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72162,"byte_end":72229,"line_start":345,"line_end":345,"column_start":5,"column_end":72}},{"value":"/ `f` is called with mutable references to the node and edge weights,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72234,"byte_end":72305,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ so that they can be mutated (but the edge endpoints can not).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72310,"byte_end":72375,"line_start":347,"line_end":347,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72380,"byte_end":72383,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This filter adapts the edge source and target indices in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72388,"byte_end":72452,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/ stream so that they are correct after the removals.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72457,"byte_end":72512,"line_start":350,"line_end":350,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":845},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73086,"byte_end":73100,"line_start":372,"line_end":372,"column_start":12,"column_end":26},"name":"FilterElements","qualname":"::data::FilterElements","value":"FilterElements {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"decl_id":null,"docs":" An iterator that filters graph elements.","sig":null,"attributes":[{"value":"/ An iterator that filters graph elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72907,"byte_end":72951,"line_start":367,"line_end":367,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72952,"byte_end":72955,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ See [`.filter_elements()`][1] for more information.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72956,"byte_end":73011,"line_start":369,"line_end":369,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73012,"byte_end":73015,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ [1]: trait.ElementIterator.html#method.filter_elements","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73016,"byte_end":73074,"line_start":371,"line_end":371,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":859},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"algo","qualname":"::algo","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":4225},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":4251},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":949},{"krate":0,"index":3538},{"krate":0,"index":3546},{"krate":0,"index":3542},{"krate":0,"index":951},{"krate":0,"index":956},{"krate":0,"index":960},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":989},{"krate":0,"index":3570},{"krate":0,"index":3583},{"krate":0,"index":3580},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":993},{"krate":0,"index":3586},{"krate":0,"index":3595},{"krate":0,"index":3593},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":4279},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010}],"decl_id":null,"docs":" Graph algorithms.","sig":null,"attributes":[{"value":"/ Graph algorithms.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75277,"byte_end":75298,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75299,"byte_end":75302,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ It is a goal to gradually migrate the algorithms to be based on graph traits","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75303,"byte_end":75383,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ so that they are generally applicable. For now, some of these still require","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75384,"byte_end":75463,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ the `Graph` type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75464,"byte_end":75485,"line_start":5,"line_end":5,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":860},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dominators","qualname":"::algo::dominators","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":4207},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":3527},{"krate":0,"index":3534},{"krate":0,"index":3531},{"krate":0,"index":871},{"krate":0,"index":877},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":900}],"decl_id":null,"docs":" Compute dominators of a control-flow graph.","sig":null,"attributes":[{"value":"/ Compute dominators of a control-flow graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94244,"byte_end":94291,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94292,"byte_end":94295,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # The Dominance Relation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94296,"byte_end":94324,"line_start":3,"line_end":3,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94325,"byte_end":94328,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ In a directed graph with a root node **R**, a node **A** is said to *dominate* a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94329,"byte_end":94413,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ node **B** iff every path from **R** to **B** contains **A**.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94414,"byte_end":94479,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94480,"byte_end":94483,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The node **A** is said to *strictly dominate* the node **B** iff **A** dominates","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94484,"byte_end":94568,"line_start":8,"line_end":8,"column_start":1,"column_end":85}},{"value":"/ **B** and **A ≠ B**.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94569,"byte_end":94595,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94596,"byte_end":94599,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The node **A** is said to be the *immediate dominator* of a node **B** iff it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94600,"byte_end":94681,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ strictly dominates **B** and there does not exist any node **C** where **A**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94682,"byte_end":94762,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ dominates **C** and **C** dominates **B**.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94763,"byte_end":94809,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95035,"byte_end":95045,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"Dominators","qualname":"::algo::dominators::Dominators","value":"Dominators {  }","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":3530}],"decl_id":null,"docs":" The dominance relation for some graph and root.\n","sig":null,"attributes":[{"value":"/ The dominance relation for some graph and root.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":94948,"byte_end":94999,"line_start":20,"line_end":20,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95264,"byte_end":95268,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"root","qualname":"<Dominators<N>>::root","value":"pub fn root(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Get the root node used to construct these dominance relations.\n","sig":null,"attributes":[{"value":"/ Get the root node used to construct these dominance relations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95186,"byte_end":95252,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95488,"byte_end":95507,"line_start":41,"line_end":41,"column_start":12,"column_end":31},"name":"immediate_dominator","qualname":"<Dominators<N>>::immediate_dominator","value":"pub fn immediate_dominator(&Self, N) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Get the immediate dominator of the given node.","sig":null,"attributes":[{"value":"/ Get the immediate dominator of the given node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95312,"byte_end":95362,"line_start":37,"line_end":37,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95367,"byte_end":95370,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Returns `None` for any node that is not reachable from the root, and for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95375,"byte_end":95451,"line_start":39,"line_end":39,"column_start":5,"column_end":81}},{"value":"/ the root itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95456,"byte_end":95476,"line_start":40,"line_end":40,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95841,"byte_end":95858,"line_start":53,"line_end":53,"column_start":12,"column_end":29},"name":"strict_dominators","qualname":"<Dominators<N>>::strict_dominators","value":"pub fn strict_dominators(&Self, N) -> Option<DominatorsIter<, N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the given node's that strict dominators.","sig":null,"attributes":[{"value":"/ Iterate over the given node's that strict dominators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95673,"byte_end":95730,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95735,"byte_end":95738,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the given node is not reachable from the root, then `None` is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95743,"byte_end":95811,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95816,"byte_end":95829,"line_start":52,"line_end":52,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96352,"byte_end":96362,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"dominators","qualname":"<Dominators<N>>::dominators","value":"pub fn dominators(&Self, N) -> Option<DominatorsIter<, N>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all of the given node's dominators (including the given\n node itself).","sig":null,"attributes":[{"value":"/ Iterate over all of the given node's dominators (including the given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96147,"byte_end":96219,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ node itself).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96224,"byte_end":96241,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96246,"byte_end":96249,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ If the given node is not reachable from the root, then `None` is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96254,"byte_end":96322,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96327,"byte_end":96340,"line_start":68,"line_end":68,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":877},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96678,"byte_end":96692,"line_start":82,"line_end":82,"column_start":12,"column_end":26},"name":"DominatorsIter","qualname":"::algo::dominators::DominatorsIter","value":"DominatorsIter {  }","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" Iterator for a node's dominators.\n","sig":null,"attributes":[{"value":"/ Iterator for a node's dominators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96629,"byte_end":96666,"line_start":81,"line_end":81,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":888},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97718,"byte_end":97729,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"simple_fast","qualname":"::algo::dominators::simple_fast","value":"pub fn simple_fast<G>(G, G::NodeId) -> Dominators<G::NodeId> where\nG: IntoNeighbors + Visitable, <G as GraphBase>::NodeId: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" This is an implementation of the engineered [\"Simple, Fast Dominance\n Algorithm\"][0] discovered by Cooper et al.","sig":null,"attributes":[{"value":"/ This is an implementation of the engineered [\"Simple, Fast Dominance","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97261,"byte_end":97333,"line_start":107,"line_end":107,"column_start":1,"column_end":73}},{"value":"/ Algorithm\"][0] discovered by Cooper et al.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97334,"byte_end":97380,"line_start":108,"line_end":108,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97381,"byte_end":97384,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This algorithm is **O(|V|²)**, and therefore has slower theoretical running time","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97385,"byte_end":97470,"line_start":110,"line_end":110,"column_start":1,"column_end":85}},{"value":"/ than the Lenguaer-Tarjan algorithm (which is **O(|E| log |V|)**. However,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97471,"byte_end":97548,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ Cooper et al found it to be faster in practice on control flow graphs of up","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97549,"byte_end":97628,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ to ~30,000 vertices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97629,"byte_end":97653,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97654,"byte_end":97657,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [0]: http://www.cs.rice.edu/~keith/EMBED/dom.pdf","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":97658,"byte_end":97710,"line_start":115,"line_end":115,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76340,"byte_end":76360,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"connected_components","qualname":"::algo::connected_components","value":"pub fn connected_components<G>(G) -> usize where G: NodeCompactIndexable +\nIntoEdgeReferences","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return the number of connected components of the graph.","sig":null,"attributes":[{"value":"/ [Generic] Return the number of connected components of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76190,"byte_end":76259,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76260,"byte_end":76263,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ For a directed graph, this is the *weakly* connected components.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76264,"byte_end":76332,"line_start":51,"line_end":51,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76934,"byte_end":76954,"line_start":72,"line_end":72,"column_start":8,"column_end":28},"name":"is_cyclic_undirected","qualname":"::algo::is_cyclic_undirected","value":"pub fn is_cyclic_undirected<G>(G) -> bool where G: NodeIndexable +\nIntoEdgeReferences","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input graph contains a cycle.","sig":null,"attributes":[{"value":"/ [Generic] Return `true` if the input graph contains a cycle.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76806,"byte_end":76870,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76871,"byte_end":76874,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Always treats the input graph as if undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":76875,"byte_end":76926,"line_start":71,"line_end":71,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77918,"byte_end":77926,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"toposort","qualname":"::algo::toposort","value":"pub fn toposort<G>(G, Option<&mut DfsSpace<G::NodeId, G::Map>>)\n-> Result<Vec<G::NodeId>, Cycle<G::NodeId>> where G: IntoNeighborsDirected +\nIntoNodeIdentifiers + Visitable","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Perform a topological sort of a directed graph.","sig":null,"attributes":[{"value":"/ [Generic] Perform a topological sort of a directed graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77397,"byte_end":77458,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77459,"byte_end":77462,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ If the graph was acyclic, return a vector of nodes in topological order:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77463,"byte_end":77539,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ each node is ordered before its successors.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77540,"byte_end":77587,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/ Otherwise, it will return a `Cycle` error. Self loops are also cycles.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77588,"byte_end":77662,"line_start":93,"line_end":93,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77663,"byte_end":77666,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ To handle graphs with cycles, use the scc algorithms or `DfsPostOrder`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77667,"byte_end":77741,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ instead of this function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77742,"byte_end":77771,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77772,"byte_end":77775,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ If `space` is not `None`, it is used instead of creating a new workspace for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77776,"byte_end":77856,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/ graph traversal. The implementation is iterative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":77857,"byte_end":77910,"line_start":99,"line_end":99,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":943},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79838,"byte_end":79856,"line_start":158,"line_end":158,"column_start":8,"column_end":26},"name":"is_cyclic_directed","qualname":"::algo::is_cyclic_directed","value":"pub fn is_cyclic_directed<G>(G) -> bool where G: IntoNodeIdentifiers +\nIntoNeighbors + Visitable","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Return `true` if the input directed graph contains a cycle.","sig":null,"attributes":[{"value":"/ [Generic] Return `true` if the input directed graph contains a cycle.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79667,"byte_end":79740,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79741,"byte_end":79744,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This implementation is recursive; use `toposort` if an alternative is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79745,"byte_end":79818,"line_start":156,"line_end":156,"column_start":1,"column_end":74}},{"value":"/ needed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":79819,"byte_end":79830,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80324,"byte_end":80332,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"DfsSpace","qualname":"::algo::DfsSpace","value":"DfsSpace {  }","parent":null,"children":[{"krate":0,"index":3541}],"decl_id":null,"docs":" Workspace for a graph traversal.\n","sig":null,"attributes":[{"value":"/ Workspace for a graph traversal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80252,"byte_end":80288,"line_start":173,"line_end":173,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80465,"byte_end":80468,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<DfsSpace<N, VM>>::new","value":"pub fn new<G>(G) -> Self where G: GraphRef + Visitable<NodeId = N, Map = N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":964},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81513,"byte_end":81532,"line_start":224,"line_end":224,"column_start":8,"column_end":27},"name":"has_path_connecting","qualname":"::algo::has_path_connecting","value":"pub fn has_path_connecting<G>(G, G::NodeId, G::NodeId,\n                              Option<&mut DfsSpace<G::NodeId, G::Map>>)\n-> bool where G: IntoNeighbors + Visitable","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Check if there exists a path starting at `from` and reaching `to`.","sig":null,"attributes":[{"value":"/ [Generic] Check if there exists a path starting at `from` and reaching `to`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81253,"byte_end":81333,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81334,"byte_end":81337,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ If `from` and `to` are equal, this function returns true.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81338,"byte_end":81399,"line_start":220,"line_end":220,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81400,"byte_end":81403,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ If `space` is not `None`, it is used instead of creating a new workspace for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81404,"byte_end":81484,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ graph traversal.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81485,"byte_end":81505,"line_start":223,"line_end":223,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":967},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82017,"byte_end":82020,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"scc","qualname":"::algo::scc","value":"pub fn scc<G>(G) -> Vec<Vec<G::NodeId>> where G: IntoNeighborsDirected +\nVisitable + IntoNodeIdentifiers","parent":null,"children":[],"decl_id":null,"docs":" Renamed to `kosaraju_scc`.\n","sig":null,"attributes":[{"value":"/ Renamed to `kosaraju_scc`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81931,"byte_end":81961,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"deprecated(note = \"renamed to kosaraju_scc\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":81962,"byte_end":82009,"line_start":242,"line_end":242,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":969},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82685,"byte_end":82697,"line_start":260,"line_end":260,"column_start":8,"column_end":20},"name":"kosaraju_scc","qualname":"::algo::kosaraju_scc","value":"pub fn kosaraju_scc<G>(G) -> Vec<Vec<G::NodeId>> where\nG: IntoNeighborsDirected + Visitable + IntoNodeIdentifiers","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","sig":null,"attributes":[{"value":"/ [Generic] Compute the *strongly connected components* using [Kosaraju's algorithm][1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82148,"byte_end":82238,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82239,"byte_end":82242,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Kosaraju%27s_algorithm","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82243,"byte_end":82304,"line_start":251,"line_end":251,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82305,"byte_end":82308,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Return a vector where each element is a strongly connected component (scc).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82309,"byte_end":82388,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ The order of node ids within each scc is arbitrary, but the order of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82389,"byte_end":82461,"line_start":254,"line_end":254,"column_start":1,"column_end":73}},{"value":"/ the sccs is their postorder (reverse topological sort).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82462,"byte_end":82521,"line_start":255,"line_end":255,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82522,"byte_end":82525,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ For an undirected graph, the sccs are simply the connected components.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82526,"byte_end":82600,"line_start":257,"line_end":257,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82601,"byte_end":82604,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This implementation is iterative and does two passes over the nodes.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":82605,"byte_end":82677,"line_start":259,"line_end":259,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":971},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84331,"byte_end":84341,"line_start":311,"line_end":311,"column_start":8,"column_end":18},"name":"tarjan_scc","qualname":"::algo::tarjan_scc","value":"pub fn tarjan_scc<G>(G) -> Vec<Vec<G::NodeId>> where G: IntoNodeIdentifiers +\nIntoNeighbors + NodeIndexable","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute the *strongly connected components* using [Tarjan's algorithm][1].","sig":null,"attributes":[{"value":"/ [Generic] Compute the *strongly connected components* using [Tarjan's algorithm][1].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":83770,"byte_end":83858,"line_start":300,"line_end":300,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":83859,"byte_end":83862,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":83863,"byte_end":83952,"line_start":302,"line_end":302,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":83953,"byte_end":83956,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ Return a vector where each element is a strongly connected component (scc).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":83957,"byte_end":84036,"line_start":304,"line_end":304,"column_start":1,"column_end":80}},{"value":"/ The order of node ids within each scc is arbitrary, but the order of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84037,"byte_end":84109,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ the sccs is their postorder (reverse topological sort).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84110,"byte_end":84169,"line_start":306,"line_end":306,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84170,"byte_end":84173,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ For an undirected graph, the sccs are simply the connected components.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84174,"byte_end":84248,"line_start":308,"line_end":308,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84249,"byte_end":84252,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This implementation is recursive and does one pass over the nodes.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":84253,"byte_end":84323,"line_start":310,"line_end":310,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":976},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":87071,"byte_end":87083,"line_start":405,"line_end":405,"column_start":8,"column_end":20},"name":"condensation","qualname":"::algo::condensation","value":"pub fn condensation<N, E, Ty, Ix>(Graph<N, E, Ty, Ix>, bool)\n-> Graph<Vec<N>, E, Ty, Ix> where Ty: EdgeType, Ix: IndexType","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Condense every strongly connected component into a single node and return the result.","sig":null,"attributes":[{"value":"/ [Graph] Condense every strongly connected component into a single node and return the result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":86846,"byte_end":86943,"line_start":401,"line_end":401,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":86944,"byte_end":86947,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ If `make_acyclic` is true, self-loops and multi edges are ignored, guaranteeing that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":86948,"byte_end":87036,"line_start":403,"line_end":403,"column_start":1,"column_end":89}},{"value":"/ the output is acyclic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":87037,"byte_end":87063,"line_start":404,"line_end":404,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":981},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88831,"byte_end":88848,"line_start":452,"line_end":452,"column_start":8,"column_end":25},"name":"min_spanning_tree","qualname":"::algo::min_spanning_tree","value":"pub fn min_spanning_tree<G>(G) -> MinSpanningTree<G> where\nG::NodeWeight: Clone, G::EdgeWeight: Clone + PartialOrd,\nG: IntoNodeReferences + IntoEdgeReferences + NodeIndexable","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute a *minimum spanning tree* of a graph.","sig":null,"attributes":[{"value":"/ [Generic] Compute a *minimum spanning tree* of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88259,"byte_end":88318,"line_start":440,"line_end":440,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88319,"byte_end":88322,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ The input graph is treated as if undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88323,"byte_end":88371,"line_start":442,"line_end":442,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88372,"byte_end":88375,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ Using Kruskal's algorithm with runtime **O(|E| log |E|)**. We actually","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88376,"byte_end":88450,"line_start":444,"line_end":444,"column_start":1,"column_end":75}},{"value":"/ return a minimum spanning forest, i.e. a minimum spanning tree for each connected","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88451,"byte_end":88536,"line_start":445,"line_end":445,"column_start":1,"column_end":86}},{"value":"/ component of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88537,"byte_end":88564,"line_start":446,"line_end":446,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88565,"byte_end":88568,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ The resulting graph has all the vertices of the input graph (with identical node indices),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88569,"byte_end":88663,"line_start":448,"line_end":448,"column_start":1,"column_end":95}},{"value":"/ and **|V| - c** edges, where **c** is the number of connected components in `g`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88664,"byte_end":88748,"line_start":449,"line_end":449,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88749,"byte_end":88752,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ Use `from_elements` to create a graph from the resulting iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":88753,"byte_end":88823,"line_start":451,"line_end":451,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":983},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89687,"byte_end":89702,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"MinSpanningTree","qualname":"::algo::MinSpanningTree","value":"MinSpanningTree {  }","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"decl_id":null,"docs":" An iterator producing a minimum spanning forest of a graph.\n","sig":null,"attributes":[{"value":"/ An iterator producing a minimum spanning forest of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89612,"byte_end":89675,"line_start":477,"line_end":477,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91324,"byte_end":91329,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::algo::Cycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle was found in the graph.\n","sig":null,"attributes":[{"value":"/ An algorithm error: a cycle was found in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91222,"byte_end":91277,"line_start":527,"line_end":527,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91424,"byte_end":91431,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"node_id","qualname":"<Cycle<N>>::node_id","value":"pub fn node_id(&Self) -> N where N: Copy","parent":null,"children":[],"decl_id":null,"docs":" Return a node id that participates in the cycle\n","sig":null,"attributes":[{"value":"/ Return a node id that participates in the cycle","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91361,"byte_end":91412,"line_start":532,"line_end":532,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91617,"byte_end":91630,"line_start":541,"line_end":541,"column_start":12,"column_end":25},"name":"NegativeCycle","qualname":"::algo::NegativeCycle","value":"","parent":null,"children":[],"decl_id":null,"docs":" An algorithm error: a cycle of negative weights was found in the graph.\n","sig":null,"attributes":[{"value":"/ An algorithm error: a cycle of negative weights was found in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91495,"byte_end":91570,"line_start":539,"line_end":539,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92173,"byte_end":92185,"line_start":554,"line_end":554,"column_start":8,"column_end":20},"name":"bellman_ford","qualname":"::algo::bellman_ford","value":"pub fn bellman_ford<G>(G, G::NodeId)\n-> Result<(Vec<G::EdgeWeight>, Vec<Option<G::NodeId>>), NegativeCycle> where\nG: NodeCount + IntoNodeIdentifiers + IntoEdges + NodeIndexable,\nG::EdgeWeight: FloatMeasure","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Compute shortest paths from node `source` to all other.","sig":null,"attributes":[{"value":"/ [Generic] Compute shortest paths from node `source` to all other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91637,"byte_end":91706,"line_start":543,"line_end":543,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91707,"byte_end":91710,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ Using the [Bellman–Ford algorithm][bf]; negative edge costs are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91711,"byte_end":91780,"line_start":545,"line_end":545,"column_start":1,"column_end":68}},{"value":"/ permitted, but the graph must not have a cycle of negative weights","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91781,"byte_end":91851,"line_start":546,"line_end":546,"column_start":1,"column_end":71}},{"value":"/ (in that case it will return an error).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91852,"byte_end":91895,"line_start":547,"line_end":547,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91896,"byte_end":91899,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ On success, return one vec with path costs, and another one which points","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91900,"byte_end":91976,"line_start":549,"line_end":549,"column_start":1,"column_end":77}},{"value":"/ out the predecessor of a node along a shortest path. The vectors","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91977,"byte_end":92045,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ are indexed by the graph's node indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92046,"byte_end":92090,"line_start":551,"line_end":551,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92091,"byte_end":92094,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ [bf]: https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":92095,"byte_end":92165,"line_start":553,"line_end":553,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93752,"byte_end":93759,"line_start":604,"line_end":604,"column_start":11,"column_end":18},"name":"Measure","qualname":"::algo::Measure","value":"Measure: Debug + PartialOrd + Add<Self, Output = Self> + Default + Clone","parent":null,"children":[],"decl_id":null,"docs":" Associated data that can be used for measures (such as length).\n","sig":null,"attributes":[{"value":"/ Associated data that can be used for measures (such as length).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93674,"byte_end":93741,"line_start":603,"line_end":603,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93966,"byte_end":93978,"line_start":612,"line_end":612,"column_start":11,"column_end":23},"name":"FloatMeasure","qualname":"::algo::FloatMeasure","value":"FloatMeasure: Measure + Copy","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006}],"decl_id":null,"docs":" A floating-point measure.\n","sig":null,"attributes":[{"value":"/ A floating-point measure.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93926,"byte_end":93955,"line_start":611,"line_end":611,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94005,"byte_end":94009,"line_start":613,"line_end":613,"column_start":8,"column_end":12},"name":"zero","qualname":"::algo::FloatMeasure::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":94028,"byte_end":94036,"line_start":614,"line_end":614,"column_start":8,"column_end":16},"name":"infinite","qualname":"::algo::FloatMeasure::infinite","value":"pub fn infinite() -> Self","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"graphmap","qualname":"::graphmap","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":4285},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":4303},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":4321},{"krate":0,"index":1041},{"krate":0,"index":4323},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":3597},{"krate":0,"index":3604},{"krate":0,"index":1060},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":3609},{"krate":0,"index":3621},{"krate":0,"index":3619},{"krate":0,"index":3617},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1107},{"krate":0,"index":1114},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":1122},{"krate":0,"index":1128},{"krate":0,"index":1136},{"krate":0,"index":1143},{"krate":0,"index":1151},{"krate":0,"index":1159},{"krate":0,"index":1166},{"krate":0,"index":1174},{"krate":0,"index":1181},{"krate":0,"index":1194},{"krate":0,"index":1201},{"krate":0,"index":1208},{"krate":0,"index":1222},{"krate":0,"index":1229},{"krate":0,"index":1236},{"krate":0,"index":1242},{"krate":0,"index":1247},{"krate":0,"index":1252},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":1274},{"krate":0,"index":1278},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1307},{"krate":0,"index":1315},{"krate":0,"index":1323},{"krate":0,"index":1331},{"krate":0,"index":1339},{"krate":0,"index":1347},{"krate":0,"index":1354}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure where node values are mapping\n keys.\n","sig":null,"attributes":[{"value":"cfg(feature = \"graphmap\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1284,"byte_end":1312,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ `GraphMap<N, E, Ty>` is a graph datastructure where node values are mapping","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":102885,"byte_end":102964,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ keys.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":102965,"byte_end":102974,"line_start":2,"line_end":2,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103802,"byte_end":103812,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"UnGraphMap","qualname":"::graphmap::UnGraphMap","value":"GraphMap<N, E, Undirected>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with undirected edges.","sig":null,"attributes":[{"value":"/ A `GraphMap` with undirected edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103654,"byte_end":103693,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103694,"byte_end":103697,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103698,"byte_end":103775,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103776,"byte_end":103792,"line_start":41,"line_end":41,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103987,"byte_end":103997,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"DiGraphMap","qualname":"::graphmap::DiGraphMap","value":"GraphMap<N, E, Directed>","parent":null,"children":[],"decl_id":null,"docs":" A `GraphMap` with directed edges.","sig":null,"attributes":[{"value":"/ A `GraphMap` with directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103849,"byte_end":103886,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103887,"byte_end":103890,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103891,"byte_end":103968,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":103969,"byte_end":103977,"line_start":46,"line_end":46,"column_start":1,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105183,"byte_end":105191,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"GraphMap","qualname":"::graphmap::GraphMap","value":"GraphMap {  }","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3603}],"decl_id":null,"docs":" `GraphMap<N, E, Ty>` is a graph datastructure using an associative array\n of its node weights `N`.","sig":null,"attributes":[{"value":"/ `GraphMap<N, E, Ty>` is a graph datastructure using an associative array","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104033,"byte_end":104109,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ of its node weights `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104110,"byte_end":104138,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104139,"byte_end":104142,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ It uses an combined adjacency list and sparse adjacency matrix","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104143,"byte_end":104209,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ representation, using **O(|V| + |E|)** space, and allows testing for edge","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104210,"byte_end":104287,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ existance in constant time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104288,"byte_end":104319,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104320,"byte_end":104323,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `GraphMap` is parameterized over:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104324,"byte_end":104361,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104362,"byte_end":104365,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104366,"byte_end":104438,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ - The node weight `N` must implement `Copy` and will be used as node","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104439,"byte_end":104511,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ identifier, duplicated into several places in the data structure.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104512,"byte_end":104581,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ It must be suitable as a hash table key (implementing `Eq + Hash`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104582,"byte_end":104653,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ The node type must also implement `Ord` so that the implementation can","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104654,"byte_end":104728,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ order the pair (`a`, `b`) for an edge connecting any two nodes `a` and `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104729,"byte_end":104808,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ - `E` can be of arbitrary type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104809,"byte_end":104844,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104845,"byte_end":104921,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104922,"byte_end":104937,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104938,"byte_end":104941,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ You can use the type aliases `UnGraphMap` and `DiGraphMap` for convenience.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":104942,"byte_end":105021,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105022,"byte_end":105025,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ `GraphMap` does not allow parallel edges, but self loops are allowed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105026,"byte_end":105099,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105100,"byte_end":105103,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Depends on crate feature `graphmap` (default).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105104,"byte_end":105154,"line_start":72,"line_end":72,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105569,"byte_end":105578,"line_start":87,"line_end":87,"column_start":11,"column_end":20},"name":"NodeTrait","qualname":"::graphmap::NodeTrait","value":"NodeTrait: Copy + Ord + Hash","parent":null,"children":[],"decl_id":null,"docs":" A trait group for `GraphMap`'s node identifier.\n","sig":null,"attributes":[{"value":"/ A trait group for `GraphMap`'s node identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105507,"byte_end":105558,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106287,"byte_end":106290,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphMap<N, E, Ty>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap`\n","sig":null,"attributes":[{"value":"/ Create a new `GraphMap`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106248,"byte_end":106275,"line_start":116,"line_end":116,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106402,"byte_end":106415,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<GraphMap<N, E, Ty>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `GraphMap` with estimated capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106338,"byte_end":106390,"line_start":121,"line_end":121,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106696,"byte_end":106704,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"capacity","qualname":"<GraphMap<N, E, Ty>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106625,"byte_end":106684,"line_start":130,"line_end":130,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107121,"byte_end":107132,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<GraphMap<N, E, Ty>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107068,"byte_end":107109,"line_start":145,"line_end":145,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107836,"byte_end":107846,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<GraphMap<N, E, Ty>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E, NodeId = N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GraphMap` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `GraphMap` from an iterable of edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107187,"byte_end":107241,"line_start":150,"line_end":150,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107246,"byte_end":107249,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Node values are taken directly from the list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107254,"byte_end":107303,"line_start":152,"line_end":152,"column_start":5,"column_end":54}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107308,"byte_end":107365,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107370,"byte_end":107413,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107418,"byte_end":107421,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107426,"byte_end":107482,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107487,"byte_end":107490,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107495,"byte_end":107502,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use petgraph::graphmap::UnGraphMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107507,"byte_end":107546,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107551,"byte_end":107554,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Create a new undirected GraphMap.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107559,"byte_end":107599,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/ // Use a type hint to have `()` be the edge weight type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107604,"byte_end":107664,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/ let gr = UnGraphMap::<_, ()>::from_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107669,"byte_end":107716,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107721,"byte_end":107752,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107757,"byte_end":107780,"line_start":165,"line_end":165,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107785,"byte_end":107800,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107805,"byte_end":107812,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":107817,"byte_end":107824,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108062,"byte_end":108072,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"node_count","qualname":"<GraphMap<N, E, Ty>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes in the graph.\n","sig":null,"attributes":[{"value":"/ Return the number of nodes in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108006,"byte_end":108050,"line_start":176,"line_end":176,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108183,"byte_end":108193,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<GraphMap<N, E, Ty>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.\n","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108127,"byte_end":108171,"line_start":181,"line_end":181,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108290,"byte_end":108295,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"clear","qualname":"<GraphMap<N, E, Ty>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108248,"byte_end":108278,"line_start":186,"line_end":186,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108418,"byte_end":108426,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"add_node","qualname":"<GraphMap<N, E, Ty>>::add_node","value":"pub fn add_node(&mut Self, N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Add node `n` to the graph.\n","sig":null,"attributes":[{"value":"/ Add node `n` to the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108376,"byte_end":108406,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108577,"byte_end":108588,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<GraphMap<N, E, Ty>>::remove_node","value":"pub fn remove_node(&mut Self, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if node `n` was removed.\n","sig":null,"attributes":[{"value":"/ Return `true` if node `n` was removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":108523,"byte_end":108565,"line_start":198,"line_end":198,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109081,"byte_end":109094,"line_start":214,"line_end":214,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<GraphMap<N, E, Ty>>::contains_node","value":"pub fn contains_node(&Self, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the node is contained in the graph.\n","sig":null,"attributes":[{"value":"/ Return `true` if the node is contained in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109013,"byte_end":109069,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109999,"byte_end":110007,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<GraphMap<N, E, Ty>>::add_edge","value":"pub fn add_edge(&mut Self, N, N, E) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge connecting `a` and `b` to the graph, with associated\n data `weight`. For a directed graph, the edge is directed from `a`\n to `b`.","sig":null,"attributes":[{"value":"/ Add an edge connecting `a` and `b` to the graph, with associated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109165,"byte_end":109233,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/ data `weight`. For a directed graph, the edge is directed from `a`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109238,"byte_end":109308,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109313,"byte_end":109324,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109329,"byte_end":109332,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Inserts nodes `a` and/or `b` if they aren't already part of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109337,"byte_end":109411,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109416,"byte_end":109419,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the edge did not previously exist, otherwise,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109424,"byte_end":109490,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/ the associated data is updated and the old value is returned","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109495,"byte_end":109559,"line_start":225,"line_end":225,"column_start":5,"column_end":69}},{"value":"/ as `Some(old_weight)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109564,"byte_end":109590,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109595,"byte_end":109598,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109603,"byte_end":109610,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ // Create a GraphMap with directed edges, and add one edge to it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109615,"byte_end":109683,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ use petgraph::graphmap::DiGraphMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109688,"byte_end":109727,"line_start":230,"line_end":230,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109732,"byte_end":109735,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut g = DiGraphMap::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109740,"byte_end":109774,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ g.add_edge(\"x\", \"y\", -1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109779,"byte_end":109808,"line_start":233,"line_end":233,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(g.node_count(), 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109813,"byte_end":109847,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(g.edge_count(), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109852,"byte_end":109886,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/ assert!(g.contains_edge(\"x\", \"y\"));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109891,"byte_end":109930,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/ assert!(!g.contains_edge(\"y\", \"x\"));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109935,"byte_end":109975,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":109980,"byte_end":109987,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112014,"byte_end":112025,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<GraphMap<N, E, Ty>>::remove_edge","value":"pub fn remove_edge(&mut Self, N, N) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove edge from `a` to `b` from the graph and return the edge weight.","sig":null,"attributes":[{"value":"/ Remove edge from `a` to `b` from the graph and return the edge weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111498,"byte_end":111572,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111577,"byte_end":111580,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the edge didn't exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111585,"byte_end":111628,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111633,"byte_end":111636,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111641,"byte_end":111648,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ // Create a GraphMap with undirected edges, and add and remove an edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111653,"byte_end":111728,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/ use petgraph::graphmap::UnGraphMap;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111733,"byte_end":111772,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111777,"byte_end":111780,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let mut g = UnGraphMap::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111785,"byte_end":111819,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ g.add_edge(\"x\", \"y\", -1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111824,"byte_end":111853,"line_start":288,"line_end":288,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111858,"byte_end":111861,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let edge_data = g.remove_edge(\"y\", \"x\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111866,"byte_end":111910,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(edge_data, Some(-1));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111915,"byte_end":111951,"line_start":291,"line_end":291,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(g.edge_count(), 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111956,"byte_end":111990,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":111995,"byte_end":112002,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112494,"byte_end":112507,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<GraphMap<N, E, Ty>>::contains_edge","value":"pub fn contains_edge(&Self, N, N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge connecting `a` with `b` is contained in the graph.\n","sig":null,"attributes":[{"value":"/ Return `true` if the edge connecting `a` with `b` is contained in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112402,"byte_end":112482,"line_start":304,"line_end":304,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112712,"byte_end":112717,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"nodes","qualname":"<GraphMap<N, E, Ty>>::nodes","value":"pub fn nodes(&Self) -> Nodes<, N>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the nodes of the graph.","sig":null,"attributes":[{"value":"/ Return an iterator over the nodes of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112603,"byte_end":112654,"line_start":309,"line_end":309,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112659,"byte_end":112662,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112667,"byte_end":112700,"line_start":311,"line_end":311,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113094,"byte_end":113103,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<GraphMap<N, E, Ty>>::neighbors","value":"pub fn neighbors(&Self, N) -> Neighbors<, N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112798,"byte_end":112865,"line_start":316,"line_end":316,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112870,"byte_end":112873,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112878,"byte_end":112920,"line_start":318,"line_end":318,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112925,"byte_end":112970,"line_start":319,"line_end":319,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112975,"byte_end":112978,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":112983,"byte_end":113044,"line_start":321,"line_end":321,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113049,"byte_end":113082,"line_start":322,"line_end":322,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113832,"byte_end":113850,"line_start":343,"line_end":343,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<GraphMap<N, E, Ty>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, N, Direction) -> NeighborsDirected<, N, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113345,"byte_end":113419,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/ `a`, in the specified direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113424,"byte_end":113460,"line_start":334,"line_end":334,"column_start":5,"column_end":41}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113465,"byte_end":113544,"line_start":335,"line_end":335,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113549,"byte_end":113552,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113557,"byte_end":113606,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113611,"byte_end":113658,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113663,"byte_end":113708,"line_start":339,"line_end":339,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113713,"byte_end":113716,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113721,"byte_end":113782,"line_start":341,"line_end":341,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":113787,"byte_end":113820,"line_start":342,"line_end":342,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114514,"byte_end":114519,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"edges","qualname":"<GraphMap<N, E, Ty>>::edges","value":"pub fn edges(&Self, N) -> Edges<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of target nodes with an edge starting from `a`,\n paired with their respective edge weights.","sig":null,"attributes":[{"value":"/ Return an iterator of target nodes with an edge starting from `a`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114158,"byte_end":114228,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ paired with their respective edge weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114233,"byte_end":114279,"line_start":357,"line_end":357,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114284,"byte_end":114287,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114292,"byte_end":114334,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114339,"byte_end":114384,"line_start":360,"line_end":360,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114389,"byte_end":114392,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114397,"byte_end":114458,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `(N, &E)`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114463,"byte_end":114502,"line_start":363,"line_end":363,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114827,"byte_end":114838,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<GraphMap<N, E, Ty>>::edge_weight","value":"pub fn edge_weight(&Self, N, N) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[{"value":"/ Return a reference to the edge weight connecting `a` with `b`, or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114690,"byte_end":114759,"line_start":372,"line_end":372,"column_start":5,"column_end":74}},{"value":"/ `None` if the edge does not exist in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114764,"byte_end":114815,"line_start":373,"line_end":373,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115076,"byte_end":115091,"line_start":380,"line_end":380,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<GraphMap<N, E, Ty>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, N, N) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the edge weight connecting `a` with `b`, or\n `None` if the edge does not exist in the graph.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the edge weight connecting `a` with `b`, or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":114931,"byte_end":115008,"line_start":378,"line_end":378,"column_start":5,"column_end":82}},{"value":"/ `None` if the edge does not exist in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115013,"byte_end":115064,"line_start":379,"line_end":379,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115350,"byte_end":115359,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"all_edges","qualname":"<GraphMap<N, E, Ty>>::all_edges","value":"pub fn all_edges(&Self) -> AllEdges<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph with their weight in arbitrary order.","sig":null,"attributes":[{"value":"/ Return an iterator over all edges of the graph with their weight in arbitrary order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115196,"byte_end":115284,"line_start":384,"line_end":384,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115289,"byte_end":115292,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(N, N, &E)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115297,"byte_end":115338,"line_start":386,"line_end":386,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115684,"byte_end":115697,"line_start":398,"line_end":398,"column_start":12,"column_end":25},"name":"all_edges_mut","qualname":"<GraphMap<N, E, Ty>>::all_edges_mut","value":"pub fn all_edges_mut(&mut Self) -> AllEdgesMut<, N, E, Ty>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all edges of the graph in arbitrary order, with a mutable reference\n to their weight.","sig":null,"attributes":[{"value":"/ Return an iterator over all edges of the graph in arbitrary order, with a mutable reference","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115494,"byte_end":115589,"line_start":394,"line_end":394,"column_start":5,"column_end":100}},{"value":"/ to their weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115594,"byte_end":115614,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115619,"byte_end":115622,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(N, N, &mut E)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115627,"byte_end":115672,"line_start":397,"line_end":397,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116374,"byte_end":116384,"line_start":416,"line_end":416,"column_start":12,"column_end":22},"name":"into_graph","qualname":"<GraphMap<N, E, Ty>>::into_graph","value":"pub fn into_graph<Ix>(Self) -> Graph<N, E, Ty, Ix> where\nIx: ::graph::IndexType","parent":null,"children":[],"decl_id":null,"docs":" Return a `Graph` that corresponds to this `GraphMap`.","sig":null,"attributes":[{"value":"/ Return a `Graph` that corresponds to this `GraphMap`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115846,"byte_end":115903,"line_start":405,"line_end":405,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115908,"byte_end":115911,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ 1. Note that node and edge indices in the `Graph` have nothing in common","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115916,"byte_end":115992,"line_start":407,"line_end":407,"column_start":5,"column_end":81}},{"value":"/    with the `GraphMap`s node weights `N`. The node weights `N` are used as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":115997,"byte_end":116075,"line_start":408,"line_end":408,"column_start":5,"column_end":83}},{"value":"/    node weights in the resulting `Graph`, too.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116080,"byte_end":116130,"line_start":409,"line_end":409,"column_start":5,"column_end":55}},{"value":"/ 2. Note that the index type is user-chosen.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116135,"byte_end":116182,"line_start":410,"line_end":410,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116187,"byte_end":116190,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(|V| + |E|)** time (average).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116195,"byte_end":116243,"line_start":412,"line_end":412,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116248,"byte_end":116251,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of nodes or edges does not fit with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116256,"byte_end":116320,"line_start":414,"line_end":414,"column_start":5,"column_end":69}},{"value":"/ the resulting graph's index type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":116325,"byte_end":116362,"line_start":415,"line_end":415,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":118774,"byte_end":118779,"line_start":498,"line_end":498,"column_start":5,"column_end":10},"name":"Nodes","qualname":"::graphmap::Nodes","value":"Nodes {  }","parent":null,"children":[{"krate":0,"index":3625}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":118902,"byte_end":118911,"line_start":503,"line_end":503,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graphmap::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119505,"byte_end":119522,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"NeighborsDirected","qualname":"::graphmap::NeighborsDirected","value":"NeighborsDirected {  }","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120173,"byte_end":120178,"line_start":557,"line_end":557,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graphmap::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121227,"byte_end":121235,"line_start":598,"line_end":598,"column_start":12,"column_end":20},"name":"AllEdges","qualname":"::graphmap::AllEdges","value":"AllEdges {  }","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122357,"byte_end":122368,"line_start":642,"line_end":642,"column_start":12,"column_end":23},"name":"AllEdgesMut","qualname":"::graphmap::AllEdgesMut","value":"AllEdgesMut {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124932,"byte_end":124935,"line_start":731,"line_end":731,"column_start":12,"column_end":15},"name":"Ptr","qualname":"::graphmap::Ptr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference that is hashed and compared by its pointer value.","sig":null,"attributes":[{"value":"/ A reference that is hashed and compared by its pointer value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124612,"byte_end":124677,"line_start":725,"line_end":725,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124678,"byte_end":124681,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ `Ptr` is used for certain configurations of `GraphMap`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124682,"byte_end":124741,"line_start":727,"line_end":727,"column_start":1,"column_end":60}},{"value":"/ in particular in the combination where the node type for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124742,"byte_end":124802,"line_start":728,"line_end":728,"column_start":1,"column_end":61}},{"value":"/ `GraphMap` is something of type for example `Ptr(&Cell<T>)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124803,"byte_end":124867,"line_start":729,"line_end":729,"column_start":1,"column_end":65}},{"value":"/ with the `Cell<T>` being `TypedArena` allocated.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124868,"byte_end":124920,"line_start":730,"line_end":730,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124947,"byte_end":124956,"line_start":731,"line_end":731,"column_start":27,"column_end":36},"name":"0","qualname":"::graphmap::Ptr::0","value":"&'b T","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126757,"byte_end":126772,"line_start":817,"line_end":817,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::graphmap::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127586,"byte_end":127600,"line_start":849,"line_end":849,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graphmap::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129334,"byte_end":129343,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"DefaultIx","qualname":"::graph_impl::DefaultIx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The default integer type for graph indices.\n `u32` is the default to reduce the size of the graph's data and improve\n performance in the common case.","sig":null,"attributes":[{"value":"/ The default integer type for graph indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129060,"byte_end":129107,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ `u32` is the default to reduce the size of the graph's data and improve","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129108,"byte_end":129183,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ performance in the common case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129184,"byte_end":129219,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129220,"byte_end":129223,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Used for node and edge indices in `Graph` and `StableGraph`, used","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129224,"byte_end":129293,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ for node indices in `Csr`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129294,"byte_end":129324,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129538,"byte_end":129547,"line_start":44,"line_end":44,"column_start":18,"column_end":27},"name":"IndexType","qualname":"::graph_impl::IndexType","value":"IndexType: Copy + Default + Hash + Ord + fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"decl_id":null,"docs":" Trait for the unsigned integer type used for node and edge indices.","sig":null,"attributes":[{"value":"/ Trait for the unsigned integer type used for node and edge indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129352,"byte_end":129423,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129424,"byte_end":129427,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Marked `unsafe` because: the trait must faithfully preseve","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129428,"byte_end":129490,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ and convert index values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129491,"byte_end":129520,"line_start":43,"line_end":43,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129610,"byte_end":129613,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"new","qualname":"::graph_impl::IndexType::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129640,"byte_end":129645,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::IndexType::index","value":"pub fn index(&Self) -> usize","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129670,"byte_end":129673,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"max","qualname":"::graph_impl::IndexType::max","value":"pub fn max() -> Self","parent":{"krate":0,"index":1389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130702,"byte_end":130711,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"NodeIndex","qualname":"::graph_impl::NodeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Node identifier.\n","sig":null,"attributes":[{"value":"/ Node identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130600,"byte_end":130620,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130793,"byte_end":130796,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<NodeIndex<Ix>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130772,"byte_end":130781,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130886,"byte_end":130891,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"index","qualname":"<NodeIndex<Ix>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130865,"byte_end":130874,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130968,"byte_end":130971,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"end","qualname":"<NodeIndex<Ix>>::end","value":"pub fn end() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130947,"byte_end":130956,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131417,"byte_end":131427,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"node_index","qualname":"::graph_impl::node_index","value":"pub fn node_index<Ix: IndexType>(usize) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `NodeIndex::new`\n","sig":null,"attributes":[{"value":"/ Short version of `NodeIndex::new`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131372,"byte_end":131409,"line_start":126,"line_end":126,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131546,"byte_end":131556,"line_start":130,"line_end":130,"column_start":8,"column_end":18},"name":"edge_index","qualname":"::graph_impl::edge_index","value":"pub fn edge_index<Ix: IndexType>(usize) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Short version of `EdgeIndex::new`\n","sig":null,"attributes":[{"value":"/ Short version of `EdgeIndex::new`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131501,"byte_end":131538,"line_start":129,"line_end":129,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131732,"byte_end":131741,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"EdgeIndex","qualname":"::graph_impl::EdgeIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Edge identifier.\n","sig":null,"attributes":[{"value":"/ Edge identifier.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131630,"byte_end":131650,"line_start":132,"line_end":132,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131823,"byte_end":131826,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<EdgeIndex<Ix>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131802,"byte_end":131811,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131916,"byte_end":131921,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"index","qualname":"<EdgeIndex<Ix>>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131895,"byte_end":131904,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132110,"byte_end":132113,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"end","qualname":"<EdgeIndex<Ix>>::end","value":"pub fn end() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An invalid `EdgeIndex` used to denote absence of an edge, for example\n to end an adjacency list.\n","sig":null,"attributes":[{"value":"/ An invalid `EdgeIndex` used to denote absence of an edge, for example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131977,"byte_end":132050,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ to end an adjacency list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132055,"byte_end":132084,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132089,"byte_end":132098,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132934,"byte_end":132938,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"Node","qualname":"::graph_impl::Node","value":"Node { weight }","parent":null,"children":[{"krate":0,"index":3709},{"krate":0,"index":3710}],"decl_id":null,"docs":" The graph's node type.\n","sig":null,"attributes":[{"value":"/ The graph's node type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132879,"byte_end":132905,"line_start":185,"line_end":185,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132998,"byte_end":133004,"line_start":189,"line_end":189,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Node::weight","value":"N","parent":{"krate":0,"index":3706},"children":[],"decl_id":null,"docs":" Associated node data.\n","sig":null,"attributes":[{"value":"/ Associated node data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132964,"byte_end":132989,"line_start":188,"line_end":188,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133391,"byte_end":133400,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Node<N, Ix>>::next_edge","value":"pub fn next_edge(&Self, Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the first edge in the given direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133298,"byte_end":133379,"line_start":204,"line_end":204,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133543,"byte_end":133547,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"Edge","qualname":"::graph_impl::Edge","value":"Edge { weight }","parent":null,"children":[{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3723}],"decl_id":null,"docs":" The graph's edge type.\n","sig":null,"attributes":[{"value":"/ The graph's edge type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133488,"byte_end":133514,"line_start":212,"line_end":212,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133607,"byte_end":133613,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"weight","qualname":"::graph_impl::Edge::weight","value":"E","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":" Associated edge data.\n","sig":null,"attributes":[{"value":"/ Associated edge data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133573,"byte_end":133598,"line_start":215,"line_end":215,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134086,"byte_end":134095,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Edge<E, Ix>>::next_edge","value":"pub fn next_edge(&Self, Direction) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the next edge for the given direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133993,"byte_end":134074,"line_start":233,"line_end":233,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134229,"byte_end":134235,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"source","qualname":"<Edge<E, Ix>>::source","value":"pub fn source(&Self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the source node index.\n","sig":null,"attributes":[{"value":"/ Return the source node index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134184,"byte_end":134217,"line_start":239,"line_end":239,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134343,"byte_end":134349,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"target","qualname":"<Edge<E, Ix>>::target","value":"pub fn target(&Self) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return the target node index.\n","sig":null,"attributes":[{"value":"/ Return the target node index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134298,"byte_end":134331,"line_start":245,"line_end":245,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137512,"byte_end":137517,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"Graph","qualname":"::graph_impl::Graph","value":"Graph {  }","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","sig":null,"attributes":[{"value":"/ `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134410,"byte_end":134500,"line_start":252,"line_end":252,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134501,"byte_end":134504,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ `Graph` is parameterized over:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134505,"byte_end":134539,"line_start":254,"line_end":254,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134540,"byte_end":134543,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134544,"byte_end":134616,"line_start":256,"line_end":256,"column_start":1,"column_end":73}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134617,"byte_end":134668,"line_start":257,"line_end":257,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134669,"byte_end":134757,"line_start":258,"line_end":258,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134758,"byte_end":134828,"line_start":259,"line_end":259,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134829,"byte_end":134832,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ The graph uses **O(|V| + |E|)** space, and allows fast node and edge insert,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134833,"byte_end":134913,"line_start":261,"line_end":261,"column_start":1,"column_end":81}},{"value":"/ efficient graph search and graph algorithms.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134914,"byte_end":134962,"line_start":262,"line_end":262,"column_start":1,"column_end":49}},{"value":"/ It implements **O(e')** edge lookup and edge and node removals, where **e'**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":134963,"byte_end":135043,"line_start":263,"line_end":263,"column_start":1,"column_end":81}},{"value":"/ is some local measure of edge count.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135044,"byte_end":135084,"line_start":264,"line_end":264,"column_start":1,"column_end":41}},{"value":"/ Based on the graph datastructure used in rustc.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135085,"byte_end":135136,"line_start":265,"line_end":265,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135137,"byte_end":135140,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Here's an example of building a graph with directed edges, and below","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135141,"byte_end":135213,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"/ an illustration of how it could be rendered with graphviz (see","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135214,"byte_end":135280,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/ [`Dot`](../dot/struct.Dot.html)):","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135281,"byte_end":135318,"line_start":269,"line_end":269,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135319,"byte_end":135322,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135323,"byte_end":135330,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135331,"byte_end":135355,"line_start":272,"line_end":272,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135356,"byte_end":135359,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ let mut deps = Graph::<&str, &str>::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135360,"byte_end":135406,"line_start":274,"line_end":274,"column_start":1,"column_end":47}},{"value":"/ let pg = deps.add_node(\"petgraph\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135407,"byte_end":135446,"line_start":275,"line_end":275,"column_start":1,"column_end":40}},{"value":"/ let fb = deps.add_node(\"fixedbitset\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135447,"byte_end":135489,"line_start":276,"line_end":276,"column_start":1,"column_end":43}},{"value":"/ let qc = deps.add_node(\"quickcheck\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135490,"byte_end":135531,"line_start":277,"line_end":277,"column_start":1,"column_end":42}},{"value":"/ let rand = deps.add_node(\"rand\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135532,"byte_end":135569,"line_start":278,"line_end":278,"column_start":1,"column_end":38}},{"value":"/ let libc = deps.add_node(\"libc\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135570,"byte_end":135607,"line_start":279,"line_end":279,"column_start":1,"column_end":38}},{"value":"/ deps.extend_with_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135608,"byte_end":135637,"line_start":280,"line_end":280,"column_start":1,"column_end":30}},{"value":"/     (pg, fb), (pg, qc),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135638,"byte_end":135665,"line_start":281,"line_end":281,"column_start":1,"column_end":28}},{"value":"/     (qc, rand), (rand, libc), (qc, libc),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135666,"byte_end":135711,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135712,"byte_end":135719,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135720,"byte_end":135727,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135728,"byte_end":135731,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ![graph-example](https://bluss.github.io/ndarray/images/graph-example.svg)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135732,"byte_end":135810,"line_start":286,"line_end":286,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135811,"byte_end":135814,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ### Graph Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135815,"byte_end":135836,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135837,"byte_end":135840,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The graph maintains indices for nodes and edges, and node and edge","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135841,"byte_end":135911,"line_start":290,"line_end":290,"column_start":1,"column_end":71}},{"value":"/ weights may be accessed mutably. Indices range in a compact interval, for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135912,"byte_end":135989,"line_start":291,"line_end":291,"column_start":1,"column_end":78}},{"value":"/ example for *n* nodes indices are 0 to *n* - 1 inclusive.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":135990,"byte_end":136051,"line_start":292,"line_end":292,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136052,"byte_end":136055,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ `NodeIndex` and `EdgeIndex` are types that act as references to nodes and edges,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136056,"byte_end":136140,"line_start":294,"line_end":294,"column_start":1,"column_end":85}},{"value":"/ but these are only stable across certain operations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136141,"byte_end":136197,"line_start":295,"line_end":295,"column_start":1,"column_end":57}},{"value":"/ **Adding nodes or edges keeps indices stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136198,"byte_end":136247,"line_start":296,"line_end":296,"column_start":1,"column_end":50}},{"value":"/ Removing nodes or edges may shift other indices.**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136248,"byte_end":136302,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ Removing a node will force the last node to shift its index to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136303,"byte_end":136369,"line_start":298,"line_end":298,"column_start":1,"column_end":67}},{"value":"/ take its place. Similarly, removing an edge shifts the index of the last edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136370,"byte_end":136452,"line_start":299,"line_end":299,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136453,"byte_end":136456,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ The `Ix` parameter is `u32` by default. The goal is that you can ignore this parameter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136457,"byte_end":136547,"line_start":301,"line_end":301,"column_start":1,"column_end":91}},{"value":"/ completely unless you need a very big graph -- then you can use `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136548,"byte_end":136624,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136625,"byte_end":136628,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ### Pros and Cons of Indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136629,"byte_end":136661,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136662,"byte_end":136665,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ * The fact that the node and edge indices in the graph each are numbered in compact","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136666,"byte_end":136753,"line_start":306,"line_end":306,"column_start":1,"column_end":88}},{"value":"/ intervals (from 0 to *n* - 1 for *n* nodes) simplifies some graph algorithms.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136754,"byte_end":136835,"line_start":307,"line_end":307,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136836,"byte_end":136839,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ * You can select graph index integer type after the size of the graph. A smaller","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136840,"byte_end":136924,"line_start":309,"line_end":309,"column_start":1,"column_end":85}},{"value":"/ size may have better performance.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136925,"byte_end":136962,"line_start":310,"line_end":310,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136963,"byte_end":136966,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ * Using indices allows mutation while traversing the graph, see `Dfs`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":136967,"byte_end":137041,"line_start":312,"line_end":312,"column_start":1,"column_end":75}},{"value":"/ and `.neighbors(a).detach()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137042,"byte_end":137075,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137076,"byte_end":137079,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ * You can create several graphs using the equal node indices but with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137080,"byte_end":137153,"line_start":315,"line_end":315,"column_start":1,"column_end":74}},{"value":"/ differing weights or differing edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137154,"byte_end":137195,"line_start":316,"line_end":316,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137196,"byte_end":137199,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ * The `Graph` is a regular rust collection and is `Send` and `Sync` (as long","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137200,"byte_end":137280,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/ as associated data `N` and `E` are).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137281,"byte_end":137321,"line_start":319,"line_end":319,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137322,"byte_end":137325,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ * Some indices shift during node or edge removal, so that is a drawback","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137326,"byte_end":137401,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/ of removing elements. Indices don't allow as much compile time checking as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137402,"byte_end":137480,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/ references.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137481,"byte_end":137496,"line_start":323,"line_end":323,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137497,"byte_end":137500,"line_start":324,"line_end":324,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137778,"byte_end":137785,"line_start":335,"line_end":335,"column_start":10,"column_end":17},"name":"DiGraph","qualname":"::graph_impl::DiGraph","value":"Graph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with directed edges.","sig":null,"attributes":[{"value":"/ A `Graph` with directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137643,"byte_end":137677,"line_start":331,"line_end":331,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137678,"byte_end":137681,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137682,"byte_end":137759,"line_start":333,"line_end":333,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137760,"byte_end":137768,"line_start":334,"line_end":334,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137983,"byte_end":137990,"line_start":341,"line_end":341,"column_start":10,"column_end":17},"name":"UnGraph","qualname":"::graph_impl::UnGraph","value":"Graph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `Graph` with undirected edges.","sig":null,"attributes":[{"value":"/ A `Graph` with undirected edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137838,"byte_end":137874,"line_start":337,"line_end":337,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137875,"byte_end":137878,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137879,"byte_end":137956,"line_start":339,"line_end":339,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":137957,"byte_end":137973,"line_start":340,"line_end":340,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140654,"byte_end":140657,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<Graph<N, E, Directed>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with directed edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` with directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140423,"byte_end":140468,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140473,"byte_end":140476,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `Graph::with_capacity` or `Graph::default` for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140481,"byte_end":140565,"line_start":425,"line_end":425,"column_start":5,"column_end":89}},{"value":"/ a constructor that is generic in all the type parameters of `Graph`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140570,"byte_end":140642,"line_start":426,"line_end":426,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141040,"byte_end":141054,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"new_undirected","qualname":"<Graph<N, E, Undirected>>::new_undirected","value":"pub fn new_undirected() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with undirected edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` with undirected edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140807,"byte_end":140854,"line_start":436,"line_end":436,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140859,"byte_end":140862,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. Use `Graph::with_capacity` or `Graph::default` for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140867,"byte_end":140951,"line_start":438,"line_end":438,"column_start":5,"column_end":89}},{"value":"/ a constructor that is generic in all the type parameters of `Graph`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140956,"byte_end":141028,"line_start":439,"line_end":439,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141318,"byte_end":141331,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Graph<N, E, Ty, Ix>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `Graph` with estimated capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141257,"byte_end":141306,"line_start":451,"line_end":451,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141608,"byte_end":141618,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Graph<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[{"value":"/ Return the number of nodes (vertices) in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141498,"byte_end":141553,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141558,"byte_end":141561,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141566,"byte_end":141596,"line_start":460,"line_end":460,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141776,"byte_end":141786,"line_start":469,"line_end":469,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Graph<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141677,"byte_end":141721,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141726,"byte_end":141729,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141734,"byte_end":141764,"line_start":468,"line_end":468,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141919,"byte_end":141930,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Graph<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges or not.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141845,"byte_end":141893,"line_start":474,"line_end":474,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141898,"byte_end":141907,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142290,"byte_end":142298,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Graph<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[{"value":"/ Add a node (also called vertex) with associated data `weight` to the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141989,"byte_end":142068,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142073,"byte_end":142076,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142081,"byte_end":142111,"line_start":483,"line_end":483,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142116,"byte_end":142119,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142124,"byte_end":142161,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142166,"byte_end":142169,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the Graph is at the maximum number of nodes for its index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142174,"byte_end":142249,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ type (N/A if usize).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142254,"byte_end":142278,"line_start":488,"line_end":488,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142805,"byte_end":142816,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<Graph<N, E, Ty, Ix>>::node_weight","value":"pub fn node_weight(&Self, NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142692,"byte_end":142727,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142732,"byte_end":142735,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[a]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142740,"byte_end":142793,"line_start":501,"line_end":501,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143052,"byte_end":143067,"line_start":510,"line_end":510,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`, mutably.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142926,"byte_end":142970,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142975,"byte_end":142978,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[a]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":142983,"byte_end":143040,"line_start":509,"line_end":509,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143741,"byte_end":143749,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Graph<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[{"value":"/ Add an edge from `a` to `b` to the graph, with its associated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143193,"byte_end":143258,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ data `weight`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143263,"byte_end":143281,"line_start":516,"line_end":516,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143286,"byte_end":143289,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143294,"byte_end":143331,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143336,"byte_end":143339,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143344,"byte_end":143374,"line_start":520,"line_end":520,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143379,"byte_end":143382,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143387,"byte_end":143438,"line_start":522,"line_end":522,"column_start":5,"column_end":56}},{"value":"/ **Panics** if the Graph is at the maximum number of edges for its index","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143443,"byte_end":143518,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ type (N/A if usize).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143523,"byte_end":143547,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143552,"byte_end":143555,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ **Note:** `Graph` allows adding parallel (“duplicate”) edges. If you want","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143560,"byte_end":143641,"line_start":526,"line_end":526,"column_start":5,"column_end":82}},{"value":"/ to avoid this, use [`.update_edge(a, b, weight)`](#method.update_edge) instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":143646,"byte_end":143729,"line_start":527,"line_end":527,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145100,"byte_end":145111,"line_start":564,"line_end":564,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<Graph<N, E, Ty, Ix>>::update_edge","value":"pub fn update_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E)\n-> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[{"value":"/ Add or update an edge from `a` to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144721,"byte_end":144763,"line_start":555,"line_end":555,"column_start":5,"column_end":47}},{"value":"/ If the edge already exists, its weight is updated.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144768,"byte_end":144822,"line_start":556,"line_end":556,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144827,"byte_end":144830,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Return the index of the affected edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144835,"byte_end":144877,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144882,"byte_end":144885,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144890,"byte_end":144957,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":144962,"byte_end":145028,"line_start":561,"line_end":561,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145033,"byte_end":145036,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145041,"byte_end":145088,"line_start":563,"line_end":563,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145540,"byte_end":145551,"line_start":578,"line_end":578,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight","value":"pub fn edge_weight(&Self, EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145427,"byte_end":145462,"line_start":575,"line_end":575,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145467,"byte_end":145470,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[e]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145475,"byte_end":145528,"line_start":577,"line_end":577,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145789,"byte_end":145804,"line_start":586,"line_end":586,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`, mutably.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145663,"byte_end":145707,"line_start":583,"line_end":583,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145712,"byte_end":145715,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[e]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145720,"byte_end":145777,"line_start":585,"line_end":585,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145991,"byte_end":146005,"line_start":592,"line_end":592,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<Graph<N, E, Ty, Ix>>::edge_endpoints","value":"pub fn edge_endpoints(&Self, EdgeIndex<Ix>)\n-> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[{"value":"/ Access the source and target nodes for `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":145932,"byte_end":145979,"line_start":591,"line_end":591,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146839,"byte_end":146850,"line_start":610,"line_end":610,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<Graph<N, E, Ty, Ix>>::remove_node","value":"pub fn remove_node(&mut Self, NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[{"value":"/ Remove `a` from the graph if it exists, and return its weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146169,"byte_end":146235,"line_start":598,"line_end":598,"column_start":5,"column_end":71}},{"value":"/ If it doesn't exist in the graph, return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146240,"byte_end":146292,"line_start":599,"line_end":599,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146297,"byte_end":146300,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Apart from `a`, this invalidates the last node index in the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146305,"byte_end":146374,"line_start":601,"line_end":601,"column_start":5,"column_end":74}},{"value":"/ (that node will adopt the removed node index). Edge indices are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146379,"byte_end":146446,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/ invalidated as they would be following the removal of each edge","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146451,"byte_end":146518,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ with an endpoint in `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146523,"byte_end":146551,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146556,"byte_end":146559,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of affected","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146564,"byte_end":146634,"line_start":606,"line_end":606,"column_start":5,"column_end":75}},{"value":"/ edges, including *n* calls to `.remove_edge()` where *n* is the number","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146639,"byte_end":146713,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/ of edges with an endpoint in `a`, and including the edges with an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146718,"byte_end":146787,"line_start":608,"line_end":608,"column_start":5,"column_end":74}},{"value":"/ endpoint in the displaced node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":146792,"byte_end":146827,"line_start":609,"line_end":609,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150155,"byte_end":150166,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<Graph<N, E, Ty, Ix>>::remove_edge","value":"pub fn remove_edge(&mut Self, EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[{"value":"/ Remove an edge and return its edge weight, or `None` if it didn't exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149755,"byte_end":149831,"line_start":689,"line_end":689,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149836,"byte_end":149839,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Apart from `e`, this invalidates the last edge index in the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149844,"byte_end":149913,"line_start":691,"line_end":691,"column_start":5,"column_end":74}},{"value":"/ (that edge will adopt the removed edge index).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149918,"byte_end":149968,"line_start":692,"line_end":692,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149973,"byte_end":149976,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the size of four particular edge lists, for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":149981,"byte_end":150072,"line_start":694,"line_end":694,"column_start":5,"column_end":96}},{"value":"/ the vertices of `e` and the vertices of another affected edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":150077,"byte_end":150143,"line_start":695,"line_end":695,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151942,"byte_end":151951,"line_start":742,"line_end":742,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<Graph<N, E, Ty, Ix>>::neighbors","value":"pub fn neighbors(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151457,"byte_end":151524,"line_start":730,"line_end":730,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151529,"byte_end":151532,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151537,"byte_end":151579,"line_start":732,"line_end":732,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151584,"byte_end":151629,"line_start":733,"line_end":733,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151634,"byte_end":151637,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151642,"byte_end":151703,"line_start":735,"line_end":735,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151708,"byte_end":151753,"line_start":736,"line_end":736,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151758,"byte_end":151761,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151766,"byte_end":151838,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151843,"byte_end":151873,"line_start":739,"line_end":739,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151878,"byte_end":151881,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":151886,"byte_end":151930,"line_start":741,"line_end":741,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152984,"byte_end":153002,"line_start":766,"line_end":766,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, NodeIndex<Ix>, Direction)\n-> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152059,"byte_end":152133,"line_start":747,"line_end":747,"column_start":5,"column_end":79}},{"value":"/ `a`, in the specified direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152138,"byte_end":152174,"line_start":748,"line_end":748,"column_start":5,"column_end":41}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152179,"byte_end":152258,"line_start":749,"line_end":749,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152263,"byte_end":152266,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152271,"byte_end":152320,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152325,"byte_end":152372,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152377,"byte_end":152422,"line_start":753,"line_end":753,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152427,"byte_end":152430,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152435,"byte_end":152496,"line_start":755,"line_end":755,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152501,"byte_end":152546,"line_start":756,"line_end":756,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152551,"byte_end":152554,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ For a `Directed` graph, neighbors are listed in reverse order of their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152559,"byte_end":152633,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/ addition to the graph, so the most recently added edge's neighbor is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152638,"byte_end":152710,"line_start":759,"line_end":759,"column_start":5,"column_end":77}},{"value":"/ listed first. The order in an `Undirected` graph is arbitrary.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152715,"byte_end":152781,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152786,"byte_end":152789,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_directed(a, dir).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152794,"byte_end":152880,"line_start":762,"line_end":762,"column_start":5,"column_end":91}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152885,"byte_end":152915,"line_start":763,"line_end":763,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152920,"byte_end":152923,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":152928,"byte_end":152972,"line_start":765,"line_end":765,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153916,"byte_end":153936,"line_start":791,"line_end":791,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<Graph<N, E, Ty, Ix>>::neighbors_undirected","value":"pub fn neighbors_undirected(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and\n `a`, in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153319,"byte_end":153393,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ `a`, in either direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153398,"byte_end":153427,"line_start":778,"line_end":778,"column_start":5,"column_end":34}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153432,"byte_end":153511,"line_start":779,"line_end":779,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153516,"byte_end":153519,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ - `Directed` and `Undirected`: All edges from or to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153524,"byte_end":153584,"line_start":781,"line_end":781,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153589,"byte_end":153592,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153597,"byte_end":153658,"line_start":783,"line_end":783,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153663,"byte_end":153708,"line_start":784,"line_end":784,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153713,"byte_end":153716,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_undirected(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153721,"byte_end":153804,"line_start":786,"line_end":786,"column_start":5,"column_end":88}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153809,"byte_end":153839,"line_start":787,"line_end":787,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153844,"byte_end":153847,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153852,"byte_end":153896,"line_start":789,"line_end":789,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":153901,"byte_end":153904,"line_start":790,"line_end":790,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154544,"byte_end":154549,"line_start":810,"line_end":810,"column_start":12,"column_end":17},"name":"edges","qualname":"<Graph<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154251,"byte_end":154294,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154299,"byte_end":154302,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154307,"byte_end":154349,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154354,"byte_end":154401,"line_start":806,"line_end":806,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154406,"byte_end":154409,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154414,"byte_end":154475,"line_start":808,"line_end":808,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154480,"byte_end":154532,"line_start":809,"line_end":809,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":155033,"byte_end":155047,"line_start":822,"line_end":822,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<Graph<N, E, Ty, Ix>>::edges_directed","value":"pub fn edges_directed(&Self, NodeIndex<Ix>, Direction) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`, in the specified direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154649,"byte_end":154720,"line_start":814,"line_end":814,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154725,"byte_end":154728,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154733,"byte_end":154782,"line_start":816,"line_end":816,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154787,"byte_end":154834,"line_start":817,"line_end":817,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154839,"byte_end":154886,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154891,"byte_end":154894,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node `a` doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154899,"byte_end":154964,"line_start":820,"line_end":820,"column_start":5,"column_end":70}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":154969,"byte_end":155021,"line_start":821,"line_end":821,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156230,"byte_end":156243,"line_start":857,"line_end":857,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Graph<N, E, Ty, Ix>>::contains_edge","value":"pub fn contains_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Lookup if there is an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup if there is an edge from `a` to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156020,"byte_end":156067,"line_start":853,"line_end":853,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156072,"byte_end":156075,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156080,"byte_end":156147,"line_start":855,"line_end":855,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156152,"byte_end":156218,"line_start":856,"line_end":856,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156545,"byte_end":156554,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<Graph<N, E, Ty, Ix>>::find_edge","value":"pub fn find_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup an edge from `a` to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156347,"byte_end":156382,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156387,"byte_end":156390,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156395,"byte_end":156462,"line_start":863,"line_end":863,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":156467,"byte_end":156533,"line_start":864,"line_end":864,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157633,"byte_end":157653,"line_start":897,"line_end":897,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<Graph<N, E, Ty, Ix>>::find_edge_undirected","value":"pub fn find_edge_undirected(&Self, NodeIndex<Ix>, NodeIndex<Ix>)\n-> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[{"value":"/ Lookup an edge between `a` and `b`, in either direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157290,"byte_end":157350,"line_start":890,"line_end":890,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157355,"byte_end":157358,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ If the graph is undirected, then this is equivalent to `.find_edge()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157363,"byte_end":157437,"line_start":892,"line_end":892,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157442,"byte_end":157445,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Return the edge index and its directionality, with `Outgoing` meaning","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157450,"byte_end":157523,"line_start":894,"line_end":894,"column_start":5,"column_end":78}},{"value":"/ from `a` to `b` and `Incoming` the reverse,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157528,"byte_end":157575,"line_start":895,"line_end":895,"column_start":5,"column_end":52}},{"value":"/ or `None` if the edge does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":157580,"byte_end":157621,"line_start":896,"line_end":896,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158908,"byte_end":158917,"line_start":932,"line_end":932,"column_start":12,"column_end":21},"name":"externals","qualname":"<Graph<N, E, Ty, Ix>>::externals","value":"pub fn externals(&Self, Direction) -> Externals<, N, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over either the nodes without edges to them\n (`Incoming`) or from them (`Outgoing`).","sig":null,"attributes":[{"value":"/ Return an iterator over either the nodes without edges to them","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158392,"byte_end":158458,"line_start":921,"line_end":921,"column_start":5,"column_end":71}},{"value":"/ (`Incoming`) or from them (`Outgoing`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158463,"byte_end":158506,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158511,"byte_end":158514,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ An *internal* node has both incoming and outgoing edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158519,"byte_end":158579,"line_start":924,"line_end":924,"column_start":5,"column_end":65}},{"value":"/ The nodes in `.externals(Incoming)` are the source nodes and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158584,"byte_end":158648,"line_start":925,"line_end":925,"column_start":5,"column_end":69}},{"value":"/ `.externals(Outgoing)` are the sinks of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158653,"byte_end":158707,"line_start":926,"line_end":926,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158712,"byte_end":158715,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ For a graph with undirected edges, both the sinks and the sources are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158720,"byte_end":158793,"line_start":928,"line_end":928,"column_start":5,"column_end":78}},{"value":"/ just the nodes without edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158798,"byte_end":158831,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158836,"byte_end":158839,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ The whole iteration computes in **O(|V|)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":158844,"byte_end":158896,"line_start":931,"line_end":931,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159133,"byte_end":159145,"line_start":938,"line_end":938,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<Graph<N, E, Ty, Ix>>::node_indices","value":"pub fn node_indices(&Self) -> NodeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159064,"byte_end":159121,"line_start":937,"line_end":937,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159433,"byte_end":159449,"line_start":946,"line_end":946,"column_start":12,"column_end":28},"name":"node_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::node_weights_mut","value":"pub fn node_weights_mut(&mut Self) -> NodeWeightsMut<, N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all node weights.","sig":null,"attributes":[{"value":"/ Return an iterator yielding mutable access to all node weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159250,"byte_end":159317,"line_start":942,"line_end":942,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159322,"byte_end":159325,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ The order in which weights are yielded matches the order of their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159330,"byte_end":159399,"line_start":944,"line_end":944,"column_start":5,"column_end":74}},{"value":"/ node indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159404,"byte_end":159421,"line_start":945,"line_end":945,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159628,"byte_end":159640,"line_start":952,"line_end":952,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<Graph<N, E, Ty, Ix>>::edge_indices","value":"pub fn edge_indices(&Self) -> EdgeIndices<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the edge indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the edge indices of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159559,"byte_end":159616,"line_start":951,"line_end":951,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159878,"byte_end":159893,"line_start":959,"line_end":959,"column_start":12,"column_end":27},"name":"edge_references","qualname":"<Graph<N, E, Ty, Ix>>::edge_references","value":"pub fn edge_references(&Self) -> EdgeReferences<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over all edges, in indexed order.","sig":null,"attributes":[{"value":"/ Create an iterator over all edges, in indexed order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159745,"byte_end":159801,"line_start":956,"line_end":956,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159806,"byte_end":159809,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":159814,"byte_end":159866,"line_start":958,"line_end":958,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160205,"byte_end":160221,"line_start":969,"line_end":969,"column_start":12,"column_end":28},"name":"edge_weights_mut","qualname":"<Graph<N, E, Ty, Ix>>::edge_weights_mut","value":"pub fn edge_weights_mut(&mut Self) -> EdgeWeightsMut<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator yielding mutable access to all edge weights.","sig":null,"attributes":[{"value":"/ Return an iterator yielding mutable access to all edge weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160022,"byte_end":160089,"line_start":965,"line_end":965,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160094,"byte_end":160097,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ The order in which weights are yielded matches the order of their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160102,"byte_end":160171,"line_start":967,"line_end":967,"column_start":5,"column_end":74}},{"value":"/ edge indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160176,"byte_end":160193,"line_start":968,"line_end":968,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160497,"byte_end":160506,"line_start":978,"line_end":978,"column_start":12,"column_end":21},"name":"raw_nodes","qualname":"<Graph<N, E, Ty, Ix>>::raw_nodes","value":"pub fn raw_nodes(&Self) -> &[Node<N, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal node array.\n","sig":null,"attributes":[{"value":"/ Access the internal node array.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160450,"byte_end":160485,"line_start":977,"line_end":977,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160616,"byte_end":160625,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"raw_edges","qualname":"<Graph<N, E, Ty, Ix>>::raw_edges","value":"pub fn raw_edges(&Self) -> &[Edge<E, Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Access the internal edge array.\n","sig":null,"attributes":[{"value":"/ Access the internal edge array.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160569,"byte_end":160604,"line_start":983,"line_end":983,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160766,"byte_end":160782,"line_start":990,"line_end":990,"column_start":12,"column_end":28},"name":"into_nodes_edges","qualname":"<Graph<N, E, Ty, Ix>>::into_nodes_edges","value":"pub fn into_nodes_edges(Self) -> (Vec<Node<N, Ix>>, Vec<Edge<E, Ix>>)","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into a vector of Nodes and a vector of Edges\n","sig":null,"attributes":[{"value":"/ Convert the graph into a vector of Nodes and a vector of Edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160688,"byte_end":160754,"line_start":989,"line_end":989,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160968,"byte_end":160978,"line_start":995,"line_end":995,"column_start":12,"column_end":22},"name":"first_edge","qualname":"<Graph<N, E, Ty, Ix>>::first_edge","value":"pub fn first_edge(&Self, NodeIndex<Ix>, Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the first edge in the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the first edge in the given direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":160875,"byte_end":160956,"line_start":994,"line_end":994,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161435,"byte_end":161444,"line_start":1009,"line_end":1009,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<Graph<N, E, Ty, Ix>>::next_edge","value":"pub fn next_edge(&Self, EdgeIndex<Ix>, Direction) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Accessor for data structure internals: the next edge for the given direction.\n","sig":null,"attributes":[{"value":"/ Accessor for data structure internals: the next edge for the given direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161342,"byte_end":161423,"line_start":1008,"line_end":1008,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162942,"byte_end":162957,"line_start":1055,"line_end":1055,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Graph<N, E, Ty, Ix>>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n-> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output) where\nSelf: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `Graph` by two indices, any combination of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161808,"byte_end":161864,"line_start":1022,"line_end":1022,"column_start":5,"column_end":61}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161869,"byte_end":161902,"line_start":1023,"line_end":1023,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161907,"byte_end":161910,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161915,"byte_end":161984,"line_start":1025,"line_end":1025,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161989,"byte_end":161992,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":161997,"byte_end":162004,"line_start":1027,"line_end":1027,"column_start":5,"column_end":12}},{"value":"/ use petgraph::{Graph, Incoming};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162009,"byte_end":162045,"line_start":1028,"line_end":1028,"column_start":5,"column_end":41}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162050,"byte_end":162079,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162084,"byte_end":162087,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ let mut gr = Graph::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162092,"byte_end":162122,"line_start":1031,"line_end":1031,"column_start":5,"column_end":35}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162127,"byte_end":162155,"line_start":1032,"line_end":1032,"column_start":5,"column_end":33}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162160,"byte_end":162188,"line_start":1033,"line_end":1033,"column_start":5,"column_end":33}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162193,"byte_end":162221,"line_start":1034,"line_end":1034,"column_start":5,"column_end":33}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162226,"byte_end":162252,"line_start":1035,"line_end":1035,"column_start":5,"column_end":31}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162257,"byte_end":162283,"line_start":1036,"line_end":1036,"column_start":5,"column_end":31}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162288,"byte_end":162314,"line_start":1037,"line_end":1037,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162319,"byte_end":162322,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ // walk the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162327,"byte_end":162392,"line_start":1039,"line_end":1039,"column_start":5,"column_end":70}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162397,"byte_end":162432,"line_start":1040,"line_end":1040,"column_start":5,"column_end":40}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162437,"byte_end":162479,"line_start":1041,"line_end":1041,"column_start":5,"column_end":47}},{"value":"/     // use a walker -- a detached neighbors iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162484,"byte_end":162540,"line_start":1042,"line_end":1042,"column_start":5,"column_end":61}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162545,"byte_end":162616,"line_start":1043,"line_end":1043,"column_start":5,"column_end":76}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162621,"byte_end":162674,"line_start":1044,"line_end":1044,"column_start":5,"column_end":58}},{"value":"/         let (nw, ew) = gr.index_twice_mut(node, edge);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162679,"byte_end":162737,"line_start":1045,"line_end":1045,"column_start":5,"column_end":63}},{"value":"/         *nw += *ew;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162742,"byte_end":162765,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162770,"byte_end":162779,"line_start":1047,"line_end":1047,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162784,"byte_end":162789,"line_start":1048,"line_end":1048,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162794,"byte_end":162797,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ // check the result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162802,"byte_end":162825,"line_start":1050,"line_end":1050,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162830,"byte_end":162856,"line_start":1051,"line_end":1051,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162861,"byte_end":162887,"line_start":1052,"line_end":1052,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162892,"byte_end":162918,"line_start":1053,"line_end":1053,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":162923,"byte_end":162930,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163622,"byte_end":163629,"line_start":1074,"line_end":1074,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Graph<N, E, Ty, Ix>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the direction of all edges\n","sig":null,"attributes":[{"value":"/ Reverse the direction of all edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163572,"byte_end":163610,"line_start":1073,"line_end":1073,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164011,"byte_end":164016,"line_start":1088,"line_end":1088,"column_start":12,"column_end":17},"name":"clear","qualname":"<Graph<N, E, Ty, Ix>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":163969,"byte_end":163999,"line_start":1087,"line_end":1087,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164129,"byte_end":164140,"line_start":1094,"line_end":1094,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Graph<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164097,"byte_end":164117,"line_start":1093,"line_end":1093,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164374,"byte_end":164382,"line_start":1102,"line_end":1102,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Graph<N, E, Ty, Ix>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164303,"byte_end":164362,"line_start":1101,"line_end":1101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164711,"byte_end":164724,"line_start":1110,"line_end":1110,"column_start":12,"column_end":25},"name":"reserve_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_nodes","value":"pub fn reserve_nodes(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more nodes to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more nodes to be inserted in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164476,"byte_end":164552,"line_start":1106,"line_end":1106,"column_start":5,"column_end":81}},{"value":"/ the graph. Graph may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164557,"byte_end":164633,"line_start":1107,"line_end":1107,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164638,"byte_end":164641,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164646,"byte_end":164699,"line_start":1109,"line_end":1109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165043,"byte_end":165056,"line_start":1118,"line_end":1118,"column_start":12,"column_end":25},"name":"reserve_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_edges","value":"pub fn reserve_edges(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more edges to be inserted in\n the graph. Graph may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more edges to be inserted in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164808,"byte_end":164884,"line_start":1114,"line_end":1114,"column_start":5,"column_end":81}},{"value":"/ the graph. Graph may reserve more space to avoid frequent reallocations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164889,"byte_end":164965,"line_start":1115,"line_end":1115,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164970,"byte_end":164973,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":164978,"byte_end":165031,"line_start":1117,"line_end":1117,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165458,"byte_end":165477,"line_start":1129,"line_end":1129,"column_start":12,"column_end":31},"name":"reserve_exact_nodes","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_nodes","value":"pub fn reserve_exact_nodes(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more nodes to be\n inserted in the graph. Does nothing if the capacity is already\n sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more nodes to be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165140,"byte_end":165215,"line_start":1122,"line_end":1122,"column_start":5,"column_end":80}},{"value":"/ inserted in the graph. Does nothing if the capacity is already","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165220,"byte_end":165286,"line_start":1123,"line_end":1123,"column_start":5,"column_end":71}},{"value":"/ sufficient.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165291,"byte_end":165306,"line_start":1124,"line_end":1124,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165311,"byte_end":165314,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ Prefer `reserve_nodes` if future insertions are expected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165319,"byte_end":165380,"line_start":1126,"line_end":1126,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165385,"byte_end":165388,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165393,"byte_end":165446,"line_start":1128,"line_end":1128,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165885,"byte_end":165904,"line_start":1140,"line_end":1140,"column_start":12,"column_end":31},"name":"reserve_exact_edges","qualname":"<Graph<N, E, Ty, Ix>>::reserve_exact_edges","value":"pub fn reserve_exact_edges(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more edges to be\n inserted in the graph.\n Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more edges to be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165567,"byte_end":165642,"line_start":1133,"line_end":1133,"column_start":5,"column_end":80}},{"value":"/ inserted in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165647,"byte_end":165673,"line_start":1134,"line_end":1134,"column_start":5,"column_end":31}},{"value":"/ Does nothing if the capacity is already sufficient.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165678,"byte_end":165733,"line_start":1135,"line_end":1135,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165738,"byte_end":165741,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Prefer `reserve_edges` if future insertions are expected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165746,"byte_end":165807,"line_start":1137,"line_end":1137,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165812,"byte_end":165815,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the new capacity overflows `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165820,"byte_end":165873,"line_start":1139,"line_end":1139,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166086,"byte_end":166105,"line_start":1145,"line_end":1145,"column_start":12,"column_end":31},"name":"shrink_to_fit_nodes","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_nodes","value":"pub fn shrink_to_fit_nodes(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying nodes collection as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the underlying nodes collection as much as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":165994,"byte_end":166074,"line_start":1144,"line_end":1144,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166258,"byte_end":166277,"line_start":1150,"line_end":1150,"column_start":12,"column_end":31},"name":"shrink_to_fit_edges","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit_edges","value":"pub fn shrink_to_fit_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying edges collection as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the underlying edges collection as much as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166166,"byte_end":166246,"line_start":1149,"line_end":1149,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166408,"byte_end":166421,"line_start":1155,"line_end":1155,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Graph<N, E, Ty, Ix>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the graph as much as possible.\n","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the graph as much as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166338,"byte_end":166396,"line_start":1154,"line_end":1154,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166820,"byte_end":166832,"line_start":1167,"line_end":1167,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<Graph<N, E, Ty, Ix>>::retain_nodes","value":"pub fn retain_nodes<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all nodes that return `true` from the `visit` closure,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166518,"byte_end":166581,"line_start":1160,"line_end":1160,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166586,"byte_end":166608,"line_start":1161,"line_end":1161,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166613,"byte_end":166616,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166621,"byte_end":166684,"line_start":1163,"line_end":1163,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166689,"byte_end":166746,"line_start":1164,"line_end":1164,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166751,"byte_end":166754,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ The order nodes are visited is not specified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":166759,"byte_end":166808,"line_start":1166,"line_end":1166,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167484,"byte_end":167496,"line_start":1186,"line_end":1186,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<Graph<N, E, Ty, Ix>>::retain_edges","value":"pub fn retain_edges<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, EdgeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all edges that return `true` from the `visit` closure,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167182,"byte_end":167245,"line_start":1179,"line_end":1179,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167250,"byte_end":167272,"line_start":1180,"line_end":1180,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167277,"byte_end":167280,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167285,"byte_end":167348,"line_start":1182,"line_end":1182,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167353,"byte_end":167410,"line_start":1183,"line_end":1183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167415,"byte_end":167418,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ The order edges are visited is not specified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167423,"byte_end":167472,"line_start":1185,"line_end":1185,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168363,"byte_end":168373,"line_start":1216,"line_end":1216,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<Graph<N, E, Ty, Ix>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `Graph` from an iterable of edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167847,"byte_end":167898,"line_start":1199,"line_end":1199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167903,"byte_end":167906,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167911,"byte_end":167958,"line_start":1201,"line_end":1201,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":167963,"byte_end":168020,"line_start":1202,"line_end":1202,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168025,"byte_end":168068,"line_start":1203,"line_end":1203,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168073,"byte_end":168076,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168081,"byte_end":168137,"line_start":1205,"line_end":1205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168142,"byte_end":168145,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168150,"byte_end":168157,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168162,"byte_end":168186,"line_start":1208,"line_end":1208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168191,"byte_end":168194,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let gr = Graph::<(), i32>::from_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168199,"byte_end":168243,"line_start":1210,"line_end":1210,"column_start":5,"column_end":49}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168248,"byte_end":168279,"line_start":1211,"line_end":1211,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168284,"byte_end":168307,"line_start":1212,"line_end":1212,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168312,"byte_end":168327,"line_start":1213,"line_end":1213,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168332,"byte_end":168339,"line_start":1214,"line_end":1214,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168344,"byte_end":168351,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168987,"byte_end":169004,"line_start":1234,"line_end":1234,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<Graph<N, E, Ty, Ix>>::extend_with_edges","value":"pub fn extend_with_edges<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[{"value":"/ Extend the graph from an iterable of edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168689,"byte_end":168736,"line_start":1227,"line_end":1227,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168741,"byte_end":168744,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168749,"byte_end":168796,"line_start":1229,"line_end":1229,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168801,"byte_end":168858,"line_start":1230,"line_end":1230,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168863,"byte_end":168906,"line_start":1231,"line_end":1231,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168911,"byte_end":168914,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":168919,"byte_end":168975,"line_start":1233,"line_end":1233,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169922,"byte_end":169925,"line_start":1261,"line_end":1261,"column_start":12,"column_end":15},"name":"map","qualname":"<Graph<N, E, Ty, Ix>>::map","value":"pub fn map<'a, F, G, N2, E2>(&'a Self, F, G) -> Graph<N2, E2, Ty, Ix> where\nF: FnMut(NodeIndex<Ix>, &'a N) -> N2, G: FnMut(EdgeIndex<Ix>, &'a E) -> E2","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[{"value":"/ Create a new `Graph` by mapping node and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169725,"byte_end":169769,"line_start":1256,"line_end":1256,"column_start":5,"column_end":49}},{"value":"/ edge weights to new values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169774,"byte_end":169805,"line_start":1257,"line_end":1257,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169810,"byte_end":169813,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the same structure and the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169818,"byte_end":169877,"line_start":1259,"line_end":1259,"column_start":5,"column_end":64}},{"value":"/ graph indices as `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":169882,"byte_end":169910,"line_start":1260,"line_end":1260,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":171263,"byte_end":171273,"line_start":1293,"line_end":1293,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Graph<N, E, Ty, Ix>>::filter_map","value":"pub fn filter_map<'a, F, G, N2, E2>(&'a Self, F, G) -> Graph<N2, E2, Ty, Ix>\nwhere F: FnMut(NodeIndex<Ix>, &'a N) -> Option<N2>,\nG: FnMut(EdgeIndex<Ix>, &'a E) -> Option<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Graph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[{"value":"/ Create a new `Graph` by mapping nodes and edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170662,"byte_end":170714,"line_start":1281,"line_end":1281,"column_start":5,"column_end":57}},{"value":"/ A node or edge may be mapped to `None` to exclude it from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170719,"byte_end":170780,"line_start":1282,"line_end":1282,"column_start":5,"column_end":66}},{"value":"/ the resulting graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170785,"byte_end":170809,"line_start":1283,"line_end":1283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170814,"byte_end":170817,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ Nodes are mapped first with the `node_map` closure, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170822,"byte_end":170882,"line_start":1285,"line_end":1285,"column_start":5,"column_end":65}},{"value":"/ `edge_map` is called for the edges that have not had any endpoint","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170887,"byte_end":170956,"line_start":1286,"line_end":1286,"column_start":5,"column_end":74}},{"value":"/ removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170961,"byte_end":170973,"line_start":1287,"line_end":1287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170978,"byte_end":170981,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the structure of a subgraph of the original graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":170986,"byte_end":171064,"line_start":1289,"line_end":1289,"column_start":5,"column_end":83}},{"value":"/ If no nodes are removed, the resulting graph has compatible node","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":171069,"byte_end":171137,"line_start":1290,"line_end":1290,"column_start":5,"column_end":73}},{"value":"/ indices; if neither nodes nor edges are removed, the result has","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":171142,"byte_end":171209,"line_start":1291,"line_end":1291,"column_start":5,"column_end":72}},{"value":"/ the same graph indices as `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":171214,"byte_end":171251,"line_start":1292,"line_end":1292,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172611,"byte_end":172625,"line_start":1323,"line_end":1323,"column_start":12,"column_end":26},"name":"into_edge_type","qualname":"<Graph<N, E, Ty, Ix>>::into_edge_type","value":"pub fn into_edge_type<NewTy>(Self) -> Graph<N, E, NewTy, Ix> where\nNewTy: EdgeType","parent":null,"children":[],"decl_id":null,"docs":" Convert the graph into either undirected or directed. No edge adjustments\n are done, so you may want to go over the result to remove or add edges.","sig":null,"attributes":[{"value":"/ Convert the graph into either undirected or directed. No edge adjustments","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172399,"byte_end":172476,"line_start":1319,"line_end":1319,"column_start":5,"column_end":82}},{"value":"/ are done, so you may want to go over the result to remove or add edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172481,"byte_end":172556,"line_start":1320,"line_end":1320,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172561,"byte_end":172564,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":172569,"byte_end":172599,"line_start":1322,"line_end":1322,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":173875,"byte_end":173884,"line_start":1361,"line_end":1361,"column_start":12,"column_end":21},"name":"Externals","qualname":"::graph_impl::Externals","value":"Externals {  }","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" An iterator over either the nodes without edges to them or from them.\n","sig":null,"attributes":[{"value":"/ An iterator over either the nodes without edges to them or from them.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":173790,"byte_end":173863,"line_start":1360,"line_end":1360,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175123,"byte_end":175132,"line_start":1402,"line_end":1402,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[{"value":"/ Iterator over the neighbors of a node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174753,"byte_end":174795,"line_start":1392,"line_end":1392,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174796,"byte_end":174799,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174800,"byte_end":174845,"line_start":1394,"line_end":1394,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174846,"byte_end":174849,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ Created with [`.neighbors()`][1], [`.neighbors_directed()`][2] or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174850,"byte_end":174919,"line_start":1396,"line_end":1396,"column_start":1,"column_end":70}},{"value":"/ [`.neighbors_undirected()`][3].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174920,"byte_end":174955,"line_start":1397,"line_end":1397,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174956,"byte_end":174959,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.Graph.html#method.neighbors","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174960,"byte_end":175003,"line_start":1399,"line_end":1399,"column_start":1,"column_end":44}},{"value":"/ [2]: struct.Graph.html#method.neighbors_directed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175004,"byte_end":175056,"line_start":1400,"line_end":1400,"column_start":1,"column_end":53}},{"value":"/ [3]: struct.Graph.html#method.neighbors_undirected","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175057,"byte_end":175111,"line_start":1401,"line_end":1401,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176730,"byte_end":176736,"line_start":1457,"line_end":1457,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"pub fn detach(&Self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[{"value":"/ Return a “walker” object that can be used to step through the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176454,"byte_end":176523,"line_start":1452,"line_end":1452,"column_start":5,"column_end":70}},{"value":"/ neighbors and edges from the origin node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176528,"byte_end":176573,"line_start":1453,"line_end":1453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176578,"byte_end":176581,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ Note: The walker does not borrow from the graph, this is to allow mixing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176586,"byte_end":176662,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ edge walking with mutating the graph's weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176667,"byte_end":176718,"line_start":1456,"line_end":1456,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178385,"byte_end":178390,"line_start":1525,"line_end":1525,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1679}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[{"value":"/ Iterator over the edges of from or to a node","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178325,"byte_end":178373,"line_start":1524,"line_end":1524,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180961,"byte_end":180975,"line_start":1612,"line_end":1612,"column_start":12,"column_end":26},"name":"NodeWeightsMut","qualname":"::graph_impl::NodeWeightsMut","value":"NodeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1701}],"decl_id":null,"docs":" Iterator yielding mutable access to all node weights.\n","sig":null,"attributes":[{"value":"/ Iterator yielding mutable access to all node weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180892,"byte_end":180949,"line_start":1611,"line_end":1611,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181449,"byte_end":181463,"line_start":1631,"line_end":1631,"column_start":12,"column_end":26},"name":"EdgeWeightsMut","qualname":"::graph_impl::EdgeWeightsMut","value":"EdgeWeightsMut {  }","parent":null,"children":[{"krate":0,"index":1714}],"decl_id":null,"docs":" Iterator yielding mutable access to all edge weights.\n","sig":null,"attributes":[{"value":"/ Iterator yielding mutable access to all edge weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181380,"byte_end":181437,"line_start":1630,"line_end":1630,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183464,"byte_end":183474,"line_start":1709,"line_end":1709,"column_start":11,"column_end":21},"name":"GraphIndex","qualname":"::graph_impl::GraphIndex","value":"GraphIndex: Copy","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"decl_id":null,"docs":" A  `GraphIndex` is a node or edge index.\n","sig":null,"attributes":[{"value":"/ A  `GraphIndex` is a node or edge index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183409,"byte_end":183453,"line_start":1708,"line_end":1708,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183510,"byte_end":183515,"line_start":1711,"line_end":1711,"column_start":8,"column_end":13},"name":"index","qualname":"::graph_impl::GraphIndex::index","value":"pub fn index(&Self) -> usize","parent":{"krate":0,"index":1755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183559,"byte_end":183572,"line_start":1713,"line_end":1713,"column_start":8,"column_end":21},"name":"is_node_index","qualname":"::graph_impl::GraphIndex::is_node_index","value":"pub fn is_node_index() -> bool","parent":{"krate":0,"index":1755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185068,"byte_end":185081,"line_start":1765,"line_end":1765,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[{"value":"/ A “walker” object that can be used to step through the edge list of a node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183946,"byte_end":184029,"line_start":1730,"line_end":1730,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184030,"byte_end":184033,"line_start":1731,"line_end":1731,"column_start":1,"column_end":4}},{"value":"/ Created with [`.detach()`](struct.Neighbors.html#method.detach).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184034,"byte_end":184102,"line_start":1732,"line_end":1732,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184103,"byte_end":184106,"line_start":1733,"line_end":1733,"column_start":1,"column_end":4}},{"value":"/ The walker does not borrow from the graph, so it lets you step through","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184107,"byte_end":184181,"line_start":1734,"line_end":1734,"column_start":1,"column_end":75}},{"value":"/ neighbors or incident edges while also mutating graph weights, as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184182,"byte_end":184251,"line_start":1735,"line_end":1735,"column_start":1,"column_end":70}},{"value":"/ in the following example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184252,"byte_end":184281,"line_start":1736,"line_end":1736,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184282,"byte_end":184285,"line_start":1737,"line_end":1737,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184286,"byte_end":184293,"line_start":1738,"line_end":1738,"column_start":1,"column_end":8}},{"value":"/ use petgraph::{Graph, Incoming};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184294,"byte_end":184330,"line_start":1739,"line_end":1739,"column_start":1,"column_end":37}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184331,"byte_end":184360,"line_start":1740,"line_end":1740,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184361,"byte_end":184364,"line_start":1741,"line_end":1741,"column_start":1,"column_end":4}},{"value":"/ let mut gr = Graph::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184365,"byte_end":184395,"line_start":1742,"line_end":1742,"column_start":1,"column_end":31}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184396,"byte_end":184424,"line_start":1743,"line_end":1743,"column_start":1,"column_end":29}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184425,"byte_end":184453,"line_start":1744,"line_end":1744,"column_start":1,"column_end":29}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184454,"byte_end":184482,"line_start":1745,"line_end":1745,"column_start":1,"column_end":29}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184483,"byte_end":184509,"line_start":1746,"line_end":1746,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184510,"byte_end":184536,"line_start":1747,"line_end":1747,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184537,"byte_end":184563,"line_start":1748,"line_end":1748,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184564,"byte_end":184567,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/ // step through the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184568,"byte_end":184641,"line_start":1750,"line_end":1750,"column_start":1,"column_end":74}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184642,"byte_end":184677,"line_start":1751,"line_end":1751,"column_start":1,"column_end":36}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184678,"byte_end":184720,"line_start":1752,"line_end":1752,"column_start":1,"column_end":43}},{"value":"/     // use a detached neighbors walker","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184721,"byte_end":184763,"line_start":1753,"line_end":1753,"column_start":1,"column_end":43}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184764,"byte_end":184835,"line_start":1754,"line_end":1754,"column_start":1,"column_end":72}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184836,"byte_end":184889,"line_start":1755,"line_end":1755,"column_start":1,"column_end":54}},{"value":"/         gr[node] += gr[edge];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184890,"byte_end":184923,"line_start":1756,"line_end":1756,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184924,"byte_end":184933,"line_start":1757,"line_end":1757,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184934,"byte_end":184939,"line_start":1758,"line_end":1758,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184940,"byte_end":184943,"line_start":1759,"line_end":1759,"column_start":1,"column_end":4}},{"value":"/ // check the result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184944,"byte_end":184967,"line_start":1760,"line_end":1760,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184968,"byte_end":184994,"line_start":1761,"line_end":1761,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":184995,"byte_end":185021,"line_start":1762,"line_end":1762,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185022,"byte_end":185048,"line_start":1763,"line_end":1763,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185049,"byte_end":185056,"line_start":1764,"line_end":1764,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185738,"byte_end":185742,"line_start":1788,"line_end":1788,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"pub fn next<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[{"value":"/ Step to the next edge and its endpoint node in the walk for graph `g`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185403,"byte_end":185477,"line_start":1782,"line_end":1782,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185482,"byte_end":185485,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ The next node indices are always the others than the starting point","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185490,"byte_end":185561,"line_start":1784,"line_end":1784,"column_start":5,"column_end":76}},{"value":"/ where the `WalkNeighbors` value was created.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185566,"byte_end":185614,"line_start":1785,"line_end":1785,"column_start":5,"column_end":53}},{"value":"/ For an `Outgoing` walk, the target nodes,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185619,"byte_end":185664,"line_start":1786,"line_end":1786,"column_start":5,"column_end":50}},{"value":"/ for an `Incoming` walk, the source nodes of the edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185669,"byte_end":185726,"line_start":1787,"line_end":1787,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":186665,"byte_end":186674,"line_start":1813,"line_end":1813,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"pub fn next_node<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":186822,"byte_end":186831,"line_start":1819,"line_end":1819,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"pub fn next_edge<N, E, Ty: EdgeType>(&mut Self, &Graph<N, E, Ty, Ix>)\n-> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187052,"byte_end":187063,"line_start":1828,"line_end":1828,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":3733},{"krate":0,"index":3734}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the node indices of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":186970,"byte_end":187016,"line_start":1826,"line_end":1826,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187712,"byte_end":187723,"line_start":1855,"line_end":1855,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the edge indices of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187630,"byte_end":187676,"line_start":1853,"line_end":1853,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188351,"byte_end":188364,"line_start":1882,"line_end":1882,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3758}],"decl_id":null,"docs":" Reference to a `Graph` edge.\n","sig":null,"attributes":[{"value":"/ Reference to a `Graph` edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188290,"byte_end":188322,"line_start":1880,"line_end":1880,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189271,"byte_end":189285,"line_start":1918,"line_end":1918,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":1837}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all nodes of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189220,"byte_end":189259,"line_start":1917,"line_end":1917,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190334,"byte_end":190340,"line_start":1959,"line_end":1959,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190163,"byte_end":190194,"line_start":1955,"line_end":1955,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190199,"byte_end":190202,"line_start":1956,"line_end":1956,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190207,"byte_end":190261,"line_start":1957,"line_end":1957,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190266,"byte_end":190322,"line_start":1958,"line_end":1958,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190798,"byte_end":190812,"line_start":1977,"line_end":1977,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":1876}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all edges of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190747,"byte_end":190786,"line_start":1976,"line_end":1976,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stable_graph","qualname":"::graph_impl::stable_graph","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":4403},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":4425},{"krate":0,"index":1913},{"krate":0,"index":4427},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":4431},{"krate":0,"index":1917},{"krate":0,"index":4433},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":4447},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1953},{"krate":0,"index":1957},{"krate":0,"index":1961},{"krate":0,"index":1978},{"krate":0,"index":1982},{"krate":0,"index":2056},{"krate":0,"index":2063},{"krate":0,"index":2070},{"krate":0,"index":2076},{"krate":0,"index":2083},{"krate":0,"index":2089},{"krate":0,"index":2095},{"krate":0,"index":2103},{"krate":0,"index":2109},{"krate":0,"index":2118},{"krate":0,"index":2123},{"krate":0,"index":2132},{"krate":0,"index":3764},{"krate":0,"index":3772},{"krate":0,"index":2139},{"krate":0,"index":2144},{"krate":0,"index":2148},{"krate":0,"index":2153},{"krate":0,"index":2158},{"krate":0,"index":2169},{"krate":0,"index":2177},{"krate":0,"index":2185},{"krate":0,"index":2196},{"krate":0,"index":2203},{"krate":0,"index":2207},{"krate":0,"index":2216},{"krate":0,"index":2221},{"krate":0,"index":2229},{"krate":0,"index":2236},{"krate":0,"index":2244},{"krate":0,"index":2249},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2276},{"krate":0,"index":2281},{"krate":0,"index":2289},{"krate":0,"index":2295},{"krate":0,"index":2304},{"krate":0,"index":2309},{"krate":0,"index":2317}],"decl_id":null,"docs":" `StableGraph` keeps indices stable across removals.","sig":null,"attributes":[{"value":"cfg(feature = \"stable_graph\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191837,"byte_end":191869,"line_start":2019,"line_end":2019,"column_start":1,"column_end":33}},{"value":"/ `StableGraph` keeps indices stable across removals.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":192386,"byte_end":192441,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":192442,"byte_end":192445,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Depends on `feature = \"stable_graph\"`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":192446,"byte_end":192488,"line_start":3,"line_end":3,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":192489,"byte_end":192492,"line_start":4,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194955,"byte_end":194966,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"StableGraph","qualname":"::graph_impl::stable_graph::StableGraph","value":"StableGraph {  }","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"decl_id":null,"docs":" `StableGraph<N, E, Ty, Ix>` is a graph datastructure using an adjacency\n list representation.","sig":null,"attributes":[{"value":"/ `StableGraph<N, E, Ty, Ix>` is a graph datastructure using an adjacency","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193388,"byte_end":193463,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ list representation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193464,"byte_end":193488,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193489,"byte_end":193492,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The graph **does not invalidate** any unrelated node or edge indices when","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193493,"byte_end":193570,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ items are removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193571,"byte_end":193593,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193594,"byte_end":193597,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ `StableGraph` is parameterized over:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193598,"byte_end":193638,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193639,"byte_end":193642,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, also called *weights*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193643,"byte_end":193720,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193721,"byte_end":193772,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193773,"byte_end":193861,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193862,"byte_end":193932,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193933,"byte_end":193936,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The graph uses **O(|V| + |E|)** space, and allows fast node and edge insert","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":193937,"byte_end":194016,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ and efficient graph search.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194017,"byte_end":194048,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194049,"byte_end":194052,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ It implements **O(e')** edge lookup and edge and node removals, where **e'**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194053,"byte_end":194133,"line_start":83,"line_end":83,"column_start":1,"column_end":81}},{"value":"/ is some local measure of edge count.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194134,"byte_end":194174,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194175,"byte_end":194178,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ - Nodes and edges are each numbered in an interval from *0* to some number","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194179,"byte_end":194257,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ *m*, but *not all* indices in the range are valid, since gaps are formed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194258,"byte_end":194334,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ by deletions.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194335,"byte_end":194352,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194353,"byte_end":194356,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - You can select graph index integer type after the size of the graph. A smaller","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194357,"byte_end":194441,"line_start":90,"line_end":90,"column_start":1,"column_end":85}},{"value":"/ size may have better performance.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194442,"byte_end":194479,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194480,"byte_end":194483,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - Using indices allows mutation while traversing the graph, see `Dfs`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194484,"byte_end":194558,"line_start":93,"line_end":93,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194559,"byte_end":194562,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ - The `StableGraph` is a regular rust collection and is `Send` and `Sync`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194563,"byte_end":194640,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ (as long as associated data `N` and `E` are).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194641,"byte_end":194690,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194691,"byte_end":194694,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ - Indices don't allow as much compile time checking as references.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194695,"byte_end":194765,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194766,"byte_end":194769,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Depends on crate feature `stable_graph` (default). *Stable Graph is still","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194770,"byte_end":194847,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"/ missing a few methods compared to Graph. You can contribute to help it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194848,"byte_end":194922,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/ achieve parity.*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":194923,"byte_end":194943,"line_start":102,"line_end":102,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195676,"byte_end":195689,"line_start":124,"line_end":124,"column_start":10,"column_end":23},"name":"StableDiGraph","qualname":"::graph_impl::stable_graph::StableDiGraph","value":"StableGraph<N, E, Directed, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with directed edges.","sig":null,"attributes":[{"value":"/ A `StableGraph` with directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195535,"byte_end":195575,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195576,"byte_end":195579,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ For example, an edge from *1* to *2* is distinct from an edge from *2* to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195580,"byte_end":195657,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195658,"byte_end":195666,"line_start":123,"line_end":123,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195899,"byte_end":195912,"line_start":130,"line_end":130,"column_start":10,"column_end":23},"name":"StableUnGraph","qualname":"::graph_impl::stable_graph::StableUnGraph","value":"StableGraph<N, E, Undirected, Ix>","parent":null,"children":[],"decl_id":null,"docs":" A `StableGraph` with undirected edges.","sig":null,"attributes":[{"value":"/ A `StableGraph` with undirected edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195748,"byte_end":195790,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195791,"byte_end":195794,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example, an edge between *1* and *2* is equivalent to an edge between","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195795,"byte_end":195872,"line_start":128,"line_end":128,"column_start":1,"column_end":78}},{"value":"/ *2* and *1*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":195873,"byte_end":195889,"line_start":129,"line_end":129,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197915,"byte_end":197918,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<StableGraph<N, E, Directed>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with directed edges.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` with directed edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197652,"byte_end":197703,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197708,"byte_end":197711,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method. See `StableGraph::with_capacity`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197716,"byte_end":197782,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ or `StableGraph::default` for a constructor that is generic in all the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197787,"byte_end":197861,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ type parameters of `StableGraph`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197866,"byte_end":197903,"line_start":181,"line_end":181,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198141,"byte_end":198154,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::with_capacity","value":"pub fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` with estimated capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` with estimated capacity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198074,"byte_end":198129,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198494,"byte_end":198502,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StableGraph<N, E, Ty, Ix>>::capacity","value":"pub fn capacity(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Return the current node and edge capacity of the graph.\n","sig":null,"attributes":[{"value":"/ Return the current node and edge capacity of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198423,"byte_end":198482,"line_start":202,"line_end":202,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198609,"byte_end":198614,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"clear","qualname":"<StableGraph<N, E, Ty, Ix>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all nodes and edges\n","sig":null,"attributes":[{"value":"/ Remove all nodes and edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198567,"byte_end":198597,"line_start":207,"line_end":207,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198839,"byte_end":198850,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":198807,"byte_end":198827,"line_start":216,"line_end":216,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199314,"byte_end":199324,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"node_count","qualname":"<StableGraph<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of nodes (vertices) in the graph.","sig":null,"attributes":[{"value":"/ Return the number of nodes (vertices) in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199204,"byte_end":199259,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199264,"byte_end":199267,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199272,"byte_end":199302,"line_start":231,"line_end":231,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199477,"byte_end":199487,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of edges in the graph.","sig":null,"attributes":[{"value":"/ Return the number of edges in the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199378,"byte_end":199422,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199427,"byte_end":199430,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199435,"byte_end":199465,"line_start":238,"line_end":238,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199615,"byte_end":199626,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the graph has directed edges or not.\n","sig":null,"attributes":[{"value":"/ Whether the graph has directed edges or not.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199541,"byte_end":199589,"line_start":243,"line_end":243,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199594,"byte_end":199603,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199975,"byte_end":199983,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"add_node","qualname":"<StableGraph<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add a node (also called vertex) with associated data `weight` to the graph.","sig":null,"attributes":[{"value":"/ Add a node (also called vertex) with associated data `weight` to the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199681,"byte_end":199760,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199765,"byte_end":199768,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199773,"byte_end":199803,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199808,"byte_end":199811,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199816,"byte_end":199853,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199858,"byte_end":199861,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the `StableGraph` is at the maximum number of nodes for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199866,"byte_end":199939,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ its index type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":199944,"byte_end":199963,"line_start":256,"line_end":256,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201445,"byte_end":201456,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_node","value":"pub fn remove_node(&mut Self, NodeIndex<Ix>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Remove `a` from the graph if it exists, and return its weight.\n If it doesn't exist in the graph, return `None`.","sig":null,"attributes":[{"value":"/ Remove `a` from the graph if it exists, and return its weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":200917,"byte_end":200983,"line_start":282,"line_end":282,"column_start":5,"column_end":71}},{"value":"/ If it doesn't exist in the graph, return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":200988,"byte_end":201040,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201045,"byte_end":201048,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The node index `a` is invalidated, but none other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201053,"byte_end":201107,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"/ Edge indices are invalidated as they would be following the removal of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201112,"byte_end":201186,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ each edge with an endpoint in `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201191,"byte_end":201229,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201234,"byte_end":201237,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of affected","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201242,"byte_end":201312,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ edges, including *n* calls to `.remove_edge()` where *n* is the number","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201317,"byte_end":201391,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ of edges with an endpoint in `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":201396,"byte_end":201433,"line_start":291,"line_end":291,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":202567,"byte_end":202580,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"contains_node","qualname":"<StableGraph<N, E, Ty, Ix>>::contains_node","value":"pub fn contains_node(&Self, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203366,"byte_end":203374,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add an edge from `a` to `b` to the graph, with its associated\n data `weight`.","sig":null,"attributes":[{"value":"/ Add an edge from `a` to `b` to the graph, with its associated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":202919,"byte_end":202984,"line_start":335,"line_end":335,"column_start":5,"column_end":70}},{"value":"/ data `weight`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":202989,"byte_end":203007,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203012,"byte_end":203015,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Return the index of the new edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203020,"byte_end":203057,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203062,"byte_end":203065,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203070,"byte_end":203100,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203105,"byte_end":203108,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203113,"byte_end":203164,"line_start":342,"line_end":342,"column_start":5,"column_end":56}},{"value":"/ **Panics** if the `StableGraph` is at the maximum number of edges for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203169,"byte_end":203242,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ its index type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203247,"byte_end":203266,"line_start":344,"line_end":344,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203271,"byte_end":203274,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ **Note:** `StableGraph` allows adding parallel (“duplicate”) edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":203279,"byte_end":203354,"line_start":346,"line_end":346,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206605,"byte_end":206616,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"update_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::update_edge","value":"pub fn update_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E)\n-> EdgeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Add or update an edge from `a` to `b`.\n If the edge already exists, its weight is updated.","sig":null,"attributes":[{"value":"/ Add or update an edge from `a` to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206226,"byte_end":206268,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/ If the edge already exists, its weight is updated.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206273,"byte_end":206327,"line_start":425,"line_end":425,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206332,"byte_end":206335,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Return the index of the affected edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206340,"byte_end":206382,"line_start":427,"line_end":427,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206387,"byte_end":206390,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206395,"byte_end":206462,"line_start":429,"line_end":429,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206467,"byte_end":206533,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206538,"byte_end":206541,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the nodes don't exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206546,"byte_end":206593,"line_start":432,"line_end":432,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":207142,"byte_end":207153,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"remove_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::remove_edge","value":"pub fn remove_edge(&mut Self, EdgeIndex<Ix>) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Remove an edge and return its edge weight, or `None` if it didn't exist.","sig":null,"attributes":[{"value":"/ Remove an edge and return its edge weight, or `None` if it didn't exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206866,"byte_end":206942,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206947,"byte_end":206950,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Invalidates the edge index `e` but no other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":206955,"byte_end":207003,"line_start":445,"line_end":445,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":207008,"byte_end":207011,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":207016,"byte_end":207083,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ conneced to the same endpoints as `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":207088,"byte_end":207130,"line_start":448,"line_end":448,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208161,"byte_end":208172,"line_start":477,"line_end":477,"column_start":12,"column_end":23},"name":"node_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight","value":"pub fn node_weight(&Self, NodeIndex<Ix>) -> Option<&N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208048,"byte_end":208083,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208088,"byte_end":208091,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[a]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208096,"byte_end":208149,"line_start":476,"line_end":476,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208475,"byte_end":208490,"line_start":487,"line_end":487,"column_start":12,"column_end":27},"name":"node_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::node_weight_mut","value":"pub fn node_weight_mut(&mut Self, NodeIndex<Ix>) -> Option<&mut N>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for node `a`, mutably.","sig":null,"attributes":[{"value":"/ Access the weight for node `a`, mutably.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208349,"byte_end":208393,"line_start":484,"line_end":484,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208398,"byte_end":208401,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[a]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208406,"byte_end":208463,"line_start":486,"line_end":486,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208748,"byte_end":208760,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"node_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::node_indices","value":"pub fn node_indices(&Self) -> NodeIndices<, N, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208679,"byte_end":208736,"line_start":494,"line_end":494,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208994,"byte_end":209005,"line_start":504,"line_end":504,"column_start":12,"column_end":23},"name":"edge_weight","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight","value":"pub fn edge_weight(&Self, EdgeIndex<Ix>) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`.","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208881,"byte_end":208916,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208921,"byte_end":208924,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&graph[e]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":208929,"byte_end":208982,"line_start":503,"line_end":503,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209307,"byte_end":209322,"line_start":514,"line_end":514,"column_start":12,"column_end":27},"name":"edge_weight_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_weight_mut","value":"pub fn edge_weight_mut(&mut Self, EdgeIndex<Ix>) -> Option<&mut E>","parent":null,"children":[],"decl_id":null,"docs":" Access the weight for edge `e`, mutably","sig":null,"attributes":[{"value":"/ Access the weight for edge `e`, mutably","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209182,"byte_end":209225,"line_start":511,"line_end":511,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209230,"byte_end":209233,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Also available with indexing syntax: `&mut graph[e]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209238,"byte_end":209295,"line_start":513,"line_end":513,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209570,"byte_end":209584,"line_start":522,"line_end":522,"column_start":12,"column_end":26},"name":"edge_endpoints","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_endpoints","value":"pub fn edge_endpoints(&Self, EdgeIndex<Ix>)\n-> Option<(NodeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Access the source and target nodes for `e`.\n","sig":null,"attributes":[{"value":"/ Access the source and target nodes for `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209511,"byte_end":209558,"line_start":521,"line_end":521,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209913,"byte_end":209925,"line_start":532,"line_end":532,"column_start":12,"column_end":24},"name":"edge_indices","qualname":"<StableGraph<N, E, Ty, Ix>>::edge_indices","value":"pub fn edge_indices(&Self) -> EdgeIndices<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the node indices of the graph\n","sig":null,"attributes":[{"value":"/ Return an iterator over the node indices of the graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":209844,"byte_end":209901,"line_start":531,"line_end":531,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210244,"byte_end":210253,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"find_edge","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge","value":"pub fn find_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge from `a` to `b`.","sig":null,"attributes":[{"value":"/ Lookup an edge from `a` to `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210046,"byte_end":210081,"line_start":538,"line_end":538,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210086,"byte_end":210089,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e')** time, where **e'** is the number of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210094,"byte_end":210161,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"/ connected to `a` (and `b`, if the graph edges are undirected).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210166,"byte_end":210232,"line_start":541,"line_end":541,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210960,"byte_end":210980,"line_start":561,"line_end":561,"column_start":12,"column_end":32},"name":"find_edge_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::find_edge_undirected","value":"pub fn find_edge_undirected(&Self, NodeIndex<Ix>, NodeIndex<Ix>)\n-> Option<(EdgeIndex<Ix>, Direction)>","parent":null,"children":[],"decl_id":null,"docs":" Lookup an edge between `a` and `b`, in either direction.","sig":null,"attributes":[{"value":"/ Lookup an edge between `a` and `b`, in either direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210617,"byte_end":210677,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210682,"byte_end":210685,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ If the graph is undirected, then this is equivalent to `.find_edge()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210690,"byte_end":210764,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210769,"byte_end":210772,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Return the edge index and its directionality, with `Outgoing` meaning","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210777,"byte_end":210850,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/ from `a` to `b` and `Incoming` the reverse,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210855,"byte_end":210902,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ or `None` if the edge does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":210907,"byte_end":210948,"line_start":560,"line_end":560,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211710,"byte_end":211719,"line_start":582,"line_end":582,"column_start":12,"column_end":21},"name":"neighbors","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors","value":"pub fn neighbors(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all nodes with an edge starting from `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all nodes with an edge starting from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211223,"byte_end":211290,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211295,"byte_end":211298,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211303,"byte_end":211345,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211350,"byte_end":211397,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211402,"byte_end":211405,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211410,"byte_end":211471,"line_start":575,"line_end":575,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211476,"byte_end":211521,"line_start":576,"line_end":576,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211526,"byte_end":211529,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211534,"byte_end":211606,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211611,"byte_end":211641,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211646,"byte_end":211649,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211654,"byte_end":211698,"line_start":581,"line_end":581,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212515,"byte_end":212533,"line_start":601,"line_end":601,"column_start":12,"column_end":30},"name":"neighbors_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_directed","value":"pub fn neighbors_directed(&Self, NodeIndex<Ix>, Direction)\n-> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in the specified direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and `a`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211823,"byte_end":211902,"line_start":586,"line_end":586,"column_start":5,"column_end":84}},{"value":"/ in the specified direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211907,"byte_end":211938,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":211943,"byte_end":212022,"line_start":588,"line_end":588,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212027,"byte_end":212030,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212035,"byte_end":212084,"line_start":590,"line_end":590,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212089,"byte_end":212136,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212141,"byte_end":212188,"line_start":592,"line_end":592,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212193,"byte_end":212196,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212201,"byte_end":212262,"line_start":594,"line_end":594,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212267,"byte_end":212312,"line_start":595,"line_end":595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212317,"byte_end":212320,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_directed(a, dir).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212325,"byte_end":212411,"line_start":597,"line_end":597,"column_start":5,"column_end":91}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212416,"byte_end":212446,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212451,"byte_end":212454,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212459,"byte_end":212503,"line_start":600,"line_end":600,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213449,"byte_end":213469,"line_start":626,"line_end":626,"column_start":12,"column_end":32},"name":"neighbors_undirected","qualname":"<StableGraph<N, E, Ty, Ix>>::neighbors_undirected","value":"pub fn neighbors_undirected(&Self, NodeIndex<Ix>) -> Neighbors<, E, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all neighbors that have an edge between them and `a`,\n in either direction.\n If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","sig":null,"attributes":[{"value":"/ Return an iterator of all neighbors that have an edge between them and `a`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212858,"byte_end":212937,"line_start":613,"line_end":613,"column_start":5,"column_end":84}},{"value":"/ in either direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212942,"byte_end":212966,"line_start":614,"line_end":614,"column_start":5,"column_end":29}},{"value":"/ If the graph's edges are undirected, this is equivalent to *.neighbors(a)*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":212971,"byte_end":213050,"line_start":615,"line_end":615,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213055,"byte_end":213058,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ - `Directed` and `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213063,"byte_end":213125,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213130,"byte_end":213133,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213138,"byte_end":213199,"line_start":619,"line_end":619,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `NodeIndex<Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213204,"byte_end":213249,"line_start":620,"line_end":620,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213254,"byte_end":213257,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Use [`.neighbors_undirected(a).detach()`][1] to get a neighbor walker that does","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213262,"byte_end":213345,"line_start":622,"line_end":622,"column_start":5,"column_end":88}},{"value":"/ not borrow from the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213350,"byte_end":213380,"line_start":623,"line_end":623,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213385,"byte_end":213388,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.Neighbors.html#method.detach","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213393,"byte_end":213437,"line_start":625,"line_end":625,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214070,"byte_end":214075,"line_start":645,"line_end":645,"column_start":12,"column_end":17},"name":"edges","qualname":"<StableGraph<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213777,"byte_end":213820,"line_start":638,"line_end":638,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213825,"byte_end":213828,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213833,"byte_end":213875,"line_start":640,"line_end":640,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213880,"byte_end":213927,"line_start":641,"line_end":641,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213932,"byte_end":213935,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":213940,"byte_end":214001,"line_start":643,"line_end":643,"column_start":5,"column_end":66}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214006,"byte_end":214058,"line_start":644,"line_end":644,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214559,"byte_end":214573,"line_start":657,"line_end":657,"column_start":12,"column_end":26},"name":"edges_directed","qualname":"<StableGraph<N, E, Ty, Ix>>::edges_directed","value":"pub fn edges_directed(&Self, NodeIndex<Ix>, Direction) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`, in the specified direction.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`, in the specified direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214175,"byte_end":214246,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214251,"byte_end":214254,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ - `Directed`, `Outgoing`: All edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214259,"byte_end":214308,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/ - `Directed`, `Incoming`: All edges to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214313,"byte_end":214360,"line_start":652,"line_end":652,"column_start":5,"column_end":52}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214365,"byte_end":214412,"line_start":653,"line_end":653,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214417,"byte_end":214420,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Produces an empty iterator if the node `a` doesn't exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214425,"byte_end":214490,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/ Iterator element type is `EdgeReference<E, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":214495,"byte_end":214547,"line_start":656,"line_end":656,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215733,"byte_end":215748,"line_start":692,"line_end":692,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<StableGraph<N, E, Ty, Ix>>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n-> (&mut <Self as Index<T>>::Output, &mut <Self as Index<U>>::Output) where\nSelf: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `StableGraph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `StableGraph` by two indices, any combination of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215539,"byte_end":215601,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215606,"byte_end":215639,"line_start":689,"line_end":689,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215644,"byte_end":215647,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":215652,"byte_end":215721,"line_start":691,"line_end":691,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217145,"byte_end":217157,"line_start":725,"line_end":725,"column_start":12,"column_end":24},"name":"retain_nodes","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_nodes","value":"pub fn retain_nodes<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all nodes that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all nodes that return `true` from the `visit` closure,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216363,"byte_end":216426,"line_start":710,"line_end":710,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216431,"byte_end":216453,"line_start":711,"line_end":711,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216458,"byte_end":216461,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216466,"byte_end":216529,"line_start":713,"line_end":713,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216534,"byte_end":216591,"line_start":714,"line_end":714,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216596,"byte_end":216599,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ The order nodes are visited is not specified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216604,"byte_end":216653,"line_start":716,"line_end":716,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216658,"byte_end":216661,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The node indices of the removed nodes are invalidated, but none other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216666,"byte_end":216740,"line_start":718,"line_end":718,"column_start":5,"column_end":79}},{"value":"/ Edge indices are invalidated as they would be following the removal of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216745,"byte_end":216819,"line_start":719,"line_end":719,"column_start":5,"column_end":79}},{"value":"/ each edge with an endpoint in a removed node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216824,"byte_end":216873,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216878,"byte_end":216881,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n + e')** time, where **n** is the number of node indices and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216886,"byte_end":216967,"line_start":722,"line_end":722,"column_start":5,"column_end":86}},{"value":"/  **e'** is the number of affected edges, including *n* calls to `.remove_edge()`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":216972,"byte_end":217056,"line_start":723,"line_end":723,"column_start":5,"column_end":89}},{"value":"/ where *n* is the number of edges with an endpoint in a removed node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217061,"byte_end":217133,"line_start":724,"line_end":724,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218034,"byte_end":218046,"line_start":747,"line_end":747,"column_start":12,"column_end":24},"name":"retain_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::retain_edges","value":"pub fn retain_edges<F>(&mut Self, F) where\nF: FnMut(Frozen<, Self>, EdgeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Keep all edges that return `true` from the `visit` closure,\n remove the others.","sig":null,"attributes":[{"value":"/ Keep all edges that return `true` from the `visit` closure,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217490,"byte_end":217553,"line_start":735,"line_end":735,"column_start":5,"column_end":68}},{"value":"/ remove the others.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217558,"byte_end":217580,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217585,"byte_end":217588,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ `visit` is provided a proxy reference to the graph, so that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217593,"byte_end":217656,"line_start":738,"line_end":738,"column_start":5,"column_end":68}},{"value":"/ the graph can be walked and associated data modified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217661,"byte_end":217718,"line_start":739,"line_end":739,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217723,"byte_end":217726,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The order edges are visited is not specified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217731,"byte_end":217780,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217785,"byte_end":217788,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ The edge indices of the removed edes are invalidated, but none other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217793,"byte_end":217866,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217871,"byte_end":217874,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(e'')** time, **e'** is the number of affected edges,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217879,"byte_end":217951,"line_start":745,"line_end":745,"column_start":5,"column_end":77}},{"value":"/ including the calls to `.remove_edge()` for each removed edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":217956,"byte_end":218022,"line_start":746,"line_end":746,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218947,"byte_end":218957,"line_start":776,"line_end":776,"column_start":12,"column_end":22},"name":"from_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::from_edges","value":"pub fn from_edges<I>(I) -> Self where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` from an iterable of edges.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` from an iterable of edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218399,"byte_end":218456,"line_start":759,"line_end":759,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218461,"byte_end":218464,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218469,"byte_end":218516,"line_start":761,"line_end":761,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218521,"byte_end":218578,"line_start":762,"line_end":762,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218583,"byte_end":218626,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218631,"byte_end":218634,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218639,"byte_end":218695,"line_start":765,"line_end":765,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218700,"byte_end":218703,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218708,"byte_end":218715,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ use petgraph::stable_graph::StableGraph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218720,"byte_end":218764,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218769,"byte_end":218772,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let gr = StableGraph::<(), i32>::from_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218777,"byte_end":218827,"line_start":770,"line_end":770,"column_start":5,"column_end":55}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218832,"byte_end":218863,"line_start":771,"line_end":771,"column_start":5,"column_end":36}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218868,"byte_end":218891,"line_start":772,"line_end":772,"column_start":5,"column_end":28}},{"value":"/     (2, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218896,"byte_end":218911,"line_start":773,"line_end":773,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218916,"byte_end":218923,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":218928,"byte_end":218935,"line_start":775,"line_end":775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219476,"byte_end":219479,"line_start":792,"line_end":792,"column_start":12,"column_end":15},"name":"map","qualname":"<StableGraph<N, E, Ty, Ix>>::map","value":"pub fn map<'a, F, G, N2, E2>(&'a Self, F, G) -> StableGraph<N2, E2, Ty, Ix>\nwhere F: FnMut(NodeIndex<Ix>, &'a N) -> N2, G: FnMut(EdgeIndex<Ix>, &'a E) ->\nE2","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping node and\n edge weights to new values.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` by mapping node and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219273,"byte_end":219323,"line_start":787,"line_end":787,"column_start":5,"column_end":55}},{"value":"/ edge weights to new values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219328,"byte_end":219359,"line_start":788,"line_end":788,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219364,"byte_end":219367,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the same structure and the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219372,"byte_end":219431,"line_start":790,"line_end":790,"column_start":5,"column_end":64}},{"value":"/ graph indices as `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":219436,"byte_end":219464,"line_start":791,"line_end":791,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220575,"byte_end":220585,"line_start":820,"line_end":820,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<StableGraph<N, E, Ty, Ix>>::filter_map","value":"pub fn filter_map<'a, F, G, N2, E2>(&'a Self, F, G)\n-> StableGraph<N2, E2, Ty, Ix> where F: FnMut(NodeIndex<Ix>, &'a N) ->\nOption<N2>, G: FnMut(EdgeIndex<Ix>, &'a E) -> Option<E2>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StableGraph` by mapping nodes and edges.\n A node or edge may be mapped to `None` to exclude it from\n the resulting graph.","sig":null,"attributes":[{"value":"/ Create a new `StableGraph` by mapping nodes and edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220061,"byte_end":220119,"line_start":809,"line_end":809,"column_start":5,"column_end":63}},{"value":"/ A node or edge may be mapped to `None` to exclude it from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220124,"byte_end":220185,"line_start":810,"line_end":810,"column_start":5,"column_end":66}},{"value":"/ the resulting graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220190,"byte_end":220214,"line_start":811,"line_end":811,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220219,"byte_end":220222,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ Nodes are mapped first with the `node_map` closure, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220227,"byte_end":220287,"line_start":813,"line_end":813,"column_start":5,"column_end":65}},{"value":"/ `edge_map` is called for the edges that have not had any endpoint","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220292,"byte_end":220361,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ removed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220366,"byte_end":220378,"line_start":815,"line_end":815,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220383,"byte_end":220386,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The resulting graph has the structure of a subgraph of the original graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220391,"byte_end":220469,"line_start":817,"line_end":817,"column_start":5,"column_end":83}},{"value":"/ Nodes and edges that are not removed maintain their old node or edge","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220474,"byte_end":220546,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/ indices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":220551,"byte_end":220563,"line_start":819,"line_end":819,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222737,"byte_end":222754,"line_start":872,"line_end":872,"column_start":12,"column_end":29},"name":"extend_with_edges","qualname":"<StableGraph<N, E, Ty, Ix>>::extend_with_edges","value":"pub fn extend_with_edges<I>(&mut Self, I) where I: IntoIterator,\nI::Item: IntoWeightedEdge<E>,\n<I::Item as IntoWeightedEdge<E>>::NodeId: Into<NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Extend the graph from an iterable of edges.","sig":null,"attributes":[{"value":"/ Extend the graph from an iterable of edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222439,"byte_end":222486,"line_start":865,"line_end":865,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222491,"byte_end":222494,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Node weights `N` are set to default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222499,"byte_end":222546,"line_start":867,"line_end":867,"column_start":5,"column_end":52}},{"value":"/ Edge weights `E` may either be specified in the list,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222551,"byte_end":222608,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/ or they are filled with default values.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222613,"byte_end":222656,"line_start":869,"line_end":869,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222661,"byte_end":222664,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Nodes are inserted automatically to match the edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":222669,"byte_end":222725,"line_start":871,"line_end":871,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232361,"byte_end":232375,"line_start":1161,"line_end":1161,"column_start":12,"column_end":26},"name":"NodeReferences","qualname":"::graph_impl::stable_graph::NodeReferences","value":"NodeReferences {  }","parent":null,"children":[{"krate":0,"index":2122}],"decl_id":null,"docs":" Iterator over all nodes of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all nodes of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232310,"byte_end":232349,"line_start":1160,"line_end":1160,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233245,"byte_end":233258,"line_start":1194,"line_end":1194,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::graph_impl::stable_graph::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3771}],"decl_id":null,"docs":" Reference to a `StableGraph` edge.\n","sig":null,"attributes":[{"value":"/ Reference to a `StableGraph` edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233178,"byte_end":233216,"line_start":1192,"line_end":1192,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233993,"byte_end":233999,"line_start":1223,"line_end":1223,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233822,"byte_end":233853,"line_start":1219,"line_end":1219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233858,"byte_end":233861,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233866,"byte_end":233920,"line_start":1221,"line_end":1221,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233925,"byte_end":233981,"line_start":1222,"line_end":1222,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235011,"byte_end":235016,"line_start":1261,"line_end":1261,"column_start":12,"column_end":17},"name":"Edges","qualname":"::graph_impl::stable_graph::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":" Iterator over the edges of from or to a node\n","sig":null,"attributes":[{"value":"/ Iterator over the edges of from or to a node","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":234951,"byte_end":234999,"line_start":1260,"line_end":1260,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":237897,"byte_end":237911,"line_start":1353,"line_end":1353,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::graph_impl::stable_graph::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":2220}],"decl_id":null,"docs":" Iterator over all edges of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over all edges of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":237846,"byte_end":237885,"line_start":1352,"line_end":1352,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239000,"byte_end":239009,"line_start":1393,"line_end":1393,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::graph_impl::stable_graph::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" Iterator over the neighbors of a node.","sig":null,"attributes":[{"value":"/ Iterator over the neighbors of a node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238900,"byte_end":238942,"line_start":1390,"line_end":1390,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238943,"byte_end":238946,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `NodeIndex`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238947,"byte_end":238988,"line_start":1392,"line_end":1392,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239524,"byte_end":239530,"line_start":1409,"line_end":1409,"column_start":12,"column_end":18},"name":"detach","qualname":"<Neighbors>::detach","value":"pub fn detach(&Self) -> WalkNeighbors<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return a “walker” object that can be used to step through the\n neighbors and edges from the origin node.","sig":null,"attributes":[{"value":"/ Return a “walker” object that can be used to step through the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239248,"byte_end":239317,"line_start":1404,"line_end":1404,"column_start":5,"column_end":70}},{"value":"/ neighbors and edges from the origin node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239322,"byte_end":239367,"line_start":1405,"line_end":1405,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239372,"byte_end":239375,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ Note: The walker does not borrow from the graph, this is to allow mixing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239380,"byte_end":239456,"line_start":1407,"line_end":1407,"column_start":5,"column_end":81}},{"value":"/ edge walking with mutating the graph's weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239461,"byte_end":239512,"line_start":1408,"line_end":1408,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241902,"byte_end":241915,"line_start":1485,"line_end":1485,"column_start":12,"column_end":25},"name":"WalkNeighbors","qualname":"::graph_impl::stable_graph::WalkNeighbors","value":"WalkNeighbors {  }","parent":null,"children":[{"krate":0,"index":2257}],"decl_id":null,"docs":" A “walker” object that can be used to step through the edge list of a node.","sig":null,"attributes":[{"value":"/ A “walker” object that can be used to step through the edge list of a node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240726,"byte_end":240809,"line_start":1449,"line_end":1449,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240810,"byte_end":240813,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ See [*.detach()*](struct.Neighbors.html#method.detach) for more information.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240814,"byte_end":240894,"line_start":1451,"line_end":1451,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240895,"byte_end":240898,"line_start":1452,"line_end":1452,"column_start":1,"column_end":4}},{"value":"/ The walker does not borrow from the graph, so it lets you step through","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240899,"byte_end":240973,"line_start":1453,"line_end":1453,"column_start":1,"column_end":75}},{"value":"/ neighbors or incident edges while also mutating graph weights, as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":240974,"byte_end":241043,"line_start":1454,"line_end":1454,"column_start":1,"column_end":70}},{"value":"/ in the following example:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241044,"byte_end":241073,"line_start":1455,"line_end":1455,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241074,"byte_end":241077,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241078,"byte_end":241085,"line_start":1457,"line_end":1457,"column_start":1,"column_end":8}},{"value":"/ use petgraph::visit::Dfs;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241086,"byte_end":241115,"line_start":1458,"line_end":1458,"column_start":1,"column_end":30}},{"value":"/ use petgraph::Incoming;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241116,"byte_end":241143,"line_start":1459,"line_end":1459,"column_start":1,"column_end":28}},{"value":"/ use petgraph::stable_graph::StableGraph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241144,"byte_end":241188,"line_start":1460,"line_end":1460,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241189,"byte_end":241192,"line_start":1461,"line_end":1461,"column_start":1,"column_end":4}},{"value":"/ let mut gr = StableGraph::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241193,"byte_end":241229,"line_start":1462,"line_end":1462,"column_start":1,"column_end":37}},{"value":"/ let a = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241230,"byte_end":241258,"line_start":1463,"line_end":1463,"column_start":1,"column_end":29}},{"value":"/ let b = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241259,"byte_end":241287,"line_start":1464,"line_end":1464,"column_start":1,"column_end":29}},{"value":"/ let c = gr.add_node(0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241288,"byte_end":241316,"line_start":1465,"line_end":1465,"column_start":1,"column_end":29}},{"value":"/ gr.add_edge(a, b, 3.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241317,"byte_end":241343,"line_start":1466,"line_end":1466,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(b, c, 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241344,"byte_end":241370,"line_start":1467,"line_end":1467,"column_start":1,"column_end":27}},{"value":"/ gr.add_edge(c, b, 1.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241371,"byte_end":241397,"line_start":1468,"line_end":1468,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241398,"byte_end":241401,"line_start":1469,"line_end":1469,"column_start":1,"column_end":4}},{"value":"/ // step through the graph and sum incoming edges into the node weight","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241402,"byte_end":241475,"line_start":1470,"line_end":1470,"column_start":1,"column_end":74}},{"value":"/ let mut dfs = Dfs::new(&gr, a);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241476,"byte_end":241511,"line_start":1471,"line_end":1471,"column_start":1,"column_end":36}},{"value":"/ while let Some(node) = dfs.next(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241512,"byte_end":241554,"line_start":1472,"line_end":1472,"column_start":1,"column_end":43}},{"value":"/     // use a detached neighbors walker","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241555,"byte_end":241597,"line_start":1473,"line_end":1473,"column_start":1,"column_end":43}},{"value":"/     let mut edges = gr.neighbors_directed(node, Incoming).detach();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241598,"byte_end":241669,"line_start":1474,"line_end":1474,"column_start":1,"column_end":72}},{"value":"/     while let Some(edge) = edges.next_edge(&gr) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241670,"byte_end":241723,"line_start":1475,"line_end":1475,"column_start":1,"column_end":54}},{"value":"/         gr[node] += gr[edge];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241724,"byte_end":241757,"line_start":1476,"line_end":1476,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241758,"byte_end":241767,"line_start":1477,"line_end":1477,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241768,"byte_end":241773,"line_start":1478,"line_end":1478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241774,"byte_end":241777,"line_start":1479,"line_end":1479,"column_start":1,"column_end":4}},{"value":"/ // check the result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241778,"byte_end":241801,"line_start":1480,"line_end":1480,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(gr[a], 0.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241802,"byte_end":241828,"line_start":1481,"line_end":1481,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[b], 4.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241829,"byte_end":241855,"line_start":1482,"line_end":1482,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(gr[c], 2.);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241856,"byte_end":241882,"line_start":1483,"line_end":1483,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241883,"byte_end":241890,"line_start":1484,"line_end":1484,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242435,"byte_end":242439,"line_start":1500,"line_end":1500,"column_start":12,"column_end":16},"name":"next","qualname":"<WalkNeighbors<Ix>>::next","value":"pub fn next<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<(EdgeIndex<Ix>, NodeIndex<Ix>)>","parent":null,"children":[],"decl_id":null,"docs":" Step to the next edge and its endpoint node in the walk for graph `g`.","sig":null,"attributes":[{"value":"/ Step to the next edge and its endpoint node in the walk for graph `g`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242100,"byte_end":242174,"line_start":1494,"line_end":1494,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242179,"byte_end":242182,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ The next node indices are always the others than the starting point","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242187,"byte_end":242258,"line_start":1496,"line_end":1496,"column_start":5,"column_end":76}},{"value":"/ where the `WalkNeighbors` value was created.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242263,"byte_end":242311,"line_start":1497,"line_end":1497,"column_start":5,"column_end":53}},{"value":"/ For an `Outgoing` walk, the target nodes,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242316,"byte_end":242361,"line_start":1498,"line_end":1498,"column_start":5,"column_end":50}},{"value":"/ for an `Incoming` walk, the source nodes of the edge.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242366,"byte_end":242423,"line_start":1499,"line_end":1499,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242602,"byte_end":242611,"line_start":1505,"line_end":1505,"column_start":12,"column_end":21},"name":"next_node","qualname":"<WalkNeighbors<Ix>>::next_node","value":"pub fn next_node<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<NodeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242765,"byte_end":242774,"line_start":1511,"line_end":1511,"column_start":12,"column_end":21},"name":"next_edge","qualname":"<WalkNeighbors<Ix>>::next_edge","value":"pub fn next_edge<N, E, Ty: EdgeType>(&mut Self, &StableGraph<N, E, Ty, Ix>)\n-> Option<EdgeIndex<Ix>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242977,"byte_end":242988,"line_start":1519,"line_end":1519,"column_start":12,"column_end":23},"name":"NodeIndices","qualname":"::graph_impl::stable_graph::NodeIndices","value":"NodeIndices {  }","parent":null,"children":[{"krate":0,"index":2280}],"decl_id":null,"docs":" Iterator over the node indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the node indices of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242919,"byte_end":242965,"line_start":1518,"line_end":1518,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244333,"byte_end":244344,"line_start":1565,"line_end":1565,"column_start":12,"column_end":23},"name":"EdgeIndices","qualname":"::graph_impl::stable_graph::EdgeIndices","value":"EdgeIndices {  }","parent":null,"children":[{"krate":0,"index":2308}],"decl_id":null,"docs":" Iterator over the edge indices of a graph.\n","sig":null,"attributes":[{"value":"/ Iterator over the edge indices of a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244275,"byte_end":244321,"line_start":1564,"line_end":1564,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247799,"byte_end":247802,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Frozen>::new","value":"pub fn new(&'a mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Frozen` from a mutable reference to a graph.\n","sig":null,"attributes":[{"value":"/ Create a new `Frozen` from a mutable reference to a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247725,"byte_end":247787,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248677,"byte_end":248692,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"index_twice_mut","qualname":"<Frozen>::index_twice_mut","value":"pub fn index_twice_mut<T, U>(&mut Self, T, U)\n->\n    (&mut <Graph<N, E, Ty, Ix> as Index<T>>::Output,\n     &mut <Graph<N, E, Ty, Ix> as Index<U>>::Output) where\nGraph<N, E, Ty, Ix>: IndexMut<T> + IndexMut<U>, T: GraphIndex, U: GraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Index the `Graph` by two indices, any combination of\n node or edge indices is fine.","sig":null,"attributes":[{"value":"/ Index the `Graph` by two indices, any combination of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248489,"byte_end":248545,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ node or edge indices is fine.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248550,"byte_end":248583,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248588,"byte_end":248591,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the indices are equal or if they are out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248596,"byte_end":248665,"line_start":51,"line_end":51,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192354,"byte_end":192360,"line_start":2034,"line_end":2034,"column_start":12,"column_end":18},"name":"Frozen","qualname":"::graph_impl::Frozen","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Frozen` is a graph wrapper.","sig":null,"attributes":[{"value":"/ `Frozen` is a graph wrapper.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191905,"byte_end":191937,"line_start":2023,"line_end":2023,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191938,"byte_end":191941,"line_start":2024,"line_end":2024,"column_start":1,"column_end":4}},{"value":"/ The `Frozen` only allows shared access (read-only) to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191942,"byte_end":192003,"line_start":2025,"line_end":2025,"column_start":1,"column_end":62}},{"value":"/ underlying graph `G`, but it allows mutable access to its","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192004,"byte_end":192065,"line_start":2026,"line_end":2026,"column_start":1,"column_end":62}},{"value":"/ node and edge weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192066,"byte_end":192092,"line_start":2027,"line_end":2027,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192093,"byte_end":192096,"line_start":2028,"line_end":2028,"column_start":1,"column_end":4}},{"value":"/ This is used to ensure immutability of the graph's structure","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192097,"byte_end":192161,"line_start":2029,"line_end":2029,"column_start":1,"column_end":65}},{"value":"/ while permitting weights to be both read and written.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192162,"byte_end":192219,"line_start":2030,"line_end":2030,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192220,"byte_end":192223,"line_start":2031,"line_end":2031,"column_start":1,"column_end":4}},{"value":"/ See indexing implementations and the traits `Data` and `DataMap`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192224,"byte_end":192292,"line_start":2032,"line_end":2032,"column_start":1,"column_end":69}},{"value":"/ for read-write access to the graph's weights.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":192293,"byte_end":192342,"line_start":2033,"line_end":2033,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dot","qualname":"::dot","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":3866},{"krate":0,"index":3883},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2430},{"krate":0,"index":2436},{"krate":0,"index":2442},{"krate":0,"index":2446},{"krate":0,"index":2450},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2461}],"decl_id":null,"docs":" Simple graphviz dot file format output.\n","sig":null,"attributes":[{"value":"/ Simple graphviz dot file format output.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250263,"byte_end":250306,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251392,"byte_end":251395,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Dot","qualname":"::dot::Dot","value":"Dot {  }","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402}],"decl_id":null,"docs":" `Dot` implements output to graphviz .dot format for a graph.","sig":null,"attributes":[{"value":"/ `Dot` implements output to graphviz .dot format for a graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250371,"byte_end":250435,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250436,"byte_end":250439,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Formatting and options are rather simple, this is mostly intended","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250440,"byte_end":250509,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ for debugging. Exact output may change.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250510,"byte_end":250553,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250554,"byte_end":250557,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250558,"byte_end":250572,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250573,"byte_end":250576,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250577,"byte_end":250584,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250585,"byte_end":250609,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/ use petgraph::dot::{Dot, Config};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250610,"byte_end":250647,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250648,"byte_end":250651,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut graph = Graph::<_, ()>::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250652,"byte_end":250694,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ graph.add_node(\"A\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250695,"byte_end":250719,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"B\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250720,"byte_end":250744,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"C\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250745,"byte_end":250769,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ graph.add_node(\"D\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250770,"byte_end":250794,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/ graph.extend_with_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250795,"byte_end":250825,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/     (0, 1), (0, 2), (0, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250826,"byte_end":250857,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/     (1, 2), (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250858,"byte_end":250881,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/     (2, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250882,"byte_end":250897,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250898,"byte_end":250905,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250906,"byte_end":250909,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ println!(\"{:?}\", Dot::with_config(&graph, &[Config::EdgeNoLabel]));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250910,"byte_end":250981,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250982,"byte_end":250985,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // In this case the output looks like this:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":250986,"byte_end":251033,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ // ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251034,"byte_end":251041,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ // digraph {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251042,"byte_end":251058,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ //     0 [label=\"\\\"A\\\"\"]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251059,"byte_end":251087,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ //     1 [label=\"\\\"B\\\"\"]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251088,"byte_end":251116,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ //     2 [label=\"\\\"C\\\"\"]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251117,"byte_end":251145,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ //     3 [label=\"\\\"D\\\"\"]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251146,"byte_end":251174,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ //     0 -> 1","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251175,"byte_end":251192,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ //     0 -> 2","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251193,"byte_end":251210,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/ //     0 -> 3","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251211,"byte_end":251228,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ //     1 -> 2","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251229,"byte_end":251246,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ //     1 -> 3","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251247,"byte_end":251264,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ //     2 -> 3","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251265,"byte_end":251282,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ // }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251283,"byte_end":251291,"line_start":44,"line_end":44,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251292,"byte_end":251295,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // If you need multiple config options, just list them all in the slice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251296,"byte_end":251372,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251373,"byte_end":251380,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251713,"byte_end":251716,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Dot>::new","value":"pub fn new(G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with default configuration.\n","sig":null,"attributes":[{"value":"/ Create a `Dot` formatting wrapper with default configuration.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251636,"byte_end":251701,"line_start":58,"line_end":58,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251862,"byte_end":251873,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Dot>::with_config","value":"pub fn with_config(G, &'a [Config]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dot` formatting wrapper with custom configuration.\n","sig":null,"attributes":[{"value":"/ Create a `Dot` formatting wrapper with custom configuration.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251786,"byte_end":251850,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252195,"byte_end":252209,"line_start":78,"line_end":78,"column_start":5,"column_end":19},"name":"NodeIndexLabel","qualname":"::dot::Config::NodeIndexLabel","value":"Config::NodeIndexLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use indices for node labels.\n","sig":null,"attributes":[{"value":"/ Use indices for node labels.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252158,"byte_end":252190,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252252,"byte_end":252266,"line_start":80,"line_end":80,"column_start":5,"column_end":19},"name":"EdgeIndexLabel","qualname":"::dot::Config::EdgeIndexLabel","value":"Config::EdgeIndexLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use indices for edge labels.\n","sig":null,"attributes":[{"value":"/ Use indices for edge labels.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252215,"byte_end":252247,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252300,"byte_end":252311,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"EdgeNoLabel","qualname":"::dot::Config::EdgeNoLabel","value":"Config::EdgeNoLabel","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Use no edge labels.\n","sig":null,"attributes":[{"value":"/ Use no edge labels.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252272,"byte_end":252295,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252336,"byte_end":252347,"line_start":84,"line_end":84,"column_start":5,"column_end":16},"name":"_Incomplete","qualname":"::dot::Config::_Incomplete","value":"Config::_Incomplete(())","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252145,"byte_end":252151,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Config","qualname":"::dot::Config","value":"pub enum Config {\n\n    /// Use indices for node labels.\n    NodeIndexLabel,\n\n    /// Use indices for edge labels.\n    EdgeIndexLabel,\n\n    /// Use no edge labels.\n    EdgeNoLabel,\n\n    #[doc(hidden)]\n    _Incomplete(()),\n}","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3873}],"decl_id":null,"docs":" `Dot` configuration.","sig":null,"attributes":[{"value":"/ `Dot` configuration.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252003,"byte_end":252027,"line_start":72,"line_end":72,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252028,"byte_end":252031,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This enum does not have an exhaustive definition (will be expanded)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252032,"byte_end":252103,"line_start":74,"line_end":74,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unionfind","qualname":"::unionfind","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","parent":null,"children":[{"krate":0,"index":2465},{"krate":0,"index":3887},{"krate":0,"index":3894},{"krate":0,"index":3891},{"krate":0,"index":2466},{"krate":0,"index":2468}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure.\n","sig":null,"attributes":[{"value":"/ `UnionFind<K>` is a disjoint-set data structure.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256188,"byte_end":256240,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256782,"byte_end":256791,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"UnionFind","qualname":"::unionfind::UnionFind","value":"UnionFind {  }","parent":null,"children":[{"krate":0,"index":3889},{"krate":0,"index":3890}],"decl_id":null,"docs":" `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements\n indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","sig":null,"attributes":[{"value":"/ `UnionFind<K>` is a disjoint-set data structure. It tracks set membership of *n* elements","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256272,"byte_end":256365,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ indexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256366,"byte_end":256461,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256462,"byte_end":256465,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ <http://en.wikipedia.org/wiki/Disjoint-set_data_structure>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256466,"byte_end":256528,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256529,"byte_end":256532,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Too awesome not to quote:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256533,"byte_end":256562,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256563,"byte_end":256566,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ “The amortized time per operation is **O(α(n))** where **α(n)** is the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256567,"byte_end":256645,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ inverse of **f(x) = A(x, x)** with **A** being the extremely fast-growing Ackermann function.”","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":256646,"byte_end":256746,"line_start":13,"line_end":13,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257566,"byte_end":257569,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<UnionFind<K>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UnionFind` of `n` disjoint sets.\n","sig":null,"attributes":[{"value":"/ Create a new `UnionFind` of `n` disjoint sets.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257504,"byte_end":257554,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257846,"byte_end":257850,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"find","qualname":"<UnionFind<K>>::find","value":"pub fn find(&Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[{"value":"/ Return the representative for `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257744,"byte_end":257782,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257787,"byte_end":257790,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `x` is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257795,"byte_end":257834,"line_start":50,"line_end":50,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258542,"byte_end":258550,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"find_mut","qualname":"<UnionFind<K>>::find_mut","value":"pub fn find_mut(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Return the representative for `x`.","sig":null,"attributes":[{"value":"/ Return the representative for `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258298,"byte_end":258336,"line_start":68,"line_end":68,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258341,"byte_end":258344,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Write back the found representative, flattening the internal","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258349,"byte_end":258413,"line_start":70,"line_end":70,"column_start":5,"column_end":69}},{"value":"/ datastructure in the process and quicken future lookups.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258418,"byte_end":258478,"line_start":71,"line_end":71,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258483,"byte_end":258486,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `x` is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":258491,"byte_end":258530,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259297,"byte_end":259302,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"union","qualname":"<UnionFind<K>>::union","value":"pub fn union(&mut Self, K, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unify the two sets containing `x` and `y`.","sig":null,"attributes":[{"value":"/ Unify the two sets containing `x` and `y`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259084,"byte_end":259130,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259135,"byte_end":259138,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Return `false` if the sets were already the same, `true` if they were unified.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259143,"byte_end":259225,"line_start":98,"line_end":98,"column_start":5,"column_end":87}},{"value":"/ ","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259230,"byte_end":259234,"line_start":99,"line_end":99,"column_start":5,"column_end":9}},{"value":"/ **Panics** if `x` or `y` is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":259239,"byte_end":259285,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":260178,"byte_end":260191,"line_start":133,"line_end":133,"column_start":12,"column_end":25},"name":"into_labeling","qualname":"<UnionFind<K>>::into_labeling","value":"pub fn into_labeling(Self) -> Vec<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector mapping each element to its representative.\n","sig":null,"attributes":[{"value":"/ Return a vector mapping each element to its representative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":260103,"byte_end":260166,"line_start":132,"line_end":132,"column_start":5,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261360,"byte_end":261368,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"dijkstra","qualname":"::dijkstra::dijkstra","value":"pub fn dijkstra<G, F, K>(G, G::NodeId, Option<G::NodeId>, F)\n-> HashMap<G::NodeId, K> where G: IntoEdges + Visitable, G::NodeId: Eq + Hash,\nF: FnMut(G::EdgeRef) -> K, K: Measure + Copy","parent":null,"children":[],"decl_id":null,"docs":" [Generic] Dijkstra's shortest path algorithm.","sig":null,"attributes":[{"value":"/ [Generic] Dijkstra's shortest path algorithm.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260826,"byte_end":260875,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260876,"byte_end":260879,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Compute the length of the shortest path from `start` to every reachable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260880,"byte_end":260955,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260956,"byte_end":260965,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260966,"byte_end":260969,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The graph should be `Visitable` and implement `IntoEdges`. The function","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":260970,"byte_end":261045,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ `edge_cost` should return the cost for a particular edge, which is used","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261046,"byte_end":261121,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ to compute path costs. Edge costs must be non-negative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261122,"byte_end":261181,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261182,"byte_end":261185,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If `goal` is not `None`, then the algorithm terminates once the `goal` node's","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261186,"byte_end":261267,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ cost is calculated.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261268,"byte_end":261291,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261292,"byte_end":261295,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Returns a `HashMap` that maps `NodeId` to path cost.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dijkstra.rs","byte_start":261296,"byte_end":261352,"line_start":33,"line_end":33,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264763,"byte_end":264768,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"astar","qualname":"::astar::astar","value":"pub fn astar<G, F, H, K, IsGoal>(G, G::NodeId, IsGoal, F, H)\n-> Option<(K, Vec<G::NodeId>)> where G: IntoEdges + Visitable,\nIsGoal: FnMut(G::NodeId) -> bool, G::NodeId: Eq + Hash, F: FnMut(G::EdgeRef)\n-> K, H: FnMut(G::NodeId) -> K, K: Measure + Copy","parent":null,"children":[],"decl_id":null,"docs":" [Generic] A* shortest path algorithm.","sig":null,"attributes":[{"value":"/ [Generic] A* shortest path algorithm.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263255,"byte_end":263296,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263297,"byte_end":263300,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Computes the shortest path from `start` to `finish`, including the total path cost.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263301,"byte_end":263388,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263389,"byte_end":263392,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `finish` is implicitly given via the `is_goal` callback, which should return `true` if the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263393,"byte_end":263487,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/ given node is the finish node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263488,"byte_end":263522,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263523,"byte_end":263526,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The function `edge_cost` should return the cost for a particular edge. Edge costs must be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263527,"byte_end":263620,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ non-negative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263621,"byte_end":263638,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263639,"byte_end":263642,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The function `estimate_cost` should return the estimated cost to the finish for a particular","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263643,"byte_end":263739,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ node. For the algorithm to find the actual shortest path, it should be admissible, meaning that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263740,"byte_end":263839,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ it should never overestimate the actual cost to get to the nearest goal node. Estimate costs","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263840,"byte_end":263936,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ must also be non-negative.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263937,"byte_end":263967,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263968,"byte_end":263971,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The graph should be `Visitable` and implement `IntoEdges`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":263972,"byte_end":264034,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264035,"byte_end":264038,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264039,"byte_end":264046,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use petgraph::Graph;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264047,"byte_end":264071,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ use petgraph::algo::astar;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264072,"byte_end":264102,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264103,"byte_end":264106,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let mut g = Graph::new();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264107,"byte_end":264136,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ let a = g.add_node((0., 0.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264137,"byte_end":264170,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ let b = g.add_node((2., 0.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264171,"byte_end":264204,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ let c = g.add_node((1., 1.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264205,"byte_end":264238,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ let d = g.add_node((0., 2.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264239,"byte_end":264272,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ let e = g.add_node((3., 3.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264273,"byte_end":264306,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ let f = g.add_node((4., 2.));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264307,"byte_end":264340,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ g.extend_with_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264341,"byte_end":264367,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/     (a, b, 2),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264368,"byte_end":264386,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/     (a, d, 4),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264387,"byte_end":264405,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/     (b, c, 1),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264406,"byte_end":264424,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/     (b, f, 7),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264425,"byte_end":264443,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/     (c, e, 5),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264444,"byte_end":264462,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/     (e, f, 1),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264463,"byte_end":264481,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/     (d, e, 1),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264482,"byte_end":264500,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264501,"byte_end":264508,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264509,"byte_end":264512,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let path = astar(&g, a, |finish| finish == f, |e| *e.weight(), |_| 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264513,"byte_end":264587,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(path, Some((6, vec![a, d, e, f])));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264588,"byte_end":264638,"line_start":62,"line_end":62,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264639,"byte_end":264646,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264647,"byte_end":264650,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Returns the total cost + the path of subsequent `NodeId` from start to finish, if one was","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264651,"byte_end":264744,"line_start":65,"line_end":65,"column_start":1,"column_end":94}},{"value":"/ found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":264745,"byte_end":264755,"line_start":66,"line_end":66,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"csr","qualname":"::csr","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":4599},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":3897},{"krate":0,"index":3908},{"krate":0,"index":2563},{"krate":0,"index":2569},{"krate":0,"index":2575},{"krate":0,"index":3914},{"krate":0,"index":3918},{"krate":0,"index":3916},{"krate":0,"index":2583},{"krate":0,"index":2591},{"krate":0,"index":3920},{"krate":0,"index":3935},{"krate":0,"index":3929},{"krate":0,"index":3941},{"krate":0,"index":3951},{"krate":0,"index":2612},{"krate":0,"index":2618},{"krate":0,"index":2623},{"krate":0,"index":2629},{"krate":0,"index":2641},{"krate":0,"index":2649},{"krate":0,"index":2656},{"krate":0,"index":2665},{"krate":0,"index":2677},{"krate":0,"index":2684},{"krate":0,"index":2692},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2708},{"krate":0,"index":3957},{"krate":0,"index":3965},{"krate":0,"index":3961},{"krate":0,"index":2709},{"krate":0,"index":2715},{"krate":0,"index":2723},{"krate":0,"index":2731},{"krate":0,"index":2736},{"krate":0,"index":2743},{"krate":0,"index":2749},{"krate":0,"index":2753},{"krate":0,"index":2758},{"krate":0,"index":2766},{"krate":0,"index":2772}],"decl_id":null,"docs":" Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.\n","sig":null,"attributes":[{"value":"/ Compressed Sparse Row (CSR) is a sparse adjacency matrix graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":267856,"byte_end":267923,"line_start":1,"line_end":1,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268461,"byte_end":268470,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"NodeIndex","qualname":"::csr::NodeIndex","value":"Ix","parent":null,"children":[],"decl_id":null,"docs":" Csr node index type, a plain integer.\n","sig":null,"attributes":[{"value":"/ Csr node index type, a plain integer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268410,"byte_end":268451,"line_start":24,"line_end":24,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268544,"byte_end":268553,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"EdgeIndex","qualname":"::csr::EdgeIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Csr edge index type, a plain integer.\n","sig":null,"attributes":[{"value":"/ Csr edge index type, a plain integer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268493,"byte_end":268534,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269287,"byte_end":269290,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"Csr","qualname":"::csr::Csr","value":"Csr {  }","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907}],"decl_id":null,"docs":" Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","sig":null,"attributes":[{"value":"/ Compressed Sparse Row ([`CSR`]) is a sparse adjacency matrix graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268605,"byte_end":268676,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268677,"byte_end":268680,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `CSR` is parameterized over:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268681,"byte_end":268713,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268714,"byte_end":268717,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Associated data `N` for nodes and `E` for edges, called *weights*.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268718,"byte_end":268790,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/   The associated data can be of arbitrary type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268791,"byte_end":268842,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/ - Edge type `Ty` that determines whether the graph edges are directed or undirected.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268843,"byte_end":268931,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ - Index type `Ix`, which determines the maximum size of the graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":268932,"byte_end":269002,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269003,"byte_end":269006,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269007,"byte_end":269010,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Using **O(|E| + |V|)** space.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269011,"byte_end":269044,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269045,"byte_end":269048,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Self loops are allowed, no parallel edges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269049,"byte_end":269095,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269096,"byte_end":269099,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Fast iteration of the outgoing edges of a vertex.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269100,"byte_end":269153,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ [`CSR`]: https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_(CSR,_CRS_or_Yale_format)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269154,"byte_end":269258,"line_start":46,"line_end":46,"column_start":1,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270332,"byte_end":270335,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Csr<N, E, Ty, Ix>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Csr`.\n","sig":null,"attributes":[{"value":"/ Create an empty `Csr`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270294,"byte_end":270320,"line_start":87,"line_end":87,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271173,"byte_end":271183,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"with_nodes","qualname":"<Csr<N, E, Ty, Ix>>::with_nodes","value":"pub fn with_nodes(usize) -> Self where N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","sig":null,"attributes":[{"value":"/ Create a new [`Csr`] with `n` nodes. `N` must implement [`Default`] for the weight of each node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270557,"byte_end":270657,"line_start":99,"line_end":99,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270662,"byte_end":270665,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`Default`]: https://doc.rust-lang.org/nightly/core/default/trait.Default.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270670,"byte_end":270752,"line_start":101,"line_end":101,"column_start":5,"column_end":87}},{"value":"/ [`Csr`]: #struct.Csr.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270757,"byte_end":270786,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270791,"byte_end":270794,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270799,"byte_end":270812,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270817,"byte_end":270828,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ use petgraph::csr::Csr;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270833,"byte_end":270860,"line_start":106,"line_end":106,"column_start":5,"column_end":32}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270865,"byte_end":270894,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270899,"byte_end":270902,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270907,"byte_end":270924,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270929,"byte_end":270932,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let graph = Csr::<u8,()>::with_nodes(5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270937,"byte_end":270981,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(graph.node_count(),5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270986,"byte_end":271023,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(graph.edge_count(),0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271028,"byte_end":271065,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271070,"byte_end":271073,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(graph[0],0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271078,"byte_end":271105,"line_start":115,"line_end":115,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(graph[4],0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271110,"byte_end":271137,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271142,"byte_end":271149,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271154,"byte_end":271161,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271576,"byte_end":271590,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"EdgesNotSorted","qualname":"::csr::EdgesNotSorted","value":"EdgesNotSorted {  }","parent":null,"children":[{"krate":0,"index":3915}],"decl_id":null,"docs":" Csr creation error: edges were not in sorted order.\n","sig":null,"attributes":[{"value":"/ Csr creation error: edges were not in sorted order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271485,"byte_end":271540,"line_start":133,"line_end":133,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272367,"byte_end":272384,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"from_sorted_edges","qualname":"<Csr<N, E, Directed, Ix>>::from_sorted_edges","value":"pub fn from_sorted_edges<Edge>(&[Edge]) -> Result<Self, EdgesNotSorted> where\nEdge: Clone + IntoWeightedEdge<E, NodeId = NodeIndex<Ix>>, N: Default","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Csr` from a sorted sequence of edges","sig":null,"attributes":[{"value":"/ Create a new `Csr` from a sorted sequence of edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271700,"byte_end":271754,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271759,"byte_end":271762,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Edges **must** be sorted and unique, where the sort order is the default","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271767,"byte_end":271843,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ order for the pair *(u, v)* in Rust (*u* has priority).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271848,"byte_end":271907,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271912,"byte_end":271915,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(|E| + |V|)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271920,"byte_end":271958,"line_start":148,"line_end":148,"column_start":5,"column_end":43}},{"value":"/ # Example","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271963,"byte_end":271976,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271981,"byte_end":271992,"line_start":150,"line_end":150,"column_start":5,"column_end":16}},{"value":"/ use petgraph::csr::Csr;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271997,"byte_end":272024,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272029,"byte_end":272058,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272063,"byte_end":272066,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272071,"byte_end":272088,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272093,"byte_end":272096,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let graph = Csr::<(),()>::from_sorted_edges(&[","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272101,"byte_end":272151,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/                     (0, 1), (0, 2),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272156,"byte_end":272195,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/                     (1, 0), (1, 2), (1, 3),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272200,"byte_end":272247,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/                     (2, 0),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272252,"byte_end":272283,"line_start":159,"line_end":159,"column_start":5,"column_end":36}},{"value":"/                     (3, 1),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272288,"byte_end":272319,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/ ]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272324,"byte_end":272331,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272336,"byte_end":272343,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":272348,"byte_end":272355,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275368,"byte_end":275378,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"node_count","qualname":"<Csr<N, E, Ty, Ix>>::node_count","value":"pub fn node_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275442,"byte_end":275452,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"edge_count","qualname":"<Csr<N, E, Ty, Ix>>::edge_count","value":"pub fn edge_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275606,"byte_end":275617,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"is_directed","qualname":"<Csr<N, E, Ty, Ix>>::is_directed","value":"pub fn is_directed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275704,"byte_end":275715,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"clear_edges","qualname":"<Csr<N, E, Ty, Ix>>::clear_edges","value":"pub fn clear_edges(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all edges\n","sig":null,"attributes":[{"value":"/ Remove all edges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275672,"byte_end":275692,"line_start":257,"line_end":257,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276030,"byte_end":276038,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"add_node","qualname":"<Csr<N, E, Ty, Ix>>::add_node","value":"pub fn add_node(&mut Self, N) -> NodeIndex<Ix>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new node with the given weight, returning the corresponding node index.\n","sig":null,"attributes":[{"value":"/ Adds a new node with the given weight, returning the corresponding node index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275936,"byte_end":276018,"line_start":269,"line_end":269,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276462,"byte_end":276470,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"add_edge","qualname":"<Csr<N, E, Ty, Ix>>::add_edge","value":"pub fn add_edge(&mut Self, NodeIndex<Ix>, NodeIndex<Ix>, E) -> bool where\nE: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the edge was added","sig":null,"attributes":[{"value":"/ Return `true` if the edge was added","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276222,"byte_end":276261,"line_start":277,"line_end":277,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276266,"byte_end":276269,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If you add all edges in row-major order, the time complexity","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276274,"byte_end":276338,"line_start":279,"line_end":279,"column_start":5,"column_end":69}},{"value":"/ is **O(|V|·|E|)** for the whole operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276343,"byte_end":276390,"line_start":280,"line_end":280,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276395,"byte_end":276398,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":276403,"byte_end":276450,"line_start":282,"line_end":282,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278306,"byte_end":278319,"line_start":338,"line_end":338,"column_start":12,"column_end":25},"name":"contains_edge","qualname":"<Csr<N, E, Ty, Ix>>::contains_edge","value":"pub fn contains_edge(&Self, NodeIndex<Ix>, NodeIndex<Ix>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(log |V|)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(log |V|)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278199,"byte_end":278235,"line_start":335,"line_end":335,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278240,"byte_end":278243,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278248,"byte_end":278294,"line_start":337,"line_end":337,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278900,"byte_end":278910,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"out_degree","qualname":"<Csr<N, E, Ty, Ix>>::out_degree","value":"pub fn out_degree(&Self, NodeIndex<Ix>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278799,"byte_end":278829,"line_start":353,"line_end":353,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278834,"byte_end":278837,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":278842,"byte_end":278888,"line_start":355,"line_end":355,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279124,"byte_end":279139,"line_start":364,"line_end":364,"column_start":12,"column_end":27},"name":"neighbors_slice","qualname":"<Csr<N, E, Ty, Ix>>::neighbors_slice","value":"pub fn neighbors_slice(&Self, NodeIndex<Ix>) -> &[NodeIndex<Ix>]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279023,"byte_end":279053,"line_start":361,"line_end":361,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279058,"byte_end":279061,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279066,"byte_end":279112,"line_start":363,"line_end":363,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279330,"byte_end":279341,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"edges_slice","qualname":"<Csr<N, E, Ty, Ix>>::edges_slice","value":"pub fn edges_slice(&Self, NodeIndex<Ix>) -> &[E]","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279229,"byte_end":279259,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279264,"byte_end":279267,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279272,"byte_end":279318,"line_start":370,"line_end":370,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279719,"byte_end":279724,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"edges","qualname":"<Csr<N, E, Ty, Ix>>::edges","value":"pub fn edges(&Self, NodeIndex<Ix>) -> Edges<, E, Ty, Ix>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of all edges of `a`.","sig":null,"attributes":[{"value":"/ Return an iterator of all edges of `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279433,"byte_end":279476,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279481,"byte_end":279484,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ - `Directed`: Outgoing edges from `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279489,"byte_end":279531,"line_start":377,"line_end":377,"column_start":5,"column_end":47}},{"value":"/ - `Undirected`: All edges connected to `a`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279536,"byte_end":279583,"line_start":378,"line_end":378,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279588,"byte_end":279591,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the node `a` does not exist.<br>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279596,"byte_end":279646,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/ Iterator element type is `EdgeReference<E, Ty, Ix>`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":279651,"byte_end":279707,"line_start":381,"line_end":381,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3920},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280023,"byte_end":280028,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"Edges","qualname":"::csr::Edges","value":"Edges {  }","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280241,"byte_end":280254,"line_start":402,"line_end":402,"column_start":12,"column_end":25},"name":"EdgeReference","qualname":"::csr::EdgeReference","value":"EdgeReference {  }","parent":null,"children":[{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280854,"byte_end":280860,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"weight","qualname":"<EdgeReference>::weight","value":"pub fn weight(&Self) -> &'a E","parent":null,"children":[],"decl_id":null,"docs":" Access the edge’s weight.","sig":null,"attributes":[{"value":"/ Access the edge’s weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280683,"byte_end":280714,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280719,"byte_end":280722,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ **NOTE** that this method offers a longer lifetime","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280727,"byte_end":280781,"line_start":423,"line_end":423,"column_start":5,"column_end":59}},{"value":"/ than the trait (unfortunately they don't match yet).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280786,"byte_end":280842,"line_start":424,"line_end":424,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282544,"byte_end":282558,"line_start":489,"line_end":489,"column_start":12,"column_end":26},"name":"EdgeReferences","qualname":"::csr::EdgeReferences","value":"EdgeReferences {  }","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284630,"byte_end":284639,"line_start":566,"line_end":566,"column_start":12,"column_end":21},"name":"Neighbors","qualname":"::csr::Neighbors","value":"Neighbors {  }","parent":null,"children":[{"krate":0,"index":3960}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286481,"byte_end":286496,"line_start":639,"line_end":639,"column_start":12,"column_end":27},"name":"NodeIdentifiers","qualname":"::csr::NodeIdentifiers","value":"NodeIdentifiers {  }","parent":null,"children":[{"krate":0,"index":2751},{"krate":0,"index":2752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302207,"byte_end":302220,"line_start":166,"line_end":166,"column_start":8,"column_end":21},"name":"is_isomorphic","qualname":"::isomorphism::is_isomorphic","value":"pub fn is_isomorphic<N, E, Ty, Ix>(&Graph<N, E, Ty, Ix>, &Graph<N, E, Ty, Ix>)\n-> bool where Ty: EdgeType, Ix: IndexType","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[{"value":"/ [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301829,"byte_end":301898,"line_start":155,"line_end":155,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301899,"byte_end":301902,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Using the VF2 algorithm, only matching graph syntactically (graph","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301903,"byte_end":301972,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"/ structure).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301973,"byte_end":301988,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301989,"byte_end":301992,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The graphs should not be multigraphs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":301993,"byte_end":302034,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302035,"byte_end":302038,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ **Reference**","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302039,"byte_end":302056,"line_start":162,"line_end":162,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302057,"byte_end":302060,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ * Luigi P. Cordella, Pasquale Foggia, Carlo Sansone, Mario Vento;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302061,"byte_end":302130,"line_start":164,"line_end":164,"column_start":1,"column_end":70}},{"value":"/   *A (Sub)Graph Isomorphism Algorithm for Matching Large Graphs*","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302131,"byte_end":302199,"line_start":165,"line_end":165,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302913,"byte_end":302935,"line_start":185,"line_end":185,"column_start":8,"column_end":30},"name":"is_isomorphic_matching","qualname":"::isomorphism::is_isomorphic_matching","value":"pub fn is_isomorphic_matching<N, E, Ty, Ix, F,\n                              G>(&Graph<N, E, Ty, Ix>, &Graph<N, E, Ty, Ix>,\n                                 F, G) -> bool where Ty: EdgeType,\nIx: IndexType, F: FnMut(&N, &N) -> bool, G: FnMut(&E, &E) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","sig":null,"attributes":[{"value":"/ [Graph] Return `true` if the graphs `g0` and `g1` are isomorphic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302643,"byte_end":302712,"line_start":179,"line_end":179,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302713,"byte_end":302716,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ Using the VF2 algorithm, examining both syntactic and semantic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302717,"byte_end":302783,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/ graph isomorphism (graph structure and matching node and edge weights).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302784,"byte_end":302859,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302860,"byte_end":302863,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The graphs should not be multigraphs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":302864,"byte_end":302905,"line_start":184,"line_end":184,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":4727},{"krate":0,"index":2947},{"krate":0,"index":4729},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951}],"decl_id":null,"docs":" Commonly used items.","sig":null,"attributes":[{"value":"/ Commonly used items.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":314963,"byte_end":314987,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":314988,"byte_end":314991,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":314992,"byte_end":314999,"line_start":4,"line_end":4,"column_start":1,"column_end":8}},{"value":"/ use petgraph::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315000,"byte_end":315029,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/prelude.rs","byte_start":315030,"byte_end":315037,"line_start":6,"line_end":6,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1705,"byte_end":1710,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"graph","qualname":"::graph","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977}],"decl_id":null,"docs":" `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.\n","sig":null,"attributes":[{"value":"/ `Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1606,"byte_end":1696,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2690,"byte_end":2698,"line_start":119,"line_end":119,"column_start":5,"column_end":13},"name":"Outgoing","qualname":"::Direction::Outgoing","value":"Direction::Outgoing","parent":{"krate":0,"index":4012},"children":[],"decl_id":null,"docs":" An `Outgoing` edge is an outward edge *from* the current node.\n","sig":null,"attributes":[{"value":"/ An `Outgoing` edge is an outward edge *from* the current node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2619,"byte_end":2685,"line_start":118,"line_end":118,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2777,"byte_end":2785,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"Incoming","qualname":"::Direction::Incoming","value":"Direction::Incoming","parent":{"krate":0,"index":4012},"children":[],"decl_id":null,"docs":" An `Incoming` edge is an inbound edge *to* the current node.\n","sig":null,"attributes":[{"value":"/ An `Incoming` edge is an inbound edge *to* the current node.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2708,"byte_end":2772,"line_start":120,"line_end":120,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2603,"byte_end":2612,"line_start":117,"line_end":117,"column_start":10,"column_end":19},"name":"Direction","qualname":"::Direction","value":"pub enum Direction {\n\n    /// An `Outgoing` edge is an outward edge *from* the current node.\n    Outgoing = ,\n\n    /// An `Incoming` edge is an inbound edge *to* the current node.\n    Incoming = ,\n}","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4016}],"decl_id":null,"docs":" Edge direction.\n","sig":null,"attributes":[{"value":"/ Edge direction.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2498,"byte_end":2517,"line_start":114,"line_end":114,"column_start":1,"column_end":20}},{"value":"repr(usize)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2579,"byte_end":2593,"line_start":116,"line_end":116,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2900,"byte_end":2908,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"opposite","qualname":"<Direction>::opposite","value":"pub fn opposite(&Self) -> Direction","parent":null,"children":[],"decl_id":null,"docs":" Return the opposite `Direction`.\n","sig":null,"attributes":[{"value":"/ Return the opposite `Direction`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2838,"byte_end":2874,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2879,"byte_end":2888,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3121,"byte_end":3126,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"index","qualname":"<Direction>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return `0` for `Outgoing` and `1` for `Incoming`.\n","sig":null,"attributes":[{"value":"/ Return `0` for `Outgoing` and `1` for `Incoming`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3042,"byte_end":3095,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3100,"byte_end":3109,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3307,"byte_end":3315,"line_start":148,"line_end":148,"column_start":10,"column_end":18},"name":"Directed","qualname":"::Directed","value":"pub enum Directed { }","parent":null,"children":[],"decl_id":null,"docs":" Marker type for a directed graph.\n","sig":null,"attributes":[{"value":"/ Marker type for a directed graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3237,"byte_end":3274,"line_start":146,"line_end":146,"column_start":1,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":4043},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3416,"byte_end":3426,"line_start":153,"line_end":153,"column_start":10,"column_end":20},"name":"Undirected","qualname":"::Undirected","value":"pub enum Undirected { }","parent":null,"children":[],"decl_id":null,"docs":" Marker type for an undirected graph.\n","sig":null,"attributes":[{"value":"/ Marker type for an undirected graph.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3343,"byte_end":3383,"line_start":151,"line_end":151,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3539,"byte_end":3547,"line_start":157,"line_end":157,"column_start":11,"column_end":19},"name":"EdgeType","qualname":"::EdgeType","value":"EdgeType","parent":null,"children":[{"krate":0,"index":2985}],"decl_id":null,"docs":" A graph's edge type determines whether is has directed edges or not.\n","sig":null,"attributes":[{"value":"/ A graph's edge type determines whether is has directed edges or not.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3456,"byte_end":3528,"line_start":156,"line_end":156,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3557,"byte_end":3568,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"is_directed","qualname":"::EdgeType::is_directed","value":"pub fn is_directed() -> bool","parent":{"krate":0,"index":2984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2990},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3927,"byte_end":3943,"line_start":176,"line_end":176,"column_start":11,"column_end":27},"name":"IntoWeightedEdge","qualname":"::IntoWeightedEdge","value":"IntoWeightedEdge<E>","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":2993}],"decl_id":null,"docs":" Convert an element like `(i, j)` or `(i, j, w)` into\n a triple of source, target, edge weight.","sig":null,"attributes":[{"value":"/ Convert an element like `(i, j)` or `(i, j, w)` into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3755,"byte_end":3811,"line_start":172,"line_end":172,"column_start":1,"column_end":57}},{"value":"/ a triple of source, target, edge weight.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3812,"byte_end":3856,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3857,"byte_end":3860,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For `Graph::from_edges` and `GraphMap::from_edges`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3861,"byte_end":3916,"line_start":175,"line_end":175,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3958,"byte_end":3964,"line_start":177,"line_end":177,"column_start":10,"column_end":16},"name":"NodeId","qualname":"::IntoWeightedEdge::NodeId","value":"type NodeId;","parent":{"krate":0,"index":2990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3973,"byte_end":3991,"line_start":178,"line_end":178,"column_start":8,"column_end":26},"name":"into_weighted_edge","qualname":"::IntoWeightedEdge::into_weighted_edge","value":"pub fn into_weighted_edge(Self) -> (Self::NodeId, Self::NodeId, E)","parent":{"krate":0,"index":2990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15636,"byte_end":15647,"line_start":311,"line_end":311,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18309,"byte_end":18317,"line_start":422,"line_end":422,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18971,"byte_end":18982,"line_start":454,"line_end":454,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19133,"byte_end":19141,"line_start":462,"line_end":462,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23407,"byte_end":23418,"line_start":624,"line_end":624,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23609,"byte_end":23620,"line_start":632,"line_end":632,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23990,"byte_end":24001,"line_start":647,"line_end":647,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24179,"byte_end":24187,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24339,"byte_end":24347,"line_start":665,"line_end":665,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25442,"byte_end":25450,"line_start":700,"line_end":700,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65514,"byte_end":65525,"line_start":105,"line_end":105,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65880,"byte_end":65891,"line_start":118,"line_end":118,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66910,"byte_end":66921,"line_start":154,"line_end":154,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":67578,"byte_end":67586,"line_start":178,"line_end":178,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68626,"byte_end":68637,"line_start":219,"line_end":219,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68868,"byte_end":68876,"line_start":229,"line_end":229,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71267,"byte_end":71278,"line_start":315,"line_end":315,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71615,"byte_end":71623,"line_start":328,"line_end":328,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105392,"byte_end":105400,"line_start":80,"line_end":80,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105624,"byte_end":105625,"line_start":88,"line_end":88,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105818,"byte_end":105834,"line_start":97,"line_end":97,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106044,"byte_end":106060,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106175,"byte_end":106183,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117088,"byte_end":117096,"line_start":434,"line_end":434,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117614,"byte_end":117622,"line_start":453,"line_end":453,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119079,"byte_end":119088,"line_start":511,"line_end":511,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119697,"byte_end":119714,"line_start":538,"line_end":538,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1147},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120367,"byte_end":120372,"line_start":566,"line_end":566,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121380,"byte_end":121388,"line_start":603,"line_end":603,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122125,"byte_end":122133,"line_start":633,"line_end":633,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122516,"byte_end":122527,"line_start":647,"line_end":647,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123214,"byte_end":123225,"line_start":673,"line_end":673,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123767,"byte_end":123775,"line_start":694,"line_end":694,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124145,"byte_end":124153,"line_start":707,"line_end":707,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124481,"byte_end":124489,"line_start":718,"line_end":718,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124981,"byte_end":124984,"line_start":733,"line_end":733,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125017,"byte_end":125020,"line_start":734,"line_end":734,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125161,"byte_end":125164,"line_start":744,"line_end":744,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125367,"byte_end":125370,"line_start":752,"line_end":752,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125507,"byte_end":125510,"line_start":759,"line_end":759,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125777,"byte_end":125780,"line_start":769,"line_end":769,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125882,"byte_end":125885,"line_start":776,"line_end":776,"column_start":20,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125918,"byte_end":125921,"line_start":778,"line_end":778,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126094,"byte_end":126097,"line_start":787,"line_end":787,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126603,"byte_end":126611,"line_start":808,"line_end":808,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126965,"byte_end":126980,"line_start":823,"line_end":823,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127793,"byte_end":127807,"line_start":855,"line_end":855,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128052,"byte_end":128060,"line_start":866,"line_end":866,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128478,"byte_end":128486,"line_start":881,"line_end":881,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130752,"byte_end":130761,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131142,"byte_end":131151,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131243,"byte_end":131252,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131782,"byte_end":131791,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132283,"byte_end":132292,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133119,"byte_end":133123,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133280,"byte_end":133284,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133791,"byte_end":133795,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133975,"byte_end":133979,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138155,"byte_end":138160,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138571,"byte_end":138576,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140395,"byte_end":140400,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140777,"byte_end":140782,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141182,"byte_end":141187,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1590},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174071,"byte_end":174080,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175324,"byte_end":175333,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176206,"byte_end":176215,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176402,"byte_end":176411,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":177275,"byte_end":177289,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178913,"byte_end":178918,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180590,"byte_end":180595,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181099,"byte_end":181113,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181587,"byte_end":181601,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182019,"byte_end":182024,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182360,"byte_end":182365,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182694,"byte_end":182699,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183035,"byte_end":183040,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183280,"byte_end":183285,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183622,"byte_end":183631,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183801,"byte_end":183810,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185171,"byte_end":185184,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185379,"byte_end":185392,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187172,"byte_end":187183,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187446,"byte_end":187457,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187610,"byte_end":187621,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187832,"byte_end":187843,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188106,"byte_end":188117,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188270,"byte_end":188281,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188509,"byte_end":188522,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188625,"byte_end":188638,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188696,"byte_end":188709,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189415,"byte_end":189429,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189787,"byte_end":189801,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190036,"byte_end":190050,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190107,"byte_end":190120,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190404,"byte_end":190417,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190942,"byte_end":190956,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191425,"byte_end":191439,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191783,"byte_end":191797,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":196007,"byte_end":196018,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197618,"byte_end":197629,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197993,"byte_end":198004,"line_start":187,"line_end":187,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2043},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":227300,"byte_end":227311,"line_start":997,"line_end":997,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228026,"byte_end":228037,"line_start":1022,"line_end":1022,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228378,"byte_end":228389,"line_start":1035,"line_end":1035,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228723,"byte_end":228734,"line_start":1048,"line_end":1048,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229075,"byte_end":229086,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229331,"byte_end":229342,"line_start":1071,"line_end":1071,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229691,"byte_end":229702,"line_start":1084,"line_end":1084,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":230883,"byte_end":230888,"line_start":1118,"line_end":1118,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232513,"byte_end":232527,"line_start":1165,"line_end":1165,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232943,"byte_end":232957,"line_start":1182,"line_end":1182,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233403,"byte_end":233416,"line_start":1200,"line_end":1200,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233519,"byte_end":233532,"line_start":1206,"line_end":1206,"column_start":37,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233590,"byte_end":233603,"line_start":1208,"line_end":1208,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233766,"byte_end":233779,"line_start":1216,"line_end":1216,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":234063,"byte_end":234076,"line_start":1226,"line_end":1226,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235547,"byte_end":235552,"line_start":1280,"line_end":1280,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2201},{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238042,"byte_end":238056,"line_start":1357,"line_end":1357,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238509,"byte_end":238523,"line_start":1374,"line_end":1374,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239196,"byte_end":239205,"line_start":1401,"line_end":1401,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239767,"byte_end":239776,"line_start":1419,"line_end":1419,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241992,"byte_end":242005,"line_start":1489,"line_end":1489,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242076,"byte_end":242089,"line_start":1493,"line_end":1493,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2266},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243130,"byte_end":243141,"line_start":1523,"line_end":1523,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243572,"byte_end":243583,"line_start":1540,"line_end":1540,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243854,"byte_end":243865,"line_start":1550,"line_end":1550,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244486,"byte_end":244497,"line_start":1569,"line_end":1569,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244928,"byte_end":244939,"line_start":1586,"line_end":1586,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2321}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247705,"byte_end":247711,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247993,"byte_end":247999,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248098,"byte_end":248104,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248259,"byte_end":248265,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248402,"byte_end":248408,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251601,"byte_end":251604,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2411},{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252489,"byte_end":252492,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254330,"byte_end":254333,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254666,"byte_end":254669,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255109,"byte_end":255116,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255706,"byte_end":255713,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":256060,"byte_end":256068,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257462,"byte_end":257471,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":267215,"byte_end":267226,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269710,"byte_end":269713,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269885,"byte_end":269888,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270221,"byte_end":270224,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271644,"byte_end":271647,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275287,"byte_end":275290,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280451,"byte_end":280464,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280570,"byte_end":280583,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280624,"byte_end":280637,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280928,"byte_end":280941,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281325,"byte_end":281330,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281845,"byte_end":281848,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282860,"byte_end":282874,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284022,"byte_end":284025,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284247,"byte_end":284250,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284735,"byte_end":284744,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285638,"byte_end":285641,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285941,"byte_end":285944,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286057,"byte_end":286060,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286290,"byte_end":286293,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286586,"byte_end":286601,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287211,"byte_end":287214,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287387,"byte_end":287390,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":293844,"byte_end":293852,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294191,"byte_end":294199,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295006,"byte_end":295007,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295044,"byte_end":295050,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296993,"byte_end":296994,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":298043,"byte_end":298051,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303729,"byte_end":303744,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303899,"byte_end":303900,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":312695,"byte_end":312700,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":313667,"byte_end":313678,"line_start":56,"line_end":56,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2989}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1188,"byte_end":1193,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1216,"byte_end":1220,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1231,"byte_end":1235,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":859}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":75495,"byte_end":75505,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":860}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1321,"byte_end":1329,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1013}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191878,"byte_end":191890,"line_start":2020,"line_end":2020,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":1895}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2391}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1368,"byte_end":1377,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2464}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2525}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":1596,"byte_end":1603,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2925}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5797,"byte_end":5806,"line_start":15,"line_end":15,"column_start":38,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":5963,"byte_end":5972,"line_start":22,"line_end":22,"column_start":31,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6021,"byte_end":6030,"line_start":24,"line_end":24,"column_start":39,"column_end":48},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/scored.rs","byte_start":6196,"byte_end":6205,"line_start":31,"line_end":31,"column_start":32,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3022},"to":{"krate":2,"index":1796}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":30918,"byte_end":30925,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31537,"byte_end":31544,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3097},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31735,"byte_end":31741,"line_start":78,"line_end":78,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/dfsvisit.rs","byte_start":31909,"byte_end":31916,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3097},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":36689,"byte_end":36692,"line_start":45,"line_end":45,"column_start":13,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":39019,"byte_end":39031,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":42137,"byte_end":42140,"line_start":231,"line_end":231,"column_start":13,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":43519,"byte_end":43523,"line_start":279,"line_end":279,"column_start":13,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":46908,"byte_end":46918,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47206,"byte_end":47216,"line_start":396,"line_end":396,"column_start":25,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3157},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47424,"byte_end":47427,"line_start":406,"line_end":406,"column_start":23,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3112},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47637,"byte_end":47649,"line_start":415,"line_end":415,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3125},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":47859,"byte_end":47862,"line_start":424,"line_end":424,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/traversal.rs","byte_start":48072,"byte_end":48076,"line_start":433,"line_end":433,"column_start":23,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3148},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9554,"byte_end":9558,"line_start":101,"line_end":101,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9561,"byte_end":9570,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":9657,"byte_end":9663,"line_start":105,"line_end":105,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2386},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":10640,"byte_end":10648,"line_start":141,"line_end":141,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3185}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":11314,"byte_end":11327,"line_start":161,"line_end":161,"column_start":35,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":3185},"to":{"krate":0,"index":3194}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13427,"byte_end":13445,"line_start":233,"line_end":233,"column_start":23,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3255},"to":{"krate":0,"index":3198}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":13448,"byte_end":13461,"line_start":233,"line_end":233,"column_start":44,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":3185},"to":{"krate":0,"index":3198}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14219,"byte_end":14228,"line_start":258,"line_end":258,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3198},"to":{"krate":0,"index":3207}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14231,"byte_end":14252,"line_start":258,"line_end":258,"column_start":43,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":3194},"to":{"krate":0,"index":3207}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":14578,"byte_end":14586,"line_start":270,"line_end":270,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3216}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15092,"byte_end":15097,"line_start":290,"line_end":290,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15636,"byte_end":15647,"line_start":311,"line_end":311,"column_start":34,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":15908,"byte_end":15917,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16186,"byte_end":16190,"line_start":337,"line_end":337,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":16885,"byte_end":16889,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17101,"byte_end":17105,"line_start":374,"line_end":374,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3244}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17108,"byte_end":17127,"line_start":374,"line_end":374,"column_start":39,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":3216},"to":{"krate":0,"index":3244}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17928,"byte_end":17932,"line_start":409,"line_end":409,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":17935,"byte_end":17943,"line_start":409,"line_end":409,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":192},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18309,"byte_end":18317,"line_start":422,"line_end":422,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18536,"byte_end":18545,"line_start":432,"line_end":432,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18807,"byte_end":18812,"line_start":446,"line_end":446,"column_start":34,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":18971,"byte_end":18982,"line_start":454,"line_end":454,"column_start":34,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19133,"byte_end":19141,"line_start":462,"line_end":462,"column_start":30,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":19664,"byte_end":19673,"line_start":484,"line_end":484,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20186,"byte_end":20195,"line_start":500,"line_end":500,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20512,"byte_end":20525,"line_start":513,"line_end":513,"column_start":34,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":3274},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20528,"byte_end":20537,"line_start":513,"line_end":513,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":3285},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20623,"byte_end":20628,"line_start":518,"line_end":518,"column_start":38,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":20938,"byte_end":20943,"line_start":527,"line_end":527,"column_start":45,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21383,"byte_end":21394,"line_start":543,"line_end":543,"column_start":45,"column_end":56},"kind":{"Impl":{"id":27}},"from":{"krate":16,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21663,"byte_end":21674,"line_start":554,"line_end":554,"column_start":45,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":16,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":21925,"byte_end":21936,"line_start":565,"line_end":565,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":16,"index":130},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22152,"byte_end":22159,"line_start":576,"line_end":576,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":6868},"to":{"krate":0,"index":359}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22481,"byte_end":22490,"line_start":590,"line_end":590,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":22875,"byte_end":22880,"line_start":603,"line_end":603,"column_start":34,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23038,"byte_end":23043,"line_start":610,"line_end":610,"column_start":34,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23407,"byte_end":23418,"line_start":624,"line_end":624,"column_start":34,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23609,"byte_end":23620,"line_start":632,"line_end":632,"column_start":34,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":23990,"byte_end":24001,"line_start":647,"line_end":647,"column_start":29,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24179,"byte_end":24187,"line_start":657,"line_end":657,"column_start":30,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24339,"byte_end":24347,"line_start":665,"line_end":665,"column_start":30,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":24853,"byte_end":24862,"line_start":681,"line_end":681,"column_start":32,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3171},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/mod.rs","byte_start":25442,"byte_end":25450,"line_start":700,"line_end":700,"column_start":39,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":48889,"byte_end":48890,"line_start":32,"line_end":32,"column_start":30,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":465},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49084,"byte_end":49095,"line_start":41,"line_end":41,"column_start":27,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":16,"index":130},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49309,"byte_end":49316,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":6868},"to":{"krate":0,"index":461}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49566,"byte_end":49578,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":49835,"byte_end":49847,"line_start":72,"line_end":72,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":50515,"byte_end":50536,"line_start":99,"line_end":99,"column_start":29,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":52408,"byte_end":52425,"line_start":167,"line_end":167,"column_start":29,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":523},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":53438,"byte_end":53464,"line_start":206,"line_end":206,"column_start":32,"column_end":58},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":544},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54435,"byte_end":54452,"line_start":245,"line_end":245,"column_start":32,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":566},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":54849,"byte_end":54861,"line_start":261,"line_end":261,"column_start":24,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":55755,"byte_end":55756,"line_start":293,"line_end":293,"column_start":30,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":589}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56263,"byte_end":56275,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":56542,"byte_end":56554,"line_start":322,"line_end":322,"column_start":26,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3356},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":57157,"byte_end":57178,"line_start":348,"line_end":348,"column_start":29,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/filter.rs","byte_start":58495,"byte_end":58512,"line_start":400,"line_end":400,"column_start":32,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":59898,"byte_end":59906,"line_start":30,"line_end":30,"column_start":34,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60004,"byte_end":60012,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":192}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60100,"byte_end":60108,"line_start":39,"line_end":39,"column_start":27,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3185}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60349,"byte_end":60357,"line_start":49,"line_end":49,"column_start":35,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3194}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60640,"byte_end":60648,"line_start":60,"line_end":60,"column_start":34,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":60977,"byte_end":60998,"line_start":77,"line_end":77,"column_start":21,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3430},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61416,"byte_end":61424,"line_start":97,"line_end":97,"column_start":32,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":3255}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/visit/reversed.rs","byte_start":61853,"byte_end":61875,"line_start":114,"line_end":114,"column_start":22,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":62936,"byte_end":62940,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63408,"byte_end":63415,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":3465},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63828,"byte_end":63832,"line_start":50,"line_end":50,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":3230},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":63835,"byte_end":63844,"line_start":50,"line_end":50,"column_start":26,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":3285},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64561,"byte_end":64566,"line_start":69,"line_end":69,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":728},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64569,"byte_end":64576,"line_start":69,"line_end":69,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64668,"byte_end":64673,"line_start":73,"line_end":73,"column_start":29,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":64798,"byte_end":64803,"line_start":80,"line_end":80,"column_start":32,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65125,"byte_end":65130,"line_start":92,"line_end":92,"column_start":35,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65514,"byte_end":65525,"line_start":105,"line_end":105,"column_start":32,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3465}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":65880,"byte_end":65891,"line_start":118,"line_end":118,"column_start":35,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3483}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66240,"byte_end":66245,"line_start":130,"line_end":130,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":66910,"byte_end":66921,"line_start":154,"line_end":154,"column_start":30,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":67578,"byte_end":67586,"line_start":178,"line_end":178,"column_start":26,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":728}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68382,"byte_end":68387,"line_start":209,"line_end":209,"column_start":31,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68626,"byte_end":68637,"line_start":219,"line_end":219,"column_start":31,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":68868,"byte_end":68876,"line_start":229,"line_end":229,"column_start":27,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":732}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":69597,"byte_end":69603,"line_start":258,"line_end":258,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":732},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":70917,"byte_end":70922,"line_start":302,"line_end":302,"column_start":37,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71267,"byte_end":71278,"line_start":315,"line_end":315,"column_start":37,"column_end":48},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71615,"byte_end":71623,"line_start":328,"line_end":328,"column_start":33,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":809}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":71978,"byte_end":71986,"line_start":341,"line_end":341,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":5304},"to":{"krate":0,"index":836}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":72858,"byte_end":72859,"line_start":364,"line_end":364,"column_start":49,"column_end":50},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":836}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/data.rs","byte_start":73209,"byte_end":73223,"line_start":379,"line_end":379,"column_start":31,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":845},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":95136,"byte_end":95146,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/dominators.rs","byte_start":96821,"byte_end":96835,"line_start":89,"line_end":89,"column_start":26,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":877},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80378,"byte_end":80386,"line_start":179,"line_end":179,"column_start":13,"column_end":21},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":80642,"byte_end":80650,"line_start":192,"line_end":192,"column_start":25,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":89939,"byte_end":89954,"line_start":488,"line_end":488,"column_start":22,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":983},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":91346,"byte_end":91351,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93762,"byte_end":93767,"line_start":604,"line_end":604,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93770,"byte_end":93780,"line_start":604,"line_end":604,"column_start":29,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1807},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93783,"byte_end":93786,"line_start":604,"line_end":604,"column_start":42,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2110},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93808,"byte_end":93815,"line_start":604,"line_end":604,"column_start":67,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93818,"byte_end":93823,"line_start":604,"line_end":604,"column_start":77,"column_end":82},"kind":"SuperTrait","from":{"krate":2,"index":1742},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93849,"byte_end":93850,"line_start":607,"line_end":607,"column_start":21,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1003},"to":{"krate":0,"index":1001}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93981,"byte_end":93988,"line_start":612,"line_end":612,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1001},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/algo/mod.rs","byte_start":93991,"byte_end":93995,"line_start":612,"line_end":612,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105392,"byte_end":105400,"line_start":80,"line_end":80,"column_start":77,"column_end":85},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105581,"byte_end":105585,"line_start":87,"line_end":87,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105588,"byte_end":105591,"line_start":87,"line_end":87,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1796},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105594,"byte_end":105598,"line_start":87,"line_end":87,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":6787},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105624,"byte_end":105625,"line_start":88,"line_end":88,"column_start":23,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":105818,"byte_end":105834,"line_start":97,"line_end":97,"column_start":26,"column_end":42},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106044,"byte_end":106060,"line_start":106,"line_end":106,"column_start":31,"column_end":47},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3609},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":106175,"byte_end":106183,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117088,"byte_end":117096,"line_start":434,"line_end":434,"column_start":45,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":117614,"byte_end":117622,"line_start":453,"line_end":453,"column_start":39,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119079,"byte_end":119088,"line_start":511,"line_end":511,"column_start":30,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":119697,"byte_end":119714,"line_start":538,"line_end":538,"column_start":30,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":120367,"byte_end":120372,"line_start":566,"line_end":566,"column_start":33,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1151},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":121380,"byte_end":121388,"line_start":603,"line_end":603,"column_start":33,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122125,"byte_end":122133,"line_start":633,"line_end":633,"column_start":44,"column_end":52},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":122516,"byte_end":122527,"line_start":647,"line_end":647,"column_start":33,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123214,"byte_end":123225,"line_start":673,"line_end":673,"column_start":44,"column_end":55},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":123767,"byte_end":123775,"line_start":694,"line_end":694,"column_start":34,"column_end":42},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124145,"byte_end":124153,"line_start":707,"line_end":707,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124481,"byte_end":124489,"line_start":718,"line_end":718,"column_start":28,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":124981,"byte_end":124984,"line_start":733,"line_end":733,"column_start":22,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125017,"byte_end":125020,"line_start":734,"line_end":734,"column_start":23,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125161,"byte_end":125164,"line_start":744,"line_end":744,"column_start":27,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125367,"byte_end":125370,"line_start":752,"line_end":752,"column_start":28,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125507,"byte_end":125510,"line_start":759,"line_end":759,"column_start":21,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1796}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125777,"byte_end":125780,"line_start":769,"line_end":769,"column_start":23,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125882,"byte_end":125885,"line_start":776,"line_end":776,"column_start":20,"column_end":23},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":1775}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":125918,"byte_end":125921,"line_start":778,"line_end":778,"column_start":22,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":6787}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126094,"byte_end":126097,"line_start":787,"line_end":787,"column_start":40,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126603,"byte_end":126611,"line_start":808,"line_end":808,"column_start":30,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":126965,"byte_end":126980,"line_start":823,"line_end":823,"column_start":33,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":127793,"byte_end":127807,"line_start":855,"line_end":855,"column_start":33,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128052,"byte_end":128060,"line_start":866,"line_end":866,"column_start":34,"column_end":42},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graphmap.rs","byte_start":128478,"byte_end":128486,"line_start":881,"line_end":881,"column_start":41,"column_end":49},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129550,"byte_end":129554,"line_start":44,"line_end":44,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129557,"byte_end":129564,"line_start":44,"line_end":44,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129567,"byte_end":129571,"line_start":44,"line_end":44,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":6787},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129574,"byte_end":129577,"line_start":44,"line_end":44,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":1796},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":129585,"byte_end":129590,"line_start":44,"line_end":44,"column_start":65,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":1389}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":130752,"byte_end":130761,"line_start":91,"line_end":91,"column_start":21,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131142,"byte_end":131151,"line_start":115,"line_end":115,"column_start":34,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3632},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131243,"byte_end":131252,"line_start":119,"line_end":119,"column_start":37,"column_end":46},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3632},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":131782,"byte_end":131791,"line_start":136,"line_end":136,"column_start":21,"column_end":30},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":132283,"byte_end":132292,"line_start":161,"line_end":161,"column_start":37,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133119,"byte_end":133123,"line_start":194,"line_end":194,"column_start":23,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3706},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133280,"byte_end":133284,"line_start":202,"line_end":202,"column_start":24,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133791,"byte_end":133795,"line_start":223,"line_end":223,"column_start":23,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3717},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":133975,"byte_end":133979,"line_start":231,"line_end":231,"column_start":24,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138155,"byte_end":138160,"line_start":345,"line_end":345,"column_start":41,"column_end":46},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":138571,"byte_end":138576,"line_start":363,"line_end":363,"column_start":35,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140395,"byte_end":140400,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":140777,"byte_end":140782,"line_start":434,"line_end":434,"column_start":12,"column_end":17},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":141182,"byte_end":141187,"line_start":447,"line_end":447,"column_start":20,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":174071,"byte_end":174080,"line_start":1367,"line_end":1367,"column_start":38,"column_end":47},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":175324,"byte_end":175333,"line_start":1410,"line_end":1410,"column_start":30,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176206,"byte_end":176215,"line_start":1439,"line_end":1439,"column_start":27,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":176402,"byte_end":176411,"line_start":1449,"line_end":1449,"column_start":17,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":177275,"byte_end":177289,"line_start":1482,"line_end":1482,"column_start":17,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":178913,"byte_end":178918,"line_start":1544,"line_end":1544,"column_start":34,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":180590,"byte_end":180595,"line_start":1596,"line_end":1596,"column_start":31,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181099,"byte_end":181113,"line_start":1616,"line_end":1616,"column_start":30,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":181587,"byte_end":181601,"line_start":1635,"line_end":1635,"column_start":30,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1710},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182019,"byte_end":182024,"line_start":1652,"line_end":1652,"column_start":45,"column_end":50},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182360,"byte_end":182365,"line_start":1665,"line_end":1665,"column_start":48,"column_end":53},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":182694,"byte_end":182699,"line_start":1678,"line_end":1678,"column_start":45,"column_end":50},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183035,"byte_end":183040,"line_start":1691,"line_end":1691,"column_start":48,"column_end":53},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183280,"byte_end":183285,"line_start":1701,"line_end":1701,"column_start":32,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183477,"byte_end":183481,"line_start":1709,"line_end":1709,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183622,"byte_end":183631,"line_start":1716,"line_end":1716,"column_start":36,"column_end":45},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3632},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":183801,"byte_end":183810,"line_start":1723,"line_end":1723,"column_start":36,"column_end":45},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":1755}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185171,"byte_end":185184,"line_start":1770,"line_end":1770,"column_start":20,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":185379,"byte_end":185392,"line_start":1781,"line_end":1781,"column_start":21,"column_end":34},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187172,"byte_end":187183,"line_start":1833,"line_end":1833,"column_start":34,"column_end":45},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187446,"byte_end":187457,"line_start":1845,"line_end":1845,"column_start":45,"column_end":56},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187610,"byte_end":187621,"line_start":1851,"line_end":1851,"column_start":43,"column_end":54},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3731},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":187832,"byte_end":187843,"line_start":1860,"line_end":1860,"column_start":34,"column_end":45},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188106,"byte_end":188117,"line_start":1872,"line_end":1872,"column_start":45,"column_end":56},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188270,"byte_end":188281,"line_start":1878,"line_end":1878,"column_start":43,"column_end":54},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3741},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188509,"byte_end":188522,"line_start":1888,"line_end":1888,"column_start":38,"column_end":51},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188625,"byte_end":188638,"line_start":1894,"line_end":1894,"column_start":37,"column_end":50},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":188696,"byte_end":188709,"line_start":1896,"line_end":1896,"column_start":42,"column_end":55},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3751},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189415,"byte_end":189429,"line_start":1922,"line_end":1922,"column_start":30,"column_end":44},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":189787,"byte_end":189801,"line_start":1938,"line_end":1938,"column_start":41,"column_end":55},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190036,"byte_end":190050,"line_start":1948,"line_end":1948,"column_start":39,"column_end":53},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1833},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190107,"byte_end":190120,"line_start":1952,"line_end":1952,"column_start":17,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190404,"byte_end":190417,"line_start":1962,"line_end":1962,"column_start":29,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3751},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":190942,"byte_end":190956,"line_start":1981,"line_end":1981,"column_start":30,"column_end":44},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191425,"byte_end":191439,"line_start":2001,"line_end":2001,"column_start":41,"column_end":55},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/mod.rs","byte_start":191783,"byte_end":191797,"line_start":2015,"line_end":2015,"column_start":39,"column_end":53},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1872},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":196007,"byte_end":196018,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197618,"byte_end":197629,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":197993,"byte_end":198004,"line_start":187,"line_end":187,"column_start":20,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":227300,"byte_end":227311,"line_start":997,"line_end":997,"column_start":41,"column_end":52},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228026,"byte_end":228037,"line_start":1022,"line_end":1022,"column_start":45,"column_end":56},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228378,"byte_end":228389,"line_start":1035,"line_end":1035,"column_start":48,"column_end":59},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":228723,"byte_end":228734,"line_start":1048,"line_end":1048,"column_start":45,"column_end":56},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229075,"byte_end":229086,"line_start":1061,"line_end":1061,"column_start":48,"column_end":59},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229331,"byte_end":229342,"line_start":1071,"line_end":1071,"column_start":32,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":229691,"byte_end":229702,"line_start":1084,"line_end":1084,"column_start":50,"column_end":61},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":230883,"byte_end":230888,"line_start":1118,"line_end":1118,"column_start":56,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232513,"byte_end":232527,"line_start":1165,"line_end":1165,"column_start":30,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":232943,"byte_end":232957,"line_start":1182,"line_end":1182,"column_start":41,"column_end":55},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233403,"byte_end":233416,"line_start":1200,"line_end":1200,"column_start":38,"column_end":51},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233519,"byte_end":233532,"line_start":1206,"line_end":1206,"column_start":37,"column_end":50},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233590,"byte_end":233603,"line_start":1208,"line_end":1208,"column_start":42,"column_end":55},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3764},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":233766,"byte_end":233779,"line_start":1216,"line_end":1216,"column_start":17,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":234063,"byte_end":234076,"line_start":1226,"line_end":1226,"column_start":29,"column_end":42},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3764},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":235547,"byte_end":235552,"line_start":1280,"line_end":1280,"column_start":34,"column_end":39},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2185},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238042,"byte_end":238056,"line_start":1357,"line_end":1357,"column_start":30,"column_end":44},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":238509,"byte_end":238523,"line_start":1374,"line_end":1374,"column_start":41,"column_end":55},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239196,"byte_end":239205,"line_start":1401,"line_end":1401,"column_start":17,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":239767,"byte_end":239776,"line_start":1419,"line_end":1419,"column_start":30,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2236},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":241992,"byte_end":242005,"line_start":1489,"line_end":1489,"column_start":31,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":242076,"byte_end":242089,"line_start":1493,"line_end":1493,"column_start":21,"column_end":34},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243130,"byte_end":243141,"line_start":1523,"line_end":1523,"column_start":41,"column_end":52},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243572,"byte_end":243583,"line_start":1540,"line_end":1540,"column_start":52,"column_end":63},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":243854,"byte_end":243865,"line_start":1550,"line_end":1550,"column_start":38,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244486,"byte_end":244497,"line_start":1569,"line_end":1569,"column_start":41,"column_end":52},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2304},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/stable_graph/mod.rs","byte_start":244928,"byte_end":244939,"line_start":1586,"line_end":1586,"column_start":52,"column_end":63},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2304},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247705,"byte_end":247711,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":247993,"byte_end":247999,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248098,"byte_end":248104,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248259,"byte_end":248265,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/graph_impl/frozen.rs","byte_start":248402,"byte_end":248408,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":251601,"byte_end":251604,"line_start":57,"line_end":57,"column_start":13,"column_end":16},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":252489,"byte_end":252492,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254330,"byte_end":254333,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":254666,"byte_end":254669,"line_start":147,"line_end":147,"column_start":28,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255109,"byte_end":255116,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":6557}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":255706,"byte_end":255713,"line_start":186,"line_end":186,"column_start":26,"column_end":33},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/dot.rs","byte_start":256060,"byte_end":256068,"line_start":201,"line_end":201,"column_start":26,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/unionfind.rs","byte_start":257462,"byte_end":257471,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/astar.rs","byte_start":267215,"byte_end":267226,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269710,"byte_end":269713,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":269885,"byte_end":269888,"line_start":70,"line_end":70,"column_start":51,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":270221,"byte_end":270224,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":271644,"byte_end":271647,"line_start":139,"line_end":139,"column_start":16,"column_end":19},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":275287,"byte_end":275290,"line_start":236,"line_end":236,"column_start":20,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280451,"byte_end":280464,"line_start":410,"line_end":410,"column_start":37,"column_end":50},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280570,"byte_end":280583,"line_start":416,"line_end":416,"column_start":36,"column_end":49},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280624,"byte_end":280637,"line_start":418,"line_end":418,"column_start":21,"column_end":34},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":280928,"byte_end":280941,"line_start":428,"line_end":428,"column_start":33,"column_end":46},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3941},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281325,"byte_end":281330,"line_start":442,"line_end":442,"column_start":34,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":281845,"byte_end":281848,"line_start":462,"line_end":462,"column_start":29,"column_end":32},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3230}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":282860,"byte_end":282874,"line_start":499,"line_end":499,"column_start":34,"column_end":48},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2665},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284022,"byte_end":284025,"line_start":539,"line_end":539,"column_start":34,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284247,"byte_end":284250,"line_start":549,"line_end":549,"column_start":34,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3297}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":284735,"byte_end":284744,"line_start":570,"line_end":570,"column_start":27,"column_end":36},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285638,"byte_end":285641,"line_start":604,"line_end":604,"column_start":38,"column_end":41},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3274}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":285941,"byte_end":285944,"line_start":613,"line_end":613,"column_start":45,"column_end":48},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3292}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286057,"byte_end":286060,"line_start":619,"line_end":619,"column_start":45,"column_end":48},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286290,"byte_end":286293,"line_start":630,"line_end":630,"column_start":48,"column_end":51},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3897},"to":{"krate":2,"index":2327}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":286586,"byte_end":286601,"line_start":644,"line_end":644,"column_start":23,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287211,"byte_end":287214,"line_start":671,"line_end":671,"column_start":34,"column_end":37},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3285}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/csr.rs","byte_start":287387,"byte_end":287390,"line_start":680,"line_end":680,"column_start":34,"column_end":37},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3897},"to":{"krate":0,"index":3266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":293844,"byte_end":293852,"line_start":9,"line_end":9,"column_start":37,"column_end":45},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2781},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294191,"byte_end":294199,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2792},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":294775,"byte_end":294783,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":5304},"to":{"krate":0,"index":2799}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295006,"byte_end":295007,"line_start":58,"line_end":58,"column_start":27,"column_end":28},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2802},"to":{"krate":0,"index":2799}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_format.rs","byte_start":295044,"byte_end":295050,"line_start":61,"line_end":61,"column_start":13,"column_end":19},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296146,"byte_end":296154,"line_start":2,"line_end":2,"column_start":26,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":5304},"to":{"krate":0,"index":2810}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/iter_utils.rs","byte_start":296993,"byte_end":296994,"line_start":31,"line_end":31,"column_start":26,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2818},"to":{"krate":0,"index":2810}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":298043,"byte_end":298051,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303729,"byte_end":303744,"line_start":209,"line_end":209,"column_start":32,"column_end":47},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2868},"to":{"krate":0,"index":2864}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/isomorphism.rs","byte_start":303899,"byte_end":303900,"line_start":216,"line_end":216,"column_start":35,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":2864}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":312695,"byte_end":312700,"line_start":23,"line_end":23,"column_start":43,"column_end":48},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/traits_graph.rs","byte_start":313667,"byte_end":313678,"line_start":56,"line_end":56,"column_start":43,"column_end":54},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1943},"to":{"krate":0,"index":3308}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3601,"byte_end":3609,"line_start":161,"line_end":161,"column_start":19,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":2984}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/petgraph-0.4.13/src/lib.rs","byte_start":3685,"byte_end":3695,"line_start":166,"line_end":166,"column_start":19,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4043},"to":{"krate":0,"index":2984}}]}