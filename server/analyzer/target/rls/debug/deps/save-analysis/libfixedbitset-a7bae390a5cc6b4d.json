{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","fixedbitset","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a7bae390a5cc6b4d","-C","extra-filename=-a7bae390a5cc6b4d","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libfixedbitset-a7bae390a5cc6b4d.rmeta"},"prelude":{"crate_id":{"name":"fixedbitset","disambiguator":[4184422968409117594,2478214682307357160]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":0,"byte_end":25558,"line_start":1,"line_end":988,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":247,"byte_end":257,"line_start":9,"line_end":9,"column_start":16,"column_end":26},"alias_span":null,"name":"IndexRange","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":0,"byte_end":25558,"line_start":1,"line_end":988,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":173},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":130},{"krate":0,"index":157},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":140},{"krate":0,"index":138},{"krate":0,"index":135},{"krate":0,"index":133},{"krate":0,"index":41},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":126}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits.\n","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25845,"byte_end":25855,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"IndexRange","qualname":"::range::IndexRange","value":"IndexRange<T = usize>","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" **IndexRange** is implemented by Rust's built-in range types, produced\n by range syntax like `..`, `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[{"value":"/ **IndexRange** is implemented by Rust's built-in range types, produced","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25705,"byte_end":25779,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ by range syntax like `..`, `a..`, `..b` or `c..d`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25780,"byte_end":25834,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25920,"byte_end":25925,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"start","qualname":"::range::IndexRange::start","value":"pub fn start(&Self) -> Option<T>","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25871,"byte_end":25880,"line_start":13,"line_end":13,"column_start":5,"column_end":14}},{"value":"/ Start index (inclusive)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25885,"byte_end":25912,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26006,"byte_end":26009,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"end","qualname":"::range::IndexRange::end","value":"pub fn end(&Self) -> Option<T>","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25959,"byte_end":25968,"line_start":16,"line_end":16,"column_start":5,"column_end":14}},{"value":"/ End index (exclusive)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":25973,"byte_end":25998,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":130},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":766,"byte_end":777,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"FixedBitSet","qualname":"::FixedBitSet","value":"FixedBitSet {  }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits that each can\n be enabled (1 / **true**) or disabled (0 / **false**).","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits that each can","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":441,"byte_end":507,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ be enabled (1 / **true**) or disabled (0 / **false**).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":508,"byte_end":566,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":567,"byte_end":570,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The bit set has a fixed capacity in terms of enabling bits (and the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":571,"byte_end":642,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ capacity can grow using the `grow` method).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":643,"byte_end":690,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":975,"byte_end":988,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FixedBitSet>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n all initially clear.\n","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":870,"byte_end":934,"line_start":37,"line_end":37,"column_start":5,"column_end":69}},{"value":"/ all initially clear.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":939,"byte_end":963,"line_start":38,"line_end":38,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1290,"byte_end":1294,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"grow","qualname":"<FixedBitSet>::grow","value":"pub fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Grow capacity to **bits**, all new bits initialized to zero\n","sig":null,"attributes":[{"value":"/ Grow capacity to **bits**, all new bits initialized to zero","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1215,"byte_end":1278,"line_start":49,"line_end":49,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1615,"byte_end":1618,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"len","qualname":"<FixedBitSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the `FixedBitSet` in bits.\n","sig":null,"attributes":[{"value":"/ Return the length of the `FixedBitSet` in bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1538,"byte_end":1589,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1594,"byte_end":1603,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1916,"byte_end":1924,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"contains","qualname":"<FixedBitSet>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return **true** if the bit is enabled in the **FixedBitSet**,\n **false** otherwise.","sig":null,"attributes":[{"value":"/ Return **true** if the bit is enabled in the **FixedBitSet**,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1656,"byte_end":1721,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/ **false** otherwise.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1726,"byte_end":1750,"line_start":64,"line_end":64,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1755,"byte_end":1758,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note: bits outside the capacity are always disabled.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1763,"byte_end":1819,"line_start":66,"line_end":66,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1824,"byte_end":1827,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note: Also available with index syntax: `bitset[bit]`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1832,"byte_end":1890,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":1895,"byte_end":1904,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2177,"byte_end":2182,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"clear","qualname":"<FixedBitSet>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits.\n","sig":null,"attributes":[{"value":"/ Clear all bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2132,"byte_end":2151,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2156,"byte_end":2165,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2381,"byte_end":2387,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"insert","qualname":"<FixedBitSet>::insert","value":"pub fn insert(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`.","sig":null,"attributes":[{"value":"/ Enable `bit`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2282,"byte_end":2299,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2304,"byte_end":2307,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2312,"byte_end":2355,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2360,"byte_end":2369,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2725,"byte_end":2728,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"put","qualname":"<FixedBitSet>::put","value":"pub fn put(&mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`, and return its previous value.","sig":null,"attributes":[{"value":"/ Enable `bit`, and return its previous value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2595,"byte_end":2643,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2648,"byte_end":2651,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2656,"byte_end":2699,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":2704,"byte_end":2713,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"set","qualname":"<FixedBitSet>::set","value":"pub fn set(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" **Panics** if **bit** is out of bounds.\n","sig":null,"attributes":[{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3036,"byte_end":3079,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3084,"byte_end":3093,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3603,"byte_end":3611,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"copy_bit","qualname":"<FixedBitSet>::copy_bit","value":"pub fn copy_bit(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Copies boolean value from specified bit to the specified bit.","sig":null,"attributes":[{"value":"/ Copies boolean value from specified bit to the specified bit.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3457,"byte_end":3522,"line_start":133,"line_end":133,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3527,"byte_end":3530,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **to** is out of bounds.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3535,"byte_end":3577,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":3582,"byte_end":3591,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4238,"byte_end":4248,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<FixedBitSet>::count_ones","value":"pub fn count_ones<T: IndexRange>(&Self, T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of set bits in the given bit range.","sig":null,"attributes":[{"value":"/ Count the number of set bits in the given bit range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4013,"byte_end":4069,"line_start":152,"line_end":152,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4074,"byte_end":4077,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Use `..` to count the whole content of the bitset.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4082,"byte_end":4136,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4141,"byte_end":4144,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4149,"byte_end":4212,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4217,"byte_end":4226,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4759,"byte_end":4768,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"set_range","qualname":"<FixedBitSet>::set_range","value":"pub fn set_range<T: IndexRange>(&mut Self, T, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets every bit in the given range to the given state (`enabled`)","sig":null,"attributes":[{"value":"/ Sets every bit in the given range to the given state (`enabled`)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4536,"byte_end":4604,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4609,"byte_end":4612,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Use `..` to toggle the whole bitset.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4617,"byte_end":4657,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4662,"byte_end":4665,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4670,"byte_end":4733,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":4738,"byte_end":4747,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5346,"byte_end":5358,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"insert_range","qualname":"<FixedBitSet>::insert_range","value":"pub fn insert_range<T: IndexRange>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Enables every bit in the given range.","sig":null,"attributes":[{"value":"/ Enables every bit in the given range.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5147,"byte_end":5188,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5193,"byte_end":5196,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Use `..` to make the whole bitset ones.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5201,"byte_end":5244,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5249,"byte_end":5252,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5257,"byte_end":5320,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5325,"byte_end":5334,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5521,"byte_end":5529,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FixedBitSet>::as_slice","value":"pub fn as_slice(&Self) -> &[u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a slice of `u32` blocks\n","sig":null,"attributes":[{"value":"/ View the bitset as a slice of `u32` blocks","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5449,"byte_end":5495,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5500,"byte_end":5509,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5802,"byte_end":5814,"line_start":208,"line_end":208,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FixedBitSet>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\n will cause `contains` to return potentially incorrect results for bits past the bitlength.\n","sig":null,"attributes":[{"value":"/ View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5583,"byte_end":5677,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ will cause `contains` to return potentially incorrect results for bits past the bitlength.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5682,"byte_end":5776,"line_start":206,"line_end":206,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5781,"byte_end":5790,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6017,"byte_end":6021,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"ones","qualname":"<FixedBitSet>::ones","value":"pub fn ones(&Self) -> Ones","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all enabled bits.","sig":null,"attributes":[{"value":"/ Iterates over all enabled bits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5880,"byte_end":5915,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5920,"byte_end":5923,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Iterator element is the index of the `1` bit, type `usize`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5928,"byte_end":5991,"line_start":215,"line_end":215,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":5996,"byte_end":6005,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6686,"byte_end":6698,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"intersection","qualname":"<FixedBitSet>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a FixedBitSet) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the intersection of two `FixedBitSet`s\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the intersection of two `FixedBitSet`s","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6603,"byte_end":6674,"line_start":238,"line_end":238,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6941,"byte_end":6946,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"union","qualname":"<FixedBitSet>::union","value":"pub fn union<'a>(&'a Self, &'a FixedBitSet) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the union of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the union of two `FixedBitSet`s.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":6864,"byte_end":6929,"line_start":247,"line_end":247,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7267,"byte_end":7277,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"difference","qualname":"<FixedBitSet>::difference","value":"pub fn difference<'a>(&'a Self, &'a FixedBitSet) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`\n and `b` is the elements of `a` which are not in `b`.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7102,"byte_end":7194,"line_start":255,"line_end":255,"column_start":5,"column_end":97}},{"value":"/ and `b` is the elements of `a` which are not in `b`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7199,"byte_end":7255,"line_start":256,"line_end":256,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7588,"byte_end":7598,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" An iterator producing elements in the difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the difference of two sets.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7437,"byte_end":7502,"line_start":266,"line_end":266,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7503,"byte_end":7506,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::difference`] method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7507,"byte_end":7576,"line_start":268,"line_end":268,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8108,"byte_end":8120,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" An iterator producing elements in the intersection of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the intersection of two sets.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7953,"byte_end":8020,"line_start":289,"line_end":289,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8021,"byte_end":8024,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::intersection`] method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8025,"byte_end":8096,"line_start":291,"line_end":291,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8647,"byte_end":8652,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" An iterator producing elements in the union of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the union of two sets.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8506,"byte_end":8566,"line_start":311,"line_end":311,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8567,"byte_end":8570,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::union`] method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8571,"byte_end":8635,"line_start":313,"line_end":313,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10591,"byte_end":10595,"line_start":385,"line_end":385,"column_start":12,"column_end":16},"name":"Ones","qualname":"::Ones","value":"Ones {  }","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" An  iterator producing the indices of the set bit in a set.","sig":null,"attributes":[{"value":"/ An  iterator producing the indices of the set bit in a set.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10448,"byte_end":10511,"line_start":382,"line_end":382,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10512,"byte_end":10515,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::ones`] method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10516,"byte_end":10579,"line_start":384,"line_end":384,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26069,"byte_end":26078,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26115,"byte_end":26124,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26233,"byte_end":26240,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26345,"byte_end":26350,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":852,"byte_end":863,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7678,"byte_end":7688,"line_start":274,"line_end":274,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8200,"byte_end":8212,"line_start":297,"line_end":297,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8727,"byte_end":8732,"line_start":318,"line_end":318,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8974,"byte_end":8979,"line_start":335,"line_end":335,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":9693,"byte_end":9698,"line_start":355,"line_end":355,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10745,"byte_end":10749,"line_start":392,"line_end":392,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":11959,"byte_end":11970,"line_start":432,"line_end":432,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12352,"byte_end":12363,"line_start":449,"line_end":449,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12666,"byte_end":12677,"line_start":465,"line_end":465,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":13089,"byte_end":13100,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26069,"byte_end":26078,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":31025},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26115,"byte_end":26124,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":31066},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26233,"byte_end":26240,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":31087},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/range.rs","byte_start":26345,"byte_end":26350,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":31041},"to":{"krate":0,"index":9}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":852,"byte_end":863,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":7678,"byte_end":7688,"line_start":274,"line_end":274,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8200,"byte_end":8212,"line_start":297,"line_end":297,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8727,"byte_end":8732,"line_start":318,"line_end":318,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":8974,"byte_end":8979,"line_start":335,"line_end":335,"column_start":6,"column_end":11},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":9693,"byte_end":9698,"line_start":355,"line_end":355,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":10745,"byte_end":10749,"line_start":392,"line_end":392,"column_start":23,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":11959,"byte_end":11970,"line_start":432,"line_end":432,"column_start":16,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12352,"byte_end":12363,"line_start":449,"line_end":449,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":12666,"byte_end":12677,"line_start":465,"line_end":465,"column_start":24,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":5219}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.1.9/src/lib.rs","byte_start":13089,"byte_end":13100,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":130},"to":{"krate":2,"index":5206}}]}