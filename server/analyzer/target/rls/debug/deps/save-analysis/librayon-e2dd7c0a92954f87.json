{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rayon","/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e2dd7c0a92954f87","-C","extra-filename=-e2dd7c0a92954f87","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--extern","crossbeam_deque=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libcrossbeam_deque-1f7a61066cb4832b.rmeta","--extern","either=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libeither-b9ea6e92133e197a.rmeta","--extern","rayon_core=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/librayon_core-5c42f0a66438d1dd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/librayon-e2dd7c0a92954f87.rmeta"},"prelude":{"crate_id":{"name":"rayon","disambiguator":[11670833392338020643,5802795050271448408]},"crate_root":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":16,"id":{"name":"crossbeam_deque","disambiguator":[3721348735634613319,11451777956061441322]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":17,"id":{"name":"crossbeam_epoch","disambiguator":[14420741299535073908,10248206487536145030]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[13347268434212277074,12294355231220403985]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[14307052095890395788,6789502377077177303]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":21,"id":{"name":"memoffset","disambiguator":[3604475180142515173,14573634165810913662]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":22,"id":{"name":"scopeguard","disambiguator":[11446728332522292093,5394066327141724718]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":23,"id":{"name":"either","disambiguator":[3196927647482315206,6397018130719852552]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":24,"id":{"name":"rayon_core","disambiguator":[12470298447342958690,7088709286468795913]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":25,"id":{"name":"crossbeam_queue","disambiguator":[11270107798703213008,11106121410123336429]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":26,"id":{"name":"crossbeam_utils","disambiguator":[3869855151369296340,2686500028017078764]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":27,"id":{"name":"num_cpus","disambiguator":[3915356623561863857,12761687097971605680]}},{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[9237417759301744298,10325578486291660160]}}],"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41}},"imports":[{"kind":"Use","ref_id":{"krate":23,"index":161},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25937,"byte_end":25943,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26664,"byte_end":26674,"line_start":95,"line_end":95,"column_start":28,"column_end":38},"alias_span":null,"name":"IterBridge","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26676,"byte_end":26690,"line_start":95,"line_end":95,"column_start":40,"column_end":54},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5321},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26757,"byte_end":26762,"line_start":100,"line_end":100,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5342},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26798,"byte_end":26804,"line_start":102,"line_end":102,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5352},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26859,"byte_end":26868,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26904,"byte_end":26910,"line_start":107,"line_end":107,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5370},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":26954,"byte_end":26963,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5379},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27003,"byte_end":27010,"line_start":111,"line_end":111,"column_start":25,"column_end":32},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27048,"byte_end":27055,"line_start":113,"line_end":113,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5397},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27139,"byte_end":27143,"line_start":118,"line_end":118,"column_start":22,"column_end":26},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5409},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27145,"byte_end":27153,"line_start":118,"line_end":118,"column_start":28,"column_end":36},"alias_span":null,"name":"FoldWith","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5432},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27195,"byte_end":27202,"line_start":120,"line_end":120,"column_start":26,"column_end":33},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5447},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27204,"byte_end":27215,"line_start":120,"line_end":120,"column_start":35,"column_end":46},"alias_span":null,"name":"TryFoldWith","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5459},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27297,"byte_end":27301,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":1520},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27342,"byte_end":27347,"line_start":127,"line_end":127,"column_start":26,"column_end":31},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5469},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27349,"byte_end":27354,"line_start":127,"line_end":127,"column_start":33,"column_end":38},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5478},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27387,"byte_end":27391,"line_start":129,"line_end":129,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5488},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27421,"byte_end":27424,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5509},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27465,"byte_end":27472,"line_start":133,"line_end":133,"column_start":26,"column_end":33},"alias_span":null,"name":"MapInit","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5497},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27474,"byte_end":27481,"line_start":133,"line_end":133,"column_start":35,"column_end":42},"alias_span":null,"name":"MapWith","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5521},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27512,"byte_end":27515,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5534},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27551,"byte_end":27556,"line_start":137,"line_end":137,"column_start":23,"column_end":28},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5546},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27600,"byte_end":27610,"line_start":139,"line_end":139,"column_start":27,"column_end":37},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5559},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27672,"byte_end":27690,"line_start":141,"line_end":141,"column_start":36,"column_end":54},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5571},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27736,"byte_end":27747,"line_start":143,"line_end":143,"column_start":28,"column_end":39},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5581},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27783,"byte_end":27789,"line_start":145,"line_end":145,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5603},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27830,"byte_end":27833,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"alias_span":null,"name":"Rev","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5622},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27864,"byte_end":27870,"line_start":151,"line_end":151,"column_start":21,"column_end":27},"alias_span":null,"name":"MaxLen","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5612},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27872,"byte_end":27878,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"alias_span":null,"name":"MinLen","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27916,"byte_end":27922,"line_start":154,"line_end":154,"column_start":23,"column_end":29},"alias_span":null,"name":"Cloned","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5641},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27958,"byte_end":27964,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"Copied","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5650},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28026,"byte_end":28033,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5659},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28077,"byte_end":28086,"line_start":164,"line_end":164,"column_start":27,"column_end":36},"alias_span":null,"name":"PanicFuse","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5675},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28130,"byte_end":28139,"line_start":166,"line_end":166,"column_start":27,"column_end":36},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28199,"byte_end":28205,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5684},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28207,"byte_end":28213,"line_start":170,"line_end":170,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28239,"byte_end":28246,"line_start":171,"line_end":171,"column_start":24,"column_end":31},"alias_span":null,"name":"repeatn","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5693},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28248,"byte_end":28255,"line_start":171,"line_end":171,"column_start":33,"column_end":40},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3563},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28292,"byte_end":28297,"line_start":174,"line_end":174,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28299,"byte_end":28304,"line_start":174,"line_end":174,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3605},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28338,"byte_end":28342,"line_start":176,"line_end":176,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":5703},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28344,"byte_end":28348,"line_start":176,"line_end":176,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371059,"byte_end":371079,"line_start":5,"line_end":5,"column_start":15,"column_end":35},"alias_span":null,"name":"FromParallelIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3853},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371095,"byte_end":371118,"line_start":6,"line_end":6,"column_start":15,"column_end":38},"alias_span":null,"name":"IndexedParallelIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371134,"byte_end":371154,"line_start":7,"line_end":7,"column_start":15,"column_end":35},"alias_span":null,"name":"IntoParallelIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3627},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371170,"byte_end":371193,"line_start":8,"line_end":8,"column_start":15,"column_end":38},"alias_span":null,"name":"IntoParallelRefIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3638},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371209,"byte_end":371235,"line_start":9,"line_end":9,"column_start":15,"column_end":41},"alias_span":null,"name":"IntoParallelRefMutIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371251,"byte_end":371265,"line_start":10,"line_end":10,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelBridge","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3919},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371281,"byte_end":371295,"line_start":11,"line_end":11,"column_start":15,"column_end":29},"alias_span":null,"name":"ParallelExtend","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":3649},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371311,"byte_end":371327,"line_start":12,"line_end":12,"column_start":15,"column_end":31},"alias_span":null,"name":"ParallelIterator","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":4270},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371344,"byte_end":371357,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"alias_span":null,"name":"ParallelSlice","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371374,"byte_end":371390,"line_start":14,"line_end":14,"column_start":16,"column_end":32},"alias_span":null,"name":"ParallelSliceMut","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":0,"index":4544},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":371405,"byte_end":371419,"line_start":15,"line_end":15,"column_start":14,"column_end":28},"alias_span":null,"name":"ParallelString","value":"","parent":{"krate":0,"index":4004}},{"kind":"Use","ref_id":{"krate":24,"index":851},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4159,"byte_end":4168,"line_start":120,"line_end":120,"column_start":21,"column_end":30},"alias_span":null,"name":"FnContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":242},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4190,"byte_end":4203,"line_start":121,"line_end":121,"column_start":21,"column_end":34},"alias_span":null,"name":"ThreadBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":523},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4225,"byte_end":4235,"line_start":122,"line_end":122,"column_start":21,"column_end":31},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":839},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4257,"byte_end":4277,"line_start":123,"line_end":123,"column_start":21,"column_end":41},"alias_span":null,"name":"ThreadPoolBuildError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":612},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4299,"byte_end":4316,"line_start":124,"line_end":124,"column_start":21,"column_end":38},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":611},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4339,"byte_end":4358,"line_start":125,"line_end":125,"column_start":22,"column_end":41},"alias_span":null,"name":"current_num_threads","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":562},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4360,"byte_end":4380,"line_start":125,"line_end":125,"column_start":43,"column_end":63},"alias_span":null,"name":"current_thread_index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4404,"byte_end":4408,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":115},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4410,"byte_end":4422,"line_start":126,"line_end":126,"column_start":28,"column_end":40},"alias_span":null,"name":"join_context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":405},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4446,"byte_end":4451,"line_start":127,"line_end":127,"column_start":22,"column_end":27},"alias_span":null,"name":"scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":391},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4453,"byte_end":4458,"line_start":127,"line_end":127,"column_start":29,"column_end":34},"alias_span":null,"name":"Scope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":412},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4482,"byte_end":4492,"line_start":128,"line_end":128,"column_start":22,"column_end":32},"alias_span":null,"name":"scope_fifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":394},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4494,"byte_end":4503,"line_start":128,"line_end":128,"column_start":34,"column_end":43},"alias_span":null,"name":"ScopeFifo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":492},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4527,"byte_end":4532,"line_start":129,"line_end":129,"column_start":22,"column_end":27},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":499},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4534,"byte_end":4544,"line_start":129,"line_end":129,"column_start":29,"column_end":39},"alias_span":null,"name":"spawn_fifo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":0,"byte_end":4546,"line_start":1,"line_end":129,"column_start":1,"column_end":41},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":14},{"krate":0,"index":49},{"krate":0,"index":140},{"krate":0,"index":3945},{"krate":0,"index":4004},{"krate":0,"index":4016},{"krate":0,"index":4039},{"krate":0,"index":4054},{"krate":0,"index":4094},{"krate":0,"index":4537},{"krate":0,"index":4769},{"krate":0,"index":4828},{"krate":0,"index":4830},{"krate":0,"index":4857},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887}],"decl_id":null,"docs":" Data-parallelism library that makes it easy to convert sequential\n computations into parallel","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":53,"byte_end":92,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":93,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"deny(unreachable_pub)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":116,"byte_end":141,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/ Data-parallelism library that makes it easy to convert sequential","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":143,"byte_end":212,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ computations into parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":213,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":244,"byte_end":247,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Rayon is lightweight and convenient for introducing parallelism into existing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":248,"byte_end":329,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ code. It guarantees data-race free executions and takes advantage of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":330,"byte_end":402,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ parallelism when sensible, based on work-load at runtime.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":403,"byte_end":464,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":465,"byte_end":468,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # How to use Rayon","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":469,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":492,"byte_end":495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ There are two ways to use Rayon:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":496,"byte_end":532,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":533,"byte_end":536,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - **High-level parallel constructs** are the simplest way to use Rayon and also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":537,"byte_end":620,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/   typically the most efficient.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":621,"byte_end":656,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/   - [Parallel iterators][iter module] make it easy to convert a sequential iterator to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":657,"byte_end":747,"line_start":19,"line_end":19,"column_start":1,"column_end":91}},{"value":"/     execute in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":748,"byte_end":776,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/   - The [`par_sort`] method sorts `&mut [T]` slices (or vectors) in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":777,"byte_end":858,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/   - [`par_extend`] can be used to efficiently grow collections with items produced","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":859,"byte_end":945,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/     by a parallel iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":946,"byte_end":977,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ - **Custom tasks** let you divide your work into parallel tasks yourself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":978,"byte_end":1055,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/   - [`join`] is used to subdivide a task into two pieces.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1056,"byte_end":1117,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/   - [`scope`] creates a scope within which you can create any number of parallel tasks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1118,"byte_end":1209,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/   - [`ThreadPoolBuilder`] can be used to create your own thread pools or customize","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1210,"byte_end":1296,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/     the global one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1297,"byte_end":1320,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1321,"byte_end":1324,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [iter module]: iter/index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1325,"byte_end":1359,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`join`]: fn.join.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1360,"byte_end":1386,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`scope`]: fn.scope.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1387,"byte_end":1415,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ [`par_sort`]: slice/trait.ParallelSliceMut.html#method.par_sort","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1416,"byte_end":1483,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ [`par_extend`]: iter/trait.ParallelExtend.html#tymethod.par_extend","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1484,"byte_end":1554,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ [`ThreadPoolBuilder`]: struct.ThreadPoolBuilder.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1555,"byte_end":1611,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1612,"byte_end":1615,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Basic usage and the Rayon prelude","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1616,"byte_end":1655,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1656,"byte_end":1659,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ First, you will need to add `rayon` to your `Cargo.toml` and put","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1660,"byte_end":1728,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ `extern crate rayon` in your main file (`lib.rs`, `main.rs`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1729,"byte_end":1794,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Next, to use parallel iterators or the other high-level methods,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1799,"byte_end":1867,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ you need to import several traits. Those traits are bundled into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1868,"byte_end":1936,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ the module [`rayon::prelude`]. It is recommended that you import","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":1937,"byte_end":2005,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ all of these traits at once by adding `use rayon::prelude::*` at","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2006,"byte_end":2074,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ the top of each module that uses Rayon methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2075,"byte_end":2126,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2127,"byte_end":2130,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ These traits give you access to the `par_iter` method which provides","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2131,"byte_end":2203,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ parallel implementations of many iterative functions such as [`map`],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2204,"byte_end":2277,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ [`for_each`], [`filter`], [`fold`], and [more].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2278,"byte_end":2329,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2330,"byte_end":2333,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`rayon::prelude`]: prelude/index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2334,"byte_end":2376,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ [`map`]: iter/trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2377,"byte_end":2433,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/ [`for_each`]: iter/trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2434,"byte_end":2500,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [`filter`]: iter/trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2501,"byte_end":2563,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/ [`fold`]: iter/trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2564,"byte_end":2622,"line_start":56,"line_end":56,"column_start":1,"column_end":59}},{"value":"/ [more]: iter/trait.ParallelIterator.html#provided-methods","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2623,"byte_end":2684,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2685,"byte_end":2688,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Crate Layout","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2689,"byte_end":2707,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2708,"byte_end":2711,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Rayon extends many of the types found in the standard library with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2712,"byte_end":2782,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ parallel iterator implementations. The modules in the `rayon`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2783,"byte_end":2848,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ crate mirror [`std`] itself: so, e.g., the `option` module in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2849,"byte_end":2914,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/ Rayon contains parallel iterators for the `Option` type, which is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2915,"byte_end":2984,"line_start":64,"line_end":64,"column_start":1,"column_end":70}},{"value":"/ found in [the `option` module of `std`]. Similarly, the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":2985,"byte_end":3044,"line_start":65,"line_end":65,"column_start":1,"column_end":60}},{"value":"/ `collections` module in Rayon offers parallel iterator types for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3045,"byte_end":3113,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"/ [the `collections` from `std`]. You will rarely need to access","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3114,"byte_end":3180,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ these submodules unless you need to name iterator types","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3181,"byte_end":3240,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ explicitly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3241,"byte_end":3256,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3257,"byte_end":3260,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [the `option` module of `std`]: https://doc.rust-lang.org/std/option/index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3261,"byte_end":3344,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ [the `collections` from `std`]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3345,"byte_end":3433,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/ [`std`]: https://doc.rust-lang.org/std/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3434,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3478,"byte_end":3481,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # Other questions?","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3482,"byte_end":3504,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3505,"byte_end":3508,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ See [the Rayon FAQ][faq].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3509,"byte_end":3538,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3539,"byte_end":3542,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [faq]: https://github.com/rayon-rs/rayon/blob/master/FAQ.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3543,"byte_end":3606,"line_start":79,"line_end":79,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/private.rs","byte_start":7062,"byte_end":7075,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/private.rs","byte_start":6890,"byte_end":6955,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/private.rs","byte_start":6956,"byte_end":7010,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/private.rs","byte_start":7011,"byte_end":7050,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"collections","qualname":"::collections","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":65},{"krate":0,"index":75},{"krate":0,"index":84},{"krate":0,"index":97},{"krate":0,"index":109},{"krate":0,"index":118}],"decl_id":null,"docs":" Parallel iterator types for [standard collections][std::collections]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [standard collections][std::collections]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11607,"byte_end":11679,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11680,"byte_end":11683,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11684,"byte_end":11762,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11763,"byte_end":11801,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11802,"byte_end":11805,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/stable/std/collections/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":11806,"byte_end":11879,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::collections::binary_heap","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":4888},{"krate":0,"index":4894},{"krate":0,"index":4891},{"krate":0,"index":56},{"krate":0,"index":4904},{"krate":0,"index":4897},{"krate":0,"index":4910},{"krate":0,"index":4914},{"krate":0,"index":61},{"krate":0,"index":4918},{"krate":0,"index":4933},{"krate":0,"index":4925}],"decl_id":null,"docs":" This module contains the parallel iterator types for heaps\n (`BinaryHeap<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for heaps","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":12583,"byte_end":12645,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ (`BinaryHeap<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":12646,"byte_end":12718,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":12719,"byte_end":12778,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":12938,"byte_end":12946,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::binary_heap::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4890}],"decl_id":null,"docs":" Parallel iterator over a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a binary heap","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":12862,"byte_end":12902,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13412,"byte_end":13416,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::binary_heap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4913}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a binary heap\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a binary heap","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13317,"byte_end":13383,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_map","qualname":"::collections::btree_map","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":4940},{"krate":0,"index":4944},{"krate":0,"index":4948},{"krate":0,"index":4955},{"krate":0,"index":4962},{"krate":0,"index":4967},{"krate":0,"index":70},{"krate":0,"index":4972},{"krate":0,"index":4980},{"krate":0,"index":4988},{"krate":0,"index":4993},{"krate":0,"index":4998},{"krate":0,"index":5006}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree maps\n (`BTreeMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree maps","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":13857,"byte_end":13925,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":13926,"byte_end":13999,"line_start":2,"line_end":2,"column_start":1,"column_end":74}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14000,"byte_end":14059,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4940},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14230,"byte_end":14238,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":4943}],"decl_id":null,"docs":" Parallel iterator over a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14141,"byte_end":14180,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4962},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14573,"byte_end":14577,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4966}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14479,"byte_end":14544,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":15124,"byte_end":15131,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::btree_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":4992}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a B-Tree map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a B-Tree map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":15033,"byte_end":15095,"line_start":52,"line_end":52,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree_set","qualname":"::collections::btree_set","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5026},{"krate":0,"index":5032},{"krate":0,"index":5036},{"krate":0,"index":80},{"krate":0,"index":5040},{"krate":0,"index":5047}],"decl_id":null,"docs":" This module contains the parallel iterator types for B-Tree sets\n (`BTreeSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for B-Tree sets","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":15442,"byte_end":15510,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ (`BTreeSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":15511,"byte_end":15581,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":15582,"byte_end":15641,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5014},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":15812,"byte_end":15820,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::btree_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5016}],"decl_id":null,"docs":" Parallel iterator over a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a B-Tree set","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":15723,"byte_end":15762,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5032},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":16109,"byte_end":16113,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::btree_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5035}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a B-Tree set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a B-Tree set","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":16015,"byte_end":16080,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_map","qualname":"::collections::hash_map","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":6375},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":5054},{"krate":0,"index":5058},{"krate":0,"index":5062},{"krate":0,"index":5070},{"krate":0,"index":5077},{"krate":0,"index":5082},{"krate":0,"index":92},{"krate":0,"index":5087},{"krate":0,"index":5096},{"krate":0,"index":5104},{"krate":0,"index":5109},{"krate":0,"index":5114},{"krate":0,"index":5123}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash maps\n (`HashMap<K, V>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash maps","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":16547,"byte_end":16613,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashMap<K, V>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":16614,"byte_end":16686,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":16687,"byte_end":16746,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":16950,"byte_end":16958,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5057}],"decl_id":null,"docs":" Parallel iterator over a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":16863,"byte_end":16900,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5077},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17327,"byte_end":17331,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5081}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17235,"byte_end":17298,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5104},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17918,"byte_end":17925,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::hash_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5108}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a hash map\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a hash map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17829,"byte_end":17889,"line_start":53,"line_end":53,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":97},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash_set","qualname":"::collections::hash_set","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":6389},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":5131},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5144},{"krate":0,"index":5150},{"krate":0,"index":5154},{"krate":0,"index":105},{"krate":0,"index":5158},{"krate":0,"index":5166}],"decl_id":null,"docs":" This module contains the parallel iterator types for hash sets\n (`HashSet<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for hash sets","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18272,"byte_end":18338,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ (`HashSet<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18339,"byte_end":18408,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18409,"byte_end":18468,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5131},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18672,"byte_end":18680,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::hash_set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5133}],"decl_id":null,"docs":" Parallel iterator over a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a hash set","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18585,"byte_end":18622,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5150},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":19003,"byte_end":19007,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::hash_set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5153}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a hash set\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a hash set","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":18911,"byte_end":18974,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linked_list","qualname":"::collections::linked_list","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":5173},{"krate":0,"index":5179},{"krate":0,"index":5176},{"krate":0,"index":5182},{"krate":0,"index":5188},{"krate":0,"index":5194},{"krate":0,"index":5198},{"krate":0,"index":114},{"krate":0,"index":5202},{"krate":0,"index":5209},{"krate":0,"index":5216},{"krate":0,"index":5220},{"krate":0,"index":5224},{"krate":0,"index":5231}],"decl_id":null,"docs":" This module contains the parallel iterator types for linked lists\n (`LinkedList<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for linked lists","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":19477,"byte_end":19546,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ (`LinkedList<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":19547,"byte_end":19619,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":19620,"byte_end":19679,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5173},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":19839,"byte_end":19847,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::linked_list::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5175}],"decl_id":null,"docs":" Parallel iterator over a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a linked list","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":19763,"byte_end":19803,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5194},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20121,"byte_end":20125,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::linked_list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5197}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a linked list","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20026,"byte_end":20092,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20575,"byte_end":20582,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::linked_list::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5219}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a linked list\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a linked list","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20483,"byte_end":20546,"line_start":52,"line_end":52,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec_deque","qualname":"::collections::vec_deque","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":5238},{"krate":0,"index":5244},{"krate":0,"index":5241},{"krate":0,"index":5247},{"krate":0,"index":5260},{"krate":0,"index":5253},{"krate":0,"index":5266},{"krate":0,"index":5270},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":5282},{"krate":0,"index":5274},{"krate":0,"index":5289},{"krate":0,"index":5293},{"krate":0,"index":134},{"krate":0,"index":5305},{"krate":0,"index":5297}],"decl_id":null,"docs":" This module contains the parallel iterator types for double-ended queues\n (`VecDeque<T>`). You will rarely need to interact with it directly\n unless you have need to name one of the iterator types.\n","sig":null,"attributes":[{"value":"/ This module contains the parallel iterator types for double-ended queues","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":20813,"byte_end":20889,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ (`VecDeque<T>`). You will rarely need to interact with it directly","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":20890,"byte_end":20960,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ unless you have need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":20961,"byte_end":21020,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5238},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21196,"byte_end":21204,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::collections::vec_deque::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5240}],"decl_id":null,"docs":" Parallel iterator over a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a double-ended queue","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21113,"byte_end":21160,"line_start":13,"line_end":13,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5266},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21491,"byte_end":21495,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::collections::vec_deque::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5269}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a double-ended queue","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21389,"byte_end":21462,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5289},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":22183,"byte_end":22190,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::collections::vec_deque::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5292}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a double-ended queue\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a double-ended queue","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":22084,"byte_end":22154,"line_start":60,"line_end":60,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":297},{"krate":0,"index":357},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":567},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":958},{"krate":0,"index":996},{"krate":0,"index":1082},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1356},{"krate":0,"index":1387},{"krate":0,"index":1454},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2449},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2798},{"krate":0,"index":2847},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3289},{"krate":0,"index":3355},{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3627},{"krate":0,"index":3632},{"krate":0,"index":3638},{"krate":0,"index":3643},{"krate":0,"index":3649},{"krate":0,"index":3848},{"krate":0,"index":3853},{"krate":0,"index":3915},{"krate":0,"index":3919},{"krate":0,"index":3923}],"decl_id":null,"docs":" Traits for writing parallel programs using an iterator-style interface","sig":null,"attributes":[{"value":"/ Traits for writing parallel programs using an iterator-style interface","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22665,"byte_end":22739,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22740,"byte_end":22743,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22744,"byte_end":22822,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22823,"byte_end":22866,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22867,"byte_end":22870,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Parallel iterators make it easy to write iterator-like chains that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22871,"byte_end":22941,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ execute in parallel: typically all you have to do is convert the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":22942,"byte_end":23010,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ first `.iter()` (or `iter_mut()`, `into_iter()`, etc) method into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23011,"byte_end":23080,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `par_iter()` (or `par_iter_mut()`, `into_par_iter()`, etc). For","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23081,"byte_end":23148,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ example, to compute the sum of the squares of a sequence of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23149,"byte_end":23212,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ integers, one might write:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23213,"byte_end":23243,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23244,"byte_end":23247,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23248,"byte_end":23259,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23260,"byte_end":23286,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ fn sum_of_squares(input: &[i32]) -> i32 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23287,"byte_end":23332,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/     input.par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23333,"byte_end":23357,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/          .map(|i| i * i)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23358,"byte_end":23386,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/          .sum()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23387,"byte_end":23406,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23407,"byte_end":23412,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23413,"byte_end":23420,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23421,"byte_end":23424,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Or, to increment all the integers in a slice, you could write:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23425,"byte_end":23491,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23492,"byte_end":23495,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23496,"byte_end":23507,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23508,"byte_end":23534,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ fn increment_all(input: &mut [i32]) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23535,"byte_end":23576,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/     input.par_iter_mut()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23577,"byte_end":23605,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/          .for_each(|p| *p += 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23606,"byte_end":23642,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23643,"byte_end":23648,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23649,"byte_end":23656,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23657,"byte_end":23660,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To use parallel iterators, first import the traits by adding","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23661,"byte_end":23725,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ something like `use rayon::prelude::*` to your module. You can","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23726,"byte_end":23792,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ then call `par_iter`, `par_iter_mut`, or `into_par_iter` to get a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23793,"byte_end":23862,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ parallel iterator. Like a [regular iterator][], parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23863,"byte_end":23923,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/ iterators work by first constructing a computation and then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23924,"byte_end":23987,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ executing it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":23988,"byte_end":24005,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24006,"byte_end":24009,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In addition to `par_iter()` and friends, some types offer other","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24010,"byte_end":24077,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ ways to create (or consume) parallel iterators:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24078,"byte_end":24129,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24130,"byte_end":24133,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - Slices (`&[T]`, `&mut [T]`) offer methods like `par_split` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24134,"byte_end":24202,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/   `par_windows`, as well as various parallel sorting","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24203,"byte_end":24259,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/   operations. See [the `ParallelSlice` trait] for the full list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24260,"byte_end":24328,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ - Strings (`&str`) offer methods like `par_split` and `par_lines`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24329,"byte_end":24399,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/   See [the `ParallelString` trait] for the full list.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24400,"byte_end":24457,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ - Various collections offer [`par_extend`], which grows a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24458,"byte_end":24519,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/   collection given a parallel iterator. (If you don't have a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24520,"byte_end":24584,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/   collection to extend, you can use [`collect()`] to create a new","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24585,"byte_end":24654,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/   one from scratch.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24655,"byte_end":24679,"line_start":50,"line_end":50,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24680,"byte_end":24683,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [the `ParallelSlice` trait]: ../slice/trait.ParallelSlice.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24684,"byte_end":24750,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [the `ParallelString` trait]: ../str/trait.ParallelString.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24751,"byte_end":24817,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ [`par_extend`]: trait.ParallelExtend.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24818,"byte_end":24863,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24864,"byte_end":24925,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24926,"byte_end":24929,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ To see the full range of methods available on parallel iterators,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":24930,"byte_end":24999,"line_start":57,"line_end":57,"column_start":1,"column_end":70}},{"value":"/ check out the [`ParallelIterator`] and [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25000,"byte_end":25070,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/ traits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25071,"byte_end":25082,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25083,"byte_end":25086,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If you'd like to build a custom parallel iterator, or to write your own","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25087,"byte_end":25162,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ combinator, then check out the [split] function and the [plumbing] module.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25163,"byte_end":25241,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25242,"byte_end":25245,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [regular iterator]: http://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25246,"byte_end":25323,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25324,"byte_end":25377,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25378,"byte_end":25445,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"/ [split]: fn.split.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25446,"byte_end":25472,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ [plumbing]: plumbing/index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25473,"byte_end":25508,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25509,"byte_end":25512,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note: Several of the `ParallelIterator` methods rely on a `Try` trait which","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25513,"byte_end":25592,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ has been deliberately obscured from the public API.  This trait is intended","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25593,"byte_end":25672,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/ to mirror the unstable `std::ops::Try` with implementations for `Option` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25673,"byte_end":25753,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ `Result`, where `Some`/`Ok` values will let those iterators continue, but","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25754,"byte_end":25831,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ `None`/`Err` values will exit early.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":25832,"byte_end":25872,"line_start":74,"line_end":74,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":171},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117942,"byte_end":117956,"line_start":46,"line_end":46,"column_start":11,"column_end":25},"name":"ParallelBridge","qualname":"::iter::par_bridge::ParallelBridge","value":"ParallelBridge: Sized","parent":null,"children":[{"krate":0,"index":172}],"decl_id":null,"docs":" Conversion trait to convert an `Iterator` to a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ Conversion trait to convert an `Iterator` to a `ParallelIterator`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":116678,"byte_end":116748,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":116749,"byte_end":116752,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This creates a \"bridge\" from a sequential iterator to a parallel one, by distributing its items","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":116753,"byte_end":116852,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ across the Rayon thread pool. This has the advantage of being able to parallelize just about","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":116853,"byte_end":116949,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ anything, but the resulting `ParallelIterator` can be less efficient than if you started with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":116950,"byte_end":117047,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ `par_iter` instead. However, it can still be useful for iterators that are difficult to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117048,"byte_end":117139,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ parallelize by other means, like channels or file or network I/O.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117140,"byte_end":117209,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117210,"byte_end":117213,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The resulting iterator is not guaranteed to keep the order of the original iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117214,"byte_end":117302,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117303,"byte_end":117306,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117307,"byte_end":117321,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117322,"byte_end":117325,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To use this trait, take an existing `Iterator` and call `par_bridge` on it. After that, you can","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117326,"byte_end":117425,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ use any of the `ParallelIterator` methods:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117426,"byte_end":117472,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117473,"byte_end":117476,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117477,"byte_end":117484,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter::ParallelBridge;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117485,"byte_end":117521,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ use rayon::prelude::ParallelIterator;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117522,"byte_end":117563,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117564,"byte_end":117597,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117598,"byte_end":117601,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let rx = {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117602,"byte_end":117616,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/     let (tx, rx) = channel();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117617,"byte_end":117650,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117651,"byte_end":117654,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"one!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117655,"byte_end":117679,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"two!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117680,"byte_end":117704,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/     tx.send(\"three!\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117705,"byte_end":117731,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117732,"byte_end":117735,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     rx","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117736,"byte_end":117746,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117747,"byte_end":117753,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117754,"byte_end":117757,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut output: Vec<&'static str> = rx.into_iter().par_bridge().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117758,"byte_end":117836,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ output.sort_unstable();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117837,"byte_end":117864,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117865,"byte_end":117868,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&*output, &[\"one!\", \"three!\", \"two!\"]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117869,"byte_end":117923,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117924,"byte_end":117931,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118037,"byte_end":118047,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"par_bridge","qualname":"::iter::par_bridge::ParallelBridge::par_bridge","value":"pub fn par_bridge(Self) -> IterBridge<Self>","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Create a bridge from this type to a `ParallelIterator`.\n","sig":null,"attributes":[{"value":"/ Create a bridge from this type to a `ParallelIterator`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117970,"byte_end":118029,"line_start":47,"line_end":47,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118546,"byte_end":118556,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"IterBridge","qualname":"::iter::par_bridge::IterBridge","value":"IterBridge {  }","parent":null,"children":[{"krate":0,"index":5314}],"decl_id":null,"docs":" `IterBridge` is a parallel iterator that wraps a sequential iterator.","sig":null,"attributes":[{"value":"/ `IterBridge` is a parallel iterator that wraps a sequential iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118240,"byte_end":118313,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118314,"byte_end":118317,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This type is created when using the `par_bridge` method on `ParallelBridge`. See the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118318,"byte_end":118406,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/ [`ParallelBridge`] documentation for details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118407,"byte_end":118456,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118457,"byte_end":118460,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`ParallelBridge`]: trait.ParallelBridge.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118461,"byte_end":118510,"line_start":65,"line_end":65,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123765,"byte_end":123770,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Chain","qualname":"::iter::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325}],"decl_id":null,"docs":" `Chain` is an iterator that joins `b` after `a` in one continuous iterator.\n This struct is created by the [`chain()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Chain` is an iterator that joins `b` after `a` in one continuous iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123383,"byte_end":123462,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`chain()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123463,"byte_end":123539,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123540,"byte_end":123543,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`chain()`]: trait.ParallelIterator.html#method.chain","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123544,"byte_end":123601,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123602,"byte_end":123655,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123656,"byte_end":123729,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141030,"byte_end":141036,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::iter::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":5344},{"krate":0,"index":5345}],"decl_id":null,"docs":" `Chunks` is an iterator that groups elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Chunks` is an iterator that groups elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140617,"byte_end":140692,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140693,"byte_end":140696,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`chunks()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140697,"byte_end":140781,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140782,"byte_end":140785,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`chunks()`]: trait.IndexedParallelIterator.html#method.chunks","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140786,"byte_end":140852,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140853,"byte_end":140920,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":140921,"byte_end":140994,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5352},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162465,"byte_end":162474,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::iter::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5354}],"decl_id":null,"docs":" `Enumerate` is an iterator that returns the current count along with the element.\n This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Enumerate` is an iterator that returns the current count along with the element.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162037,"byte_end":162122,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/ This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162123,"byte_end":162210,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162211,"byte_end":162214,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`enumerate()`]: trait.IndexedParallelIterator.html#method.enumerate","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162215,"byte_end":162287,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162288,"byte_end":162355,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162356,"byte_end":162429,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165900,"byte_end":165906,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Filter","qualname":"::iter::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":5365}],"decl_id":null,"docs":" `Filter` takes a predicate `filter_op` and filters out elements that match.\n This struct is created by the [`filter()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Filter` takes a predicate `filter_op` and filters out elements that match.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165522,"byte_end":165601,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ This struct is created by the [`filter()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165602,"byte_end":165679,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165680,"byte_end":165683,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter()`]: trait.ParallelIterator.html#method.filter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165684,"byte_end":165743,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165744,"byte_end":165797,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":165798,"byte_end":165871,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169446,"byte_end":169455,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::iter::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5373},{"krate":0,"index":5374}],"decl_id":null,"docs":" `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.\n This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `FilterMap` creates an iterator that uses `filter_op` to both filter and map elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169044,"byte_end":169134,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ This struct is created by the [`filter_map()`] method on [`ParallelIterator`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169135,"byte_end":169217,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169218,"byte_end":169221,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`filter_map()`]: trait.ParallelIterator.html#method.filter_map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169222,"byte_end":169289,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169290,"byte_end":169343,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169344,"byte_end":169417,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5379},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173153,"byte_end":173160,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::iter::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5382},{"krate":0,"index":5383}],"decl_id":null,"docs":" `FlatMap` maps each element to an iterator, then flattens these iterators together.\n This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FlatMap` maps each element to an iterator, then flattens these iterators together.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":172761,"byte_end":172848,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/ This struct is created by the [`flat_map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":172849,"byte_end":172928,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":172929,"byte_end":172932,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`flat_map()`]: trait.ParallelIterator.html#method.flat_map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":172933,"byte_end":172996,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":172997,"byte_end":173050,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173051,"byte_end":173124,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177212,"byte_end":177219,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::iter::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5390}],"decl_id":null,"docs":" `Flatten` turns each element to an iterator, then flattens these iterators\n together. This struct is created by the [`flatten()`] method on\n [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `Flatten` turns each element to an iterator, then flattens these iterators","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":176810,"byte_end":176888,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ together. This struct is created by the [`flatten()`] method on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":176889,"byte_end":176956,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":176957,"byte_end":176982,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":176983,"byte_end":176986,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`flatten()`]: trait.ParallelIterator.html#method.flatten","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":176987,"byte_end":177048,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177049,"byte_end":177102,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177103,"byte_end":177176,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5397},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178638,"byte_end":178642,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Fold","qualname":"::iter::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403}],"decl_id":null,"docs":" `Fold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Fold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178253,"byte_end":178345,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ This struct is created by the [`fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178346,"byte_end":178421,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178422,"byte_end":178425,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`fold()`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178426,"byte_end":178481,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178482,"byte_end":178535,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178536,"byte_end":178609,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182769,"byte_end":182777,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"FoldWith","qualname":"::iter::fold::FoldWith","value":"FoldWith {  }","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415}],"decl_id":null,"docs":" `FoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `FoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182365,"byte_end":182461,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ This struct is created by the [`fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182462,"byte_end":182542,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182543,"byte_end":182546,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`fold_with()`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182547,"byte_end":182612,"line_start":200,"line_end":200,"column_start":1,"column_end":66}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182613,"byte_end":182666,"line_start":201,"line_end":201,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182667,"byte_end":182740,"line_start":202,"line_end":202,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plumbing","qualname":"::iter::plumbing","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1092},{"krate":0,"index":1101},{"krate":0,"index":1109},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5423},{"krate":0,"index":1129},{"krate":0,"index":5426},{"krate":0,"index":5430},{"krate":0,"index":5429},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1148},{"krate":0,"index":1156},{"krate":0,"index":1159}],"decl_id":null,"docs":" Traits and functions used to implement parallel iteration.  These are\n low-level details -- users of parallel iterators should not need to\n interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","sig":null,"attributes":[{"value":"/ Traits and functions used to implement parallel iteration.  These are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192513,"byte_end":192586,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ low-level details -- users of parallel iterators should not need to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192587,"byte_end":192658,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ interact with them directly.  See [the `plumbing` README][r] for a high-level overview.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192659,"byte_end":192750,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192751,"byte_end":192754,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192755,"byte_end":192837,"line_start":5,"line_end":5,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193287,"byte_end":193303,"line_start":20,"line_end":20,"column_start":11,"column_end":27},"name":"ProducerCallback","qualname":"::iter::plumbing::ProducerCallback","value":"ProducerCallback<T>","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"decl_id":null,"docs":" The `ProducerCallback` trait is a kind of generic closure,\n [analogous to `FnOnce`][FnOnce]. See [the corresponding section in\n the plumbing README][r] for more details.","sig":null,"attributes":[{"value":"/ The `ProducerCallback` trait is a kind of generic closure,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192926,"byte_end":192988,"line_start":14,"line_end":14,"column_start":1,"column_end":63}},{"value":"/ [analogous to `FnOnce`][FnOnce]. See [the corresponding section in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":192989,"byte_end":193059,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ the plumbing README][r] for more details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193060,"byte_end":193105,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193106,"byte_end":193109,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md#producer-callback","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193110,"byte_end":193210,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ [FnOnce]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193211,"byte_end":193276,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193536,"byte_end":193542,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::iter::plumbing::ProducerCallback::Output","value":"type Output;","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":" The type of value returned by this callback. Analogous to\n [`Output` from the `FnOnce` trait][Output].","sig":null,"attributes":[{"value":"/ The type of value returned by this callback. Analogous to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193313,"byte_end":193374,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ [`Output` from the `FnOnce` trait][Output].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193379,"byte_end":193426,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193431,"byte_end":193434,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ [Output]: https://doc.rust-lang.org/std/ops/trait.FnOnce.html#associatedtype.Output","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193439,"byte_end":193526,"line_start":24,"line_end":24,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193760,"byte_end":193768,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"callback","qualname":"::iter::plumbing::ProducerCallback::callback","value":"pub fn callback<P>(Self, P) -> Self::Output where P: Producer<Item = T>","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":" Invokes the callback with the given producer as argument. The\n key point of this trait is that this method is generic over\n `P`, and hence implementors must be defined for any producer.\n","sig":null,"attributes":[{"value":"/ Invokes the callback with the given producer as argument. The","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193549,"byte_end":193614,"line_start":27,"line_end":27,"column_start":5,"column_end":70}},{"value":"/ key point of this trait is that this method is generic over","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193619,"byte_end":193682,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ `P`, and hence implementors must be defined for any producer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193687,"byte_end":193752,"line_start":29,"line_end":29,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195242,"byte_end":195250,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Producer","qualname":"::iter::plumbing::Producer","value":"Producer: Send + Sized","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"decl_id":null,"docs":" A `Producer` is effectively a \"splittable `IntoIterator`\". That\n is, a producer is a value which can be converted into an iterator\n at any time: at that point, it simply produces items on demand,\n like any iterator. But what makes a `Producer` special is that,\n *before* we convert to an iterator, we can also **split** it at a\n particular point using the `split_at` method. This will yield up\n two producers, one producing the items before that point, and one\n producing the items after that point (these two producers can then\n independently be split further, or be converted into iterators).\n In Rayon, this splitting is used to divide between threads.\n See [the `plumbing` README][r] for further details.","sig":null,"attributes":[{"value":"/ A `Producer` is effectively a \"splittable `IntoIterator`\". That","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193851,"byte_end":193918,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ is, a producer is a value which can be converted into an iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193919,"byte_end":193988,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ at any time: at that point, it simply produces items on demand,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":193989,"byte_end":194056,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ like any iterator. But what makes a `Producer` special is that,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194057,"byte_end":194124,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/ *before* we convert to an iterator, we can also **split** it at a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194125,"byte_end":194194,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ particular point using the `split_at` method. This will yield up","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194195,"byte_end":194263,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ two producers, one producing the items before that point, and one","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194264,"byte_end":194333,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ producing the items after that point (these two producers can then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194334,"byte_end":194404,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ independently be split further, or be converted into iterators).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194405,"byte_end":194473,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ In Rayon, this splitting is used to divide between threads.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194474,"byte_end":194537,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/ See [the `plumbing` README][r] for further details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194538,"byte_end":194593,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194594,"byte_end":194597,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that each producer will always produce a fixed number of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194598,"byte_end":194663,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ items N. However, this number N is not queryable through the API;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194664,"byte_end":194733,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ the consumer is expected to track it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194734,"byte_end":194775,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194776,"byte_end":194779,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ NB. You might expect `Producer` to extend the `IntoIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194780,"byte_end":194844,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ trait.  However, [rust-lang/rust#20671][20671] prevents us from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194845,"byte_end":194912,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/ declaring the DoubleEndedIterator and ExactSizeIterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194913,"byte_end":194972,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ constraints on a required IntoIterator trait, so we inline","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":194973,"byte_end":195035,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ IntoIterator here until that issue is fixed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195036,"byte_end":195084,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195085,"byte_end":195088,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195089,"byte_end":195171,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/ [20671]: https://github.com/rust-lang/rust/issues/20671","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195172,"byte_end":195231,"line_start":58,"line_end":58,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195387,"byte_end":195391,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::Producer::Item","value":"type Item;","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" The type of item that will be produced by this producer once\n it is converted into an iterator.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced by this producer once","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195271,"byte_end":195335,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ it is converted into an iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195340,"byte_end":195377,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195448,"byte_end":195456,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"IntoIter","qualname":"::iter::plumbing::Producer::IntoIter","value":"type IntoIter: Iterator<Item = Self::Item> + DoubleEndedIterator + ExactSizeIterator;","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" The type of iterator we will become.\n","sig":null,"attributes":[{"value":"/ The type of iterator we will become.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195398,"byte_end":195438,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195639,"byte_end":195648,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"into_iter","qualname":"::iter::plumbing::Producer::into_iter","value":"pub fn into_iter(Self) -> Self::IntoIter","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Convert `self` into an iterator; at this point, no more parallel splits\n are possible.\n","sig":null,"attributes":[{"value":"/ Convert `self` into an iterator; at this point, no more parallel splits","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195534,"byte_end":195609,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ are possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195614,"byte_end":195631,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196251,"byte_end":196258,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"min_len","qualname":"::iter::plumbing::Producer::min_len","value":"pub fn min_len(&Self) -> usize","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" The minimum number of items that we will process\n sequentially. Defaults to 1, which means that we will split\n all the way down to a single item. This can be raised higher\n using the [`with_min_len`] method, which will force us to\n create sequential tasks at a larger granularity. Note that\n Rayon automatically normally attempts to adjust the size of\n parallel splits to reduce overhead, so this should not be\n needed.","sig":null,"attributes":[{"value":"/ The minimum number of items that we will process","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195679,"byte_end":195731,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to 1, which means that we will split","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195736,"byte_end":195799,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ all the way down to a single item. This can be raised higher","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195804,"byte_end":195868,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ using the [`with_min_len`] method, which will force us to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195873,"byte_end":195934,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/ create sequential tasks at a larger granularity. Note that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195939,"byte_end":196001,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/ Rayon automatically normally attempts to adjust the size of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196006,"byte_end":196069,"line_start":76,"line_end":76,"column_start":5,"column_end":68}},{"value":"/ parallel splits to reduce overhead, so this should not be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196074,"byte_end":196135,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ needed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196140,"byte_end":196151,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196156,"byte_end":196159,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`with_min_len`]: ../trait.IndexedParallelIterator.html#method.with_min_len","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196164,"byte_end":196243,"line_start":80,"line_end":80,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196823,"byte_end":196830,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"max_len","qualname":"::iter::plumbing::Producer::max_len","value":"pub fn max_len(&Self) -> usize","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" The maximum number of items that we will process\n sequentially. Defaults to MAX, which means that we can choose\n not to split at all. This can be lowered using the\n [`with_max_len`] method, which will force us to create more\n parallel tasks. Note that Rayon automatically normally\n attempts to adjust the size of parallel splits to reduce\n overhead, so this should not be needed.","sig":null,"attributes":[{"value":"/ The maximum number of items that we will process","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196298,"byte_end":196350,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/ sequentially. Defaults to MAX, which means that we can choose","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196355,"byte_end":196420,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ not to split at all. This can be lowered using the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196425,"byte_end":196479,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ [`with_max_len`] method, which will force us to create more","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196484,"byte_end":196547,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ parallel tasks. Note that Rayon automatically normally","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196552,"byte_end":196610,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ attempts to adjust the size of parallel splits to reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196615,"byte_end":196675,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ overhead, so this should not be needed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196680,"byte_end":196723,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196728,"byte_end":196731,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`with_max_len`]: ../trait.IndexedParallelIterator.html#method.with_max_len","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196736,"byte_end":196815,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197018,"byte_end":197026,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Producer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Split into two producers; one produces items `0..index`, the\n other `index..N`. Index must be less than or equal to `N`.\n","sig":null,"attributes":[{"value":"/ Split into two producers; one produces items `0..index`, the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196879,"byte_end":196943,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ other `index..N`. Index must be less than or equal to `N`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":196948,"byte_end":197010,"line_start":99,"line_end":99,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197293,"byte_end":197302,"line_start":106,"line_end":106,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::Producer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197069,"byte_end":197132,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197137,"byte_end":197207,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197212,"byte_end":197215,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The provided implementation is sufficient for most iterables.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197220,"byte_end":197285,"line_start":105,"line_end":105,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198250,"byte_end":198258,"line_start":128,"line_end":128,"column_start":11,"column_end":19},"name":"Consumer","qualname":"::iter::plumbing::Consumer","value":"Consumer<Item>: Send + Sized","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":" A consumer is effectively a [generalized \"fold\" operation][fold],\n and in fact each consumer will eventually be converted into a\n [`Folder`]. What makes a consumer special is that, like a\n [`Producer`], it can be **split** into multiple consumers using\n the `split_at` method. When a consumer is split, it produces two\n consumers, as well as a **reducer**. The two consumers can be fed\n items independently, and when they are done the reducer is used to\n combine their two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ A consumer is effectively a [generalized \"fold\" operation][fold],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197430,"byte_end":197499,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ and in fact each consumer will eventually be converted into a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197500,"byte_end":197565,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ [`Folder`]. What makes a consumer special is that, like a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197566,"byte_end":197627,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ [`Producer`], it can be **split** into multiple consumers using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197628,"byte_end":197695,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ the `split_at` method. When a consumer is split, it produces two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197696,"byte_end":197764,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ consumers, as well as a **reducer**. The two consumers can be fed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197765,"byte_end":197834,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ items independently, and when they are done the reducer is used to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197835,"byte_end":197905,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ combine their two results into one. See [the `plumbing`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197906,"byte_end":197965,"line_start":121,"line_end":121,"column_start":1,"column_end":60}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":197966,"byte_end":198001,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198002,"byte_end":198005,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198006,"byte_end":198088,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198089,"byte_end":198167,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`Folder`]: trait.Folder.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198168,"byte_end":198201,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ [`Producer`]: trait.Producer.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198202,"byte_end":198239,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198359,"byte_end":198365,"line_start":130,"line_end":130,"column_start":10,"column_end":16},"name":"Folder","qualname":"::iter::plumbing::Consumer::Folder","value":"type Folder: Folder<Item, Result = Self::Result>;","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" The type of folder that this consumer can be converted into.\n","sig":null,"attributes":[{"value":"/ The type of folder that this consumer can be converted into.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198285,"byte_end":198349,"line_start":129,"line_end":129,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198486,"byte_end":198493,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"Reducer","qualname":"::iter::plumbing::Consumer::Reducer","value":"type Reducer: Reducer<Self::Result>;","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" The type of reducer that is produced if this consumer is split.\n","sig":null,"attributes":[{"value":"/ The type of reducer that is produced if this consumer is split.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198409,"byte_end":198476,"line_start":132,"line_end":132,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198599,"byte_end":198605,"line_start":136,"line_end":136,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Consumer::Result","value":"type Result: Send;","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" The type of result that this consumer will ultimately produce.\n","sig":null,"attributes":[{"value":"/ The type of result that this consumer will ultimately produce.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198523,"byte_end":198589,"line_start":135,"line_end":135,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198841,"byte_end":198849,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"split_at","qualname":"::iter::plumbing::Consumer::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self, Self::Reducer)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" Divide the consumer into two consumers, one processing items\n `0..index` and one processing items from `index..`. Also\n produces a reducer that can be used to reduce the results at\n the end.\n","sig":null,"attributes":[{"value":"/ Divide the consumer into two consumers, one processing items","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198618,"byte_end":198682,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ `0..index` and one processing items from `index..`. Also","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198687,"byte_end":198747,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ produces a reducer that can be used to reduce the results at","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198752,"byte_end":198816,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ the end.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198821,"byte_end":198833,"line_start":141,"line_end":141,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199035,"byte_end":199046,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"into_folder","qualname":"::iter::plumbing::Consumer::into_folder","value":"pub fn into_folder(Self) -> Self::Folder","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" Convert the consumer into a folder that can consume items\n sequentially, eventually producing a final result.\n","sig":null,"attributes":[{"value":"/ Convert the consumer into a folder that can consume items","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198907,"byte_end":198968,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/ sequentially, eventually producing a final result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198973,"byte_end":199027,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199205,"byte_end":199209,"line_start":150,"line_end":150,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Consumer::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":" Hint whether this `Consumer` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Consumer` would like to stop processing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199075,"byte_end":199137,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199142,"byte_end":199197,"line_start":149,"line_end":149,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199572,"byte_end":199578,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Folder","qualname":"::iter::plumbing::Folder","value":"Folder<Item>: Sized","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" The `Folder` trait encapsulates [the standard fold\n operation][fold].  It can be fed many items using the `consume`\n method. At the end, once all items have been consumed, it can then\n be converted (using `complete`) into a final value.","sig":null,"attributes":[{"value":"/ The `Folder` trait encapsulates [the standard fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199229,"byte_end":199283,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/ operation][fold].  It can be fed many items using the `consume`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199284,"byte_end":199351,"line_start":154,"line_end":154,"column_start":1,"column_end":68}},{"value":"/ method. At the end, once all items have been consumed, it can then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199352,"byte_end":199422,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ be converted (using `complete`) into a final value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199423,"byte_end":199478,"line_start":156,"line_end":156,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199479,"byte_end":199482,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [fold]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199483,"byte_end":199561,"line_start":158,"line_end":158,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199678,"byte_end":199684,"line_start":161,"line_end":161,"column_start":10,"column_end":16},"name":"Result","qualname":"::iter::plumbing::Folder::Result","value":"type Result;","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The type of result that will ultimately be produced by the folder.\n","sig":null,"attributes":[{"value":"/ The type of result that will ultimately be produced by the folder.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199598,"byte_end":199668,"line_start":160,"line_end":160,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199753,"byte_end":199760,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"consume","qualname":"::iter::plumbing::Folder::consume","value":"pub fn consume(Self, Item) -> Self","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Consume next item and return new sequential state.\n","sig":null,"attributes":[{"value":"/ Consume next item and return new sequential state.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199691,"byte_end":199745,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200189,"byte_end":200201,"line_start":174,"line_end":174,"column_start":8,"column_end":20},"name":"consume_iter","qualname":"::iter::plumbing::Folder::consume_iter","value":"pub fn consume_iter<I>(Self, I) -> Self where I: IntoIterator<Item = Item>","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Consume items from the iterator until full, and return new sequential state.","sig":null,"attributes":[{"value":"/ Consume items from the iterator until full, and return new sequential state.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199793,"byte_end":199873,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199878,"byte_end":199881,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This method is **optional**. The default simply iterates over","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199886,"byte_end":199951,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `iter`, invoking `consume` and checking after each iteration","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199956,"byte_end":200020,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ whether `full` returns false.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200025,"byte_end":200058,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200063,"byte_end":200066,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The main reason to override it is if you can provide a more","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200071,"byte_end":200134,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ specialized, efficient implementation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200139,"byte_end":200181,"line_start":173,"line_end":173,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200509,"byte_end":200517,"line_start":188,"line_end":188,"column_start":8,"column_end":16},"name":"complete","qualname":"::iter::plumbing::Folder::complete","value":"pub fn complete(Self) -> Self::Result","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Finish consuming items, produce final result.\n","sig":null,"attributes":[{"value":"/ Finish consuming items, produce final result.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200452,"byte_end":200501,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200674,"byte_end":200678,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"full","qualname":"::iter::plumbing::Folder::full","value":"pub fn full(&Self) -> bool","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Hint whether this `Folder` would like to stop processing\n further items, e.g. if a search has been completed.\n","sig":null,"attributes":[{"value":"/ Hint whether this `Folder` would like to stop processing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200546,"byte_end":200606,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ further items, e.g. if a search has been completed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200611,"byte_end":200666,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201108,"byte_end":201115,"line_start":202,"line_end":202,"column_start":11,"column_end":18},"name":"Reducer","qualname":"::iter::plumbing::Reducer","value":"Reducer<Result>","parent":null,"children":[{"krate":0,"index":1119}],"decl_id":null,"docs":" The reducer is the final step of a `Consumer` -- after a consumer\n has been split into two parts, and each of those parts has been\n fully processed, we are left with two results. The reducer is then\n used to combine those two results into one. See [the `plumbing`\n README][r] for further details.","sig":null,"attributes":[{"value":"/ The reducer is the final step of a `Consumer` -- after a consumer","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200698,"byte_end":200767,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ has been split into two parts, and each of those parts has been","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200768,"byte_end":200835,"line_start":196,"line_end":196,"column_start":1,"column_end":68}},{"value":"/ fully processed, we are left with two results. The reducer is then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200836,"byte_end":200906,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ used to combine those two results into one. See [the `plumbing`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200907,"byte_end":200974,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ README][r] for further details.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":200975,"byte_end":201010,"line_start":199,"line_end":199,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201011,"byte_end":201014,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [r]: https://github.com/rayon-rs/rayon/blob/master/src/iter/plumbing/README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201015,"byte_end":201097,"line_start":201,"line_end":201,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201216,"byte_end":201222,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::plumbing::Reducer::reduce","value":"pub fn reduce(Self, Result, Result) -> Result","parent":{"krate":0,"index":1117},"children":[],"decl_id":null,"docs":" Reduce two final results into one; this is executed after a\n split.\n","sig":null,"attributes":[{"value":"/ Reduce two final results into one; this is executed after a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201130,"byte_end":201193,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ split.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201198,"byte_end":201208,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201584,"byte_end":201601,"line_start":213,"line_end":213,"column_start":11,"column_end":28},"name":"UnindexedConsumer","qualname":"::iter::plumbing::UnindexedConsumer","value":"UnindexedConsumer<I>: Consumer<I>","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"decl_id":null,"docs":" A stateless consumer can be freely copied. These consumers can be\n used like regular consumers, but they also support a\n `split_off_left` method that does not take an index to split, but\n simply splits at some arbitrary point (`for_each`, for example,\n produces an unindexed consumer).\n","sig":null,"attributes":[{"value":"/ A stateless consumer can be freely copied. These consumers can be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201272,"byte_end":201341,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ used like regular consumers, but they also support a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201342,"byte_end":201398,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/ `split_off_left` method that does not take an index to split, but","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201399,"byte_end":201468,"line_start":210,"line_end":210,"column_start":1,"column_end":70}},{"value":"/ simply splits at some arbitrary point (`for_each`, for example,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201469,"byte_end":201536,"line_start":211,"line_end":211,"column_start":1,"column_end":68}},{"value":"/ produces an unindexed consumer).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201537,"byte_end":201573,"line_start":212,"line_end":212,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202077,"byte_end":202091,"line_start":221,"line_end":221,"column_start":8,"column_end":22},"name":"split_off_left","qualname":"::iter::plumbing::UnindexedConsumer::split_off_left","value":"pub fn split_off_left(&Self) -> Self","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" Splits off a \"left\" consumer and returns it. The `self`\n consumer should then be used to consume the \"right\" portion of\n the data. (The ordering matters for methods like find_first --\n values produced by the returned value are given precedence\n over values produced by `self`.) Once the left and right\n halves have been fully consumed, you should reduce the results\n with the result of `to_reducer`.\n","sig":null,"attributes":[{"value":"/ Splits off a \"left\" consumer and returns it. The `self`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201624,"byte_end":201683,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ consumer should then be used to consume the \"right\" portion of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201688,"byte_end":201754,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ the data. (The ordering matters for methods like find_first --","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201759,"byte_end":201825,"line_start":216,"line_end":216,"column_start":5,"column_end":71}},{"value":"/ values produced by the returned value are given precedence","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201830,"byte_end":201892,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/ over values produced by `self`.) Once the left and right","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201897,"byte_end":201957,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ halves have been fully consumed, you should reduce the results","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201962,"byte_end":202028,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/ with the result of `to_reducer`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202033,"byte_end":202069,"line_start":220,"line_end":220,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202213,"byte_end":202223,"line_start":225,"line_end":225,"column_start":8,"column_end":18},"name":"to_reducer","qualname":"::iter::plumbing::UnindexedConsumer::to_reducer","value":"pub fn to_reducer(&Self) -> Self::Reducer","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" Creates a reducer that can be used to combine the results from\n a split consumer.\n","sig":null,"attributes":[{"value":"/ Creates a reducer that can be used to combine the results from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202113,"byte_end":202179,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/ a split consumer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202184,"byte_end":202205,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202700,"byte_end":202717,"line_start":236,"line_end":236,"column_start":11,"column_end":28},"name":"UnindexedProducer","qualname":"::iter::plumbing::UnindexedProducer","value":"UnindexedProducer: Send + Sized","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":" A variant on `Producer` which does not know its exact length or\n cannot represent it in a `usize`. These producers act like\n ordinary producers except that they cannot be told to split at a\n particular point. Instead, you just ask them to split 'somewhere'.","sig":null,"attributes":[{"value":"/ A variant on `Producer` which does not know its exact length or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202252,"byte_end":202319,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ cannot represent it in a `usize`. These producers act like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202320,"byte_end":202382,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ ordinary producers except that they cannot be told to split at a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202383,"byte_end":202451,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/ particular point. Instead, you just ask them to split 'somewhere'.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202452,"byte_end":202522,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202523,"byte_end":202526,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ (In principle, `Producer` could extend this trait; however, it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202527,"byte_end":202593,"line_start":233,"line_end":233,"column_start":1,"column_end":67}},{"value":"/ does not because to do so would require producers to carry their","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202594,"byte_end":202662,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/ own length with them.)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202663,"byte_end":202689,"line_start":235,"line_end":235,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202795,"byte_end":202799,"line_start":238,"line_end":238,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::plumbing::UnindexedProducer::Item","value":"type Item;","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" The type of item returned by this producer.\n","sig":null,"attributes":[{"value":"/ The type of item returned by this producer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202738,"byte_end":202785,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202888,"byte_end":202893,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::plumbing::UnindexedProducer::split","value":"pub fn split(Self) -> (Self, Option<Self>)","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Split midway into a new producer if possible, otherwise return `None`.\n","sig":null,"attributes":[{"value":"/ Split midway into a new producer if possible, otherwise return `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202806,"byte_end":202880,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":203076,"byte_end":203085,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::plumbing::UnindexedProducer::fold_with","value":"pub fn fold_with<F>(Self, F) -> F where F: Folder<Self::Item>","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Iterate the producer, feeding each element to `folder`, and\n stop when the folder is full (or all elements have been consumed).\n","sig":null,"attributes":[{"value":"/ Iterate the producer, feeding each element to `folder`, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202930,"byte_end":202993,"line_start":243,"line_end":243,"column_start":5,"column_end":68}},{"value":"/ stop when the folder is full (or all elements have been consumed).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202998,"byte_end":203068,"line_start":244,"line_end":244,"column_start":5,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206894,"byte_end":206900,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"bridge","qualname":"::iter::plumbing::bridge","value":"pub fn bridge<I, C>(I, C) -> C::Result where I: IndexedParallelIterator,\nC: Consumer<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a parallel iterator to a\n consumer. It will convert the `par_iter` into a producer P and\n then pull items from P and feed them to `consumer`, splitting and\n creating parallel threads as needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a parallel iterator to a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206315,"byte_end":206385,"line_start":340,"line_end":340,"column_start":1,"column_end":71}},{"value":"/ consumer. It will convert the `par_iter` into a producer P and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206386,"byte_end":206452,"line_start":341,"line_end":341,"column_start":1,"column_end":67}},{"value":"/ then pull items from P and feed them to `consumer`, splitting and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206453,"byte_end":206522,"line_start":342,"line_end":342,"column_start":1,"column_end":70}},{"value":"/ creating parallel threads as needed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206523,"byte_end":206563,"line_start":343,"line_end":343,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206564,"byte_end":206567,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206568,"byte_end":206630,"line_start":345,"line_end":345,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206631,"byte_end":206687,"line_start":346,"line_end":346,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206688,"byte_end":206733,"line_start":347,"line_end":347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206734,"byte_end":206737,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206738,"byte_end":206818,"line_start":349,"line_end":349,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":206819,"byte_end":206886,"line_start":350,"line_end":350,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":208146,"byte_end":208170,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"bridge_producer_consumer","qualname":"::iter::plumbing::bridge_producer_consumer","value":"pub fn bridge_producer_consumer<P, C>(usize, P, C) -> C::Result where\nP: Producer, C: Consumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" This helper function is used to \"connect\" a producer and a\n consumer. You may prefer to call [`bridge`], which wraps this\n function. This function will draw items from `producer` and feed\n them to `consumer`, splitting and creating parallel tasks when\n needed.","sig":null,"attributes":[{"value":"/ This helper function is used to \"connect\" a producer and a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207508,"byte_end":207570,"line_start":378,"line_end":378,"column_start":1,"column_end":63}},{"value":"/ consumer. You may prefer to call [`bridge`], which wraps this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207571,"byte_end":207636,"line_start":379,"line_end":379,"column_start":1,"column_end":66}},{"value":"/ function. This function will draw items from `producer` and feed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207637,"byte_end":207705,"line_start":380,"line_end":380,"column_start":1,"column_end":69}},{"value":"/ them to `consumer`, splitting and creating parallel tasks when","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207706,"byte_end":207772,"line_start":381,"line_end":381,"column_start":1,"column_end":67}},{"value":"/ needed.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207773,"byte_end":207784,"line_start":382,"line_end":382,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207785,"byte_end":207788,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This is useful when you are implementing your own parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207789,"byte_end":207851,"line_start":384,"line_end":384,"column_start":1,"column_end":63}},{"value":"/ iterators: it is often used as the definition of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207852,"byte_end":207908,"line_start":385,"line_end":385,"column_start":1,"column_end":57}},{"value":"/ [`drive_unindexed`] or [`drive`] methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207909,"byte_end":207954,"line_start":386,"line_end":386,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207955,"byte_end":207958,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ [`bridge`]: fn.bridge.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207959,"byte_end":207989,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ [`drive_unindexed`]: ../trait.ParallelIterator.html#tymethod.drive_unindexed","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207990,"byte_end":208070,"line_start":389,"line_end":389,"column_start":1,"column_end":81}},{"value":"/ [`drive`]: ../trait.IndexedParallelIterator.html#tymethod.drive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":208071,"byte_end":208138,"line_start":390,"line_end":390,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":209946,"byte_end":209962,"line_start":446,"line_end":446,"column_start":8,"column_end":24},"name":"bridge_unindexed","qualname":"::iter::plumbing::bridge_unindexed","value":"pub fn bridge_unindexed<P, C>(P, C) -> C::Result where P: UnindexedProducer,\nC: UnindexedConsumer<P::Item>","parent":null,"children":[],"decl_id":null,"docs":" A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","sig":null,"attributes":[{"value":"/ A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":209777,"byte_end":209867,"line_start":443,"line_end":443,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":209868,"byte_end":209871,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ [`bridge_producer_consumer`]: fn.bridge_producer_consumer.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":209872,"byte_end":209938,"line_start":445,"line_end":445,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5432},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212243,"byte_end":212250,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::iter::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440}],"decl_id":null,"docs":" `TryFold` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFold` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":211843,"byte_end":211938,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ This struct is created by the [`try_fold()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":211939,"byte_end":212018,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212019,"byte_end":212022,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`try_fold()`]: trait.ParallelIterator.html#method.try_fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212023,"byte_end":212086,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212087,"byte_end":212140,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212141,"byte_end":212214,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5447},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216216,"byte_end":216227,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"TryFoldWith","qualname":"::iter::try_fold::TryFoldWith","value":"TryFoldWith {  }","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453}],"decl_id":null,"docs":" `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.\n This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `TryFoldWith` is an iterator that applies a function over an iterator producing a single value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215797,"byte_end":215896,"line_start":183,"line_end":183,"column_start":1,"column_end":100}},{"value":"/ This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215897,"byte_end":215981,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215982,"byte_end":215985,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`try_fold_with()`]: trait.ParallelIterator.html#method.try_fold_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215986,"byte_end":216059,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216060,"byte_end":216113,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216114,"byte_end":216187,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5459},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221477,"byte_end":221481,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Skip","qualname":"::iter::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5461},{"krate":0,"index":5462}],"decl_id":null,"docs":" `Skip` is an iterator that skips over the first `n` elements.\n This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Skip` is an iterator that skips over the first `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221084,"byte_end":221149,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221150,"byte_end":221232,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221233,"byte_end":221236,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`skip()`]: trait.IndexedParallelIterator.html#method.skip","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221237,"byte_end":221299,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221300,"byte_end":221367,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221368,"byte_end":221441,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233414,"byte_end":233419,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"split","qualname":"::iter::splitter::split","value":"pub fn split<D, S>(D, S) -> Split<D, S> where D: Send, S: Fn(D) ->\n(D, Option<D>) + Sync","parent":null,"children":[],"decl_id":null,"docs":" The `split` function takes arbitrary data and a closure that knows how to\n split it, and turns this into a `ParallelIterator`.","sig":null,"attributes":[{"value":"/ The `split` function takes arbitrary data and a closure that knows how to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229530,"byte_end":229607,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ split it, and turns this into a `ParallelIterator`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229608,"byte_end":229663,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229664,"byte_end":229667,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229668,"byte_end":229682,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229683,"byte_end":229686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ As a simple example, Rayon can recursively split ranges of indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229687,"byte_end":229757,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229758,"byte_end":229761,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229762,"byte_end":229769,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use rayon::iter;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229770,"byte_end":229790,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229791,"byte_end":229817,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229818,"byte_end":229842,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229843,"byte_end":229846,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229847,"byte_end":229850,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // We define a range of indices as follows","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229851,"byte_end":229897,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ type Range1D = Range<usize>;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229898,"byte_end":229930,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229931,"byte_end":229934,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Splitting it in two can be done like this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229935,"byte_end":229983,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":229984,"byte_end":230047,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     // We are mathematically unable to split the range if there is only","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230048,"byte_end":230123,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/     // one point inside of it, but we could stop splitting before that.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230124,"byte_end":230199,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230200,"byte_end":230253,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230254,"byte_end":230257,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     // Here, our range is considered large enough to be splittable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230258,"byte_end":230328,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230329,"byte_end":230384,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230385,"byte_end":230435,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230436,"byte_end":230441,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230442,"byte_end":230445,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // By using iter::split, Rayon will split the range until it has enough work","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230446,"byte_end":230526,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ // to feed the CPU cores, then give us the resulting sub-ranges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230527,"byte_end":230594,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ iter::split(0..4096, split_range1).for_each(|sub_range| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230595,"byte_end":230656,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // As our initial range had a power-of-two size, the final sub-ranges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230657,"byte_end":230734,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/     // should have power-of-two sizes too","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230735,"byte_end":230780,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     assert!((sub_range.end - sub_range.start).is_power_of_two());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230781,"byte_end":230850,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230851,"byte_end":230858,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230859,"byte_end":230866,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230867,"byte_end":230870,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This recursive splitting can be extended to two or three dimensions,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230871,"byte_end":230943,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ to reproduce a classic \"block-wise\" parallelization scheme of graphics and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":230944,"byte_end":231022,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ numerical simulations:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231023,"byte_end":231049,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231050,"byte_end":231053,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231054,"byte_end":231061,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use rayon::iter;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231062,"byte_end":231084,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/ # use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231085,"byte_end":231113,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ # use std::ops::Range;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231114,"byte_end":231140,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ # type Range1D = Range<usize>;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231141,"byte_end":231175,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # fn split_range1(r: Range1D) -> (Range1D, Option<Range1D>) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231176,"byte_end":231241,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ #     if r.end - r.start <= 1 { return (r, None); }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231242,"byte_end":231297,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/ #     let midpoint = r.start + (r.end - r.start) / 2;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231298,"byte_end":231355,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ #     (r.start..midpoint, Some(midpoint..r.end))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231356,"byte_end":231408,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231409,"byte_end":231416,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231417,"byte_end":231422,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ // A two-dimensional range of indices can be built out of two 1D ones","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231423,"byte_end":231496,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ struct Range2D {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231497,"byte_end":231517,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     // Range of horizontal indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231518,"byte_end":231556,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/     pub rx: Range1D,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231557,"byte_end":231581,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231582,"byte_end":231585,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // Range of vertical indices","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231586,"byte_end":231622,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/     pub ry: Range1D,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231623,"byte_end":231647,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231648,"byte_end":231653,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231654,"byte_end":231657,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We want to recursively split them by the largest dimension until we have","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231658,"byte_end":231737,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ // enough sub-ranges to feed our mighty multi-core CPU. This function","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231738,"byte_end":231811,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ // carries out one such split.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231812,"byte_end":231846,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ fn split_range2(r2: Range2D) -> (Range2D, Option<Range2D>) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231847,"byte_end":231911,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/     // Decide on which axis (horizontal/vertical) the range should be split","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231912,"byte_end":231991,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/     let width = r2.rx.end - r2.rx.start;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":231992,"byte_end":232036,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     let height = r2.ry.end - r2.ry.start;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232037,"byte_end":232082,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/     if width >= height {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232083,"byte_end":232111,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/         // This is a wide range, split it on the horizontal axis","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232112,"byte_end":232180,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/         let (split_rx, ry) = (split_range1(r2.rx), r2.ry);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232181,"byte_end":232243,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232244,"byte_end":232276,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/             rx: split_rx.0,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232277,"byte_end":232308,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/             ry: ry.clone(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232309,"byte_end":232340,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232341,"byte_end":232355,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_rx.1.map(|rx| Range2D { rx, ry });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232356,"byte_end":232419,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232420,"byte_end":232444,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/     } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232445,"byte_end":232461,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/         // This is a tall range, split it on the vertical axis","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232462,"byte_end":232528,"line_start":83,"line_end":83,"column_start":1,"column_end":67}},{"value":"/         let (rx, split_ry) = (r2.rx, split_range1(r2.ry));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232529,"byte_end":232591,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/         let out1 = Range2D {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232592,"byte_end":232624,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/             rx: rx.clone(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232625,"byte_end":232656,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/             ry: split_ry.0,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232657,"byte_end":232688,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/         };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232689,"byte_end":232703,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         let out2 = split_ry.1.map(|ry| Range2D { rx, ry, });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232704,"byte_end":232768,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/         (out1, out2)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232769,"byte_end":232793,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232794,"byte_end":232803,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232804,"byte_end":232809,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232810,"byte_end":232813,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Again, rayon can handle the recursive splitting for us","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232814,"byte_end":232875,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ let range = Range2D { rx: 0..800, ry: 0..600 };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232876,"byte_end":232927,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ iter::split(range, split_range2).for_each(|sub_range| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232928,"byte_end":232987,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/     // If the sub-ranges were indeed split by the largest dimension, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":232988,"byte_end":233065,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/     // if no dimension was twice larger than the other initially, this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233066,"byte_end":233140,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/     // property will remain true in the final sub-ranges.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233141,"byte_end":233202,"line_start":99,"line_end":99,"column_start":1,"column_end":62}},{"value":"/     let width = sub_range.rx.end - sub_range.rx.start;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233203,"byte_end":233261,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/     let height = sub_range.ry.end - sub_range.ry.start;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233262,"byte_end":233321,"line_start":101,"line_end":101,"column_start":1,"column_end":60}},{"value":"/     assert!((width / 2 <= height) && (height / 2 <= width));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233322,"byte_end":233386,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233387,"byte_end":233394,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233395,"byte_end":233402,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233403,"byte_end":233406,"line_start":105,"line_end":105,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":5469},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233756,"byte_end":233761,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Split","qualname":"::iter::splitter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":5472},{"krate":0,"index":5473}],"decl_id":null,"docs":" `Split` is a parallel iterator using arbitrary data and a splitting function.\n This struct is created by the [`split()`] function.","sig":null,"attributes":[{"value":"/ `Split` is a parallel iterator using arbitrary data and a splitting function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233555,"byte_end":233636,"line_start":114,"line_end":114,"column_start":1,"column_end":82}},{"value":"/ This struct is created by the [`split()`] function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233637,"byte_end":233692,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233693,"byte_end":233696,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`split()`]: fn.split.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233697,"byte_end":233727,"line_start":117,"line_end":117,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5478},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235439,"byte_end":235443,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::iter::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5481}],"decl_id":null,"docs":" `Take` is an iterator that iterates over the first `n` elements.\n This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Take` is an iterator that iterates over the first `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235043,"byte_end":235111,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ This struct is created by the [`take()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235112,"byte_end":235194,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235195,"byte_end":235198,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`take()`]: trait.IndexedParallelIterator.html#method.take","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235199,"byte_end":235261,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235262,"byte_end":235329,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235330,"byte_end":235403,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5488},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237467,"byte_end":237470,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::iter::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492}],"decl_id":null,"docs":" `Map` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Map` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237093,"byte_end":237173,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237174,"byte_end":237177,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237178,"byte_end":237252,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237253,"byte_end":237256,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map()`]: trait.ParallelIterator.html#method.map","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237257,"byte_end":237310,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237311,"byte_end":237364,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237365,"byte_end":237438,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5497},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243456,"byte_end":243463,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"MapWith","qualname":"::iter::map_with::MapWith","value":"MapWith {  }","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5503}],"decl_id":null,"docs":" `MapWith` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapWith` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243063,"byte_end":243147,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243148,"byte_end":243151,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_with()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243152,"byte_end":243231,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243232,"byte_end":243235,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`map_with()`]: trait.ParallelIterator.html#method.map_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243236,"byte_end":243299,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243300,"byte_end":243353,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243354,"byte_end":243427,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5509},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251539,"byte_end":251546,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"MapInit","qualname":"::iter::map_with::MapInit","value":"MapInit {  }","parent":null,"children":[{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515}],"decl_id":null,"docs":" `MapInit` is an iterator that transforms the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `MapInit` is an iterator that transforms the elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251146,"byte_end":251230,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251231,"byte_end":251234,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`map_init()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251235,"byte_end":251314,"line_start":340,"line_end":340,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251315,"byte_end":251318,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [`map_init()`]: trait.ParallelIterator.html#method.map_init","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251319,"byte_end":251382,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251383,"byte_end":251436,"line_start":343,"line_end":343,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251437,"byte_end":251510,"line_start":344,"line_end":344,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257739,"byte_end":257742,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Zip","qualname":"::iter::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525}],"decl_id":null,"docs":" `Zip` is an iterator that zips up `a` and `b` into a single iterator\n of pairs. This struct is created by the [`zip()`] method on\n [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Zip` is an iterator that zips up `a` and `b` into a single iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257328,"byte_end":257400,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of pairs. This struct is created by the [`zip()`] method on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257401,"byte_end":257464,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257465,"byte_end":257496,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257497,"byte_end":257500,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip()`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257501,"byte_end":257561,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257562,"byte_end":257629,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257630,"byte_end":257703,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5534},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261728,"byte_end":261733,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::iter::zip_eq::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":5537}],"decl_id":null,"docs":" An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal\n length simultaneously.","sig":null,"attributes":[{"value":"/ An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261233,"byte_end":261318,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ length simultaneously.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261319,"byte_end":261345,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261346,"byte_end":261349,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`zip_eq`] method on [`IndexedParallelIterator`],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261350,"byte_end":261433,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ see its documentation for more information.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261434,"byte_end":261481,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261482,"byte_end":261485,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`zip_eq`]: trait.IndexedParallelIterator.html#method.zip_eq","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261486,"byte_end":261550,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261551,"byte_end":261618,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261619,"byte_end":261692,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5546},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263480,"byte_end":263490,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::iter::interleave::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5550}],"decl_id":null,"docs":" `Interleave` is an iterator that interleaves elements of iterators\n `i` and `j` in one continuous iterator. This struct is created by\n the [`interleave()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Interleave` is an iterator that interleaves elements of iterators","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263020,"byte_end":263090,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ `i` and `j` in one continuous iterator. This struct is created by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263091,"byte_end":263160,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ the [`interleave()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263161,"byte_end":263223,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263224,"byte_end":263227,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`interleave()`]: trait.IndexedParallelIterator.html#method.interleave","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263228,"byte_end":263302,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263303,"byte_end":263370,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263371,"byte_end":263444,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5559},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272490,"byte_end":272508,"line_start":15,"line_end":15,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::iter::interleave_shortest::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":5562}],"decl_id":null,"docs":" `InterleaveShortest` is an iterator that works similarly to\n `Interleave`, but this version stops returning elements once one\n of the iterators run out.","sig":null,"attributes":[{"value":"/ `InterleaveShortest` is an iterator that works similarly to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":271946,"byte_end":272009,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ `Interleave`, but this version stops returning elements once one","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272010,"byte_end":272078,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ of the iterators run out.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272079,"byte_end":272108,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272109,"byte_end":272112,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`interleave_shortest()`] method on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272113,"byte_end":272182,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ [`IndexedParallelIterator`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272183,"byte_end":272215,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272216,"byte_end":272219,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`interleave_shortest()`]: trait.IndexedParallelIterator.html#method.interleave_shortest","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272220,"byte_end":272312,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272313,"byte_end":272380,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272381,"byte_end":272454,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5571},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274726,"byte_end":274737,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::iter::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":5573},{"krate":0,"index":5574}],"decl_id":null,"docs":" `Intersperse` is an iterator that inserts a particular item between each\n item of the adapted iterator.  This struct is created by the\n [`intersperse()`] method on [`ParallelIterator`]","sig":null,"attributes":[{"value":"/ `Intersperse` is an iterator that inserts a particular item between each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274294,"byte_end":274370,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ item of the adapted iterator.  This struct is created by the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274371,"byte_end":274435,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ [`intersperse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274436,"byte_end":274488,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274489,"byte_end":274492,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`intersperse()`]: trait.ParallelIterator.html#method.intersperse","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274493,"byte_end":274562,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274563,"byte_end":274616,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274617,"byte_end":274690,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5581},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284955,"byte_end":284961,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Update","qualname":"::iter::update::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":5584},{"krate":0,"index":5585}],"decl_id":null,"docs":" `Update` is an iterator that mutates the elements of an\n underlying iterator before they are yielded.","sig":null,"attributes":[{"value":"/ `Update` is an iterator that mutates the elements of an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284544,"byte_end":284603,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ underlying iterator before they are yielded.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284604,"byte_end":284652,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284653,"byte_end":284656,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`update()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284657,"byte_end":284734,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284735,"byte_end":284738,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`update()`]: trait.ParallelIterator.html#method.update","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284739,"byte_end":284798,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284799,"byte_end":284852,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":284853,"byte_end":284926,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5603},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293675,"byte_end":293678,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Rev","qualname":"::iter::rev::Rev","value":"Rev {  }","parent":null,"children":[{"krate":0,"index":5605}],"decl_id":null,"docs":" `Rev` is an iterator that produces elements in reverse order. This struct\n is created by the [`rev()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `Rev` is an iterator that produces elements in reverse order. This struct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293285,"byte_end":293362,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ is created by the [`rev()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293363,"byte_end":293432,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293433,"byte_end":293436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`rev()`]: trait.IndexedParallelIterator.html#method.rev","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293437,"byte_end":293497,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293498,"byte_end":293565,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293566,"byte_end":293639,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5612},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296504,"byte_end":296510,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"MinLen","qualname":"::iter::len::MinLen","value":"MinLen {  }","parent":null,"children":[{"krate":0,"index":5614},{"krate":0,"index":5615}],"decl_id":null,"docs":" `MinLen` is an iterator that imposes a minimum length on iterator splits.\n This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MinLen` is an iterator that imposes a minimum length on iterator splits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296090,"byte_end":296167,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296168,"byte_end":296253,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296254,"byte_end":296257,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`min_len()`]: trait.IndexedParallelIterator.html#method.min_len","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296258,"byte_end":296326,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296327,"byte_end":296394,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296395,"byte_end":296468,"line_start":10,"line_end":10,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5622},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299588,"byte_end":299594,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"MaxLen","qualname":"::iter::len::MaxLen","value":"MaxLen {  }","parent":null,"children":[{"krate":0,"index":5624},{"krate":0,"index":5625}],"decl_id":null,"docs":" `MaxLen` is an iterator that imposes a maximum length on iterator splits.\n This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","sig":null,"attributes":[{"value":"/ `MaxLen` is an iterator that imposes a maximum length on iterator splits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299174,"byte_end":299251,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299252,"byte_end":299337,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299338,"byte_end":299341,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`max_len()`]: trait.IndexedParallelIterator.html#method.max_len","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299342,"byte_end":299410,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299411,"byte_end":299478,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299479,"byte_end":299552,"line_start":144,"line_end":144,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5632},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302702,"byte_end":302708,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::iter::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":5634}],"decl_id":null,"docs":" `Cloned` is an iterator that clones the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Cloned` is an iterator that clones the elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302313,"byte_end":302392,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302393,"byte_end":302396,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`cloned()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302397,"byte_end":302474,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302475,"byte_end":302478,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`cloned()`]: trait.ParallelIterator.html#method.cloned","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302479,"byte_end":302538,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302539,"byte_end":302592,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302593,"byte_end":302666,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5641},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307653,"byte_end":307659,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Copied","qualname":"::iter::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":5643}],"decl_id":null,"docs":" `Copied` is an iterator that copies the elements of an underlying iterator.","sig":null,"attributes":[{"value":"/ `Copied` is an iterator that copies the elements of an underlying iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307264,"byte_end":307343,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307344,"byte_end":307347,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`copied()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307348,"byte_end":307425,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307426,"byte_end":307429,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`copied()`]: trait.ParallelIterator.html#method.copied","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307430,"byte_end":307489,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307490,"byte_end":307543,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307544,"byte_end":307617,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5650},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317064,"byte_end":317071,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::iter::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5654}],"decl_id":null,"docs":" `Inspect` is an iterator that calls a function with a reference to each\n element before yielding it.","sig":null,"attributes":[{"value":"/ `Inspect` is an iterator that calls a function with a reference to each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316651,"byte_end":316726,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ element before yielding it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316727,"byte_end":316758,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316759,"byte_end":316762,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`inspect()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316763,"byte_end":316841,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316842,"byte_end":316845,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`inspect()`]: trait.ParallelIterator.html#method.inspect","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316846,"byte_end":316907,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316908,"byte_end":316961,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":316962,"byte_end":317035,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5659},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323236,"byte_end":323245,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"PanicFuse","qualname":"::iter::panic_fuse::PanicFuse","value":"PanicFuse {  }","parent":null,"children":[{"krate":0,"index":5661}],"decl_id":null,"docs":" `PanicFuse` is an adaptor that wraps an iterator with a fuse in case\n of panics, to halt all threads as soon as possible.","sig":null,"attributes":[{"value":"/ `PanicFuse` is an adaptor that wraps an iterator with a fuse in case","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":322786,"byte_end":322858,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ of panics, to halt all threads as soon as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":322859,"byte_end":322914,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":322915,"byte_end":322918,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`panic_fuse()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":322919,"byte_end":323000,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323001,"byte_end":323004,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`panic_fuse()`]: trait.ParallelIterator.html#method.panic_fuse","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323005,"byte_end":323072,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323073,"byte_end":323126,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323127,"byte_end":323200,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5675},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330915,"byte_end":330924,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::iter::while_some::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":5677}],"decl_id":null,"docs":" `WhileSome` is an iterator that yields the `Some` elements of an iterator,\n halting as soon as any `None` is produced.","sig":null,"attributes":[{"value":"/ `WhileSome` is an iterator that yields the `Some` elements of an iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330468,"byte_end":330546,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ halting as soon as any `None` is produced.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330547,"byte_end":330593,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330594,"byte_end":330597,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`while_some()`] method on [`ParallelIterator`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330598,"byte_end":330679,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330680,"byte_end":330683,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`while_some()`]: trait.ParallelIterator.html#method.while_some","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330684,"byte_end":330751,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330752,"byte_end":330805,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330806,"byte_end":330879,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5684},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344134,"byte_end":344140,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::iter::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5686}],"decl_id":null,"docs":" Iterator adaptor for [the `repeat()` function](fn.repeat.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeat()` function](fn.repeat.html).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344031,"byte_end":344098,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344692,"byte_end":344698,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::iter::repeat::repeat","value":"pub fn repeat<T: Clone + Send>(T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that endlessly repeats `elt` (by\n cloning it). Note that this iterator has \"infinite\" length, so\n typically you would want to use `zip` or `take` or some other\n means to shorten it, or consider using\n [the `repeatn()` function](fn.repeatn.html) instead.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that endlessly repeats `elt` (by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344179,"byte_end":344243,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ cloning it). Note that this iterator has \"infinite\" length, so","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344244,"byte_end":344310,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ typically you would want to use `zip` or `take` or some other","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344311,"byte_end":344376,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ means to shorten it, or consider using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344377,"byte_end":344419,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ [the `repeatn()` function](fn.repeatn.html) instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344420,"byte_end":344476,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344477,"byte_end":344480,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344481,"byte_end":344495,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344496,"byte_end":344499,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344500,"byte_end":344507,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344508,"byte_end":344534,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeat;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344535,"byte_end":344563,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ let x: Vec<(i32, i32)> = repeat(22).zip(0..3).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344564,"byte_end":344624,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344625,"byte_end":344676,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344677,"byte_end":344684,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345095,"byte_end":345099,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"take","qualname":"<Repeat<T>>::take","value":"pub fn take(Self, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Take only `n` repeats of the element, similar to the general\n [`take()`](trait.IndexedParallelIterator.html#method.take).","sig":null,"attributes":[{"value":"/ Take only `n` repeats of the element, similar to the general","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344821,"byte_end":344885,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ [`take()`](trait.IndexedParallelIterator.html#method.take).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344890,"byte_end":344953,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344958,"byte_end":344961,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The resulting `RepeatN` is an `IndexedParallelIterator`, allowing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344966,"byte_end":345035,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"/ more functionality than `Repeat` alone.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345040,"byte_end":345083,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345359,"byte_end":345362,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"zip","qualname":"<Repeat<T>>::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<RepeatN<T>, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate tuples repeating the element with items from another\n iterator, similar to the general\n [`zip()`](trait.IndexedParallelIterator.html#method.zip).\n","sig":null,"attributes":[{"value":"/ Iterate tuples repeating the element with items from another","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345176,"byte_end":345240,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ iterator, similar to the general","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345245,"byte_end":345281,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ [`zip()`](trait.IndexedParallelIterator.html#method.zip).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345286,"byte_end":345347,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5693},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346631,"byte_end":346638,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::iter::repeat::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":5695},{"krate":0,"index":5696}],"decl_id":null,"docs":" Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `repeatn()` function](fn.repeatn.html).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346526,"byte_end":346595,"line_start":101,"line_end":101,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3315},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":347003,"byte_end":347010,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::iter::repeat::repeatn","value":"pub fn repeatn<T: Clone + Send>(T, usize) -> RepeatN<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces `n` repeats of `elt`\n (by cloning it).","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces `n` repeats of `elt`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346695,"byte_end":346761,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"/ (by cloning it).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346762,"byte_end":346782,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346783,"byte_end":346786,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346787,"byte_end":346801,"line_start":111,"line_end":111,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346802,"byte_end":346805,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346806,"byte_end":346813,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346814,"byte_end":346840,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::repeatn;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346841,"byte_end":346870,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ let x: Vec<(i32, i32)> = repeatn(22, 3).zip(0..3).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346871,"byte_end":346935,"line_start":116,"line_end":116,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(x, vec![(22, 0), (22, 1), (22, 2)]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346936,"byte_end":346987,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346988,"byte_end":346995,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349847,"byte_end":349851,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Left","qualname":"::iter::unzip::UnzipOp::Left","value":"type Left: Send;","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":" The type of item expected by the left consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the left consumer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349786,"byte_end":349837,"line_start":8,"line_end":8,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349926,"byte_end":349931,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Right","qualname":"::iter::unzip::UnzipOp::Right","value":"type Right: Send;","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":" The type of item expected by the right consumer.\n","sig":null,"attributes":[{"value":"/ The type of item expected by the right consumer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349864,"byte_end":349916,"line_start":11,"line_end":11,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3563},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362093,"byte_end":362098,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::iter::empty::empty","value":"pub fn empty<T: Send>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces nothing.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces nothing.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361675,"byte_end":361729,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361730,"byte_end":361733,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be used for code that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361734,"byte_end":361811,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ deals with generic parallel iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361812,"byte_end":361854,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361855,"byte_end":361858,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361859,"byte_end":361873,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361874,"byte_end":361877,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361878,"byte_end":361885,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361886,"byte_end":361912,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::empty;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361913,"byte_end":361940,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361941,"byte_end":361944,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361945,"byte_end":361983,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/     .chain(empty())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":361984,"byte_end":362007,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362008,"byte_end":362037,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362038,"byte_end":362041,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.count(), 10_000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362042,"byte_end":362077,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362078,"byte_end":362085,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362251,"byte_end":362256,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Empty","qualname":"::iter::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3567}],"decl_id":null,"docs":" Iterator adaptor for [the `empty()` function](fn.empty.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `empty()` function](fn.empty.html).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362174,"byte_end":362239,"line_start":31,"line_end":31,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":3605},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364424,"byte_end":364428,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"once","qualname":"::iter::once::once","value":"pub fn once<T: Send>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a parallel iterator that produces an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a parallel iterator that produces an element exactly once.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":363782,"byte_end":363852,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":363853,"byte_end":363856,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This admits no parallelism on its own, but it could be chained to existing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":363857,"byte_end":363935,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ parallel iterators to extend their contents, or otherwise used for any code","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":363936,"byte_end":364015,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ that deals with generic parallel iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364016,"byte_end":364063,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364064,"byte_end":364067,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364068,"byte_end":364082,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364083,"byte_end":364086,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364087,"byte_end":364094,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364095,"byte_end":364121,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use rayon::iter::once;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364122,"byte_end":364148,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364149,"byte_end":364152,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let pi = (0..1234).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364153,"byte_end":364191,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/     .chain(once(-1))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364192,"byte_end":364216,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     .chain(1234..10_000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364217,"byte_end":364246,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364247,"byte_end":364250,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pi.clone().count(), 10_001);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364251,"byte_end":364294,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(pi.clone().filter(|&x| x < 0).count(), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364295,"byte_end":364352,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(pi.position_any(|x| x < 0), Some(1234));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364353,"byte_end":364408,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364409,"byte_end":364416,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5703},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364580,"byte_end":364584,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Once","qualname":"::iter::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":5705}],"decl_id":null,"docs":" Iterator adaptor for [the `once()` function](fn.once.html).\n","sig":null,"attributes":[{"value":"/ Iterator adaptor for [the `once()` function](fn.once.html).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364481,"byte_end":364544,"line_start":28,"line_end":28,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28824,"byte_end":28844,"line_start":189,"line_end":189,"column_start":11,"column_end":31},"name":"IntoParallelIterator","qualname":"::iter::IntoParallelIterator","value":"IntoParallelIterator","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626}],"decl_id":null,"docs":" `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `IntoParallelIterator` implements the conversion to a [`ParallelIterator`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28376,"byte_end":28455,"line_start":181,"line_end":181,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28456,"byte_end":28459,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoParallelIterator` for a type, you define how it will","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28460,"byte_end":28537,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/ transformed into an iterator. This is a parallel version of the standard","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28538,"byte_end":28614,"line_start":184,"line_end":184,"column_start":1,"column_end":77}},{"value":"/ library's [`std::iter::IntoIterator`] trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28615,"byte_end":28663,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28664,"byte_end":28667,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28668,"byte_end":28721,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"/ [`std::iter::IntoIterator`]: https://doc.rust-lang.org/std/iter/trait.IntoIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28722,"byte_end":28813,"line_start":188,"line_end":188,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28913,"byte_end":28917,"line_start":191,"line_end":191,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" The parallel iterator type that will be created.\n","sig":null,"attributes":[{"value":"/ The parallel iterator type that will be created.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28851,"byte_end":28903,"line_start":190,"line_end":190,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29032,"byte_end":29036,"line_start":194,"line_end":194,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":28961,"byte_end":29022,"line_start":193,"line_end":193,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29687,"byte_end":29700,"line_start":218,"line_end":218,"column_start":8,"column_end":21},"name":"into_par_iter","qualname":"::iter::IntoParallelIterator::into_par_iter","value":"pub fn into_par_iter(Self) -> Self::Iter","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29049,"byte_end":29094,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29099,"byte_end":29102,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29107,"byte_end":29121,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29126,"byte_end":29129,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29134,"byte_end":29141,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29146,"byte_end":29172,"line_start":201,"line_end":201,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29177,"byte_end":29180,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ println!(\"counting in parallel:\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29185,"byte_end":29223,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29228,"byte_end":29256,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/     .for_each(|i| println!(\"{}\", i));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29261,"byte_end":29302,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29307,"byte_end":29314,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29319,"byte_end":29322,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This conversion is often implicit for arguments to methods like [`zip`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29327,"byte_end":29403,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29408,"byte_end":29411,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29416,"byte_end":29423,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29428,"byte_end":29454,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29459,"byte_end":29462,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..5).into_par_iter().zip(5..10).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29467,"byte_end":29531,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(v, [(0, 5), (1, 6), (2, 7), (3, 8), (4, 9)]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29536,"byte_end":29596,"line_start":214,"line_end":214,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29601,"byte_end":29608,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29613,"byte_end":29616,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`zip`]: trait.IndexedParallelIterator.html#method.zip","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29621,"byte_end":29679,"line_start":217,"line_end":217,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":3627},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30289,"byte_end":30312,"line_start":234,"line_end":234,"column_start":11,"column_end":34},"name":"IntoParallelRefIterator","qualname":"::iter::IntoParallelRefIterator","value":"IntoParallelRefIterator<'data>","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631}],"decl_id":null,"docs":" `IntoParallelRefIterator` implements the conversion to a\n [`ParallelIterator`], providing shared references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefIterator` implements the conversion to a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29725,"byte_end":29785,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/ [`ParallelIterator`], providing shared references to the data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29786,"byte_end":29852,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29853,"byte_end":29856,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter()` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29857,"byte_end":29910,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29911,"byte_end":29946,"line_start":225,"line_end":225,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29947,"byte_end":29950,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29951,"byte_end":29994,"line_start":227,"line_end":227,"column_start":1,"column_end":44}},{"value":"/ `for I where &I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":29995,"byte_end":30059,"line_start":228,"line_end":228,"column_start":1,"column_end":65}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30060,"byte_end":30133,"line_start":229,"line_end":229,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30134,"byte_end":30158,"line_start":230,"line_end":230,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30159,"byte_end":30162,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30163,"byte_end":30216,"line_start":232,"line_end":232,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30217,"byte_end":30278,"line_start":233,"line_end":233,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30396,"byte_end":30400,"line_start":236,"line_end":236,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" The type of the parallel iterator that will be returned.\n","sig":null,"attributes":[{"value":"/ The type of the parallel iterator that will be returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30326,"byte_end":30386,"line_start":235,"line_end":235,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3630},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30576,"byte_end":30580,"line_start":240,"line_end":240,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" The type of item that the parallel iterator will produce.\n This will typically be an `&'data T` reference type.\n","sig":null,"attributes":[{"value":"/ The type of item that the parallel iterator will produce.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30444,"byte_end":30505,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ This will typically be an `&'data T` reference type.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30510,"byte_end":30566,"line_start":239,"line_end":239,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31070,"byte_end":31078,"line_start":257,"line_end":257,"column_start":8,"column_end":16},"name":"par_iter","qualname":"::iter::IntoParallelRefIterator::par_iter","value":"pub fn par_iter(&'data Self) -> Self::Iter","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Converts `self` into a parallel iterator.","sig":null,"attributes":[{"value":"/ Converts `self` into a parallel iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30601,"byte_end":30646,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30651,"byte_end":30654,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30659,"byte_end":30673,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30678,"byte_end":30681,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30686,"byte_end":30693,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30698,"byte_end":30724,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30729,"byte_end":30732,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_> = (0..100).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30737,"byte_end":30776,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.par_iter().sum::<i32>(), 100 * 99 / 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30781,"byte_end":30837,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30842,"byte_end":30845,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // `v.par_iter()` is shorthand for `(&v).into_par_iter()`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30850,"byte_end":30912,"line_start":252,"line_end":252,"column_start":5,"column_end":67}},{"value":"/ // producing the exact same references.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30917,"byte_end":30960,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/ assert!(v.par_iter().zip(&v)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":30965,"byte_end":30997,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/          .all(|(a, b)| std::ptr::eq(a, b)));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31002,"byte_end":31050,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31055,"byte_end":31062,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31998,"byte_end":32024,"line_start":285,"line_end":285,"column_start":11,"column_end":37},"name":"IntoParallelRefMutIterator","qualname":"::iter::IntoParallelRefMutIterator","value":"IntoParallelRefMutIterator<'data>","parent":null,"children":[{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642}],"decl_id":null,"docs":" `IntoParallelRefMutIterator` implements the conversion to a\n [`ParallelIterator`], providing mutable references to the data.","sig":null,"attributes":[{"value":"/ `IntoParallelRefMutIterator` implements the conversion to a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31422,"byte_end":31485,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`ParallelIterator`], providing mutable references to the data.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31486,"byte_end":31553,"line_start":273,"line_end":273,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31554,"byte_end":31557,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ This is a parallel version of the `iter_mut()` method","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31558,"byte_end":31615,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ defined by various collections.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31616,"byte_end":31651,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31652,"byte_end":31655,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31656,"byte_end":31699,"line_start":278,"line_end":278,"column_start":1,"column_end":44}},{"value":"/ `for I where &mut I: IntoParallelIterator`. In most cases, users","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31700,"byte_end":31768,"line_start":279,"line_end":279,"column_start":1,"column_end":69}},{"value":"/ will want to implement [`IntoParallelIterator`] rather than implement","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31769,"byte_end":31842,"line_start":280,"line_end":280,"column_start":1,"column_end":74}},{"value":"/ this trait directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31843,"byte_end":31867,"line_start":281,"line_end":281,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31868,"byte_end":31871,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31872,"byte_end":31925,"line_start":283,"line_end":283,"column_start":1,"column_end":54}},{"value":"/ [`IntoParallelIterator`]: trait.IntoParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31926,"byte_end":31987,"line_start":284,"line_end":284,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32094,"byte_end":32098,"line_start":287,"line_end":287,"column_start":10,"column_end":14},"name":"Iter","qualname":"::iter::IntoParallelRefMutIterator::Iter","value":"type Iter: ParallelIterator<Item = Self::Item>;","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":" The type of iterator that will be created.\n","sig":null,"attributes":[{"value":"/ The type of iterator that will be created.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32038,"byte_end":32084,"line_start":286,"line_end":286,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":3641},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32250,"byte_end":32254,"line_start":291,"line_end":291,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::IntoParallelRefMutIterator::Item","value":"type Item: Send + 'data;","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":" The type of item that will be produced; this is typically an\n `&'data mut T` reference.\n","sig":null,"attributes":[{"value":"/ The type of item that will be produced; this is typically an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32142,"byte_end":32206,"line_start":289,"line_end":289,"column_start":5,"column_end":69}},{"value":"/ `&'data mut T` reference.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32211,"byte_end":32240,"line_start":290,"line_end":290,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32568,"byte_end":32580,"line_start":304,"line_end":304,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"::iter::IntoParallelRefMutIterator::par_iter_mut","value":"pub fn par_iter_mut(&'data mut Self) -> Self::Iter","parent":{"krate":0,"index":3638},"children":[],"decl_id":null,"docs":" Creates the parallel iterator from `self`.","sig":null,"attributes":[{"value":"/ Creates the parallel iterator from `self`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32275,"byte_end":32321,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32326,"byte_end":32329,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32334,"byte_end":32348,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32353,"byte_end":32356,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32361,"byte_end":32368,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32373,"byte_end":32399,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32404,"byte_end":32407,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0usize; 5];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32412,"byte_end":32444,"line_start":300,"line_end":300,"column_start":5,"column_end":37}},{"value":"/ v.par_iter_mut().enumerate().for_each(|(i, x)| *x = i);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32449,"byte_end":32508,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(v, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32513,"byte_end":32548,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32553,"byte_end":32560,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3649},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33557,"byte_end":33573,"line_start":333,"line_end":333,"column_start":11,"column_end":27},"name":"ParallelIterator","qualname":"::iter::ParallelIterator","value":"ParallelIterator: Sized + Send","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3660},{"krate":0,"index":3665},{"krate":0,"index":3671},{"krate":0,"index":3678},{"krate":0,"index":3681},{"krate":0,"index":3684},{"krate":0,"index":3688},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3715},{"krate":0,"index":3727},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3746},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3762},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3782},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3807},{"krate":0,"index":3812},{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3834},{"krate":0,"index":3838},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3847}],"decl_id":null,"docs":" Parallel version of the standard iterator trait.","sig":null,"attributes":[{"value":"/ Parallel version of the standard iterator trait.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32951,"byte_end":33003,"line_start":319,"line_end":319,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33004,"byte_end":33007,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ The combinators on this trait are available on **all** parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33008,"byte_end":33075,"line_start":321,"line_end":321,"column_start":1,"column_end":68}},{"value":"/ iterators.  Additional methods can be found on the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33076,"byte_end":33130,"line_start":322,"line_end":322,"column_start":1,"column_end":55}},{"value":"/ [`IndexedParallelIterator`] trait: those methods are only","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33131,"byte_end":33192,"line_start":323,"line_end":323,"column_start":1,"column_end":62}},{"value":"/ available for parallel iterators where the number of items is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33193,"byte_end":33258,"line_start":324,"line_end":324,"column_start":1,"column_end":66}},{"value":"/ known in advance (so, e.g., after invoking `filter`, those methods","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33259,"byte_end":33329,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/ become unavailable).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33330,"byte_end":33354,"line_start":326,"line_end":326,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33355,"byte_end":33358,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ For examples of using parallel iterators, see [the docs on the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33359,"byte_end":33425,"line_start":328,"line_end":328,"column_start":1,"column_end":67}},{"value":"/ `iter` module][iter].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33426,"byte_end":33451,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33452,"byte_end":33455,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ [iter]: index.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33456,"byte_end":33478,"line_start":331,"line_end":331,"column_start":1,"column_end":23}},{"value":"/ [`IndexedParallelIterator`]: trait.IndexedParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33479,"byte_end":33546,"line_start":332,"line_end":332,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33839,"byte_end":33843,"line_start":339,"line_end":339,"column_start":10,"column_end":14},"name":"Item","qualname":"::iter::ParallelIterator::Item","value":"type Item: Send;","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" The type of item that this parallel iterator produces.\n For example, if you use the [`for_each`] method, this is the type of\n item that your closure will be invoked with.","sig":null,"attributes":[{"value":"/ The type of item that this parallel iterator produces.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33594,"byte_end":33652,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ For example, if you use the [`for_each`] method, this is the type of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33657,"byte_end":33729,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ item that your closure will be invoked with.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33734,"byte_end":33782,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33787,"byte_end":33790,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`for_each`]: #method.for_each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33795,"byte_end":33829,"line_start":338,"line_end":338,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34099,"byte_end":34107,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"for_each","qualname":"::iter::ParallelIterator::for_each","value":"pub fn for_each<OP>(Self, OP) where OP: Fn(Self::Item) -> () + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33856,"byte_end":33925,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33930,"byte_end":33933,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33938,"byte_end":33952,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33957,"byte_end":33960,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33965,"byte_end":33972,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33977,"byte_end":34003,"line_start":346,"line_end":346,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34008,"byte_end":34011,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ (0..100).into_par_iter().for_each(|x| println!(\"{:?}\", x));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34016,"byte_end":34079,"line_start":348,"line_end":348,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34084,"byte_end":34091,"line_start":349,"line_end":349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34942,"byte_end":34955,"line_start":380,"line_end":380,"column_start":8,"column_end":21},"name":"for_each_with","qualname":"::iter::ParallelIterator::for_each_with","value":"pub fn for_each_with<OP, T>(Self, T, OP) where OP: Fn(&mut T, Self::Item) ->\n() + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes `OP` on the given `init` value with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on the given `init` value with each item produced by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34233,"byte_end":34303,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34308,"byte_end":34338,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34343,"byte_end":34346,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34351,"byte_end":34419,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34424,"byte_end":34495,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34500,"byte_end":34517,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34522,"byte_end":34525,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34530,"byte_end":34544,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34549,"byte_end":34552,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34557,"byte_end":34564,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34569,"byte_end":34602,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34607,"byte_end":34633,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34638,"byte_end":34641,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34646,"byte_end":34685,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34690,"byte_end":34693,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter().for_each_with(sender, |s, x| s.send(x).unwrap());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34698,"byte_end":34774,"line_start":372,"line_end":372,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34779,"byte_end":34782,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34787,"byte_end":34839,"line_start":374,"line_end":374,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34844,"byte_end":34847,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34852,"byte_end":34867,"line_start":376,"line_end":376,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34872,"byte_end":34875,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34880,"byte_end":34922,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":34927,"byte_end":34934,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35986,"byte_end":35999,"line_start":417,"line_end":417,"column_start":8,"column_end":21},"name":"for_each_init","qualname":"::iter::ParallelIterator::for_each_init","value":"pub fn for_each_init<OP, INIT, T>(Self, INIT, OP) where\nOP: Fn(&mut T, Self::Item) -> () + Sync + Send, INIT: Fn() -> T + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes `OP` on a value returned by `init` with each item produced by\n the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes `OP` on a value returned by `init` with each item produced by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35130,"byte_end":35204,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35209,"byte_end":35239,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35244,"byte_end":35247,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35252,"byte_end":35323,"line_start":391,"line_end":391,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35328,"byte_end":35394,"line_start":392,"line_end":392,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35399,"byte_end":35443,"line_start":393,"line_end":393,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35448,"byte_end":35451,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35456,"byte_end":35470,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35475,"byte_end":35478,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35483,"byte_end":35490,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35495,"byte_end":35517,"line_start":398,"line_end":398,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35522,"byte_end":35545,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35550,"byte_end":35553,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35558,"byte_end":35576,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35581,"byte_end":35607,"line_start":402,"line_end":402,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35612,"byte_end":35615,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35620,"byte_end":35657,"line_start":404,"line_end":404,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35662,"byte_end":35665,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35670,"byte_end":35696,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/     .for_each_init(","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35701,"byte_end":35724,"line_start":407,"line_end":407,"column_start":5,"column_end":28}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35729,"byte_end":35763,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.fill(chunk),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35768,"byte_end":35809,"line_start":409,"line_end":409,"column_start":5,"column_end":46}},{"value":"/     );","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35814,"byte_end":35824,"line_start":410,"line_end":410,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35829,"byte_end":35832,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35837,"byte_end":35890,"line_start":412,"line_end":412,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35895,"byte_end":35919,"line_start":413,"line_end":413,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35924,"byte_end":35956,"line_start":414,"line_end":414,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35961,"byte_end":35966,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":35971,"byte_end":35978,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37102,"byte_end":37114,"line_start":445,"line_end":445,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::iter::ParallelIterator::try_for_each","value":"pub fn try_for_each<OP, R>(Self, OP) -> R where OP: Fn(Self::Item) -> R +\nSync + Send, R: Try<Ok = ()> + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on each item produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on each item produced by the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36197,"byte_end":36277,"line_start":425,"line_end":425,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36282,"byte_end":36285,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ If the `OP` returns `Result::Err` or `Option::None`, we will attempt to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36290,"byte_end":36365,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ stop processing the rest of the items in the iterator as soon as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36370,"byte_end":36438,"line_start":428,"line_end":428,"column_start":5,"column_end":73}},{"value":"/ possible, and we will return that terminating value.  Otherwise, we will","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36443,"byte_end":36519,"line_start":429,"line_end":429,"column_start":5,"column_end":81}},{"value":"/ return an empty `Result::Ok(())` or `Option::Some(())`.  If there are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36524,"byte_end":36597,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ multiple errors in parallel, it is not specified which will be returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36602,"byte_end":36678,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36683,"byte_end":36686,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36691,"byte_end":36705,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36710,"byte_end":36713,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36718,"byte_end":36725,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36730,"byte_end":36756,"line_start":436,"line_end":436,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36761,"byte_end":36792,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36797,"byte_end":36800,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ // This will stop iteration early if there's any write error, like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36805,"byte_end":36875,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/ // having piped output get closed on the other end.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36880,"byte_end":36935,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/ (0..100).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36940,"byte_end":36968,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/     .try_for_each(|x| writeln!(io::stdout(), \"{:?}\", x))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":36973,"byte_end":37033,"line_start":442,"line_end":442,"column_start":5,"column_end":65}},{"value":"/     .expect(\"expected no write errors\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37038,"byte_end":37082,"line_start":443,"line_end":443,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37087,"byte_end":37094,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38223,"byte_end":38240,"line_start":484,"line_end":484,"column_start":8,"column_end":25},"name":"try_for_each_with","qualname":"::iter::ParallelIterator::try_for_each_with","value":"pub fn try_for_each_with<OP, T, R>(Self, T, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Try<Ok =\n()> + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on the given `init` value with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on the given `init` value with each item","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37388,"byte_end":37457,"line_start":457,"line_end":457,"column_start":5,"column_end":74}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37462,"byte_end":37504,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37509,"byte_end":37512,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_with()`] and the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37517,"byte_end":37586,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37591,"byte_end":37635,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37640,"byte_end":37643,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`for_each_with()`]: #method.for_each_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37648,"byte_end":37694,"line_start":463,"line_end":463,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37699,"byte_end":37743,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37748,"byte_end":37751,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37756,"byte_end":37770,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37775,"byte_end":37778,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37783,"byte_end":37790,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37795,"byte_end":37828,"line_start":469,"line_end":469,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37833,"byte_end":37859,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37864,"byte_end":37867,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37872,"byte_end":37911,"line_start":472,"line_end":472,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37916,"byte_end":37919,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37924,"byte_end":37950,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_with(sender, |s, x| s.send(x))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":37955,"byte_end":38007,"line_start":475,"line_end":475,"column_start":5,"column_end":57}},{"value":"/     .expect(\"expected no send errors\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38012,"byte_end":38055,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38060,"byte_end":38063,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut res: Vec<_> = receiver.iter().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38068,"byte_end":38120,"line_start":478,"line_end":478,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38125,"byte_end":38128,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ res.sort();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38133,"byte_end":38148,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38153,"byte_end":38156,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&res[..], &[0, 1, 2, 3, 4])","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38161,"byte_end":38203,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38208,"byte_end":38215,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39527,"byte_end":39544,"line_start":529,"line_end":529,"column_start":8,"column_end":25},"name":"try_for_each_init","qualname":"::iter::ParallelIterator::try_for_each_init","value":"pub fn try_for_each_init<OP, INIT, T, R>(Self, INIT, OP) -> R where\nOP: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Try<Ok = ()> + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Executes a fallible `OP` on a value returned by `init` with each item\n produced by the iterator, in parallel.","sig":null,"attributes":[{"value":"/ Executes a fallible `OP` on a value returned by `init` with each item","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38570,"byte_end":38643,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ produced by the iterator, in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38648,"byte_end":38690,"line_start":498,"line_end":498,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38695,"byte_end":38698,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`for_each_init()`] and the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38703,"byte_end":38772,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ failure semantics of [`try_for_each()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38777,"byte_end":38821,"line_start":501,"line_end":501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38826,"byte_end":38829,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ [`for_each_init()`]: #method.for_each_init","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38834,"byte_end":38880,"line_start":503,"line_end":503,"column_start":5,"column_end":51}},{"value":"/ [`try_for_each()`]: #method.try_for_each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38885,"byte_end":38929,"line_start":504,"line_end":504,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38934,"byte_end":38937,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38942,"byte_end":38956,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38961,"byte_end":38964,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38969,"byte_end":38976,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":38981,"byte_end":39003,"line_start":509,"line_end":509,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39008,"byte_end":39031,"line_start":510,"line_end":510,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39036,"byte_end":39039,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39044,"byte_end":39062,"line_start":512,"line_end":512,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39067,"byte_end":39093,"line_start":513,"line_end":513,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39098,"byte_end":39101,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let mut v = vec![0u8; 1_000_000];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39106,"byte_end":39143,"line_start":515,"line_end":515,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39148,"byte_end":39151,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ v.par_chunks_mut(1000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39156,"byte_end":39182,"line_start":517,"line_end":517,"column_start":5,"column_end":31}},{"value":"/     .try_for_each_init(","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39187,"byte_end":39214,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/         || rand::thread_rng(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39219,"byte_end":39253,"line_start":519,"line_end":519,"column_start":5,"column_end":39}},{"value":"/         |rng, chunk| rng.try_fill(chunk),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39258,"byte_end":39303,"line_start":520,"line_end":520,"column_start":5,"column_end":50}},{"value":"/     )","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39308,"byte_end":39317,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"/     .expect(\"expected no rand errors\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39322,"byte_end":39365,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39370,"byte_end":39373,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39378,"byte_end":39431,"line_start":524,"line_end":524,"column_start":5,"column_end":58}},{"value":"/ for i in 0u8..=255 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39436,"byte_end":39460,"line_start":525,"line_end":525,"column_start":5,"column_end":29}},{"value":"/     assert!(v.contains(&i));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39465,"byte_end":39497,"line_start":526,"line_end":526,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39502,"byte_end":39507,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39512,"byte_end":39519,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40154,"byte_end":40159,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"count","qualname":"::iter::ParallelIterator::count","value":"pub fn count(Self) -> usize","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Counts the number of items in this parallel iterator.","sig":null,"attributes":[{"value":"/ Counts the number of items in this parallel iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39897,"byte_end":39954,"line_start":542,"line_end":542,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39959,"byte_end":39962,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39967,"byte_end":39981,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39986,"byte_end":39989,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":39994,"byte_end":40001,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40006,"byte_end":40032,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40037,"byte_end":40040,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ let count = (0..100).into_par_iter().count();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40045,"byte_end":40094,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40099,"byte_end":40102,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 100);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40107,"byte_end":40134,"line_start":551,"line_end":551,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40139,"byte_end":40146,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40668,"byte_end":40671,"line_start":575,"line_end":575,"column_start":8,"column_end":11},"name":"map","qualname":"::iter::ParallelIterator::map","value":"pub fn map<F, R>(Self, F) -> Map<Self, F> where F: Fn(Self::Item) -> R +\nSync + Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator, producing a new\n iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40276,"byte_end":40343,"line_start":561,"line_end":561,"column_start":5,"column_end":72}},{"value":"/ iterator with the results.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40348,"byte_end":40378,"line_start":562,"line_end":562,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40383,"byte_end":40386,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40391,"byte_end":40405,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40410,"byte_end":40413,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40418,"byte_end":40425,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40430,"byte_end":40456,"line_start":567,"line_end":567,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40461,"byte_end":40464,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..5).into_par_iter().map(|x| x * 2);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40469,"byte_end":40530,"line_start":569,"line_end":569,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40535,"byte_end":40538,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40543,"byte_end":40588,"line_start":571,"line_end":571,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40593,"byte_end":40596,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40601,"byte_end":40648,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40653,"byte_end":40660,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42014,"byte_end":42022,"line_start":612,"line_end":612,"column_start":8,"column_end":16},"name":"map_with","qualname":"::iter::ParallelIterator::map_with","value":"pub fn map_with<F, T, R>(Self, T, F) -> MapWith<Self, T, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, T: Send + Clone, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `map_op` to the given `init` value with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to the given `init` value with each item of this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40832,"byte_end":40901,"line_start":583,"line_end":583,"column_start":5,"column_end":74}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40906,"byte_end":40962,"line_start":584,"line_end":584,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40967,"byte_end":40970,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The `init` value will be cloned only as needed to be paired with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":40975,"byte_end":41043,"line_start":586,"line_end":586,"column_start":5,"column_end":73}},{"value":"/ the group of items in each rayon job.  It does not require the type","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41048,"byte_end":41119,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ to be `Sync`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41124,"byte_end":41141,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41146,"byte_end":41149,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41154,"byte_end":41168,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41173,"byte_end":41176,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41181,"byte_end":41188,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41193,"byte_end":41226,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41231,"byte_end":41257,"line_start":594,"line_end":594,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41262,"byte_end":41265,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41270,"byte_end":41309,"line_start":596,"line_end":596,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41314,"byte_end":41317,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (0..5)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41322,"byte_end":41348,"line_start":598,"line_end":598,"column_start":5,"column_end":31}},{"value":"/                 .into_par_iter()            // iterating over i32","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41353,"byte_end":41422,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/                 .map_with(sender, |s, x| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41427,"byte_end":41473,"line_start":600,"line_end":600,"column_start":5,"column_end":51}},{"value":"/                     s.send(x).unwrap();     // sending i32 values through the channel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41478,"byte_end":41567,"line_start":601,"line_end":601,"column_start":5,"column_end":94}},{"value":"/                     x                       // returning i32","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41572,"byte_end":41636,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"/                 })","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41641,"byte_end":41663,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/                 .collect();                 // collecting the returned values into a vector","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41668,"byte_end":41763,"line_start":604,"line_end":604,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41768,"byte_end":41771,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut b: Vec<_> = receiver.iter()         // iterating over the values in the channel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41776,"byte_end":41867,"line_start":606,"line_end":606,"column_start":5,"column_end":96}},{"value":"/                             .collect();     // and collecting them","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41872,"byte_end":41942,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ b.sort();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41947,"byte_end":41960,"line_start":608,"line_end":608,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41965,"byte_end":41968,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41973,"byte_end":41994,"line_start":610,"line_end":610,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":41999,"byte_end":42006,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43268,"byte_end":43276,"line_start":652,"line_end":652,"column_start":8,"column_end":16},"name":"map_init","qualname":"::iter::ParallelIterator::map_init","value":"pub fn map_init<F, INIT, T, R>(Self, INIT, F) -> MapInit<Self, INIT, F> where\nF: Fn(&mut T, Self::Item) -> R + Sync + Send, INIT: Fn() -> T + Sync + Send,\nR: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `map_op` to a value returned by `init` with each item of this\n iterator, producing a new iterator with the results.","sig":null,"attributes":[{"value":"/ Applies `map_op` to a value returned by `init` with each item of this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42245,"byte_end":42318,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ iterator, producing a new iterator with the results.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42323,"byte_end":42379,"line_start":622,"line_end":622,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42384,"byte_end":42387,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The `init` function will be called only as needed for a value to be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42392,"byte_end":42463,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ paired with the group of items in each rayon job.  There is no","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42468,"byte_end":42534,"line_start":625,"line_end":625,"column_start":5,"column_end":71}},{"value":"/ constraint on that returned type at all!","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42539,"byte_end":42583,"line_start":626,"line_end":626,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42588,"byte_end":42591,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42596,"byte_end":42610,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42615,"byte_end":42618,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42623,"byte_end":42630,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42635,"byte_end":42657,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/ extern crate rayon;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42662,"byte_end":42685,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42690,"byte_end":42693,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42698,"byte_end":42716,"line_start":634,"line_end":634,"column_start":5,"column_end":23}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42721,"byte_end":42747,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42752,"byte_end":42755,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let a: Vec<_> = (1i32..1_000_000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42760,"byte_end":42797,"line_start":637,"line_end":637,"column_start":5,"column_end":42}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42802,"byte_end":42826,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/     .map_init(","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42831,"byte_end":42849,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/         || rand::thread_rng(),  // get the thread-local RNG","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42854,"byte_end":42917,"line_start":640,"line_end":640,"column_start":5,"column_end":68}},{"value":"/         |rng, x| if rng.gen() { // randomly negate items","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42922,"byte_end":42982,"line_start":641,"line_end":641,"column_start":5,"column_end":65}},{"value":"/             -x","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":42987,"byte_end":43005,"line_start":642,"line_end":642,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43010,"byte_end":43030,"line_start":643,"line_end":643,"column_start":5,"column_end":25}},{"value":"/             x","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43035,"byte_end":43052,"line_start":644,"line_end":644,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43057,"byte_end":43071,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/     ).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43076,"byte_end":43096,"line_start":646,"line_end":646,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43101,"byte_end":43104,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ // There's a remote chance that this will fail...","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43109,"byte_end":43162,"line_start":648,"line_end":648,"column_start":5,"column_end":58}},{"value":"/ assert!(a.iter().any(|&x| x < 0));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43167,"byte_end":43205,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ assert!(a.iter().any(|&x| x > 0));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43210,"byte_end":43248,"line_start":650,"line_end":650,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43253,"byte_end":43260,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44207,"byte_end":44213,"line_start":682,"line_end":682,"column_start":8,"column_end":14},"name":"cloned","qualname":"::iter::ParallelIterator::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where T: 'a + Clone + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Creates an iterator which clones all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Clone`. See also [`copied()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which clones all of its elements.  This may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43525,"byte_end":43595,"line_start":661,"line_end":661,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43600,"byte_end":43669,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ that type implements `Clone`. See also [`copied()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43674,"byte_end":43730,"line_start":663,"line_end":663,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43735,"byte_end":43738,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`copied()`]: #method.copied","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43743,"byte_end":43775,"line_start":665,"line_end":665,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43780,"byte_end":43783,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43788,"byte_end":43802,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43807,"byte_end":43810,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43815,"byte_end":43822,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43827,"byte_end":43853,"line_start":670,"line_end":670,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43858,"byte_end":43861,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43866,"byte_end":43888,"line_start":672,"line_end":672,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43893,"byte_end":43896,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let v_cloned: Vec<_> = a.par_iter().cloned().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43901,"byte_end":43960,"line_start":674,"line_end":674,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43965,"byte_end":43968,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ // cloned is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":43973,"byte_end":44028,"line_start":676,"line_end":676,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44033,"byte_end":44092,"line_start":677,"line_end":677,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44097,"byte_end":44100,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_cloned, vec![1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44105,"byte_end":44145,"line_start":679,"line_end":679,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44150,"byte_end":44187,"line_start":680,"line_end":680,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44192,"byte_end":44199,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45053,"byte_end":45059,"line_start":711,"line_end":711,"column_start":8,"column_end":14},"name":"copied","qualname":"::iter::ParallelIterator::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where T: 'a + Copy + Send,\nSelf: ParallelIterator<Item = &'a T>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Creates an iterator which copies all of its elements.  This may be\n useful when you have an iterator over `&T`, but you need `T`, and\n that type implements `Copy`. See also [`cloned()`].","sig":null,"attributes":[{"value":"/ Creates an iterator which copies all of its elements.  This may be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44372,"byte_end":44442,"line_start":690,"line_end":690,"column_start":5,"column_end":75}},{"value":"/ useful when you have an iterator over `&T`, but you need `T`, and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44447,"byte_end":44516,"line_start":691,"line_end":691,"column_start":5,"column_end":74}},{"value":"/ that type implements `Copy`. See also [`cloned()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44521,"byte_end":44576,"line_start":692,"line_end":692,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44581,"byte_end":44584,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ [`cloned()`]: #method.cloned","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44589,"byte_end":44621,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44626,"byte_end":44629,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44634,"byte_end":44648,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44653,"byte_end":44656,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44661,"byte_end":44668,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44673,"byte_end":44699,"line_start":699,"line_end":699,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44704,"byte_end":44707,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44712,"byte_end":44734,"line_start":701,"line_end":701,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44739,"byte_end":44742,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let v_copied: Vec<_> = a.par_iter().copied().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44747,"byte_end":44806,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44811,"byte_end":44814,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ // copied is the same as .map(|&x| x), for integers","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44819,"byte_end":44874,"line_start":705,"line_end":705,"column_start":5,"column_end":60}},{"value":"/ let v_map: Vec<_> = a.par_iter().map(|&x| x).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44879,"byte_end":44938,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44943,"byte_end":44946,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v_copied, vec![1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44951,"byte_end":44991,"line_start":708,"line_end":708,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v_map, vec![1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":44996,"byte_end":45033,"line_start":709,"line_end":709,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45038,"byte_end":45045,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46253,"byte_end":46260,"line_start":748,"line_end":748,"column_start":8,"column_end":15},"name":"inspect","qualname":"::iter::ParallelIterator::inspect","value":"pub fn inspect<OP>(Self, OP) -> Inspect<Self, OP> where OP: Fn(&Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `inspect_op` to a reference to each item of this iterator,\n producing a new iterator passing through the original items.  This is\n often useful for debugging to see what's happening in iterator stages.","sig":null,"attributes":[{"value":"/ Applies `inspect_op` to a reference to each item of this iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45217,"byte_end":45287,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/ producing a new iterator passing through the original items.  This is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45292,"byte_end":45365,"line_start":720,"line_end":720,"column_start":5,"column_end":78}},{"value":"/ often useful for debugging to see what's happening in iterator stages.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45370,"byte_end":45444,"line_start":721,"line_end":721,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45449,"byte_end":45452,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45457,"byte_end":45471,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45476,"byte_end":45479,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45484,"byte_end":45491,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45496,"byte_end":45522,"line_start":726,"line_end":726,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45527,"byte_end":45530,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 4, 2, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45535,"byte_end":45560,"line_start":728,"line_end":728,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45565,"byte_end":45568,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ // this iterator sequence is complex.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45573,"byte_end":45614,"line_start":730,"line_end":730,"column_start":5,"column_end":46}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45619,"byte_end":45645,"line_start":731,"line_end":731,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45650,"byte_end":45675,"line_start":732,"line_end":732,"column_start":5,"column_end":30}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45680,"byte_end":45720,"line_start":733,"line_end":733,"column_start":5,"column_end":45}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45725,"byte_end":45773,"line_start":734,"line_end":734,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45778,"byte_end":45781,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45786,"byte_end":45810,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45815,"byte_end":45818,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ // let's add some inspect() calls to investigate what's happening","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45823,"byte_end":45892,"line_start":738,"line_end":738,"column_start":5,"column_end":74}},{"value":"/ let sum = a.par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45897,"byte_end":45923,"line_start":739,"line_end":739,"column_start":5,"column_end":31}},{"value":"/             .cloned()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45928,"byte_end":45953,"line_start":740,"line_end":740,"column_start":5,"column_end":30}},{"value":"/             .inspect(|x| println!(\"about to filter: {}\", x))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":45958,"byte_end":46022,"line_start":741,"line_end":741,"column_start":5,"column_end":69}},{"value":"/             .filter(|&x| x % 2 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46027,"byte_end":46067,"line_start":742,"line_end":742,"column_start":5,"column_end":45}},{"value":"/             .inspect(|x| println!(\"made it through filter: {}\", x))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46072,"byte_end":46143,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/             .reduce(|| 0, |sum, i| sum + i);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46148,"byte_end":46196,"line_start":744,"line_end":744,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46201,"byte_end":46204,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46209,"byte_end":46233,"line_start":746,"line_end":746,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46238,"byte_end":46245,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46769,"byte_end":46775,"line_start":768,"line_end":768,"column_start":8,"column_end":14},"name":"update","qualname":"::iter::ParallelIterator::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where F: Fn(&mut Self::Item) ->\n() + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Mutates each item of this iterator before yielding it.","sig":null,"attributes":[{"value":"/ Mutates each item of this iterator before yielding it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46417,"byte_end":46475,"line_start":755,"line_end":755,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46480,"byte_end":46483,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46488,"byte_end":46502,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46507,"byte_end":46510,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46515,"byte_end":46522,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46527,"byte_end":46553,"line_start":760,"line_end":760,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46558,"byte_end":46561,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..5).into_par_iter().update(|x| {*x *= 2;});","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46566,"byte_end":46631,"line_start":762,"line_end":762,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46636,"byte_end":46639,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let doubles: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46644,"byte_end":46689,"line_start":764,"line_end":764,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46694,"byte_end":46697,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&doubles[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46702,"byte_end":46749,"line_start":766,"line_end":766,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46754,"byte_end":46761,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47370,"byte_end":47376,"line_start":789,"line_end":789,"column_start":8,"column_end":14},"name":"filter","qualname":"::iter::ParallelIterator::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator, producing a new\n iterator with only the items that gave `true` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator, producing a new","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":46928,"byte_end":46998,"line_start":775,"line_end":775,"column_start":5,"column_end":75}},{"value":"/ iterator with only the items that gave `true` results.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47003,"byte_end":47061,"line_start":776,"line_end":776,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47066,"byte_end":47069,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47074,"byte_end":47088,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47093,"byte_end":47096,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47101,"byte_end":47108,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47113,"byte_end":47139,"line_start":781,"line_end":781,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47144,"byte_end":47147,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter().filter(|x| x % 2 == 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47152,"byte_end":47222,"line_start":783,"line_end":783,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47227,"byte_end":47230,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47235,"byte_end":47285,"line_start":785,"line_end":785,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47290,"byte_end":47293,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 2, 4, 6, 8]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47298,"byte_end":47350,"line_start":787,"line_end":787,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47355,"byte_end":47362,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48170,"byte_end":48180,"line_start":814,"line_end":814,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::iter::ParallelIterator::filter_map","value":"pub fn filter_map<P, R>(Self, P) -> FilterMap<Self, P> where P: Fn(Self::Item)\n-> Option<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `filter_op` to each item of this iterator to get an `Option`,\n producing a new iterator with only the items from `Some` results.","sig":null,"attributes":[{"value":"/ Applies `filter_op` to each item of this iterator to get an `Option`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47533,"byte_end":47606,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ producing a new iterator with only the items from `Some` results.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47611,"byte_end":47680,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47685,"byte_end":47688,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47693,"byte_end":47707,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47712,"byte_end":47715,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47720,"byte_end":47727,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47732,"byte_end":47758,"line_start":802,"line_end":802,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47763,"byte_end":47766,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut par_iter = (0..10).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47771,"byte_end":47817,"line_start":804,"line_end":804,"column_start":5,"column_end":51}},{"value":"/                         .filter_map(|x| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47822,"byte_end":47867,"line_start":805,"line_end":805,"column_start":5,"column_end":50}},{"value":"/                             if x % 2 == 0 { Some(x * 3) }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47872,"byte_end":47933,"line_start":806,"line_end":806,"column_start":5,"column_end":66}},{"value":"/                             else { None }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47938,"byte_end":47983,"line_start":807,"line_end":807,"column_start":5,"column_end":50}},{"value":"/                         });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":47988,"byte_end":48019,"line_start":808,"line_end":808,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48024,"byte_end":48027,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let even_numbers: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48032,"byte_end":48082,"line_start":810,"line_end":810,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48087,"byte_end":48090,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&even_numbers[..], &[0, 6, 12, 18, 24]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48095,"byte_end":48150,"line_start":812,"line_end":812,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48155,"byte_end":48162,"line_start":813,"line_end":813,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48864,"byte_end":48872,"line_start":838,"line_end":838,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::iter::ParallelIterator::flat_map","value":"pub fn flat_map<F, PI>(Self, F) -> FlatMap<Self, F> where F: Fn(Self::Item) ->\nPI + Sync + Send, PI: IntoParallelIterator","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `map_op` to each item of this iterator to get nested iterators,\n producing a new iterator that flattens these back into one.","sig":null,"attributes":[{"value":"/ Applies `map_op` to each item of this iterator to get nested iterators,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48367,"byte_end":48442,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ producing a new iterator that flattens these back into one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48447,"byte_end":48510,"line_start":823,"line_end":823,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48515,"byte_end":48518,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48523,"byte_end":48537,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48542,"byte_end":48545,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48550,"byte_end":48557,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48562,"byte_end":48588,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48593,"byte_end":48596,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let a = [[1, 2], [3, 4], [5, 6], [7, 8]];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48601,"byte_end":48646,"line_start":830,"line_end":830,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48651,"byte_end":48654,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().cloned().flat_map(|a| a.to_vec());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48659,"byte_end":48725,"line_start":832,"line_end":832,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48730,"byte_end":48733,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48738,"byte_end":48779,"line_start":834,"line_end":834,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48784,"byte_end":48787,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&vec[..], &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48792,"byte_end":48844,"line_start":836,"line_end":836,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":48849,"byte_end":48856,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49406,"byte_end":49413,"line_start":858,"line_end":858,"column_start":8,"column_end":15},"name":"flatten","qualname":"::iter::ParallelIterator::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: IntoParallelIterator","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" An adaptor that flattens iterable `Item`s into one large iterator","sig":null,"attributes":[{"value":"/ An adaptor that flattens iterable `Item`s into one large iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49060,"byte_end":49129,"line_start":846,"line_end":846,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49134,"byte_end":49137,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49142,"byte_end":49156,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49161,"byte_end":49164,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49169,"byte_end":49176,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49181,"byte_end":49207,"line_start":851,"line_end":851,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49212,"byte_end":49215,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ let x: Vec<Vec<_>> = vec![vec![1, 2], vec![3, 4]];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49220,"byte_end":49274,"line_start":853,"line_end":853,"column_start":5,"column_end":59}},{"value":"/ let y: Vec<_> = x.into_par_iter().flatten().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49279,"byte_end":49337,"line_start":854,"line_end":854,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49342,"byte_end":49345,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(y, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49350,"byte_end":49386,"line_start":856,"line_end":856,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49391,"byte_end":49398,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51098,"byte_end":51104,"line_start":895,"line_end":895,"column_start":8,"column_end":14},"name":"reduce","qualname":"::iter::ParallelIterator::reduce","value":"pub fn reduce<OP, ID>(Self, ID, OP) -> Self::Item where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send, ID: Fn() ->\nSelf::Item + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n The argument `identity` should be a closure that can produce\n \"identity\" value which may be inserted into the sequence as\n needed to create opportunities for parallel execution. So, for\n example, if you are doing a summation, then `identity()` ought\n to produce something that represents the zero for your type\n (but consider just calling `sum()` in that case).","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49533,"byte_end":49596,"line_start":865,"line_end":865,"column_start":5,"column_end":68}},{"value":"/ The argument `identity` should be a closure that can produce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49601,"byte_end":49665,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ \"identity\" value which may be inserted into the sequence as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49670,"byte_end":49733,"line_start":867,"line_end":867,"column_start":5,"column_end":68}},{"value":"/ needed to create opportunities for parallel execution. So, for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49738,"byte_end":49804,"line_start":868,"line_end":868,"column_start":5,"column_end":71}},{"value":"/ example, if you are doing a summation, then `identity()` ought","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49809,"byte_end":49875,"line_start":869,"line_end":869,"column_start":5,"column_end":71}},{"value":"/ to produce something that represents the zero for your type","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49880,"byte_end":49943,"line_start":870,"line_end":870,"column_start":5,"column_end":68}},{"value":"/ (but consider just calling `sum()` in that case).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":49948,"byte_end":50001,"line_start":871,"line_end":871,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50006,"byte_end":50009,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50014,"byte_end":50028,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50033,"byte_end":50036,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50041,"byte_end":50048,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/ // Iterate over a sequence of pairs `(x0, y0), ..., (xN, yN)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50053,"byte_end":50118,"line_start":876,"line_end":876,"column_start":5,"column_end":70}},{"value":"/ // and use reduce to compute one pair `(x0 + ... + xN, y0 + ... + yN)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50123,"byte_end":50197,"line_start":877,"line_end":877,"column_start":5,"column_end":79}},{"value":"/ // where the first/second elements are summed separately.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50202,"byte_end":50263,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50268,"byte_end":50294,"line_start":879,"line_end":879,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50299,"byte_end":50347,"line_start":880,"line_end":880,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50352,"byte_end":50415,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50420,"byte_end":50482,"line_start":882,"line_end":882,"column_start":5,"column_end":67}},{"value":"/            .reduce(|| (0, 0), // the \"identity\" is 0 in both columns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50487,"byte_end":50559,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/                    |a, b| (a.0 + b.0, a.1 + b.1));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50564,"byte_end":50618,"line_start":884,"line_end":884,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50623,"byte_end":50677,"line_start":885,"line_end":885,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50682,"byte_end":50689,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50694,"byte_end":50697,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50702,"byte_end":50766,"line_start":888,"line_end":888,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50771,"byte_end":50835,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50840,"byte_end":50906,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic. And of course `identity()` should","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50911,"byte_end":50975,"line_start":891,"line_end":891,"column_start":5,"column_end":69}},{"value":"/ produce a true identity.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":50980,"byte_end":51008,"line_start":892,"line_end":892,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51013,"byte_end":51016,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51021,"byte_end":51090,"line_start":894,"line_end":894,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52445,"byte_end":52456,"line_start":929,"line_end":929,"column_start":8,"column_end":19},"name":"reduce_with","qualname":"::iter::ParallelIterator::reduce_with","value":"pub fn reduce_with<OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(Self::Item, Self::Item) -> Self::Item + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using `op`.\n If the iterator is empty, `None` is returned; otherwise,\n `Some` is returned.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using `op`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51339,"byte_end":51402,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/ If the iterator is empty, `None` is returned; otherwise,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51407,"byte_end":51467,"line_start":904,"line_end":904,"column_start":5,"column_end":65}},{"value":"/ `Some` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51472,"byte_end":51495,"line_start":905,"line_end":905,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51500,"byte_end":51503,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This version of `reduce` is simple but somewhat less","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51508,"byte_end":51564,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ efficient. If possible, it is better to call `reduce()`, which","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51569,"byte_end":51635,"line_start":908,"line_end":908,"column_start":5,"column_end":71}},{"value":"/ requires an identity element.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51640,"byte_end":51673,"line_start":909,"line_end":909,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51678,"byte_end":51681,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51686,"byte_end":51700,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51705,"byte_end":51708,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51713,"byte_end":51720,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51725,"byte_end":51751,"line_start":914,"line_end":914,"column_start":5,"column_end":31}},{"value":"/ let sums = [(0, 1), (5, 6), (16, 2), (8, 9)]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51756,"byte_end":51804,"line_start":915,"line_end":915,"column_start":5,"column_end":53}},{"value":"/            .par_iter()        // iterating over &(i32, i32)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51809,"byte_end":51872,"line_start":916,"line_end":916,"column_start":5,"column_end":68}},{"value":"/            .cloned()          // iterating over (i32, i32)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51877,"byte_end":51939,"line_start":917,"line_end":917,"column_start":5,"column_end":67}},{"value":"/            .reduce_with(|a, b| (a.0 + b.0, a.1 + b.1))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":51944,"byte_end":52002,"line_start":918,"line_end":918,"column_start":5,"column_end":63}},{"value":"/            .unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52007,"byte_end":52032,"line_start":919,"line_end":919,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(sums, (0 + 5 + 16 + 8, 1 + 6 + 2 + 9));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52037,"byte_end":52091,"line_start":920,"line_end":920,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52096,"byte_end":52103,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52108,"byte_end":52111,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ **Note:** unlike a sequential `fold` operation, the order in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52116,"byte_end":52180,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/ which `op` will be applied to reduce the result is not fully","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52185,"byte_end":52249,"line_start":924,"line_end":924,"column_start":5,"column_end":69}},{"value":"/ specified. So `op` should be [associative] or else the results","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52254,"byte_end":52320,"line_start":925,"line_end":925,"column_start":5,"column_end":71}},{"value":"/ will be non-deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52325,"byte_end":52355,"line_start":926,"line_end":926,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52360,"byte_end":52363,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":52368,"byte_end":52437,"line_start":928,"line_end":928,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54640,"byte_end":54650,"line_start":983,"line_end":983,"column_start":8,"column_end":18},"name":"try_reduce","qualname":"::iter::ParallelIterator::try_reduce","value":"pub fn try_reduce<T, OP, ID>(Self, ID, OP) -> Self::Item where OP: Fn(T, T) ->\nSelf::Item + Sync + Send, ID: Fn() -> T + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.\n The `identity` argument is used the same way as in [`reduce()`].","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53251,"byte_end":53325,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ The `identity` argument is used the same way as in [`reduce()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53330,"byte_end":53398,"line_start":953,"line_end":953,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53403,"byte_end":53406,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ [`reduce()`]: #method.reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53411,"byte_end":53443,"line_start":955,"line_end":955,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53448,"byte_end":53451,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ If a `Result::Err` or `Option::None` item is found, or if `op` reduces","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53456,"byte_end":53530,"line_start":957,"line_end":957,"column_start":5,"column_end":79}},{"value":"/ to one, we will attempt to stop processing the rest of the items in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53535,"byte_end":53610,"line_start":958,"line_end":958,"column_start":5,"column_end":80}},{"value":"/ iterator as soon as possible, and we will return that terminating value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53615,"byte_end":53691,"line_start":959,"line_end":959,"column_start":5,"column_end":81}},{"value":"/ Otherwise, we will return the final reduced `Result::Ok(T)` or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53696,"byte_end":53762,"line_start":960,"line_end":960,"column_start":5,"column_end":71}},{"value":"/ `Option::Some(T)`.  If there are multiple errors in parallel, it is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53767,"byte_end":53842,"line_start":961,"line_end":961,"column_start":5,"column_end":80}},{"value":"/ specified which will be returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53847,"byte_end":53884,"line_start":962,"line_end":962,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53889,"byte_end":53892,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53897,"byte_end":53911,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53916,"byte_end":53919,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53924,"byte_end":53931,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53936,"byte_end":53962,"line_start":967,"line_end":967,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53967,"byte_end":53970,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ // Compute the sum of squares, being careful about overflow.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":53975,"byte_end":54039,"line_start":969,"line_end":969,"column_start":5,"column_end":69}},{"value":"/ fn sum_squares<I: IntoParallelIterator<Item = i32>>(iter: I) -> Option<i32> {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54044,"byte_end":54125,"line_start":970,"line_end":970,"column_start":5,"column_end":86}},{"value":"/     iter.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54130,"byte_end":54158,"line_start":971,"line_end":971,"column_start":5,"column_end":33}},{"value":"/         .map(|i| i.checked_mul(i))            // square each item,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54163,"byte_end":54233,"line_start":972,"line_end":972,"column_start":5,"column_end":75}},{"value":"/         .try_reduce(|| 0, i32::checked_add)   // and add them up!","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54238,"byte_end":54307,"line_start":973,"line_end":973,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54312,"byte_end":54317,"line_start":974,"line_end":974,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54322,"byte_end":54382,"line_start":975,"line_end":975,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54387,"byte_end":54390,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ // The sum might overflow","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54395,"byte_end":54424,"line_start":977,"line_end":977,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(sum_squares(0..10_000), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54429,"byte_end":54474,"line_start":978,"line_end":978,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54479,"byte_end":54482,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ // Or the squares might overflow before it even reaches `try_reduce`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54487,"byte_end":54559,"line_start":980,"line_end":980,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(sum_squares(1_000_000..1_000_001), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54564,"byte_end":54620,"line_start":981,"line_end":981,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54625,"byte_end":54632,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56277,"byte_end":56292,"line_start":1027,"line_end":1027,"column_start":8,"column_end":23},"name":"try_reduce_with","qualname":"::iter::ParallelIterator::try_reduce_with","value":"pub fn try_reduce_with<T, OP>(Self, OP) -> Option<Self::Item> where\nOP: Fn(T, T) -> Self::Item + Sync + Send, Self::Item: Try<Ok = T>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Reduces the items in the iterator into one item using a fallible `op`.","sig":null,"attributes":[{"value":"/ Reduces the items in the iterator into one item using a fallible `op`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54902,"byte_end":54976,"line_start":992,"line_end":992,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54981,"byte_end":54984,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ Like [`reduce_with()`], if the iterator is empty, `None` is returned;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":54989,"byte_end":55062,"line_start":994,"line_end":994,"column_start":5,"column_end":78}},{"value":"/ otherwise, `Some` is returned.  Beyond that, it behaves like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55067,"byte_end":55131,"line_start":995,"line_end":995,"column_start":5,"column_end":69}},{"value":"/ [`try_reduce()`] for handling `Err`/`None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55136,"byte_end":55183,"line_start":996,"line_end":996,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55188,"byte_end":55191,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ [`reduce_with()`]: #method.reduce_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55196,"byte_end":55238,"line_start":998,"line_end":998,"column_start":5,"column_end":47}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55243,"byte_end":55283,"line_start":999,"line_end":999,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55288,"byte_end":55291,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ For instance, with `Option` items, the return value may be:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55296,"byte_end":55359,"line_start":1001,"line_end":1001,"column_start":5,"column_end":68}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55364,"byte_end":55400,"line_start":1002,"line_end":1002,"column_start":5,"column_end":41}},{"value":"/ - `Some(None)`, we stopped after encountering `None`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55405,"byte_end":55462,"line_start":1003,"line_end":1003,"column_start":5,"column_end":62}},{"value":"/ - `Some(Some(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55467,"byte_end":55525,"line_start":1004,"line_end":1004,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55530,"byte_end":55533,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ With `Result` items, the nesting is more obvious:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55538,"byte_end":55591,"line_start":1006,"line_end":1006,"column_start":5,"column_end":58}},{"value":"/ - `None`, the iterator was empty","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55596,"byte_end":55632,"line_start":1007,"line_end":1007,"column_start":5,"column_end":41}},{"value":"/ - `Some(Err(e))`, we stopped after encountering an error `e`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55637,"byte_end":55702,"line_start":1008,"line_end":1008,"column_start":5,"column_end":70}},{"value":"/ - `Some(Ok(x))`, the entire iterator reduced to `x`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55707,"byte_end":55763,"line_start":1009,"line_end":1009,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55768,"byte_end":55771,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55776,"byte_end":55790,"line_start":1011,"line_end":1011,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55795,"byte_end":55798,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55803,"byte_end":55810,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55815,"byte_end":55841,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55846,"byte_end":55849,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ let files = [\"/dev/null\", \"/does/not/exist\"];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55854,"byte_end":55903,"line_start":1016,"line_end":1016,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55908,"byte_end":55911,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ // Find the biggest file","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55916,"byte_end":55944,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/ files.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55949,"byte_end":55974,"line_start":1019,"line_end":1019,"column_start":5,"column_end":30}},{"value":"/     .map(|path| std::fs::metadata(path).map(|m| (path, m.len())))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":55979,"byte_end":56048,"line_start":1020,"line_end":1020,"column_start":5,"column_end":74}},{"value":"/     .try_reduce_with(|a, b| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56053,"byte_end":56086,"line_start":1021,"line_end":1021,"column_start":5,"column_end":38}},{"value":"/         Ok(if a.1 >= b.1 { a } else { b })","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56091,"byte_end":56137,"line_start":1022,"line_end":1022,"column_start":5,"column_end":51}},{"value":"/     })","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56142,"byte_end":56152,"line_start":1023,"line_end":1023,"column_start":5,"column_end":15}},{"value":"/     .expect(\"Some value, since the iterator is not empty\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56157,"byte_end":56219,"line_start":1024,"line_end":1024,"column_start":5,"column_end":67}},{"value":"/     .expect_err(\"not found\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56224,"byte_end":56257,"line_start":1025,"line_end":1025,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56262,"byte_end":56269,"line_start":1026,"line_end":1026,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62070,"byte_end":62074,"line_start":1168,"line_end":1168,"column_start":8,"column_end":12},"name":"fold","qualname":"::iter::ParallelIterator::fold","value":"pub fn fold<T, ID, F>(Self, ID, F) -> Fold<Self, ID, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, ID: Fn() -> T + Sync + Send, T: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Parallel fold is similar to sequential fold except that the\n sequence of items may be subdivided before it is\n folded. Consider a list of numbers like `22 3 77 89 46`. If\n you used sequential fold to add them (`fold(0, |a,b| a+b)`,\n you would wind up first adding 0 + 22, then 22 + 3, then 25 +\n 77, and so forth. The **parallel fold** works similarly except\n that it first breaks up your list into sublists, and hence\n instead of yielding up a single sum at the end, it yields up\n multiple sums. The number of results is nondeterministic, as\n is the point where the breaks occur.","sig":null,"attributes":[{"value":"/ Parallel fold is similar to sequential fold except that the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56497,"byte_end":56560,"line_start":1035,"line_end":1035,"column_start":5,"column_end":68}},{"value":"/ sequence of items may be subdivided before it is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56565,"byte_end":56617,"line_start":1036,"line_end":1036,"column_start":5,"column_end":57}},{"value":"/ folded. Consider a list of numbers like `22 3 77 89 46`. If","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56622,"byte_end":56685,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/ you used sequential fold to add them (`fold(0, |a,b| a+b)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56690,"byte_end":56753,"line_start":1038,"line_end":1038,"column_start":5,"column_end":68}},{"value":"/ you would wind up first adding 0 + 22, then 22 + 3, then 25 +","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56758,"byte_end":56823,"line_start":1039,"line_end":1039,"column_start":5,"column_end":70}},{"value":"/ 77, and so forth. The **parallel fold** works similarly except","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56828,"byte_end":56894,"line_start":1040,"line_end":1040,"column_start":5,"column_end":71}},{"value":"/ that it first breaks up your list into sublists, and hence","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56899,"byte_end":56961,"line_start":1041,"line_end":1041,"column_start":5,"column_end":67}},{"value":"/ instead of yielding up a single sum at the end, it yields up","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":56966,"byte_end":57030,"line_start":1042,"line_end":1042,"column_start":5,"column_end":69}},{"value":"/ multiple sums. The number of results is nondeterministic, as","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57035,"byte_end":57099,"line_start":1043,"line_end":1043,"column_start":5,"column_end":69}},{"value":"/ is the point where the breaks occur.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57104,"byte_end":57144,"line_start":1044,"line_end":1044,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57149,"byte_end":57152,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ So if did the same parallel fold (`fold(0, |a,b| a+b)`) on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57157,"byte_end":57219,"line_start":1046,"line_end":1046,"column_start":5,"column_end":67}},{"value":"/ our example list, we might wind up with a sequence of two numbers,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57224,"byte_end":57294,"line_start":1047,"line_end":1047,"column_start":5,"column_end":75}},{"value":"/ like so:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57299,"byte_end":57311,"line_start":1048,"line_end":1048,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57316,"byte_end":57319,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57324,"byte_end":57338,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57343,"byte_end":57360,"line_start":1051,"line_end":1051,"column_start":5,"column_end":22}},{"value":"/       |     |","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57365,"byte_end":57382,"line_start":1052,"line_end":1052,"column_start":5,"column_end":22}},{"value":"/     102   135","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57387,"byte_end":57404,"line_start":1053,"line_end":1053,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57409,"byte_end":57416,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57421,"byte_end":57424,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Or perhaps these three numbers:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57429,"byte_end":57464,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57469,"byte_end":57472,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57477,"byte_end":57491,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/ 22 3 77 89 46","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57496,"byte_end":57513,"line_start":1059,"line_end":1059,"column_start":5,"column_end":22}},{"value":"/       |  |  |","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57518,"byte_end":57535,"line_start":1060,"line_end":1060,"column_start":5,"column_end":22}},{"value":"/     102 89 46","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57540,"byte_end":57557,"line_start":1061,"line_end":1061,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57562,"byte_end":57569,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57574,"byte_end":57577,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ In general, Rayon will attempt to find good breaking points","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57582,"byte_end":57645,"line_start":1064,"line_end":1064,"column_start":5,"column_end":68}},{"value":"/ that keep all of your cores busy.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57650,"byte_end":57687,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57692,"byte_end":57695,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ### Fold versus reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57700,"byte_end":57726,"line_start":1067,"line_end":1067,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57731,"byte_end":57734,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ The `fold()` and `reduce()` methods each take an identity element","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57739,"byte_end":57808,"line_start":1069,"line_end":1069,"column_start":5,"column_end":74}},{"value":"/ and a combining function, but they operate rather differently.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57813,"byte_end":57879,"line_start":1070,"line_end":1070,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57884,"byte_end":57887,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ `reduce()` requires that the identity function has the same","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57892,"byte_end":57955,"line_start":1072,"line_end":1072,"column_start":5,"column_end":68}},{"value":"/ type as the things you are iterating over, and it fully","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":57960,"byte_end":58019,"line_start":1073,"line_end":1073,"column_start":5,"column_end":64}},{"value":"/ reduces the list of items into a single item. So, for example,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58024,"byte_end":58090,"line_start":1074,"line_end":1074,"column_start":5,"column_end":71}},{"value":"/ imagine we are iterating over a list of bytes `bytes: [128_u8,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58095,"byte_end":58161,"line_start":1075,"line_end":1075,"column_start":5,"column_end":71}},{"value":"/ 64_u8, 64_u8]`. If we used `bytes.reduce(|| 0_u8, |a: u8, b:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58166,"byte_end":58230,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ u8| a + b)`, we would get an overflow. This is because `0`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58235,"byte_end":58298,"line_start":1077,"line_end":1077,"column_start":5,"column_end":68}},{"value":"/ `a`, and `b` here are all bytes, just like the numbers in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58303,"byte_end":58368,"line_start":1078,"line_end":1078,"column_start":5,"column_end":70}},{"value":"/ list (I wrote the types explicitly above, but those are the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58373,"byte_end":58436,"line_start":1079,"line_end":1079,"column_start":5,"column_end":68}},{"value":"/ only types you can use). To avoid the overflow, we would need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58441,"byte_end":58506,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}},{"value":"/ to do something like `bytes.map(|b| b as u32).reduce(|| 0, |a,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58511,"byte_end":58577,"line_start":1081,"line_end":1081,"column_start":5,"column_end":71}},{"value":"/ b| a + b)`, in which case our result would be `256`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58582,"byte_end":58638,"line_start":1082,"line_end":1082,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58643,"byte_end":58646,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ In contrast, with `fold()`, the identity function does not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58651,"byte_end":58713,"line_start":1084,"line_end":1084,"column_start":5,"column_end":67}},{"value":"/ have to have the same type as the things you are iterating","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58718,"byte_end":58780,"line_start":1085,"line_end":1085,"column_start":5,"column_end":67}},{"value":"/ over, and you potentially get back many results. So, if we","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58785,"byte_end":58847,"line_start":1086,"line_end":1086,"column_start":5,"column_end":67}},{"value":"/ continue with the `bytes` example from the previous paragraph,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58852,"byte_end":58918,"line_start":1087,"line_end":1087,"column_start":5,"column_end":71}},{"value":"/ we could do `bytes.fold(|| 0_u32, |a, b| a + (b as u32))` to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58923,"byte_end":58987,"line_start":1088,"line_end":1088,"column_start":5,"column_end":69}},{"value":"/ convert our bytes into `u32`. And of course we might not get","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":58992,"byte_end":59056,"line_start":1089,"line_end":1089,"column_start":5,"column_end":69}},{"value":"/ back a single sum.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59061,"byte_end":59083,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59088,"byte_end":59091,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ There is a more subtle distinction as well, though it's","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59096,"byte_end":59155,"line_start":1092,"line_end":1092,"column_start":5,"column_end":64}},{"value":"/ actually implied by the above points. When you use `reduce()`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59160,"byte_end":59226,"line_start":1093,"line_end":1093,"column_start":5,"column_end":71}},{"value":"/ your reduction function is sometimes called with values that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59231,"byte_end":59295,"line_start":1094,"line_end":1094,"column_start":5,"column_end":69}},{"value":"/ were never part of your original parallel iterator (for","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59300,"byte_end":59359,"line_start":1095,"line_end":1095,"column_start":5,"column_end":64}},{"value":"/ example, both the left and right might be a partial sum). With","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59364,"byte_end":59430,"line_start":1096,"line_end":1096,"column_start":5,"column_end":71}},{"value":"/ `fold()`, in contrast, the left value in the fold function is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59435,"byte_end":59500,"line_start":1097,"line_end":1097,"column_start":5,"column_end":70}},{"value":"/ always the accumulator, and the right value is always from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59505,"byte_end":59567,"line_start":1098,"line_end":1098,"column_start":5,"column_end":67}},{"value":"/ your original sequence.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59572,"byte_end":59599,"line_start":1099,"line_end":1099,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59604,"byte_end":59607,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ ### Fold vs Map/Reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59612,"byte_end":59638,"line_start":1101,"line_end":1101,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59643,"byte_end":59646,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ Fold makes sense if you have some operation where it is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59651,"byte_end":59710,"line_start":1103,"line_end":1103,"column_start":5,"column_end":64}},{"value":"/ cheaper to create groups of elements at a time. For example,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59715,"byte_end":59779,"line_start":1104,"line_end":1104,"column_start":5,"column_end":69}},{"value":"/ imagine collecting characters into a string. If you were going","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59784,"byte_end":59850,"line_start":1105,"line_end":1105,"column_start":5,"column_end":71}},{"value":"/ to use map/reduce, you might try this:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59855,"byte_end":59897,"line_start":1106,"line_end":1106,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59902,"byte_end":59905,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59910,"byte_end":59917,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59922,"byte_end":59948,"line_start":1109,"line_end":1109,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59953,"byte_end":59956,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59961,"byte_end":59972,"line_start":1111,"line_end":1111,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":59977,"byte_end":60010,"line_start":1112,"line_end":1112,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60015,"byte_end":60034,"line_start":1113,"line_end":1113,"column_start":5,"column_end":24}},{"value":"/     .map(|c: &char| format!(\"{}\", c))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60039,"byte_end":60080,"line_start":1114,"line_end":1114,"column_start":5,"column_end":46}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60085,"byte_end":60118,"line_start":1115,"line_end":1115,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60123,"byte_end":60189,"line_start":1116,"line_end":1116,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60194,"byte_end":60197,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60202,"byte_end":60229,"line_start":1118,"line_end":1118,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60234,"byte_end":60241,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60246,"byte_end":60249,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ Because reduce produces the same type of element as its input,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60254,"byte_end":60320,"line_start":1121,"line_end":1121,"column_start":5,"column_end":71}},{"value":"/ you have to first map each character into a string, and then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60325,"byte_end":60389,"line_start":1122,"line_end":1122,"column_start":5,"column_end":69}},{"value":"/ you can reduce them. This means we create one string per","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60394,"byte_end":60454,"line_start":1123,"line_end":1123,"column_start":5,"column_end":65}},{"value":"/ element in our iterator -- not so great. Using `fold`, we can","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60459,"byte_end":60524,"line_start":1124,"line_end":1124,"column_start":5,"column_end":70}},{"value":"/ do this instead:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60529,"byte_end":60549,"line_start":1125,"line_end":1125,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60554,"byte_end":60557,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60562,"byte_end":60569,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60574,"byte_end":60600,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60605,"byte_end":60608,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ let s =","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60613,"byte_end":60624,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}},{"value":"/     ['a', 'b', 'c', 'd', 'e']","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60629,"byte_end":60662,"line_start":1131,"line_end":1131,"column_start":5,"column_end":38}},{"value":"/     .par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60667,"byte_end":60686,"line_start":1132,"line_end":1132,"column_start":5,"column_end":24}},{"value":"/     .fold(|| String::new(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60691,"byte_end":60722,"line_start":1133,"line_end":1133,"column_start":5,"column_end":36}},{"value":"/             |mut s: String, c: &char| { s.push(*c); s })","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60727,"byte_end":60787,"line_start":1134,"line_end":1134,"column_start":5,"column_end":65}},{"value":"/     .reduce(|| String::new(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60792,"byte_end":60825,"line_start":1135,"line_end":1135,"column_start":5,"column_end":38}},{"value":"/             |mut a: String, b: String| { a.push_str(&b); a });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60830,"byte_end":60896,"line_start":1136,"line_end":1136,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60901,"byte_end":60904,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s, \"abcde\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60909,"byte_end":60936,"line_start":1138,"line_end":1138,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60941,"byte_end":60948,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60953,"byte_end":60956,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ Now `fold` will process groups of our characters at a time,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":60961,"byte_end":61024,"line_start":1141,"line_end":1141,"column_start":5,"column_end":68}},{"value":"/ and we only make one string per group. We should wind up with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61029,"byte_end":61094,"line_start":1142,"line_end":1142,"column_start":5,"column_end":70}},{"value":"/ some small-ish number of strings roughly proportional to the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61099,"byte_end":61163,"line_start":1143,"line_end":1143,"column_start":5,"column_end":69}},{"value":"/ number of CPUs you have (it will ultimately depend on how busy","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61168,"byte_end":61234,"line_start":1144,"line_end":1144,"column_start":5,"column_end":71}},{"value":"/ your processors are). Note that we still need to do a reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61239,"byte_end":61303,"line_start":1145,"line_end":1145,"column_start":5,"column_end":69}},{"value":"/ afterwards to combine those groups of strings into a single","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61308,"byte_end":61371,"line_start":1146,"line_end":1146,"column_start":5,"column_end":68}},{"value":"/ string.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61376,"byte_end":61387,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61392,"byte_end":61395,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ You could use a similar trick to save partial results (e.g., a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61400,"byte_end":61466,"line_start":1149,"line_end":1149,"column_start":5,"column_end":71}},{"value":"/ cache) or something similar.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61471,"byte_end":61503,"line_start":1150,"line_end":1150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61508,"byte_end":61511,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ### Combining fold with other operations","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61516,"byte_end":61560,"line_start":1152,"line_end":1152,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61565,"byte_end":61568,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ You can combine `fold` with `reduce` if you want to produce a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61573,"byte_end":61638,"line_start":1154,"line_end":1154,"column_start":5,"column_end":70}},{"value":"/ single value. This is then roughly equivalent to a map/reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61643,"byte_end":61708,"line_start":1155,"line_end":1155,"column_start":5,"column_end":70}},{"value":"/ combination in effect:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61713,"byte_end":61739,"line_start":1156,"line_end":1156,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61744,"byte_end":61747,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61752,"byte_end":61759,"line_start":1158,"line_end":1158,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61764,"byte_end":61790,"line_start":1159,"line_end":1159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61795,"byte_end":61798,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61803,"byte_end":61828,"line_start":1161,"line_end":1161,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61833,"byte_end":61868,"line_start":1162,"line_end":1162,"column_start":5,"column_end":40}},{"value":"/                .fold(|| 0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61873,"byte_end":61939,"line_start":1163,"line_end":1163,"column_start":5,"column_end":71}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61944,"byte_end":61977,"line_start":1164,"line_end":1164,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61982,"byte_end":61985,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":61990,"byte_end":62050,"line_start":1166,"line_end":1166,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62055,"byte_end":62062,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62999,"byte_end":63008,"line_start":1196,"line_end":1196,"column_start":8,"column_end":17},"name":"fold_with","qualname":"::iter::ParallelIterator::fold_with","value":"pub fn fold_with<F, T>(Self, T, F) -> FoldWith<Self, T, F> where\nF: Fn(T, Self::Item) -> T + Sync + Send, T: Send + Clone","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies `fold_op` to the given `init` value with each item of this\n iterator, finally producing the value for further use.","sig":null,"attributes":[{"value":"/ Applies `fold_op` to the given `init` value with each item of this","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62311,"byte_end":62381,"line_start":1177,"line_end":1177,"column_start":5,"column_end":75}},{"value":"/ iterator, finally producing the value for further use.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62386,"byte_end":62444,"line_start":1178,"line_end":1178,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62449,"byte_end":62452,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ This works essentially like `fold(|| init.clone(), fold_op)`, except","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62457,"byte_end":62529,"line_start":1180,"line_end":1180,"column_start":5,"column_end":77}},{"value":"/ it doesn't require the `init` type to be `Sync`, nor any other form","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62534,"byte_end":62605,"line_start":1181,"line_end":1181,"column_start":5,"column_end":76}},{"value":"/ of added synchronization.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62610,"byte_end":62639,"line_start":1182,"line_end":1182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62644,"byte_end":62647,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62652,"byte_end":62666,"line_start":1184,"line_end":1184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62671,"byte_end":62674,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62679,"byte_end":62686,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62691,"byte_end":62717,"line_start":1187,"line_end":1187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62722,"byte_end":62725,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62730,"byte_end":62755,"line_start":1189,"line_end":1189,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62760,"byte_end":62795,"line_start":1190,"line_end":1190,"column_start":5,"column_end":40}},{"value":"/                .fold_with(0_u32, |a: u32, b: u8| a + (b as u32))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62800,"byte_end":62868,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/                .sum::<u32>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62873,"byte_end":62906,"line_start":1192,"line_end":1192,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62911,"byte_end":62914,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, (0..22).sum()); // compare to sequential","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62919,"byte_end":62979,"line_start":1194,"line_end":1194,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":62984,"byte_end":62991,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64140,"byte_end":64148,"line_start":1229,"line_end":1229,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::iter::ParallelIterator::try_fold","value":"pub fn try_fold<T, R, ID, F>(Self, ID, F) -> TryFold<Self, R, ID, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, ID: Fn() -> T + Sync + Send,\nR: Try<Ok = T> + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63210,"byte_end":63247,"line_start":1204,"line_end":1204,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63252,"byte_end":63255,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ This is a variation of [`fold()`] for operations which can fail with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63260,"byte_end":63332,"line_start":1206,"line_end":1206,"column_start":5,"column_end":77}},{"value":"/ `Option::None` or `Result::Err`.  The first such failure stops","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63337,"byte_end":63403,"line_start":1207,"line_end":1207,"column_start":5,"column_end":71}},{"value":"/ processing the local set of items, without affecting other folds in the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63408,"byte_end":63483,"line_start":1208,"line_end":1208,"column_start":5,"column_end":80}},{"value":"/ iterator's subdivisions.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63488,"byte_end":63516,"line_start":1209,"line_end":1209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63521,"byte_end":63524,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ Often, `try_fold()` will be followed by [`try_reduce()`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63529,"byte_end":63589,"line_start":1211,"line_end":1211,"column_start":5,"column_end":65}},{"value":"/ for a final reduction and global short-circuiting effect.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63594,"byte_end":63655,"line_start":1212,"line_end":1212,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63660,"byte_end":63663,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ [`fold()`]: #method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63668,"byte_end":63696,"line_start":1214,"line_end":1214,"column_start":5,"column_end":33}},{"value":"/ [`try_reduce()`]: #method.try_reduce","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63701,"byte_end":63741,"line_start":1215,"line_end":1215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63746,"byte_end":63749,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63754,"byte_end":63768,"line_start":1217,"line_end":1217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63773,"byte_end":63776,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63781,"byte_end":63788,"line_start":1219,"line_end":1219,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63793,"byte_end":63819,"line_start":1220,"line_end":1220,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63824,"byte_end":63827,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63832,"byte_end":63857,"line_start":1222,"line_end":1222,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63862,"byte_end":63897,"line_start":1223,"line_end":1223,"column_start":5,"column_end":40}},{"value":"/                .try_fold(|| 0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63902,"byte_end":63981,"line_start":1224,"line_end":1224,"column_start":5,"column_end":84}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":63986,"byte_end":64041,"line_start":1225,"line_end":1225,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64046,"byte_end":64049,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64054,"byte_end":64120,"line_start":1227,"line_end":1227,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64125,"byte_end":64132,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3746},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65067,"byte_end":65080,"line_start":1256,"line_end":1256,"column_start":8,"column_end":21},"name":"try_fold_with","qualname":"::iter::ParallelIterator::try_fold_with","value":"pub fn try_fold_with<F, T, R>(Self, T, F) -> TryFoldWith<Self, R, F> where\nF: Fn(T, Self::Item) -> R + Sync + Send, R: Try<Ok = T> + Send, T: Clone +\nSend","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Perform a fallible parallel fold with a cloneable `init` value.","sig":null,"attributes":[{"value":"/ Perform a fallible parallel fold with a cloneable `init` value.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64411,"byte_end":64478,"line_start":1238,"line_end":1238,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64483,"byte_end":64486,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ This combines the `init` semantics of [`fold_with()`] and the failure","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64491,"byte_end":64564,"line_start":1240,"line_end":1240,"column_start":5,"column_end":78}},{"value":"/ semantics of [`try_fold()`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64569,"byte_end":64601,"line_start":1241,"line_end":1241,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64606,"byte_end":64609,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ [`fold_with()`]: #method.fold_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64614,"byte_end":64652,"line_start":1243,"line_end":1243,"column_start":5,"column_end":43}},{"value":"/ [`try_fold()`]: #method.try_fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64657,"byte_end":64693,"line_start":1244,"line_end":1244,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64698,"byte_end":64701,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64706,"byte_end":64713,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64718,"byte_end":64744,"line_start":1247,"line_end":1247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64749,"byte_end":64752,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ let bytes = 0..22_u8;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64757,"byte_end":64782,"line_start":1249,"line_end":1249,"column_start":5,"column_end":30}},{"value":"/ let sum = bytes.into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64787,"byte_end":64822,"line_start":1250,"line_end":1250,"column_start":5,"column_end":40}},{"value":"/                .try_fold_with(0_u32, |a: u32, b: u8| a.checked_add(b as u32))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64827,"byte_end":64908,"line_start":1251,"line_end":1251,"column_start":5,"column_end":86}},{"value":"/                .try_reduce(|| 0, u32::checked_add);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64913,"byte_end":64968,"line_start":1252,"line_end":1252,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64973,"byte_end":64976,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, Some((0..22).sum())); // compare to sequential","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":64981,"byte_end":65047,"line_start":1254,"line_end":1254,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65052,"byte_end":65059,"line_start":1255,"line_end":1255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66105,"byte_end":66108,"line_start":1289,"line_end":1289,"column_start":8,"column_end":11},"name":"sum","qualname":"::iter::ParallelIterator::sum","value":"pub fn sum<S>(Self) -> S where S: Send + Sum<Self::Item> + Sum<S>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Sums up the items in the iterator.","sig":null,"attributes":[{"value":"/ Sums up the items in the iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65322,"byte_end":65360,"line_start":1265,"line_end":1265,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65365,"byte_end":65368,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65373,"byte_end":65439,"line_start":1267,"line_end":1267,"column_start":5,"column_end":71}},{"value":"/ so if the `+` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65444,"byte_end":65509,"line_start":1268,"line_end":1268,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65514,"byte_end":65576,"line_start":1269,"line_end":1269,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65581,"byte_end":65605,"line_start":1270,"line_end":1270,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65610,"byte_end":65613,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65618,"byte_end":65687,"line_start":1272,"line_end":1272,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65692,"byte_end":65695,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 0, |a, b| a + b)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65700,"byte_end":65762,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/ except that the type of `0` and the `+` operation may vary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65767,"byte_end":65829,"line_start":1275,"line_end":1275,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65834,"byte_end":65884,"line_start":1276,"line_end":1276,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65889,"byte_end":65892,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65897,"byte_end":65911,"line_start":1278,"line_end":1278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65916,"byte_end":65919,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65924,"byte_end":65931,"line_start":1280,"line_end":1280,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65936,"byte_end":65962,"line_start":1281,"line_end":1281,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65967,"byte_end":65970,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 5, 7];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":65975,"byte_end":65997,"line_start":1283,"line_end":1283,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66002,"byte_end":66005,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ let sum: i32 = a.par_iter().sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66010,"byte_end":66048,"line_start":1285,"line_end":1285,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66053,"byte_end":66056,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 13);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66061,"byte_end":66085,"line_start":1287,"line_end":1287,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66090,"byte_end":66097,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67107,"byte_end":67114,"line_start":1322,"line_end":1322,"column_start":8,"column_end":15},"name":"product","qualname":"::iter::ParallelIterator::product","value":"pub fn product<P>(Self) -> P where P: Send + Product<Self::Item> + Product<P>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Multiplies all the items in the iterator.","sig":null,"attributes":[{"value":"/ Multiplies all the items in the iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66217,"byte_end":66262,"line_start":1296,"line_end":1296,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66267,"byte_end":66270,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ Note that the order in items will be reduced is not specified,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66275,"byte_end":66341,"line_start":1298,"line_end":1298,"column_start":5,"column_end":71}},{"value":"/ so if the `*` operator is not truly [associative] \\(as is the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66346,"byte_end":66411,"line_start":1299,"line_end":1299,"column_start":5,"column_end":70}},{"value":"/ case for floating point numbers), then the results are not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66416,"byte_end":66478,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ fully deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66483,"byte_end":66507,"line_start":1301,"line_end":1301,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66512,"byte_end":66515,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ [associative]: https://en.wikipedia.org/wiki/Associative_property","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66520,"byte_end":66589,"line_start":1303,"line_end":1303,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66594,"byte_end":66597,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce(|| 1, |a, b| a * b)`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66602,"byte_end":66664,"line_start":1305,"line_end":1305,"column_start":5,"column_end":67}},{"value":"/ except that the type of `1` and the `*` operation may vary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66669,"byte_end":66731,"line_start":1306,"line_end":1306,"column_start":5,"column_end":67}},{"value":"/ depending on the type of value being produced.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66736,"byte_end":66786,"line_start":1307,"line_end":1307,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66791,"byte_end":66794,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66799,"byte_end":66813,"line_start":1309,"line_end":1309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66818,"byte_end":66821,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66826,"byte_end":66833,"line_start":1311,"line_end":1311,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66838,"byte_end":66864,"line_start":1312,"line_end":1312,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66869,"byte_end":66872,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ fn factorial(n: u32) -> u32 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66877,"byte_end":66910,"line_start":1314,"line_end":1314,"column_start":5,"column_end":38}},{"value":"/    (1..n+1).into_par_iter().product()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66915,"byte_end":66956,"line_start":1315,"line_end":1315,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66961,"byte_end":66966,"line_start":1316,"line_end":1316,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66971,"byte_end":66974,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(factorial(0), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":66979,"byte_end":67011,"line_start":1318,"line_end":1318,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(1), 1);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67016,"byte_end":67048,"line_start":1319,"line_end":1319,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(factorial(5), 120);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67053,"byte_end":67087,"line_start":1320,"line_end":1320,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67092,"byte_end":67099,"line_start":1321,"line_end":1321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67957,"byte_end":67960,"line_start":1352,"line_end":1352,"column_start":8,"column_end":11},"name":"min","qualname":"::iter::ParallelIterator::min","value":"pub fn min(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(min)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67239,"byte_end":67304,"line_start":1329,"line_end":1329,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(min)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67309,"byte_end":67374,"line_start":1330,"line_end":1330,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67379,"byte_end":67395,"line_start":1331,"line_end":1331,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67400,"byte_end":67403,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67408,"byte_end":67473,"line_start":1333,"line_end":1333,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67478,"byte_end":67544,"line_start":1334,"line_end":1334,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67549,"byte_end":67587,"line_start":1335,"line_end":1335,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67592,"byte_end":67595,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::min(a, b))`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67600,"byte_end":67670,"line_start":1337,"line_end":1337,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67675,"byte_end":67678,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67683,"byte_end":67697,"line_start":1339,"line_end":1339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67702,"byte_end":67705,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67710,"byte_end":67717,"line_start":1341,"line_end":1341,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67722,"byte_end":67748,"line_start":1342,"line_end":1342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67753,"byte_end":67756,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67761,"byte_end":67786,"line_start":1344,"line_end":1344,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67791,"byte_end":67794,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min(), Some(&32));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67799,"byte_end":67845,"line_start":1346,"line_end":1346,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67850,"byte_end":67853,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67858,"byte_end":67883,"line_start":1348,"line_end":1348,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67888,"byte_end":67891,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().min(), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67896,"byte_end":67937,"line_start":1350,"line_end":1350,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":67942,"byte_end":67949,"line_start":1351,"line_end":1351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68699,"byte_end":68705,"line_start":1376,"line_end":1376,"column_start":8,"column_end":14},"name":"min_by","qualname":"::iter::ParallelIterator::min_by","value":"pub fn min_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the minimum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the minimum of all the items in the iterator with respect to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68076,"byte_end":68149,"line_start":1359,"line_end":1359,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68154,"byte_end":68224,"line_start":1360,"line_end":1360,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68229,"byte_end":68278,"line_start":1361,"line_end":1361,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68283,"byte_end":68286,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68291,"byte_end":68356,"line_start":1363,"line_end":1363,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68361,"byte_end":68430,"line_start":1364,"line_end":1364,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68435,"byte_end":68473,"line_start":1365,"line_end":1365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68478,"byte_end":68481,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68486,"byte_end":68500,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68505,"byte_end":68508,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68513,"byte_end":68520,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68525,"byte_end":68551,"line_start":1370,"line_end":1370,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68556,"byte_end":68559,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68564,"byte_end":68602,"line_start":1372,"line_end":1372,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68607,"byte_end":68610,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by(|x, y| x.cmp(y)), Some(&-3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68615,"byte_end":68679,"line_start":1374,"line_end":1374,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":68684,"byte_end":68691,"line_start":1375,"line_end":1375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69673,"byte_end":69683,"line_start":1407,"line_end":1407,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::iter::ParallelIterator::min_by_key","value":"pub fn min_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the item that yields the minimum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the minimum value for the given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69075,"byte_end":69140,"line_start":1390,"line_end":1390,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69145,"byte_end":69204,"line_start":1391,"line_end":1391,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69209,"byte_end":69249,"line_start":1392,"line_end":1392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69254,"byte_end":69257,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69262,"byte_end":69327,"line_start":1394,"line_end":1394,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69332,"byte_end":69398,"line_start":1395,"line_end":1395,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69403,"byte_end":69441,"line_start":1396,"line_end":1396,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69446,"byte_end":69449,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69454,"byte_end":69468,"line_start":1398,"line_end":1398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69473,"byte_end":69476,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69481,"byte_end":69488,"line_start":1400,"line_end":1400,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69493,"byte_end":69519,"line_start":1401,"line_end":1401,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69524,"byte_end":69527,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69532,"byte_end":69577,"line_start":1403,"line_end":1403,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69582,"byte_end":69585,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().min_by_key(|x| x.abs()), Some(&2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69590,"byte_end":69653,"line_start":1405,"line_end":1405,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":69658,"byte_end":69665,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70916,"byte_end":70919,"line_start":1450,"line_end":1450,"column_start":8,"column_end":11},"name":"max","qualname":"::iter::ParallelIterator::max","value":"pub fn max(Self) -> Option<Self::Item> where Self::Item: Ord","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator. If the\n iterator is empty, `None` is returned; otherwise, `Some(max)`\n is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator. If the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70198,"byte_end":70263,"line_start":1427,"line_end":1427,"column_start":5,"column_end":70}},{"value":"/ iterator is empty, `None` is returned; otherwise, `Some(max)`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70268,"byte_end":70333,"line_start":1428,"line_end":1428,"column_start":5,"column_end":70}},{"value":"/ is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70338,"byte_end":70354,"line_start":1429,"line_end":1429,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70359,"byte_end":70362,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70367,"byte_end":70432,"line_start":1431,"line_end":1431,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70437,"byte_end":70503,"line_start":1432,"line_end":1432,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70508,"byte_end":70546,"line_start":1433,"line_end":1433,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70551,"byte_end":70554,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ Basically equivalent to `self.reduce_with(|a, b| cmp::max(a, b))`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70559,"byte_end":70629,"line_start":1435,"line_end":1435,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70634,"byte_end":70637,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70642,"byte_end":70656,"line_start":1437,"line_end":1437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70661,"byte_end":70664,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70669,"byte_end":70676,"line_start":1439,"line_end":1439,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70681,"byte_end":70707,"line_start":1440,"line_end":1440,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70712,"byte_end":70715,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ let a = [45, 74, 32];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70720,"byte_end":70745,"line_start":1442,"line_end":1442,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70750,"byte_end":70753,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max(), Some(&74));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70758,"byte_end":70804,"line_start":1444,"line_end":1444,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70809,"byte_end":70812,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ let b: [i32; 0] = [];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70817,"byte_end":70842,"line_start":1446,"line_end":1446,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70847,"byte_end":70850,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b.par_iter().max(), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70855,"byte_end":70896,"line_start":1448,"line_end":1448,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":70901,"byte_end":70908,"line_start":1449,"line_end":1449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71672,"byte_end":71678,"line_start":1474,"line_end":1474,"column_start":8,"column_end":14},"name":"max_by","qualname":"::iter::ParallelIterator::max_by","value":"pub fn max_by<F>(Self, F) -> Option<Self::Item> where F: Sync + Send +\nFn(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the maximum of all the items in the iterator with respect to\n the given comparison function. If the iterator is empty, `None` is\n returned; otherwise, `Some(min)` is returned.","sig":null,"attributes":[{"value":"/ Computes the maximum of all the items in the iterator with respect to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71035,"byte_end":71108,"line_start":1457,"line_end":1457,"column_start":5,"column_end":78}},{"value":"/ the given comparison function. If the iterator is empty, `None` is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71113,"byte_end":71183,"line_start":1458,"line_end":1458,"column_start":5,"column_end":75}},{"value":"/ returned; otherwise, `Some(min)` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71188,"byte_end":71237,"line_start":1459,"line_end":1459,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71242,"byte_end":71245,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71250,"byte_end":71315,"line_start":1461,"line_end":1461,"column_start":5,"column_end":70}},{"value":"/ specified, so if the comparison function is not associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71320,"byte_end":71389,"line_start":1462,"line_end":1462,"column_start":5,"column_end":74}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71394,"byte_end":71432,"line_start":1463,"line_end":1463,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71437,"byte_end":71440,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71445,"byte_end":71459,"line_start":1465,"line_end":1465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71464,"byte_end":71467,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71472,"byte_end":71479,"line_start":1467,"line_end":1467,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71484,"byte_end":71510,"line_start":1468,"line_end":1468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71515,"byte_end":71518,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 77, 53, 240, -1];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71523,"byte_end":71561,"line_start":1470,"line_end":1470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71566,"byte_end":71569,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by(|x, y| x.abs().cmp(&y.abs())), Some(&240));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71574,"byte_end":71652,"line_start":1472,"line_end":1472,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":71657,"byte_end":71664,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72647,"byte_end":72657,"line_start":1505,"line_end":1505,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::iter::ParallelIterator::max_by_key","value":"pub fn max_by_key<K, F>(Self, F) -> Option<Self::Item> where K: Ord + Send,\nF: Sync + Send + Fn(&Self::Item) -> K","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Computes the item that yields the maximum value for the given\n function. If the iterator is empty, `None` is returned;\n otherwise, `Some(item)` is returned.","sig":null,"attributes":[{"value":"/ Computes the item that yields the maximum value for the given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72048,"byte_end":72113,"line_start":1488,"line_end":1488,"column_start":5,"column_end":70}},{"value":"/ function. If the iterator is empty, `None` is returned;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72118,"byte_end":72177,"line_start":1489,"line_end":1489,"column_start":5,"column_end":64}},{"value":"/ otherwise, `Some(item)` is returned.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72182,"byte_end":72222,"line_start":1490,"line_end":1490,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72227,"byte_end":72230,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ Note that the order in which the items will be reduced is not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72235,"byte_end":72300,"line_start":1492,"line_end":1492,"column_start":5,"column_end":70}},{"value":"/ specified, so if the `Ord` impl is not truly associative, then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72305,"byte_end":72371,"line_start":1493,"line_end":1493,"column_start":5,"column_end":71}},{"value":"/ the results are not deterministic.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72376,"byte_end":72414,"line_start":1494,"line_end":1494,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72419,"byte_end":72422,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72427,"byte_end":72441,"line_start":1496,"line_end":1496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72446,"byte_end":72449,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72454,"byte_end":72461,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72466,"byte_end":72492,"line_start":1499,"line_end":1499,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72497,"byte_end":72500,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 34, 2, 5, -10, -3, -23];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72505,"byte_end":72550,"line_start":1501,"line_end":1501,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72555,"byte_end":72558,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().max_by_key(|x| x.abs()), Some(&34));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72563,"byte_end":72627,"line_start":1503,"line_end":1503,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":72632,"byte_end":72639,"line_start":1504,"line_end":1504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73588,"byte_end":73593,"line_start":1541,"line_end":1541,"column_start":8,"column_end":13},"name":"chain","qualname":"::iter::ParallelIterator::chain","value":"pub fn chain<C>(Self, C) -> Chain<Self, C::Iter> where\nC: IntoParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Takes two iterators and creates a new iterator over both.","sig":null,"attributes":[{"value":"/ Takes two iterators and creates a new iterator over both.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73172,"byte_end":73233,"line_start":1525,"line_end":1525,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73238,"byte_end":73241,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73246,"byte_end":73260,"line_start":1527,"line_end":1527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73265,"byte_end":73268,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73273,"byte_end":73280,"line_start":1529,"line_end":1529,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73285,"byte_end":73311,"line_start":1530,"line_end":1530,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73316,"byte_end":73319,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 1, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73324,"byte_end":73346,"line_start":1532,"line_end":1532,"column_start":5,"column_end":27}},{"value":"/ let b = [9, 8, 7];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73351,"byte_end":73373,"line_start":1533,"line_end":1533,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73378,"byte_end":73381,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ let par_iter = a.par_iter().chain(b.par_iter());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73386,"byte_end":73438,"line_start":1535,"line_end":1535,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73443,"byte_end":73446,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let chained: Vec<_> = par_iter.cloned().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73451,"byte_end":73505,"line_start":1537,"line_end":1537,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73510,"byte_end":73513,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&chained[..], &[0, 1, 2, 9, 8, 7]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73518,"byte_end":73568,"line_start":1539,"line_end":1539,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73573,"byte_end":73580,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74687,"byte_end":74695,"line_start":1571,"line_end":1571,"column_start":8,"column_end":16},"name":"find_any","qualname":"::iter::ParallelIterator::find_any","value":"pub fn find_any<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate and returns it. This operation\n is similar to [`find` on sequential iterators][find] but\n the item returned may not be the **first** one in the parallel\n sequence which matches, since we search the entire sequence in parallel.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73764,"byte_end":73824,"line_start":1548,"line_end":1548,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate and returns it. This operation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73829,"byte_end":73891,"line_start":1549,"line_end":1549,"column_start":5,"column_end":67}},{"value":"/ is similar to [`find` on sequential iterators][find] but","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73896,"byte_end":73956,"line_start":1550,"line_end":1550,"column_start":5,"column_end":65}},{"value":"/ the item returned may not be the **first** one in the parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":73961,"byte_end":74027,"line_start":1551,"line_end":1551,"column_start":5,"column_end":71}},{"value":"/ sequence which matches, since we search the entire sequence in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74032,"byte_end":74108,"line_start":1552,"line_end":1552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74113,"byte_end":74116,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, we will attempt to stop processing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74121,"byte_end":74182,"line_start":1554,"line_end":1554,"column_start":5,"column_end":66}},{"value":"/ the rest of the items in the iterator as soon as possible","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74187,"byte_end":74248,"line_start":1555,"line_end":1555,"column_start":5,"column_end":66}},{"value":"/ (just as `find` stops iterating once a match is found).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74253,"byte_end":74312,"line_start":1556,"line_end":1556,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74317,"byte_end":74320,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ [find]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74325,"byte_end":74403,"line_start":1558,"line_end":1558,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74408,"byte_end":74411,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74416,"byte_end":74430,"line_start":1560,"line_end":1560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74435,"byte_end":74438,"line_start":1561,"line_end":1561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74443,"byte_end":74450,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74455,"byte_end":74481,"line_start":1563,"line_end":1563,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74486,"byte_end":74489,"line_start":1564,"line_end":1564,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74494,"byte_end":74519,"line_start":1565,"line_end":1565,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74524,"byte_end":74527,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74532,"byte_end":74594,"line_start":1567,"line_end":1567,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74599,"byte_end":74602,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_any(|&&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74607,"byte_end":74667,"line_start":1569,"line_end":1569,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74672,"byte_end":74679,"line_start":1570,"line_end":1570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75734,"byte_end":75744,"line_start":1601,"line_end":1601,"column_start":8,"column_end":18},"name":"find_first","qualname":"::iter::ParallelIterator::find_first","value":"pub fn find_first<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item)\n-> bool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74854,"byte_end":74927,"line_start":1578,"line_end":1578,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74932,"byte_end":74984,"line_start":1579,"line_end":1579,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74989,"byte_end":74992,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the right of the match","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":74997,"byte_end":75062,"line_start":1581,"line_end":1581,"column_start":5,"column_end":70}},{"value":"/ will be stopped, while attempts to the left must continue in case","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75067,"byte_end":75136,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ an earlier match is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75141,"byte_end":75171,"line_start":1583,"line_end":1583,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75176,"byte_end":75179,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75184,"byte_end":75255,"line_start":1585,"line_end":1585,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75260,"byte_end":75331,"line_start":1586,"line_end":1586,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75336,"byte_end":75407,"line_start":1587,"line_end":1587,"column_start":5,"column_end":76}},{"value":"/ `find_any` is a better choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75412,"byte_end":75446,"line_start":1588,"line_end":1588,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75451,"byte_end":75454,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75459,"byte_end":75473,"line_start":1590,"line_end":1590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75478,"byte_end":75481,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75486,"byte_end":75493,"line_start":1592,"line_end":1592,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75498,"byte_end":75524,"line_start":1593,"line_end":1593,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75529,"byte_end":75532,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75537,"byte_end":75562,"line_start":1595,"line_end":1595,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75567,"byte_end":75570,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75575,"byte_end":75639,"line_start":1597,"line_end":1597,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75644,"byte_end":75647,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_first(|&&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75652,"byte_end":75714,"line_start":1599,"line_end":1599,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75719,"byte_end":75726,"line_start":1600,"line_end":1600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76757,"byte_end":76766,"line_start":1630,"line_end":1630,"column_start":8,"column_end":17},"name":"find_last","qualname":"::iter::ParallelIterator::find_last","value":"pub fn find_last<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate and returns it.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75920,"byte_end":75992,"line_start":1608,"line_end":1608,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate and returns it.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":75997,"byte_end":76049,"line_start":1609,"line_end":1609,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76054,"byte_end":76057,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ Once a match is found, all attempts to the left of the match","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76062,"byte_end":76126,"line_start":1611,"line_end":1611,"column_start":5,"column_end":69}},{"value":"/ will be stopped, while attempts to the right must continue in case","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76131,"byte_end":76201,"line_start":1612,"line_end":1612,"column_start":5,"column_end":75}},{"value":"/ a later match is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76206,"byte_end":76233,"line_start":1613,"line_end":1613,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76238,"byte_end":76241,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76246,"byte_end":76317,"line_start":1615,"line_end":1615,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76322,"byte_end":76394,"line_start":1616,"line_end":1616,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `find_any` is a better choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76399,"byte_end":76471,"line_start":1617,"line_end":1617,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76476,"byte_end":76479,"line_start":1618,"line_end":1618,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76484,"byte_end":76498,"line_start":1619,"line_end":1619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76503,"byte_end":76506,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76511,"byte_end":76518,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76523,"byte_end":76549,"line_start":1622,"line_end":1622,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76554,"byte_end":76557,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76562,"byte_end":76587,"line_start":1624,"line_end":1624,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76592,"byte_end":76595,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 3), Some(&3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76600,"byte_end":76663,"line_start":1626,"line_end":1626,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76668,"byte_end":76671,"line_start":1627,"line_end":1627,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().find_last(|&&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76676,"byte_end":76737,"line_start":1628,"line_end":1628,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76742,"byte_end":76749,"line_start":1629,"line_end":1629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77845,"byte_end":77857,"line_start":1660,"line_end":1660,"column_start":8,"column_end":20},"name":"find_map_any","qualname":"::iter::ParallelIterator::find_map_any","value":"pub fn find_map_any<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator\n and returns **any** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":76941,"byte_end":77010,"line_start":1637,"line_end":1637,"column_start":5,"column_end":74}},{"value":"/ and returns **any** non-None result of the map operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77015,"byte_end":77076,"line_start":1638,"line_end":1638,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77081,"byte_end":77084,"line_start":1639,"line_end":1639,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, we will","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77089,"byte_end":77158,"line_start":1640,"line_end":1640,"column_start":5,"column_end":74}},{"value":"/ attempt to stop processing the rest of the items in the iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77163,"byte_end":77231,"line_start":1641,"line_end":1641,"column_start":5,"column_end":73}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77236,"byte_end":77260,"line_start":1642,"line_end":1642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77265,"byte_end":77268,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ Note that this method only returns **some** item in the parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77273,"byte_end":77341,"line_start":1644,"line_end":1644,"column_start":5,"column_end":73}},{"value":"/ iterator that is not None from the map predicate. The item returned","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77346,"byte_end":77417,"line_start":1645,"line_end":1645,"column_start":5,"column_end":76}},{"value":"/ may not be the **first** non-None value produced in the parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77422,"byte_end":77490,"line_start":1646,"line_end":1646,"column_start":5,"column_end":73}},{"value":"/ sequence, since the entire sequence is mapped over in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77495,"byte_end":77562,"line_start":1647,"line_end":1647,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77567,"byte_end":77570,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77575,"byte_end":77589,"line_start":1649,"line_end":1649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77594,"byte_end":77597,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77602,"byte_end":77609,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77614,"byte_end":77640,"line_start":1652,"line_end":1652,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77645,"byte_end":77648,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"5\", \"5\"];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77653,"byte_end":77690,"line_start":1654,"line_end":1654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77695,"byte_end":77698,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77703,"byte_end":77774,"line_start":1656,"line_end":1656,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77779,"byte_end":77782,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77787,"byte_end":77825,"line_start":1658,"line_end":1658,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":77830,"byte_end":77837,"line_start":1659,"line_end":1659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79047,"byte_end":79061,"line_start":1694,"line_end":1694,"column_start":8,"column_end":22},"name":"find_map_first","qualname":"::iter::ParallelIterator::find_map_first","value":"pub fn find_map_first<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **first** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78106,"byte_end":78179,"line_start":1671,"line_end":1671,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **first** non-None result of the map operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78184,"byte_end":78260,"line_start":1672,"line_end":1672,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78265,"byte_end":78268,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78273,"byte_end":78347,"line_start":1674,"line_end":1674,"column_start":5,"column_end":79}},{"value":"/ to the right of the match will be stopped, while attempts to the left","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78352,"byte_end":78425,"line_start":1675,"line_end":1675,"column_start":5,"column_end":78}},{"value":"/ must continue in case an earlier match is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78430,"byte_end":78482,"line_start":1676,"line_end":1676,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78487,"byte_end":78490,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78495,"byte_end":78566,"line_start":1678,"line_end":1678,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78571,"byte_end":78641,"line_start":1679,"line_end":1679,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78646,"byte_end":78721,"line_start":1680,"line_end":1680,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78726,"byte_end":78764,"line_start":1681,"line_end":1681,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78769,"byte_end":78772,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78777,"byte_end":78791,"line_start":1683,"line_end":1683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78796,"byte_end":78799,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78804,"byte_end":78811,"line_start":1685,"line_end":1685,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78816,"byte_end":78842,"line_start":1686,"line_end":1686,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78847,"byte_end":78850,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78855,"byte_end":78892,"line_start":1688,"line_end":1688,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78897,"byte_end":78900,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_first(|s| s.parse().ok());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78905,"byte_end":78976,"line_start":1690,"line_end":1690,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78981,"byte_end":78984,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":78989,"byte_end":79027,"line_start":1692,"line_end":1692,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79032,"byte_end":79039,"line_start":1693,"line_end":1693,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80248,"byte_end":80261,"line_start":1728,"line_end":1728,"column_start":8,"column_end":21},"name":"find_map_last","qualname":"::iter::ParallelIterator::find_map_last","value":"pub fn find_map_last<P, R>(Self, P) -> Option<R> where P: Fn(Self::Item) ->\nOption<R> + Sync + Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Applies the given predicate to the items in the parallel iterator and\n returns the sequentially **last** non-None result of the map operation.","sig":null,"attributes":[{"value":"/ Applies the given predicate to the items in the parallel iterator and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79312,"byte_end":79385,"line_start":1705,"line_end":1705,"column_start":5,"column_end":78}},{"value":"/ returns the sequentially **last** non-None result of the map operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79390,"byte_end":79465,"line_start":1706,"line_end":1706,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79470,"byte_end":79473,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ Once a non-None value is produced from the map operation, all attempts","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79478,"byte_end":79552,"line_start":1708,"line_end":1708,"column_start":5,"column_end":79}},{"value":"/ to the left of the match will be stopped, while attempts to the right","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79557,"byte_end":79630,"line_start":1709,"line_end":1709,"column_start":5,"column_end":78}},{"value":"/ must continue in case a later match is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79635,"byte_end":79684,"line_start":1710,"line_end":1710,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79689,"byte_end":79692,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79697,"byte_end":79768,"line_start":1712,"line_end":1712,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous. If you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79773,"byte_end":79843,"line_start":1713,"line_end":1713,"column_start":5,"column_end":75}},{"value":"/ just want the first non-None value discovered anywhere in the iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79848,"byte_end":79923,"line_start":1714,"line_end":1714,"column_start":5,"column_end":80}},{"value":"/ `find_map_any` is a better choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79928,"byte_end":79966,"line_start":1715,"line_end":1715,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79971,"byte_end":79974,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79979,"byte_end":79993,"line_start":1717,"line_end":1717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":79998,"byte_end":80001,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80006,"byte_end":80013,"line_start":1719,"line_end":1719,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80018,"byte_end":80044,"line_start":1720,"line_end":1720,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80049,"byte_end":80052,"line_start":1721,"line_end":1721,"column_start":5,"column_end":8}},{"value":"/ let c = [\"lol\", \"NaN\", \"2\", \"5\"];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80057,"byte_end":80094,"line_start":1722,"line_end":1722,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80099,"byte_end":80102,"line_start":1723,"line_end":1723,"column_start":5,"column_end":8}},{"value":"/ let first_number = c.par_iter().find_map_last(|s| s.parse().ok());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80107,"byte_end":80177,"line_start":1724,"line_end":1724,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80182,"byte_end":80185,"line_start":1725,"line_end":1725,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first_number, Some(5));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80190,"byte_end":80228,"line_start":1726,"line_end":1726,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80233,"byte_end":80240,"line_start":1727,"line_end":1727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80678,"byte_end":80682,"line_start":1742,"line_end":1742,"column_start":8,"column_end":12},"name":"find","qualname":"::iter::ParallelIterator::find","value":"pub fn find<P>(Self, P) -> Option<Self::Item> where P: Fn(&Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `find` does not search in order -- use `find_any`, \\\\\n                         `find_first`, or `find_last`\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80530,"byte_end":80670,"line_start":1740,"line_end":1741,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81387,"byte_end":81390,"line_start":1766,"line_end":1766,"column_start":8,"column_end":11},"name":"any","qualname":"::iter::ParallelIterator::any","value":"pub fn any<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and if so returns true.  Once\n a match is found, we'll attempt to stop process the rest\n of the items.  Proving that there's no match, returning false,\n does require visiting every item.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80838,"byte_end":80898,"line_start":1749,"line_end":1749,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and if so returns true.  Once","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80903,"byte_end":80965,"line_start":1750,"line_end":1750,"column_start":5,"column_end":67}},{"value":"/ a match is found, we'll attempt to stop process the rest","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":80970,"byte_end":81030,"line_start":1751,"line_end":1751,"column_start":5,"column_end":65}},{"value":"/ of the items.  Proving that there's no match, returning false,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81035,"byte_end":81101,"line_start":1752,"line_end":1752,"column_start":5,"column_end":71}},{"value":"/ does require visiting every item.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81106,"byte_end":81143,"line_start":1753,"line_end":1753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81148,"byte_end":81151,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81156,"byte_end":81170,"line_start":1755,"line_end":1755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81175,"byte_end":81178,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81183,"byte_end":81190,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81195,"byte_end":81221,"line_start":1758,"line_end":1758,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81226,"byte_end":81229,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81234,"byte_end":81270,"line_start":1760,"line_end":1760,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81275,"byte_end":81278,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().any(|&x| x > 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81283,"byte_end":81332,"line_start":1762,"line_end":1762,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81337,"byte_end":81340,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ assert!(is_valid);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81345,"byte_end":81367,"line_start":1764,"line_end":1764,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81372,"byte_end":81379,"line_start":1765,"line_end":1765,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82018,"byte_end":82021,"line_start":1788,"line_end":1788,"column_start":8,"column_end":11},"name":"all","qualname":"::iter::ParallelIterator::all","value":"pub fn all<P>(Self, P) -> bool where P: Fn(Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Tests that every item in the parallel iterator matches the given\n predicate, and if so returns true.  If a counter-example is found,\n we'll attempt to stop processing more items, then return false.","sig":null,"attributes":[{"value":"/ Tests that every item in the parallel iterator matches the given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81558,"byte_end":81626,"line_start":1773,"line_end":1773,"column_start":5,"column_end":73}},{"value":"/ predicate, and if so returns true.  If a counter-example is found,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81631,"byte_end":81701,"line_start":1774,"line_end":1774,"column_start":5,"column_end":75}},{"value":"/ we'll attempt to stop processing more items, then return false.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81706,"byte_end":81773,"line_start":1775,"line_end":1775,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81778,"byte_end":81781,"line_start":1776,"line_end":1776,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81786,"byte_end":81800,"line_start":1777,"line_end":1777,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81805,"byte_end":81808,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81813,"byte_end":81820,"line_start":1779,"line_end":1779,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81825,"byte_end":81851,"line_start":1780,"line_end":1780,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81856,"byte_end":81859,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ let a = [0, 12, 3, 4, 0, 23, 0];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81864,"byte_end":81900,"line_start":1782,"line_end":1782,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81905,"byte_end":81908,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ let is_valid = a.par_iter().all(|&x| x > 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81913,"byte_end":81962,"line_start":1784,"line_end":1784,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81967,"byte_end":81970,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ assert!(!is_valid);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":81975,"byte_end":81998,"line_start":1786,"line_end":1786,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82003,"byte_end":82010,"line_start":1787,"line_end":1787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83003,"byte_end":83013,"line_start":1822,"line_end":1822,"column_start":8,"column_end":18},"name":"while_some","qualname":"::iter::ParallelIterator::while_some","value":"pub fn while_some<T>(Self) -> WhileSome<Self> where\nSelf: ParallelIterator<Item = Option<T>>, T: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Creates an iterator over the `Some` items of this iterator, halting\n as soon as any `None` is found.","sig":null,"attributes":[{"value":"/ Creates an iterator over the `Some` items of this iterator, halting","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82270,"byte_end":82341,"line_start":1800,"line_end":1800,"column_start":5,"column_end":76}},{"value":"/ as soon as any `None` is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82346,"byte_end":82381,"line_start":1801,"line_end":1801,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82386,"byte_end":82389,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82394,"byte_end":82408,"line_start":1803,"line_end":1803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82413,"byte_end":82416,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82421,"byte_end":82428,"line_start":1805,"line_end":1805,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82433,"byte_end":82459,"line_start":1806,"line_end":1806,"column_start":5,"column_end":31}},{"value":"/ use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82464,"byte_end":82515,"line_start":1807,"line_end":1807,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82520,"byte_end":82523,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ let counter = AtomicUsize::new(0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82528,"byte_end":82566,"line_start":1809,"line_end":1809,"column_start":5,"column_end":43}},{"value":"/ let value = (0_i32..2048)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82571,"byte_end":82600,"line_start":1810,"line_end":1810,"column_start":5,"column_end":34}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82605,"byte_end":82629,"line_start":1811,"line_end":1811,"column_start":5,"column_end":29}},{"value":"/     .map(|x| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82634,"byte_end":82652,"line_start":1812,"line_end":1812,"column_start":5,"column_end":23}},{"value":"/              counter.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82657,"byte_end":82713,"line_start":1813,"line_end":1813,"column_start":5,"column_end":61}},{"value":"/              if x < 1024 { Some(x) } else { None }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82718,"byte_end":82772,"line_start":1814,"line_end":1814,"column_start":5,"column_end":59}},{"value":"/          })","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82777,"byte_end":82792,"line_start":1815,"line_end":1815,"column_start":5,"column_end":20}},{"value":"/     .while_some()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82797,"byte_end":82818,"line_start":1816,"line_end":1816,"column_start":5,"column_end":26}},{"value":"/     .max();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82823,"byte_end":82838,"line_start":1817,"line_end":1817,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82843,"byte_end":82846,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ assert!(value < Some(1024));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82851,"byte_end":82883,"line_start":1819,"line_end":1819,"column_start":5,"column_end":37}},{"value":"/ assert!(counter.load(Ordering::SeqCst) < 2048); // should not have visited every single one","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82888,"byte_end":82983,"line_start":1820,"line_end":1820,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":82988,"byte_end":82995,"line_start":1821,"line_end":1821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84324,"byte_end":84334,"line_start":1860,"line_end":1860,"column_start":8,"column_end":18},"name":"panic_fuse","qualname":"::iter::ParallelIterator::panic_fuse","value":"pub fn panic_fuse(Self) -> PanicFuse<Self>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Wraps an iterator with a fuse in case of panics, to halt all threads\n as soon as possible.","sig":null,"attributes":[{"value":"/ Wraps an iterator with a fuse in case of panics, to halt all threads","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83165,"byte_end":83237,"line_start":1830,"line_end":1830,"column_start":5,"column_end":77}},{"value":"/ as soon as possible.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83242,"byte_end":83266,"line_start":1831,"line_end":1831,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83271,"byte_end":83274,"line_start":1832,"line_end":1832,"column_start":5,"column_end":8}},{"value":"/ Panics within parallel iterators are always propagated to the caller,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83279,"byte_end":83352,"line_start":1833,"line_end":1833,"column_start":5,"column_end":78}},{"value":"/ but they don't always halt the rest of the iterator right away, due to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83357,"byte_end":83431,"line_start":1834,"line_end":1834,"column_start":5,"column_end":79}},{"value":"/ the internal semantics of [`join`]. This adaptor makes a greater effort","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83436,"byte_end":83511,"line_start":1835,"line_end":1835,"column_start":5,"column_end":80}},{"value":"/ to stop processing other items sooner, with the cost of additional","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83516,"byte_end":83586,"line_start":1836,"line_end":1836,"column_start":5,"column_end":75}},{"value":"/ synchronization overhead, which may also inhibit some optimizations.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83591,"byte_end":83663,"line_start":1837,"line_end":1837,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83668,"byte_end":83671,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8}},{"value":"/ [`join`]: ../fn.join.html#panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83676,"byte_end":83712,"line_start":1839,"line_end":1839,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83717,"byte_end":83720,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83725,"byte_end":83739,"line_start":1841,"line_end":1841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83744,"byte_end":83747,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ If this code didn't use `panic_fuse()`, it would continue processing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83752,"byte_end":83824,"line_start":1843,"line_end":1843,"column_start":5,"column_end":77}},{"value":"/ many more items in other threads (with long sleep delays) before the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83829,"byte_end":83901,"line_start":1844,"line_end":1844,"column_start":5,"column_end":77}},{"value":"/ panic is finally propagated.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83906,"byte_end":83938,"line_start":1845,"line_end":1845,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83943,"byte_end":83946,"line_start":1846,"line_end":1846,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83951,"byte_end":83970,"line_start":1847,"line_end":1847,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":83975,"byte_end":84001,"line_start":1848,"line_end":1848,"column_start":5,"column_end":31}},{"value":"/ use std::{thread, time};","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84006,"byte_end":84034,"line_start":1849,"line_end":1849,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84039,"byte_end":84042,"line_start":1850,"line_end":1850,"column_start":5,"column_end":8}},{"value":"/ (0..1_000_000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84047,"byte_end":84065,"line_start":1851,"line_end":1851,"column_start":5,"column_end":23}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84070,"byte_end":84094,"line_start":1852,"line_end":1852,"column_start":5,"column_end":29}},{"value":"/     .panic_fuse()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84099,"byte_end":84120,"line_start":1853,"line_end":1853,"column_start":5,"column_end":26}},{"value":"/     .for_each(|i| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84125,"byte_end":84148,"line_start":1854,"line_end":1854,"column_start":5,"column_end":28}},{"value":"/         // simulate some work","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84153,"byte_end":84186,"line_start":1855,"line_end":1855,"column_start":5,"column_end":38}},{"value":"/         thread::sleep(time::Duration::from_secs(1));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84191,"byte_end":84247,"line_start":1856,"line_end":1856,"column_start":5,"column_end":61}},{"value":"/         assert!(i > 0); // oops!","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84252,"byte_end":84288,"line_start":1857,"line_end":1857,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84293,"byte_end":84304,"line_start":1858,"line_end":1858,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84309,"byte_end":84316,"line_start":1859,"line_end":1859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85083,"byte_end":85090,"line_start":1883,"line_end":1883,"column_start":8,"column_end":15},"name":"collect","qualname":"::iter::ParallelIterator::collect","value":"pub fn collect<C>(Self) -> C where C: FromParallelIterator<Self::Item>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Create a fresh collection containing all the element produced\n by this parallel iterator.","sig":null,"attributes":[{"value":"/ Create a fresh collection containing all the element produced","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84402,"byte_end":84467,"line_start":1864,"line_end":1864,"column_start":5,"column_end":70}},{"value":"/ by this parallel iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84472,"byte_end":84502,"line_start":1865,"line_end":1865,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84507,"byte_end":84510,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `collect_into_vec()`, which allocates more","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84515,"byte_end":84583,"line_start":1867,"line_end":1867,"column_start":5,"column_end":73}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84588,"byte_end":84651,"line_start":1868,"line_end":1868,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse an existing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84656,"byte_end":84719,"line_start":1869,"line_end":1869,"column_start":5,"column_end":68}},{"value":"/ vector's backing store rather than allocating a fresh vector.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84724,"byte_end":84789,"line_start":1870,"line_end":1870,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84794,"byte_end":84797,"line_start":1871,"line_end":1871,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84802,"byte_end":84816,"line_start":1872,"line_end":1872,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84821,"byte_end":84824,"line_start":1873,"line_end":1873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84829,"byte_end":84836,"line_start":1874,"line_end":1874,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84841,"byte_end":84867,"line_start":1875,"line_end":1875,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84872,"byte_end":84875,"line_start":1876,"line_end":1876,"column_start":5,"column_end":8}},{"value":"/ let sync_vec: Vec<_> = (0..100).into_iter().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84880,"byte_end":84938,"line_start":1877,"line_end":1877,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84943,"byte_end":84946,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ let async_vec: Vec<_> = (0..100).into_par_iter().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":84951,"byte_end":85014,"line_start":1879,"line_end":1879,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85019,"byte_end":85022,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sync_vec, async_vec);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85027,"byte_end":85063,"line_start":1881,"line_end":1881,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85068,"byte_end":85075,"line_start":1882,"line_end":1882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86342,"byte_end":86347,"line_start":1924,"line_end":1924,"column_start":8,"column_end":13},"name":"unzip","qualname":"::iter::ParallelIterator::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> (FromA, FromB) where\nSelf: ParallelIterator<Item = (A, B)>, FromA: Default + Send +\nParallelExtend<A>, FromB: Default + Send + ParallelExtend<B>, A: Send, B: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Unzips the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.","sig":null,"attributes":[{"value":"/ Unzips the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85208,"byte_end":85276,"line_start":1890,"line_end":1890,"column_start":5,"column_end":73}},{"value":"/ `ParallelExtend` containers.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85281,"byte_end":85313,"line_start":1891,"line_end":1891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85318,"byte_end":85321,"line_start":1892,"line_end":1892,"column_start":5,"column_end":8}},{"value":"/ You may prefer to use `unzip_into_vecs()`, which allocates more","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85326,"byte_end":85393,"line_start":1893,"line_end":1893,"column_start":5,"column_end":72}},{"value":"/ efficiently with precise knowledge of how many elements the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85398,"byte_end":85461,"line_start":1894,"line_end":1894,"column_start":5,"column_end":68}},{"value":"/ iterator contains, and even allows you to reuse existing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85466,"byte_end":85526,"line_start":1895,"line_end":1895,"column_start":5,"column_end":65}},{"value":"/ vectors' backing stores rather than allocating fresh vectors.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85531,"byte_end":85596,"line_start":1896,"line_end":1896,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85601,"byte_end":85604,"line_start":1897,"line_end":1897,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85609,"byte_end":85623,"line_start":1898,"line_end":1898,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85628,"byte_end":85631,"line_start":1899,"line_end":1899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85636,"byte_end":85643,"line_start":1900,"line_end":1900,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85648,"byte_end":85674,"line_start":1901,"line_end":1901,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85679,"byte_end":85682,"line_start":1902,"line_end":1902,"column_start":5,"column_end":8}},{"value":"/ let a = [(0, 1), (1, 2), (2, 3), (3, 4)];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85687,"byte_end":85732,"line_start":1903,"line_end":1903,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85737,"byte_end":85740,"line_start":1904,"line_end":1904,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = a.par_iter().cloned().unzip();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85745,"byte_end":85817,"line_start":1905,"line_end":1905,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85822,"byte_end":85825,"line_start":1906,"line_end":1906,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85830,"byte_end":85865,"line_start":1907,"line_end":1907,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85870,"byte_end":85906,"line_start":1908,"line_end":1908,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85911,"byte_end":85918,"line_start":1909,"line_end":1909,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85923,"byte_end":85926,"line_start":1910,"line_end":1910,"column_start":5,"column_end":8}},{"value":"/ Nested pairs can be unzipped too.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85931,"byte_end":85968,"line_start":1911,"line_end":1911,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85973,"byte_end":85976,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85981,"byte_end":85988,"line_start":1913,"line_end":1913,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":85993,"byte_end":86019,"line_start":1914,"line_end":1914,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86024,"byte_end":86027,"line_start":1915,"line_end":1915,"column_start":5,"column_end":8}},{"value":"/ let (values, (squares, cubes)): (Vec<_>, (Vec<_>, Vec<_>)) = (0..4).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86032,"byte_end":86119,"line_start":1916,"line_end":1916,"column_start":5,"column_end":92}},{"value":"/     .map(|i| (i, (i * i, i * i * i)))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86124,"byte_end":86165,"line_start":1917,"line_end":1917,"column_start":5,"column_end":46}},{"value":"/     .unzip();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86170,"byte_end":86187,"line_start":1918,"line_end":1918,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86192,"byte_end":86195,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(values, [0, 1, 2, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86200,"byte_end":86237,"line_start":1920,"line_end":1920,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(squares, [0, 1, 4, 9]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86242,"byte_end":86280,"line_start":1921,"line_end":1921,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(cubes, [0, 1, 8, 27]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86285,"byte_end":86322,"line_start":1922,"line_end":1922,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86327,"byte_end":86334,"line_start":1923,"line_end":1923,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87453,"byte_end":87462,"line_start":1954,"line_end":1954,"column_start":8,"column_end":17},"name":"partition","qualname":"::iter::ParallelIterator::partition","value":"pub fn partition<A, B, P>(Self, P) -> (A, B) where A: Default + Send +\nParallelExtend<Self::Item>, B: Default + Send + ParallelExtend<Self::Item>,\nP: Fn(&Self::Item) -> bool + Sync + Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Partitions the items of a parallel iterator into a pair of arbitrary\n `ParallelExtend` containers.  Items for which the `predicate` returns\n true go into the first container, and the rest go into the second.","sig":null,"attributes":[{"value":"/ Partitions the items of a parallel iterator into a pair of arbitrary","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86629,"byte_end":86701,"line_start":1935,"line_end":1935,"column_start":5,"column_end":77}},{"value":"/ `ParallelExtend` containers.  Items for which the `predicate` returns","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86706,"byte_end":86779,"line_start":1936,"line_end":1936,"column_start":5,"column_end":78}},{"value":"/ true go into the first container, and the rest go into the second.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86784,"byte_end":86854,"line_start":1937,"line_end":1937,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86859,"byte_end":86862,"line_start":1938,"line_end":1938,"column_start":5,"column_end":8}},{"value":"/ Note: unlike the standard `Iterator::partition`, this allows distinct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86867,"byte_end":86940,"line_start":1939,"line_end":1939,"column_start":5,"column_end":78}},{"value":"/ collection types for the left and right items.  This is more flexible,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":86945,"byte_end":87019,"line_start":1940,"line_end":1940,"column_start":5,"column_end":79}},{"value":"/ but may require new type annotations when converting sequential code","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87024,"byte_end":87096,"line_start":1941,"line_end":1941,"column_start":5,"column_end":77}},{"value":"/ that used type inferrence assuming the two were the same.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87101,"byte_end":87162,"line_start":1942,"line_end":1942,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87167,"byte_end":87170,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87175,"byte_end":87189,"line_start":1944,"line_end":1944,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87194,"byte_end":87197,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87202,"byte_end":87209,"line_start":1946,"line_end":1946,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87214,"byte_end":87240,"line_start":1947,"line_end":1947,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87245,"byte_end":87248,"line_start":1948,"line_end":1948,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter().partition(|x| x % 2 == 0);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87253,"byte_end":87344,"line_start":1949,"line_end":1949,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87349,"byte_end":87352,"line_start":1950,"line_end":1950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 2, 4, 6]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87357,"byte_end":87392,"line_start":1951,"line_end":1951,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(right, [1, 3, 5, 7]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87397,"byte_end":87433,"line_start":1952,"line_end":1952,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87438,"byte_end":87445,"line_start":1953,"line_end":1953,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89182,"byte_end":89195,"line_start":2006,"line_end":2006,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::iter::ParallelIterator::partition_map","value":"pub fn partition_map<A, B, P, L, R>(Self, P) -> (A, B) where A: Default +\nSend + ParallelExtend<L>, B: Default + Send + ParallelExtend<R>,\nP: Fn(Self::Item) -> Either<L, R> + Sync + Send, L: Send, R: Send","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Partitions and maps the items of a parallel iterator into a pair of\n arbitrary `ParallelExtend` containers.  `Either::Left` items go into\n the first container, and `Either::Right` items go into the second.","sig":null,"attributes":[{"value":"/ Partitions and maps the items of a parallel iterator into a pair of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87733,"byte_end":87804,"line_start":1963,"line_end":1963,"column_start":5,"column_end":76}},{"value":"/ arbitrary `ParallelExtend` containers.  `Either::Left` items go into","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87809,"byte_end":87881,"line_start":1964,"line_end":1964,"column_start":5,"column_end":77}},{"value":"/ the first container, and `Either::Right` items go into the second.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87886,"byte_end":87956,"line_start":1965,"line_end":1965,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87961,"byte_end":87964,"line_start":1966,"line_end":1966,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87969,"byte_end":87983,"line_start":1967,"line_end":1967,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87988,"byte_end":87991,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":87996,"byte_end":88003,"line_start":1969,"line_end":1969,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88008,"byte_end":88034,"line_start":1970,"line_end":1970,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88039,"byte_end":88067,"line_start":1971,"line_end":1971,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88072,"byte_end":88075,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ let (left, right): (Vec<_>, Vec<_>) = (0..8).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88080,"byte_end":88144,"line_start":1973,"line_end":1973,"column_start":5,"column_end":69}},{"value":"/     .partition_map(|x| {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88149,"byte_end":88177,"line_start":1974,"line_end":1974,"column_start":5,"column_end":33}},{"value":"/         if x % 2 == 0 {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88182,"byte_end":88209,"line_start":1975,"line_end":1975,"column_start":5,"column_end":32}},{"value":"/             Either::Left(x * 4)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88214,"byte_end":88249,"line_start":1976,"line_end":1976,"column_start":5,"column_end":40}},{"value":"/         } else {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88254,"byte_end":88274,"line_start":1977,"line_end":1977,"column_start":5,"column_end":25}},{"value":"/             Either::Right(x * 3)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88279,"byte_end":88315,"line_start":1978,"line_end":1978,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88320,"byte_end":88333,"line_start":1979,"line_end":1979,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88338,"byte_end":88349,"line_start":1980,"line_end":1980,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88354,"byte_end":88357,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 8, 16, 24]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88362,"byte_end":88399,"line_start":1982,"line_end":1982,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(right, [3, 9, 15, 21]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88404,"byte_end":88442,"line_start":1983,"line_end":1983,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88447,"byte_end":88454,"line_start":1984,"line_end":1984,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88459,"byte_end":88462,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ Nested `Either` enums can be split as well.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88467,"byte_end":88514,"line_start":1986,"line_end":1986,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88519,"byte_end":88522,"line_start":1987,"line_end":1987,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88527,"byte_end":88534,"line_start":1988,"line_end":1988,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88539,"byte_end":88565,"line_start":1989,"line_end":1989,"column_start":5,"column_end":31}},{"value":"/ use rayon::iter::Either::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88570,"byte_end":88601,"line_start":1990,"line_end":1990,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88606,"byte_end":88609,"line_start":1991,"line_end":1991,"column_start":5,"column_end":8}},{"value":"/ let ((fizzbuzz, fizz), (buzz, other)): ((Vec<_>, Vec<_>), (Vec<_>, Vec<_>)) = (1..20)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88614,"byte_end":88703,"line_start":1992,"line_end":1992,"column_start":5,"column_end":94}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88708,"byte_end":88732,"line_start":1993,"line_end":1993,"column_start":5,"column_end":29}},{"value":"/     .partition_map(|x| match (x % 3, x % 5) {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88737,"byte_end":88786,"line_start":1994,"line_end":1994,"column_start":5,"column_end":54}},{"value":"/         (0, 0) => Left(Left(x)),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88791,"byte_end":88827,"line_start":1995,"line_end":1995,"column_start":5,"column_end":41}},{"value":"/         (0, _) => Left(Right(x)),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88832,"byte_end":88869,"line_start":1996,"line_end":1996,"column_start":5,"column_end":42}},{"value":"/         (_, 0) => Right(Left(x)),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88874,"byte_end":88911,"line_start":1997,"line_end":1997,"column_start":5,"column_end":42}},{"value":"/         (_, _) => Right(Right(x)),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88916,"byte_end":88954,"line_start":1998,"line_end":1998,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88959,"byte_end":88970,"line_start":1999,"line_end":1999,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88975,"byte_end":88978,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(fizzbuzz, [15]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":88983,"byte_end":89014,"line_start":2001,"line_end":2001,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(fizz, [3, 6, 9, 12, 18]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89019,"byte_end":89059,"line_start":2002,"line_end":2002,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buzz, [5, 10]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89064,"byte_end":89094,"line_start":2003,"line_end":2003,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(other, [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89099,"byte_end":89162,"line_start":2004,"line_end":2004,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89167,"byte_end":89174,"line_start":2005,"line_end":2005,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89828,"byte_end":89839,"line_start":2029,"line_end":2029,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::iter::ParallelIterator::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where\nSelf::Item: Clone","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Intersperses clones of an element between items of this iterator.","sig":null,"attributes":[{"value":"/ Intersperses clones of an element between items of this iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89499,"byte_end":89568,"line_start":2017,"line_end":2017,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89573,"byte_end":89576,"line_start":2018,"line_end":2018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89581,"byte_end":89595,"line_start":2019,"line_end":2019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89600,"byte_end":89603,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89608,"byte_end":89615,"line_start":2021,"line_end":2021,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89620,"byte_end":89646,"line_start":2022,"line_end":2022,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89651,"byte_end":89654,"line_start":2023,"line_end":2023,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89659,"byte_end":89685,"line_start":2024,"line_end":2024,"column_start":5,"column_end":31}},{"value":"/ let r: Vec<_> = x.into_par_iter().intersperse(-1).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89690,"byte_end":89754,"line_start":2025,"line_end":2025,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89759,"byte_end":89762,"line_start":2026,"line_end":2026,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r, vec![1, -1, 2, -1, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89767,"byte_end":89808,"line_start":2027,"line_end":2027,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89813,"byte_end":89820,"line_start":2028,"line_end":2028,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90501,"byte_end":90516,"line_start":2048,"line_end":2048,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"::iter::ParallelIterator::drive_unindexed","value":"pub fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":89982,"byte_end":90046,"line_start":2036,"line_end":2036,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90051,"byte_end":90107,"line_start":2037,"line_end":2037,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90112,"byte_end":90115,"line_start":2038,"line_end":2038,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90120,"byte_end":90181,"line_start":2039,"line_end":2039,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90186,"byte_end":90251,"line_start":2040,"line_end":2040,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90256,"byte_end":90315,"line_start":2041,"line_end":2041,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90320,"byte_end":90359,"line_start":2042,"line_end":2042,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90364,"byte_end":90367,"line_start":2043,"line_end":2043,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90372,"byte_end":90438,"line_start":2044,"line_end":2044,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90443,"byte_end":90457,"line_start":2045,"line_end":2045,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90462,"byte_end":90465,"line_start":2046,"line_end":2046,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90470,"byte_end":90493,"line_start":2047,"line_end":2047,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91403,"byte_end":91410,"line_start":2066,"line_end":2066,"column_start":8,"column_end":15},"name":"opt_len","qualname":"::iter::ParallelIterator::opt_len","value":"pub fn opt_len(&Self) -> Option<usize>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90609,"byte_end":90673,"line_start":2052,"line_end":2052,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90678,"byte_end":90734,"line_start":2053,"line_end":2053,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90739,"byte_end":90742,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items produced by this iterator, if known","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90747,"byte_end":90814,"line_start":2055,"line_end":2055,"column_start":5,"column_end":72}},{"value":"/ statically. This can be used by consumers to trigger special fast","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90819,"byte_end":90888,"line_start":2056,"line_end":2056,"column_start":5,"column_end":74}},{"value":"/ paths. Therefore, if `Some(_)` is returned, this iterator must only","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90893,"byte_end":90964,"line_start":2057,"line_end":2057,"column_start":5,"column_end":76}},{"value":"/ use the (indexed) `Consumer` methods when driving a consumer, such","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":90969,"byte_end":91039,"line_start":2058,"line_end":2058,"column_start":5,"column_end":75}},{"value":"/ as `split_at()`. Calling `UnindexedConsumer::split_off_left()` or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91044,"byte_end":91113,"line_start":2059,"line_end":2059,"column_start":5,"column_end":74}},{"value":"/ other `UnindexedConsumer` methods -- or returning an inaccurate","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91118,"byte_end":91185,"line_start":2060,"line_end":2060,"column_start":5,"column_end":72}},{"value":"/ value -- may result in panics.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91190,"byte_end":91224,"line_start":2061,"line_end":2061,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91229,"byte_end":91232,"line_start":2062,"line_end":2062,"column_start":5,"column_end":8}},{"value":"/ This method is currently used to optimize `collect` for want","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91237,"byte_end":91301,"line_start":2063,"line_end":2063,"column_start":5,"column_end":69}},{"value":"/ of true Rust specialization; it may be removed when","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91306,"byte_end":91361,"line_start":2064,"line_end":2064,"column_start":5,"column_end":60}},{"value":"/ specialization is stable.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91366,"byte_end":91395,"line_start":2065,"line_end":2065,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91853,"byte_end":91876,"line_start":2085,"line_end":2085,"column_start":11,"column_end":34},"name":"IndexedParallelIterator","qualname":"::iter::IndexedParallelIterator","value":"IndexedParallelIterator: ParallelIterator","parent":null,"children":[{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3872},{"krate":0,"index":3878},{"krate":0,"index":3883},{"krate":0,"index":3885},{"krate":0,"index":3887},{"krate":0,"index":3889},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3913}],"decl_id":null,"docs":" An iterator that supports \"random access\" to its data, meaning\n that you can split it at arbitrary indices and draw data from\n those points.","sig":null,"attributes":[{"value":"/ An iterator that supports \"random access\" to its data, meaning","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91615,"byte_end":91681,"line_start":2080,"line_end":2080,"column_start":1,"column_end":67}},{"value":"/ that you can split it at arbitrary indices and draw data from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91682,"byte_end":91747,"line_start":2081,"line_end":2081,"column_start":1,"column_end":66}},{"value":"/ those points.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91748,"byte_end":91765,"line_start":2082,"line_end":2082,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91766,"byte_end":91769,"line_start":2083,"line_end":2083,"column_start":1,"column_end":4}},{"value":"/ **Note:** Not implemented for `u64`, `i64`, `u128`, or `i128` ranges","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91770,"byte_end":91842,"line_start":2084,"line_end":2084,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92485,"byte_end":92501,"line_start":2104,"line_end":2104,"column_start":8,"column_end":24},"name":"collect_into_vec","qualname":"::iter::IndexedParallelIterator::collect_into_vec","value":"pub fn collect_into_vec(Self, &mut Vec<Self::Item>)","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Collects the results of the iterator into the specified\n vector. The vector is always truncated before execution\n begins. If possible, reusing the vector across calls can lead\n to better performance since it reuses the same backing buffer.","sig":null,"attributes":[{"value":"/ Collects the results of the iterator into the specified","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91901,"byte_end":91960,"line_start":2086,"line_end":2086,"column_start":5,"column_end":64}},{"value":"/ vector. The vector is always truncated before execution","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91965,"byte_end":92024,"line_start":2087,"line_end":2087,"column_start":5,"column_end":64}},{"value":"/ begins. If possible, reusing the vector across calls can lead","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92029,"byte_end":92094,"line_start":2088,"line_end":2088,"column_start":5,"column_end":70}},{"value":"/ to better performance since it reuses the same backing buffer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92099,"byte_end":92165,"line_start":2089,"line_end":2089,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92170,"byte_end":92173,"line_start":2090,"line_end":2090,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92178,"byte_end":92192,"line_start":2091,"line_end":2091,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92197,"byte_end":92200,"line_start":2092,"line_end":2092,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92205,"byte_end":92212,"line_start":2093,"line_end":2093,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92217,"byte_end":92243,"line_start":2094,"line_end":2094,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92248,"byte_end":92251,"line_start":2095,"line_end":2095,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92256,"byte_end":92295,"line_start":2096,"line_end":2096,"column_start":5,"column_end":44}},{"value":"/ let mut vec = vec![-1, -2, -3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92300,"byte_end":92335,"line_start":2097,"line_end":2097,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92340,"byte_end":92343,"line_start":2098,"line_end":2098,"column_start":5,"column_end":8}},{"value":"/ (0..5).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92348,"byte_end":92374,"line_start":2099,"line_end":2099,"column_start":5,"column_end":31}},{"value":"/     .collect_into_vec(&mut vec);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92379,"byte_end":92415,"line_start":2100,"line_end":2100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92420,"byte_end":92423,"line_start":2101,"line_end":2101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92428,"byte_end":92465,"line_start":2102,"line_end":2102,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92470,"byte_end":92477,"line_start":2103,"line_end":2103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93311,"byte_end":93326,"line_start":2129,"line_end":2129,"column_start":8,"column_end":23},"name":"unzip_into_vecs","qualname":"::iter::IndexedParallelIterator::unzip_into_vecs","value":"pub fn unzip_into_vecs<A, B>(Self, &mut Vec<A>, &mut Vec<B>) where\nSelf: IndexedParallelIterator<Item = (A, B)>, A: Send, B: Send","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Unzips the results of the iterator into the specified\n vectors. The vectors are always truncated before execution\n begins. If possible, reusing the vectors across calls can lead\n to better performance since they reuse the same backing buffer.","sig":null,"attributes":[{"value":"/ Unzips the results of the iterator into the specified","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92600,"byte_end":92657,"line_start":2108,"line_end":2108,"column_start":5,"column_end":62}},{"value":"/ vectors. The vectors are always truncated before execution","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92662,"byte_end":92724,"line_start":2109,"line_end":2109,"column_start":5,"column_end":67}},{"value":"/ begins. If possible, reusing the vectors across calls can lead","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92729,"byte_end":92795,"line_start":2110,"line_end":2110,"column_start":5,"column_end":71}},{"value":"/ to better performance since they reuse the same backing buffer.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92800,"byte_end":92867,"line_start":2111,"line_end":2111,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92872,"byte_end":92875,"line_start":2112,"line_end":2112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92880,"byte_end":92894,"line_start":2113,"line_end":2113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92899,"byte_end":92902,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92907,"byte_end":92914,"line_start":2115,"line_end":2115,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92919,"byte_end":92945,"line_start":2116,"line_end":2116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92950,"byte_end":92953,"line_start":2117,"line_end":2117,"column_start":5,"column_end":8}},{"value":"/ // any prior data will be truncated","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":92958,"byte_end":92997,"line_start":2118,"line_end":2118,"column_start":5,"column_end":44}},{"value":"/ let mut left = vec![42; 10];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93002,"byte_end":93034,"line_start":2119,"line_end":2119,"column_start":5,"column_end":37}},{"value":"/ let mut right = vec![-1; 10];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93039,"byte_end":93072,"line_start":2120,"line_end":2120,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93077,"byte_end":93080,"line_start":2121,"line_end":2121,"column_start":5,"column_end":8}},{"value":"/ (10..15).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93085,"byte_end":93113,"line_start":2122,"line_end":2122,"column_start":5,"column_end":33}},{"value":"/     .enumerate()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93118,"byte_end":93138,"line_start":2123,"line_end":2123,"column_start":5,"column_end":25}},{"value":"/     .unzip_into_vecs(&mut left, &mut right);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93143,"byte_end":93191,"line_start":2124,"line_end":2124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93196,"byte_end":93199,"line_start":2125,"line_end":2125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(left, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93204,"byte_end":93242,"line_start":2126,"line_end":2126,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(right, [10, 11, 12, 13, 14]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93247,"byte_end":93291,"line_start":2127,"line_end":2127,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93296,"byte_end":93303,"line_start":2128,"line_end":2128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94137,"byte_end":94140,"line_start":2156,"line_end":2156,"column_start":8,"column_end":11},"name":"zip","qualname":"::iter::IndexedParallelIterator::zip","value":"pub fn zip<Z>(Self, Z) -> Zip<Self, Z::Iter> where Z: IntoParallelIterator,\nZ::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Iterate over tuples `(A, B)`, where the items `A` are from\n this iterator and `B` are from the iterator given as argument.\n Like the `zip` method on ordinary iterators, if the two\n iterators are of unequal length, you only get the items they\n have in common.","sig":null,"attributes":[{"value":"/ Iterate over tuples `(A, B)`, where the items `A` are from","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93546,"byte_end":93608,"line_start":2138,"line_end":2138,"column_start":5,"column_end":67}},{"value":"/ this iterator and `B` are from the iterator given as argument.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93613,"byte_end":93679,"line_start":2139,"line_end":2139,"column_start":5,"column_end":71}},{"value":"/ Like the `zip` method on ordinary iterators, if the two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93684,"byte_end":93743,"line_start":2140,"line_end":2140,"column_start":5,"column_end":64}},{"value":"/ iterators are of unequal length, you only get the items they","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93748,"byte_end":93812,"line_start":2141,"line_end":2141,"column_start":5,"column_end":69}},{"value":"/ have in common.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93817,"byte_end":93836,"line_start":2142,"line_end":2142,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93841,"byte_end":93844,"line_start":2143,"line_end":2143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93849,"byte_end":93863,"line_start":2144,"line_end":2144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93868,"byte_end":93871,"line_start":2145,"line_end":2145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93876,"byte_end":93883,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93888,"byte_end":93914,"line_start":2147,"line_end":2147,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93919,"byte_end":93922,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (1..4)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93927,"byte_end":93958,"line_start":2149,"line_end":2149,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93963,"byte_end":93987,"line_start":2150,"line_end":2150,"column_start":5,"column_end":29}},{"value":"/     .zip(vec!['a', 'b', 'c'])","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":93992,"byte_end":94025,"line_start":2151,"line_end":2151,"column_start":5,"column_end":38}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94030,"byte_end":94049,"line_start":2152,"line_end":2152,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94054,"byte_end":94057,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(1, 'a'), (2, 'b'), (3, 'c')]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94062,"byte_end":94117,"line_start":2154,"line_end":2154,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94122,"byte_end":94129,"line_start":2155,"line_end":2155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94914,"byte_end":94920,"line_start":2183,"line_end":2183,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::iter::IndexedParallelIterator::zip_eq","value":"pub fn zip_eq<Z>(Self, Z) -> ZipEq<Self, Z::Iter> where\nZ: IntoParallelIterator, Z::Iter: IndexedParallelIterator","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" The same as `Zip`, but requires that both iterators have the same length.","sig":null,"attributes":[{"value":"/ The same as `Zip`, but requires that both iterators have the same length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94332,"byte_end":94409,"line_start":2164,"line_end":2164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94414,"byte_end":94417,"line_start":2165,"line_end":2165,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94422,"byte_end":94434,"line_start":2166,"line_end":2166,"column_start":5,"column_end":17}},{"value":"/ Will panic if `self` and `zip_op` are not the same length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94439,"byte_end":94501,"line_start":2167,"line_end":2167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94506,"byte_end":94509,"line_start":2168,"line_end":2168,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94514,"byte_end":94533,"line_start":2169,"line_end":2169,"column_start":5,"column_end":24}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94538,"byte_end":94564,"line_start":2170,"line_end":2170,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94569,"byte_end":94572,"line_start":2171,"line_end":2171,"column_start":5,"column_end":8}},{"value":"/ let one = [1u8];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94577,"byte_end":94597,"line_start":2172,"line_end":2172,"column_start":5,"column_end":25}},{"value":"/ let two = [2u8, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94602,"byte_end":94625,"line_start":2173,"line_end":2173,"column_start":5,"column_end":28}},{"value":"/ let one_iter = one.par_iter();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94630,"byte_end":94664,"line_start":2174,"line_end":2174,"column_start":5,"column_end":39}},{"value":"/ let two_iter = two.par_iter();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94669,"byte_end":94703,"line_start":2175,"line_end":2175,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94708,"byte_end":94711,"line_start":2176,"line_end":2176,"column_start":5,"column_end":8}},{"value":"/ // this will panic","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94716,"byte_end":94738,"line_start":2177,"line_end":2177,"column_start":5,"column_end":27}},{"value":"/ let zipped: Vec<(&u8, &u8)> = one_iter.zip_eq(two_iter).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94743,"byte_end":94813,"line_start":2178,"line_end":2178,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94818,"byte_end":94821,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ // we should never get here","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94826,"byte_end":94857,"line_start":2180,"line_end":2180,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, zipped.len());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94862,"byte_end":94894,"line_start":2181,"line_end":2181,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":94899,"byte_end":94906,"line_start":2182,"line_end":2182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95766,"byte_end":95776,"line_start":2207,"line_end":2207,"column_start":8,"column_end":18},"name":"interleave","qualname":"::iter::IndexedParallelIterator::interleave","value":"pub fn interleave<I>(Self, I) -> Interleave<Self, I::Iter> where\nI: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator. Alternately yields elements from this iterator and\n the given iterator, until both are exhausted. If one iterator\n is exhausted before the other, the last elements are provided\n from the other.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95206,"byte_end":95266,"line_start":2193,"line_end":2193,"column_start":5,"column_end":65}},{"value":"/ iterator. Alternately yields elements from this iterator and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95271,"byte_end":95335,"line_start":2194,"line_end":2194,"column_start":5,"column_end":69}},{"value":"/ the given iterator, until both are exhausted. If one iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95340,"byte_end":95405,"line_start":2195,"line_end":2195,"column_start":5,"column_end":70}},{"value":"/ is exhausted before the other, the last elements are provided","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95410,"byte_end":95475,"line_start":2196,"line_end":2196,"column_start":5,"column_end":70}},{"value":"/ from the other.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95480,"byte_end":95499,"line_start":2197,"line_end":2197,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95504,"byte_end":95507,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95512,"byte_end":95526,"line_start":2199,"line_end":2199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95531,"byte_end":95534,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95539,"byte_end":95546,"line_start":2201,"line_end":2201,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95551,"byte_end":95577,"line_start":2202,"line_end":2202,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2], vec![3, 4, 5, 6]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95582,"byte_end":95630,"line_start":2203,"line_end":2203,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave(y).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95635,"byte_end":95699,"line_start":2204,"line_end":2204,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(r, vec![1, 3, 2, 4, 5, 6]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95704,"byte_end":95746,"line_start":2205,"line_end":2205,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":95751,"byte_end":95758,"line_start":2206,"line_end":2206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96393,"byte_end":96412,"line_start":2226,"line_end":2226,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::iter::IndexedParallelIterator::interleave_shortest","value":"pub fn interleave_shortest<I>(Self, I) -> InterleaveShortest<Self, I::Iter>\nwhere I: IntoParallelIterator<Item = Self::Item>,\nI::Iter: IndexedParallelIterator<Item = Self::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Interleave elements of this iterator and the other given\n iterator, until one is exhausted.","sig":null,"attributes":[{"value":"/ Interleave elements of this iterator and the other given","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96018,"byte_end":96078,"line_start":2215,"line_end":2215,"column_start":5,"column_end":65}},{"value":"/ iterator, until one is exhausted.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96083,"byte_end":96120,"line_start":2216,"line_end":2216,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96125,"byte_end":96128,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96133,"byte_end":96147,"line_start":2218,"line_end":2218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96152,"byte_end":96155,"line_start":2219,"line_end":2219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96160,"byte_end":96167,"line_start":2220,"line_end":2220,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96172,"byte_end":96198,"line_start":2221,"line_end":2221,"column_start":5,"column_end":31}},{"value":"/ let (x, y) = (vec![1, 2, 3, 4], vec![5, 6]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96203,"byte_end":96251,"line_start":2222,"line_end":2222,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<i32> = x.into_par_iter().interleave_shortest(y).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96256,"byte_end":96329,"line_start":2223,"line_end":2223,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(r, vec![1, 5, 2, 6, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96334,"byte_end":96373,"line_start":2224,"line_end":2224,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96378,"byte_end":96385,"line_start":2225,"line_end":2225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97592,"byte_end":97598,"line_start":2254,"line_end":2254,"column_start":8,"column_end":14},"name":"chunks","qualname":"::iter::IndexedParallelIterator::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Split an iterator up into fixed-size chunks.","sig":null,"attributes":[{"value":"/ Split an iterator up into fixed-size chunks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96670,"byte_end":96718,"line_start":2234,"line_end":2234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96723,"byte_end":96726,"line_start":2235,"line_end":2235,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator that returns `Vec`s of the given number of elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96731,"byte_end":96807,"line_start":2236,"line_end":2236,"column_start":5,"column_end":81}},{"value":"/ If the number of elements in the iterator is not divisible by `chunk_size`,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96812,"byte_end":96891,"line_start":2237,"line_end":2237,"column_start":5,"column_end":84}},{"value":"/ the last chunk may be shorter than `chunk_size`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96896,"byte_end":96948,"line_start":2238,"line_end":2238,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96953,"byte_end":96956,"line_start":2239,"line_end":2239,"column_start":5,"column_end":8}},{"value":"/ See also [`par_chunks()`] and [`par_chunks_mut()`] for similar behavior on","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":96961,"byte_end":97039,"line_start":2240,"line_end":2240,"column_start":5,"column_end":83}},{"value":"/ slices, without having to allocate intermediate `Vec`s for the chunks.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97044,"byte_end":97118,"line_start":2241,"line_end":2241,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97123,"byte_end":97126,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ [`par_chunks()`]: ../slice/trait.ParallelSlice.html#method.par_chunks","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97131,"byte_end":97204,"line_start":2243,"line_end":2243,"column_start":5,"column_end":78}},{"value":"/ [`par_chunks_mut()`]: ../slice/trait.ParallelSliceMut.html#method.par_chunks_mut","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97209,"byte_end":97293,"line_start":2244,"line_end":2244,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97298,"byte_end":97301,"line_start":2245,"line_end":2245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97306,"byte_end":97320,"line_start":2246,"line_end":2246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97325,"byte_end":97328,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97333,"byte_end":97340,"line_start":2248,"line_end":2248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97345,"byte_end":97371,"line_start":2249,"line_end":2249,"column_start":5,"column_end":31}},{"value":"/ let a = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97376,"byte_end":97424,"line_start":2250,"line_end":2250,"column_start":5,"column_end":53}},{"value":"/ let r: Vec<Vec<i32>> = a.into_par_iter().chunks(3).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97429,"byte_end":97494,"line_start":2251,"line_end":2251,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(r, vec![vec![1,2,3], vec![4,5,6], vec![7,8,9], vec![10]]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97499,"byte_end":97572,"line_start":2252,"line_end":2252,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97577,"byte_end":97584,"line_start":2253,"line_end":2253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98210,"byte_end":98213,"line_start":2273,"line_end":2273,"column_start":8,"column_end":11},"name":"cmp","qualname":"::iter::IndexedParallelIterator::cmp","value":"pub fn cmp<I>(Self, I) -> Ordering where I: IntoParallelIterator<Item =\nSelf::Item>, I::Iter: IndexedParallelIterator, Self::Item: Ord","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97756,"byte_end":97840,"line_start":2259,"line_end":2259,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97845,"byte_end":97857,"line_start":2260,"line_end":2260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97862,"byte_end":97865,"line_start":2261,"line_end":2261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97870,"byte_end":97884,"line_start":2262,"line_end":2262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97889,"byte_end":97892,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97897,"byte_end":97904,"line_start":2264,"line_end":2264,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97909,"byte_end":97935,"line_start":2265,"line_end":2265,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97940,"byte_end":97970,"line_start":2266,"line_end":2266,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97975,"byte_end":97978,"line_start":2267,"line_end":2267,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1, 2, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":97983,"byte_end":98009,"line_start":2268,"line_end":2268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 3, 0]), Less);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98014,"byte_end":98069,"line_start":2269,"line_end":2269,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2, 3]), Equal);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98074,"byte_end":98130,"line_start":2270,"line_end":2270,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(x.par_iter().cmp(&vec![1, 2]), Greater);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98135,"byte_end":98190,"line_start":2271,"line_end":2271,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98195,"byte_end":98202,"line_start":2272,"line_end":2272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99442,"byte_end":99453,"line_start":2313,"line_end":2313,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::iter::IndexedParallelIterator::partial_cmp","value":"pub fn partial_cmp<I>(Self, I) -> Option<Ordering> where\nI: IntoParallelIterator, I::Iter: IndexedParallelIterator,\nSelf::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this `ParallelIterator` with those of\n another.","sig":null,"attributes":[{"value":"/ Lexicographically compares the elements of this `ParallelIterator` with those of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98828,"byte_end":98912,"line_start":2297,"line_end":2297,"column_start":5,"column_end":89}},{"value":"/ another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98917,"byte_end":98929,"line_start":2298,"line_end":2298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98934,"byte_end":98937,"line_start":2299,"line_end":2299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98942,"byte_end":98956,"line_start":2300,"line_end":2300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98961,"byte_end":98964,"line_start":2301,"line_end":2301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98969,"byte_end":98976,"line_start":2302,"line_end":2302,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":98981,"byte_end":99007,"line_start":2303,"line_end":2303,"column_start":5,"column_end":31}},{"value":"/ use std::cmp::Ordering::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99012,"byte_end":99042,"line_start":2304,"line_end":2304,"column_start":5,"column_end":35}},{"value":"/ use std::f64::NAN;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99047,"byte_end":99069,"line_start":2305,"line_end":2305,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99074,"byte_end":99077,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ let x = vec![1.0, 2.0, 3.0];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99082,"byte_end":99114,"line_start":2307,"line_end":2307,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 3.0, 0.0]), Some(Less));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99119,"byte_end":99194,"line_start":2308,"line_end":2308,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0, 3.0]), Some(Equal));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99199,"byte_end":99275,"line_start":2309,"line_end":2309,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, 2.0]), Some(Greater));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99280,"byte_end":99353,"line_start":2310,"line_end":2310,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(x.par_iter().partial_cmp(&vec![1.0, NAN]), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99358,"byte_end":99422,"line_start":2311,"line_end":2311,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":99427,"byte_end":99434,"line_start":2312,"line_end":2312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100232,"byte_end":100234,"line_start":2339,"line_end":2339,"column_start":8,"column_end":10},"name":"eq","qualname":"::iter::IndexedParallelIterator::eq","value":"pub fn eq<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are equal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100129,"byte_end":100186,"line_start":2337,"line_end":2337,"column_start":5,"column_end":62}},{"value":"/ are equal to those of another","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100191,"byte_end":100224,"line_start":2338,"line_end":2338,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100736,"byte_end":100738,"line_start":2356,"line_end":2356,"column_start":8,"column_end":10},"name":"ne","qualname":"::iter::IndexedParallelIterator::ne","value":"pub fn ne<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialEq<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are unequal to those of another\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100631,"byte_end":100688,"line_start":2354,"line_end":2354,"column_start":5,"column_end":62}},{"value":"/ are unequal to those of another","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100693,"byte_end":100728,"line_start":2355,"line_end":2355,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101055,"byte_end":101057,"line_start":2367,"line_end":2367,"column_start":8,"column_end":10},"name":"lt","qualname":"::iter::IndexedParallelIterator::lt","value":"pub fn lt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically less than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100932,"byte_end":100989,"line_start":2365,"line_end":2365,"column_start":5,"column_end":62}},{"value":"/ are lexicographically less than those of another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":100994,"byte_end":101047,"line_start":2366,"line_end":2366,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101396,"byte_end":101398,"line_start":2378,"line_end":2378,"column_start":8,"column_end":10},"name":"le","qualname":"::iter::IndexedParallelIterator::le","value":"pub fn le<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101284,"byte_end":101341,"line_start":2376,"line_end":2376,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101346,"byte_end":101388,"line_start":2377,"line_end":2377,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101806,"byte_end":101808,"line_start":2390,"line_end":2390,"column_start":8,"column_end":10},"name":"gt","qualname":"::iter::IndexedParallelIterator::gt","value":"pub fn gt<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are lexicographically greater than those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101680,"byte_end":101737,"line_start":2388,"line_end":2388,"column_start":5,"column_end":62}},{"value":"/ are lexicographically greater than those of another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":101742,"byte_end":101798,"line_start":2389,"line_end":2389,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102150,"byte_end":102152,"line_start":2401,"line_end":2401,"column_start":8,"column_end":10},"name":"ge","qualname":"::iter::IndexedParallelIterator::ge","value":"pub fn ge<I>(Self, I) -> bool where I: IntoParallelIterator,\nI::Iter: IndexedParallelIterator, Self::Item: PartialOrd<I::Item>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Determines if the elements of this `ParallelIterator`\n are less or equal to those of another.\n","sig":null,"attributes":[{"value":"/ Determines if the elements of this `ParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102038,"byte_end":102095,"line_start":2399,"line_end":2399,"column_start":5,"column_end":62}},{"value":"/ are less or equal to those of another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102100,"byte_end":102142,"line_start":2400,"line_end":2400,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102806,"byte_end":102815,"line_start":2426,"line_end":2426,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::iter::IndexedParallelIterator::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Yields an index along with each item.","sig":null,"attributes":[{"value":"/ Yields an index along with each item.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102437,"byte_end":102478,"line_start":2411,"line_end":2411,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102483,"byte_end":102486,"line_start":2412,"line_end":2412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102491,"byte_end":102505,"line_start":2413,"line_end":2413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102510,"byte_end":102513,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102518,"byte_end":102525,"line_start":2415,"line_end":2415,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102530,"byte_end":102556,"line_start":2416,"line_end":2416,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102561,"byte_end":102564,"line_start":2417,"line_end":2417,"column_start":5,"column_end":8}},{"value":"/ let chars = vec!['a', 'b', 'c'];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102569,"byte_end":102605,"line_start":2418,"line_end":2418,"column_start":5,"column_end":41}},{"value":"/ let result: Vec<_> = chars","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102610,"byte_end":102640,"line_start":2419,"line_end":2419,"column_start":5,"column_end":35}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102645,"byte_end":102669,"line_start":2420,"line_end":2420,"column_start":5,"column_end":29}},{"value":"/     .enumerate()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102674,"byte_end":102694,"line_start":2421,"line_end":2421,"column_start":5,"column_end":25}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102699,"byte_end":102718,"line_start":2422,"line_end":2422,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102723,"byte_end":102726,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [(0, 'a'), (1, 'b'), (2, 'c')]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102731,"byte_end":102786,"line_start":2424,"line_end":2424,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102791,"byte_end":102798,"line_start":2425,"line_end":2425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103218,"byte_end":103222,"line_start":2444,"line_end":2444,"column_start":8,"column_end":12},"name":"skip","qualname":"::iter::IndexedParallelIterator::skip","value":"pub fn skip(Self, usize) -> Skip<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Creates an iterator that skips the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that skips the first `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102883,"byte_end":102941,"line_start":2430,"line_end":2430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102946,"byte_end":102949,"line_start":2431,"line_end":2431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102954,"byte_end":102968,"line_start":2432,"line_end":2432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102973,"byte_end":102976,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102981,"byte_end":102988,"line_start":2434,"line_end":2434,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":102993,"byte_end":103019,"line_start":2435,"line_end":2435,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103024,"byte_end":103027,"line_start":2436,"line_end":2436,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103032,"byte_end":103065,"line_start":2437,"line_end":2437,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103070,"byte_end":103094,"line_start":2438,"line_end":2438,"column_start":5,"column_end":29}},{"value":"/     .skip(95)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103099,"byte_end":103116,"line_start":2439,"line_end":2439,"column_start":5,"column_end":22}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103121,"byte_end":103140,"line_start":2440,"line_end":2440,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103145,"byte_end":103148,"line_start":2441,"line_end":2441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [95, 96, 97, 98, 99]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103153,"byte_end":103198,"line_start":2442,"line_end":2442,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103203,"byte_end":103210,"line_start":2443,"line_end":2443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103623,"byte_end":103627,"line_start":2462,"line_end":2462,"column_start":8,"column_end":12},"name":"take","qualname":"::iter::IndexedParallelIterator::take","value":"pub fn take(Self, usize) -> Take<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Creates an iterator that yields the first `n` elements.","sig":null,"attributes":[{"value":"/ Creates an iterator that yields the first `n` elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103293,"byte_end":103352,"line_start":2448,"line_end":2448,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103357,"byte_end":103360,"line_start":2449,"line_end":2449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103365,"byte_end":103379,"line_start":2450,"line_end":2450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103384,"byte_end":103387,"line_start":2451,"line_end":2451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103392,"byte_end":103399,"line_start":2452,"line_end":2452,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103404,"byte_end":103430,"line_start":2453,"line_end":2453,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103435,"byte_end":103438,"line_start":2454,"line_end":2454,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..100)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103443,"byte_end":103476,"line_start":2455,"line_end":2455,"column_start":5,"column_end":38}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103481,"byte_end":103505,"line_start":2456,"line_end":2456,"column_start":5,"column_end":29}},{"value":"/     .take(5)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103510,"byte_end":103526,"line_start":2457,"line_end":2457,"column_start":5,"column_end":21}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103531,"byte_end":103550,"line_start":2458,"line_end":2458,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103555,"byte_end":103558,"line_start":2459,"line_end":2459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103563,"byte_end":103603,"line_start":2460,"line_end":2460,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103608,"byte_end":103615,"line_start":2461,"line_end":2461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104341,"byte_end":104353,"line_start":2484,"line_end":2484,"column_start":8,"column_end":20},"name":"position_any","qualname":"::iter::IndexedParallelIterator::position_any","value":"pub fn position_any<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Searches for **some** item in the parallel iterator that\n matches the given predicate, and returns its index.  Like\n `ParallelIterator::find_any`, the parallel search will not\n necessarily find the **first** match, and once a match is\n found we'll attempt to stop processing any more.","sig":null,"attributes":[{"value":"/ Searches for **some** item in the parallel iterator that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103698,"byte_end":103758,"line_start":2466,"line_end":2466,"column_start":5,"column_end":65}},{"value":"/ matches the given predicate, and returns its index.  Like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103763,"byte_end":103824,"line_start":2467,"line_end":2467,"column_start":5,"column_end":66}},{"value":"/ `ParallelIterator::find_any`, the parallel search will not","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103829,"byte_end":103891,"line_start":2468,"line_end":2468,"column_start":5,"column_end":67}},{"value":"/ necessarily find the **first** match, and once a match is","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103896,"byte_end":103957,"line_start":2469,"line_end":2469,"column_start":5,"column_end":66}},{"value":"/ found we'll attempt to stop processing any more.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":103962,"byte_end":104014,"line_start":2470,"line_end":2470,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104019,"byte_end":104022,"line_start":2471,"line_end":2471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104027,"byte_end":104041,"line_start":2472,"line_end":2472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104046,"byte_end":104049,"line_start":2473,"line_end":2473,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104054,"byte_end":104061,"line_start":2474,"line_end":2474,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104066,"byte_end":104092,"line_start":2475,"line_end":2475,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104097,"byte_end":104100,"line_start":2476,"line_end":2476,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104105,"byte_end":104130,"line_start":2477,"line_end":2477,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104135,"byte_end":104138,"line_start":2478,"line_end":2478,"column_start":5,"column_end":8}},{"value":"/ let i = a.par_iter().position_any(|&x| x == 3).expect(\"found\");","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104143,"byte_end":104210,"line_start":2479,"line_end":2479,"column_start":5,"column_end":72}},{"value":"/ assert!(i == 2 || i == 3);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104215,"byte_end":104245,"line_start":2480,"line_end":2480,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104250,"byte_end":104253,"line_start":2481,"line_end":2481,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_any(|&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104258,"byte_end":104321,"line_start":2482,"line_end":2482,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104326,"byte_end":104333,"line_start":2483,"line_end":2483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105594,"byte_end":105608,"line_start":2521,"line_end":2521,"column_start":8,"column_end":22},"name":"position_first","qualname":"::iter::IndexedParallelIterator::position_first","value":"pub fn position_first<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Searches for the sequentially **first** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **first** item in the parallel iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104652,"byte_end":104725,"line_start":2497,"line_end":2497,"column_start":5,"column_end":78}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104730,"byte_end":104790,"line_start":2498,"line_end":2498,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104795,"byte_end":104798,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_first`, once a match is found,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104803,"byte_end":104866,"line_start":2500,"line_end":2500,"column_start":5,"column_end":68}},{"value":"/ all attempts to the right of the match will be stopped, while","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104871,"byte_end":104936,"line_start":2501,"line_end":2501,"column_start":5,"column_end":70}},{"value":"/ attempts to the left must continue in case an earlier match","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":104941,"byte_end":105004,"line_start":2502,"line_end":2502,"column_start":5,"column_end":68}},{"value":"/ is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105009,"byte_end":105022,"line_start":2503,"line_end":2503,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105027,"byte_end":105030,"line_start":2504,"line_end":2504,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105035,"byte_end":105106,"line_start":2505,"line_end":2505,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"first\" may be nebulous.  If you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105111,"byte_end":105182,"line_start":2506,"line_end":2506,"column_start":5,"column_end":76}},{"value":"/ just want the first match that discovered anywhere in the iterator,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105187,"byte_end":105258,"line_start":2507,"line_end":2507,"column_start":5,"column_end":76}},{"value":"/ `position_any` is a better choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105263,"byte_end":105301,"line_start":2508,"line_end":2508,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105306,"byte_end":105309,"line_start":2509,"line_end":2509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105314,"byte_end":105328,"line_start":2510,"line_end":2510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105333,"byte_end":105336,"line_start":2511,"line_end":2511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105341,"byte_end":105348,"line_start":2512,"line_end":2512,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105353,"byte_end":105379,"line_start":2513,"line_end":2513,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105384,"byte_end":105387,"line_start":2514,"line_end":2514,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105392,"byte_end":105417,"line_start":2515,"line_end":2515,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105422,"byte_end":105425,"line_start":2516,"line_end":2516,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 3), Some(2));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105430,"byte_end":105496,"line_start":2517,"line_end":2517,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105501,"byte_end":105504,"line_start":2518,"line_end":2518,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_first(|&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105509,"byte_end":105574,"line_start":2519,"line_end":2519,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105579,"byte_end":105586,"line_start":2520,"line_end":2520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106815,"byte_end":106828,"line_start":2558,"line_end":2558,"column_start":8,"column_end":21},"name":"position_last","qualname":"::iter::IndexedParallelIterator::position_last","value":"pub fn position_last<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) ->\nbool + Sync + Send","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Searches for the sequentially **last** item in the parallel iterator\n that matches the given predicate, and returns its index.","sig":null,"attributes":[{"value":"/ Searches for the sequentially **last** item in the parallel iterator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105909,"byte_end":105981,"line_start":2534,"line_end":2534,"column_start":5,"column_end":77}},{"value":"/ that matches the given predicate, and returns its index.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":105986,"byte_end":106046,"line_start":2535,"line_end":2535,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106051,"byte_end":106054,"line_start":2536,"line_end":2536,"column_start":5,"column_end":8}},{"value":"/ Like `ParallelIterator::find_last`, once a match is found,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106059,"byte_end":106121,"line_start":2537,"line_end":2537,"column_start":5,"column_end":67}},{"value":"/ all attempts to the left of the match will be stopped, while","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106126,"byte_end":106190,"line_start":2538,"line_end":2538,"column_start":5,"column_end":69}},{"value":"/ attempts to the right must continue in case a later match","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106195,"byte_end":106256,"line_start":2539,"line_end":2539,"column_start":5,"column_end":66}},{"value":"/ is found.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106261,"byte_end":106274,"line_start":2540,"line_end":2540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106279,"byte_end":106282,"line_start":2541,"line_end":2541,"column_start":5,"column_end":8}},{"value":"/ Note that not all parallel iterators have a useful order, much like","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106287,"byte_end":106358,"line_start":2542,"line_end":2542,"column_start":5,"column_end":76}},{"value":"/ sequential `HashMap` iteration, so \"last\" may be nebulous.  When the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106363,"byte_end":106435,"line_start":2543,"line_end":2543,"column_start":5,"column_end":77}},{"value":"/ order doesn't actually matter to you, `position_any` is a better","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106440,"byte_end":106508,"line_start":2544,"line_end":2544,"column_start":5,"column_end":73}},{"value":"/ choice.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106513,"byte_end":106524,"line_start":2545,"line_end":2545,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106529,"byte_end":106532,"line_start":2546,"line_end":2546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106537,"byte_end":106551,"line_start":2547,"line_end":2547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106556,"byte_end":106559,"line_start":2548,"line_end":2548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106564,"byte_end":106571,"line_start":2549,"line_end":2549,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106576,"byte_end":106602,"line_start":2550,"line_end":2550,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106607,"byte_end":106610,"line_start":2551,"line_end":2551,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 3];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106615,"byte_end":106640,"line_start":2552,"line_end":2552,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106645,"byte_end":106648,"line_start":2553,"line_end":2553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 3), Some(3));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106653,"byte_end":106718,"line_start":2554,"line_end":2554,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106723,"byte_end":106726,"line_start":2555,"line_end":2555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.par_iter().position_last(|&x| x == 100), None);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106731,"byte_end":106795,"line_start":2556,"line_end":2556,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":106800,"byte_end":106807,"line_start":2557,"line_end":2557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107316,"byte_end":107324,"line_start":2576,"line_end":2576,"column_start":8,"column_end":16},"name":"position","qualname":"::iter::IndexedParallelIterator::position","value":"pub fn position<P>(Self, P) -> Option<usize> where P: Fn(Self::Item) -> bool +\nSync + Send","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"parallel `position` does not search in order -- use `position_any`, \\\\\n                `position_first`, or `position_last`\")","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107147,"byte_end":107308,"line_start":2572,"line_end":2575,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107833,"byte_end":107836,"line_start":2598,"line_end":2598,"column_start":8,"column_end":11},"name":"rev","qualname":"::iter::IndexedParallelIterator::rev","value":"pub fn rev(Self) -> Rev<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Produces a new iterator with the elements of this iterator in\n reverse order.","sig":null,"attributes":[{"value":"/ Produces a new iterator with the elements of this iterator in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107478,"byte_end":107543,"line_start":2583,"line_end":2583,"column_start":5,"column_end":70}},{"value":"/ reverse order.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107548,"byte_end":107566,"line_start":2584,"line_end":2584,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107571,"byte_end":107574,"line_start":2585,"line_end":2585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107579,"byte_end":107593,"line_start":2586,"line_end":2586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107598,"byte_end":107601,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107606,"byte_end":107613,"line_start":2588,"line_end":2588,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107618,"byte_end":107644,"line_start":2589,"line_end":2589,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107649,"byte_end":107652,"line_start":2590,"line_end":2590,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = (0..5)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107657,"byte_end":107688,"line_start":2591,"line_end":2591,"column_start":5,"column_end":36}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107693,"byte_end":107717,"line_start":2592,"line_end":2592,"column_start":5,"column_end":29}},{"value":"/     .rev()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107722,"byte_end":107736,"line_start":2593,"line_end":2593,"column_start":5,"column_end":19}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107741,"byte_end":107760,"line_start":2594,"line_end":2594,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107765,"byte_end":107768,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, [4, 3, 2, 1, 0]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107773,"byte_end":107813,"line_start":2596,"line_end":2596,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107818,"byte_end":107825,"line_start":2597,"line_end":2597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108653,"byte_end":108665,"line_start":2624,"line_end":2624,"column_start":8,"column_end":20},"name":"with_min_len","qualname":"::iter::IndexedParallelIterator::with_min_len","value":"pub fn with_min_len(Self, usize) -> MinLen<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Sets the minimum length of iterators desired to process in each\n thread.  Rayon will not split any smaller than this length, but\n of course an iterator could already be smaller to begin with.","sig":null,"attributes":[{"value":"/ Sets the minimum length of iterators desired to process in each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107892,"byte_end":107959,"line_start":2602,"line_end":2602,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will not split any smaller than this length, but","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":107964,"byte_end":108031,"line_start":2603,"line_end":2603,"column_start":5,"column_end":72}},{"value":"/ of course an iterator could already be smaller to begin with.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108036,"byte_end":108101,"line_start":2604,"line_end":2604,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108106,"byte_end":108109,"line_start":2605,"line_end":2605,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use greater of the two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108114,"byte_end":108183,"line_start":2606,"line_end":2606,"column_start":5,"column_end":74}},{"value":"/ minimums.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108188,"byte_end":108201,"line_start":2607,"line_end":2607,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108206,"byte_end":108272,"line_start":2608,"line_end":2608,"column_start":5,"column_end":71}},{"value":"/ their own minimum length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108277,"byte_end":108306,"line_start":2609,"line_end":2609,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108311,"byte_end":108314,"line_start":2610,"line_end":2610,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108319,"byte_end":108333,"line_start":2611,"line_end":2611,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108338,"byte_end":108341,"line_start":2612,"line_end":2612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108346,"byte_end":108353,"line_start":2613,"line_end":2613,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108358,"byte_end":108384,"line_start":2614,"line_end":2614,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108389,"byte_end":108392,"line_start":2615,"line_end":2615,"column_start":5,"column_end":8}},{"value":"/ let min = (0..1_000_000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108397,"byte_end":108425,"line_start":2616,"line_end":2616,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108430,"byte_end":108454,"line_start":2617,"line_end":2617,"column_start":5,"column_end":29}},{"value":"/     .with_min_len(1234)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108459,"byte_end":108486,"line_start":2618,"line_end":2618,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108491,"byte_end":108566,"line_start":2619,"line_end":2619,"column_start":5,"column_end":80}},{"value":"/     .min().unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108571,"byte_end":108595,"line_start":2620,"line_end":2620,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108600,"byte_end":108603,"line_start":2621,"line_end":2621,"column_start":5,"column_end":8}},{"value":"/ assert!(min >= 1234);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108608,"byte_end":108633,"line_start":2622,"line_end":2622,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108638,"byte_end":108645,"line_start":2623,"line_end":2623,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109604,"byte_end":109616,"line_start":2652,"line_end":2652,"column_start":8,"column_end":20},"name":"with_max_len","qualname":"::iter::IndexedParallelIterator::with_max_len","value":"pub fn with_max_len(Self, usize) -> MaxLen<Self>","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Sets the maximum length of iterators desired to process in each\n thread.  Rayon will try to split at least below this length,\n unless that would put it below the length from `with_min_len()`.\n For example, given min=10 and max=15, a length of 16 will not be\n split any further.","sig":null,"attributes":[{"value":"/ Sets the maximum length of iterators desired to process in each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108744,"byte_end":108811,"line_start":2628,"line_end":2628,"column_start":5,"column_end":72}},{"value":"/ thread.  Rayon will try to split at least below this length,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108816,"byte_end":108880,"line_start":2629,"line_end":2629,"column_start":5,"column_end":69}},{"value":"/ unless that would put it below the length from `with_min_len()`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108885,"byte_end":108953,"line_start":2630,"line_end":2630,"column_start":5,"column_end":73}},{"value":"/ For example, given min=10 and max=15, a length of 16 will not be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":108958,"byte_end":109026,"line_start":2631,"line_end":2631,"column_start":5,"column_end":73}},{"value":"/ split any further.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109031,"byte_end":109053,"line_start":2632,"line_end":2632,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109058,"byte_end":109061,"line_start":2633,"line_end":2633,"column_start":5,"column_end":8}},{"value":"/ Producers like `zip` and `interleave` will use lesser of the two","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109066,"byte_end":109134,"line_start":2634,"line_end":2634,"column_start":5,"column_end":73}},{"value":"/ maximums.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109139,"byte_end":109152,"line_start":2635,"line_end":2635,"column_start":5,"column_end":18}},{"value":"/ Chained iterators and iterators inside `flat_map` may each use","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109157,"byte_end":109223,"line_start":2636,"line_end":2636,"column_start":5,"column_end":71}},{"value":"/ their own maximum length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109228,"byte_end":109257,"line_start":2637,"line_end":2637,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109262,"byte_end":109265,"line_start":2638,"line_end":2638,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109270,"byte_end":109284,"line_start":2639,"line_end":2639,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109289,"byte_end":109292,"line_start":2640,"line_end":2640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109297,"byte_end":109304,"line_start":2641,"line_end":2641,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109309,"byte_end":109335,"line_start":2642,"line_end":2642,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109340,"byte_end":109343,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ let max = (0..1_000_000)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109348,"byte_end":109376,"line_start":2644,"line_end":2644,"column_start":5,"column_end":33}},{"value":"/     .into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109381,"byte_end":109405,"line_start":2645,"line_end":2645,"column_start":5,"column_end":29}},{"value":"/     .with_max_len(1234)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109410,"byte_end":109437,"line_start":2646,"line_end":2646,"column_start":5,"column_end":32}},{"value":"/     .fold(|| 0, |acc, _| acc + 1) // count how many are in this segment","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109442,"byte_end":109517,"line_start":2647,"line_end":2647,"column_start":5,"column_end":80}},{"value":"/     .max().unwrap();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109522,"byte_end":109546,"line_start":2648,"line_end":2648,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109551,"byte_end":109554,"line_start":2649,"line_end":2649,"column_start":5,"column_end":8}},{"value":"/ assert!(max <= 1234);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109559,"byte_end":109584,"line_start":2650,"line_end":2650,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109589,"byte_end":109596,"line_start":2651,"line_end":2651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110104,"byte_end":110107,"line_start":2670,"line_end":2670,"column_start":8,"column_end":11},"name":"len","qualname":"::iter::IndexedParallelIterator::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Produces an exact count of how many items this iterator will\n produce, presuming no panic occurs.","sig":null,"attributes":[{"value":"/ Produces an exact count of how many items this iterator will","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109695,"byte_end":109759,"line_start":2656,"line_end":2656,"column_start":5,"column_end":69}},{"value":"/ produce, presuming no panic occurs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109764,"byte_end":109803,"line_start":2657,"line_end":2657,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109808,"byte_end":109811,"line_start":2658,"line_end":2658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109816,"byte_end":109830,"line_start":2659,"line_end":2659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109835,"byte_end":109838,"line_start":2660,"line_end":2660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109843,"byte_end":109850,"line_start":2661,"line_end":2661,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109855,"byte_end":109881,"line_start":2662,"line_end":2662,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109886,"byte_end":109889,"line_start":2663,"line_end":2663,"column_start":5,"column_end":8}},{"value":"/ let par_iter = (0..100).into_par_iter().zip(vec![0; 10]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109894,"byte_end":109955,"line_start":2664,"line_end":2664,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(par_iter.len(), 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":109960,"byte_end":109995,"line_start":2665,"line_end":2665,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110000,"byte_end":110003,"line_start":2666,"line_end":2666,"column_start":5,"column_end":8}},{"value":"/ let vec: Vec<_> = par_iter.collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110008,"byte_end":110049,"line_start":2667,"line_end":2667,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec.len(), 10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110054,"byte_end":110084,"line_start":2668,"line_end":2668,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110089,"byte_end":110096,"line_start":2669,"line_end":2669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110807,"byte_end":110812,"line_start":2686,"line_end":2686,"column_start":8,"column_end":13},"name":"drive","qualname":"::iter::IndexedParallelIterator::drive","value":"pub fn drive<C: Consumer<Self::Item>>(Self, C) -> C::Result","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110130,"byte_end":110194,"line_start":2672,"line_end":2672,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110199,"byte_end":110255,"line_start":2673,"line_end":2673,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110260,"byte_end":110263,"line_start":2674,"line_end":2674,"column_start":5,"column_end":8}},{"value":"/ This method causes the iterator `self` to start producing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110268,"byte_end":110329,"line_start":2675,"line_end":2675,"column_start":5,"column_end":66}},{"value":"/ items and to feed them to the consumer `consumer` one by one.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110334,"byte_end":110399,"line_start":2676,"line_end":2676,"column_start":5,"column_end":70}},{"value":"/ It may split the consumer before doing so to create the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110404,"byte_end":110463,"line_start":2677,"line_end":2677,"column_start":5,"column_end":64}},{"value":"/ opportunity to produce in parallel. If a split does happen, it","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110468,"byte_end":110534,"line_start":2678,"line_end":2678,"column_start":5,"column_end":71}},{"value":"/ will inform the consumer of the index where the split should","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110539,"byte_end":110603,"line_start":2679,"line_end":2679,"column_start":5,"column_end":69}},{"value":"/ occur (unlike `ParallelIterator::drive_unindexed()`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110608,"byte_end":110665,"line_start":2680,"line_end":2680,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110670,"byte_end":110673,"line_start":2681,"line_end":2681,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110678,"byte_end":110744,"line_start":2682,"line_end":2682,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110749,"byte_end":110763,"line_start":2683,"line_end":2683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110768,"byte_end":110771,"line_start":2684,"line_end":2684,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110776,"byte_end":110799,"line_start":2685,"line_end":2685,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111588,"byte_end":111601,"line_start":2703,"line_end":2703,"column_start":8,"column_end":21},"name":"with_producer","qualname":"::iter::IndexedParallelIterator::with_producer","value":"pub fn with_producer<CB: ProducerCallback<Self::Item>>(Self, CB) -> CB::Output","parent":{"krate":0,"index":3853},"children":[],"decl_id":null,"docs":" Internal method used to define the behavior of this parallel\n iterator. You should not need to call this directly.","sig":null,"attributes":[{"value":"/ Internal method used to define the behavior of this parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110876,"byte_end":110940,"line_start":2688,"line_end":2688,"column_start":5,"column_end":69}},{"value":"/ iterator. You should not need to call this directly.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":110945,"byte_end":111001,"line_start":2689,"line_end":2689,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111006,"byte_end":111009,"line_start":2690,"line_end":2690,"column_start":5,"column_end":8}},{"value":"/ This method converts the iterator into a producer P and then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111014,"byte_end":111078,"line_start":2691,"line_end":2691,"column_start":5,"column_end":69}},{"value":"/ invokes `callback.callback()` with P. Note that the type of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111083,"byte_end":111146,"line_start":2692,"line_end":2692,"column_start":5,"column_end":68}},{"value":"/ this producer is not defined as part of the API, since","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111151,"byte_end":111209,"line_start":2693,"line_end":2693,"column_start":5,"column_end":63}},{"value":"/ `callback` must be defined generically for all producers. This","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111214,"byte_end":111280,"line_start":2694,"line_end":2694,"column_start":5,"column_end":71}},{"value":"/ allows the producer type to contain references; it also means","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111285,"byte_end":111350,"line_start":2695,"line_end":2695,"column_start":5,"column_end":70}},{"value":"/ that parallel iterators can adjust that type without causing a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111355,"byte_end":111421,"line_start":2696,"line_end":2696,"column_start":5,"column_end":71}},{"value":"/ breaking change.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111426,"byte_end":111446,"line_start":2697,"line_end":2697,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111451,"byte_end":111454,"line_start":2698,"line_end":2698,"column_start":5,"column_end":8}},{"value":"/ See the [README] for more details on the internals of parallel","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111459,"byte_end":111525,"line_start":2699,"line_end":2699,"column_start":5,"column_end":71}},{"value":"/ iterators.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111530,"byte_end":111544,"line_start":2700,"line_end":2700,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111549,"byte_end":111552,"line_start":2701,"line_end":2701,"column_start":5,"column_end":8}},{"value":"/ [README]: README.md","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111557,"byte_end":111580,"line_start":2702,"line_end":2702,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3915},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112751,"byte_end":112771,"line_start":2742,"line_end":2742,"column_start":11,"column_end":31},"name":"FromParallelIterator","qualname":"::iter::FromParallelIterator","value":"FromParallelIterator<T>","parent":null,"children":[{"krate":0,"index":3917}],"decl_id":null,"docs":" `FromParallelIterator` implements the creation of a collection\n from a [`ParallelIterator`]. By implementing\n `FromParallelIterator` for a given type, you define how it will be\n created from an iterator.","sig":null,"attributes":[{"value":"/ `FromParallelIterator` implements the creation of a collection","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111674,"byte_end":111740,"line_start":2706,"line_end":2706,"column_start":1,"column_end":67}},{"value":"/ from a [`ParallelIterator`]. By implementing","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111741,"byte_end":111789,"line_start":2707,"line_end":2707,"column_start":1,"column_end":49}},{"value":"/ `FromParallelIterator` for a given type, you define how it will be","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111790,"byte_end":111860,"line_start":2708,"line_end":2708,"column_start":1,"column_end":71}},{"value":"/ created from an iterator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111861,"byte_end":111890,"line_start":2709,"line_end":2709,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111891,"byte_end":111894,"line_start":2710,"line_end":2710,"column_start":1,"column_end":4}},{"value":"/ `FromParallelIterator` is used through [`ParallelIterator`]'s [`collect()`] method.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111895,"byte_end":111982,"line_start":2711,"line_end":2711,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111983,"byte_end":111986,"line_start":2712,"line_end":2712,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":111987,"byte_end":112040,"line_start":2713,"line_end":2713,"column_start":1,"column_end":54}},{"value":"/ [`collect()`]: trait.ParallelIterator.html#method.collect","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112041,"byte_end":112102,"line_start":2714,"line_end":2714,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112103,"byte_end":112106,"line_start":2715,"line_end":2715,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112107,"byte_end":112121,"line_start":2716,"line_end":2716,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112122,"byte_end":112125,"line_start":2717,"line_end":2717,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromParallelIterator` for your type:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112126,"byte_end":112180,"line_start":2718,"line_end":2718,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112181,"byte_end":112184,"line_start":2719,"line_end":2719,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112185,"byte_end":112192,"line_start":2720,"line_end":2720,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112193,"byte_end":112219,"line_start":2721,"line_end":2721,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112220,"byte_end":112237,"line_start":2722,"line_end":2722,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112238,"byte_end":112241,"line_start":2723,"line_end":2723,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112242,"byte_end":112264,"line_start":2724,"line_end":2724,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112265,"byte_end":112285,"line_start":2725,"line_end":2725,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112286,"byte_end":112291,"line_start":2726,"line_end":2726,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112292,"byte_end":112295,"line_start":2727,"line_end":2727,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> FromParallelIterator<T> for BlackHole {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112296,"byte_end":112353,"line_start":2728,"line_end":2728,"column_start":1,"column_end":58}},{"value":"/     fn from_par_iter<I>(par_iter: I) -> Self","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112354,"byte_end":112402,"line_start":2729,"line_end":2729,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112403,"byte_end":112454,"line_start":2730,"line_end":2730,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112455,"byte_end":112464,"line_start":2731,"line_end":2731,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112465,"byte_end":112517,"line_start":2732,"line_end":2732,"column_start":1,"column_end":53}},{"value":"/         BlackHole {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112518,"byte_end":112541,"line_start":2733,"line_end":2733,"column_start":1,"column_end":24}},{"value":"/             mass: par_iter.count() * mem::size_of::<T>(),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112542,"byte_end":112603,"line_start":2734,"line_end":2734,"column_start":1,"column_end":62}},{"value":"/         }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112604,"byte_end":112617,"line_start":2735,"line_end":2735,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112618,"byte_end":112627,"line_start":2736,"line_end":2736,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112628,"byte_end":112633,"line_start":2737,"line_end":2737,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112634,"byte_end":112637,"line_start":2738,"line_end":2738,"column_start":1,"column_end":4}},{"value":"/ let bh: BlackHole = (0i32..1000).into_par_iter().collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112638,"byte_end":112701,"line_start":2739,"line_end":2739,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112702,"byte_end":112732,"line_start":2740,"line_end":2740,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112733,"byte_end":112740,"line_start":2741,"line_end":2741,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113749,"byte_end":113762,"line_start":2761,"line_end":2761,"column_start":8,"column_end":21},"name":"from_par_iter","qualname":"::iter::FromParallelIterator::from_par_iter","value":"pub fn from_par_iter<I>(I) -> Self where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3915},"children":[],"decl_id":null,"docs":" Creates an instance of the collection from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Creates an instance of the collection from the parallel iterator `par_iter`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112800,"byte_end":112880,"line_start":2746,"line_end":2746,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112885,"byte_end":112888,"line_start":2747,"line_end":2747,"column_start":5,"column_end":8}},{"value":"/ If your collection is not naturally parallel, the easiest (and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112893,"byte_end":112959,"line_start":2748,"line_end":2748,"column_start":5,"column_end":71}},{"value":"/ fastest) way to do this is often to collect `par_iter` into a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":112964,"byte_end":113029,"line_start":2749,"line_end":2749,"column_start":5,"column_end":70}},{"value":"/ [`LinkedList`] or other intermediate data structure and then","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113034,"byte_end":113098,"line_start":2750,"line_end":2750,"column_start":5,"column_end":69}},{"value":"/ sequentially extend your collection. However, a more 'native'","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113103,"byte_end":113168,"line_start":2751,"line_end":2751,"column_start":5,"column_end":70}},{"value":"/ technique is to use the [`par_iter.fold`] or","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113173,"byte_end":113221,"line_start":2752,"line_end":2752,"column_start":5,"column_end":53}},{"value":"/ [`par_iter.fold_with`] methods to create the collection.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113226,"byte_end":113286,"line_start":2753,"line_end":2753,"column_start":5,"column_end":65}},{"value":"/ Alternatively, if your collection is 'natively' parallel, you","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113291,"byte_end":113356,"line_start":2754,"line_end":2754,"column_start":5,"column_end":70}},{"value":"/ can use `par_iter.for_each` to process each element in turn.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113361,"byte_end":113425,"line_start":2755,"line_end":2755,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113430,"byte_end":113433,"line_start":2756,"line_end":2756,"column_start":5,"column_end":8}},{"value":"/ [`LinkedList`]: https://doc.rust-lang.org/std/collections/struct.LinkedList.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113438,"byte_end":113522,"line_start":2757,"line_end":2757,"column_start":5,"column_end":89}},{"value":"/ [`par_iter.fold`]: trait.ParallelIterator.html#method.fold","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113527,"byte_end":113589,"line_start":2758,"line_end":2758,"column_start":5,"column_end":67}},{"value":"/ [`par_iter.fold_with`]: trait.ParallelIterator.html#method.fold_with","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113594,"byte_end":113666,"line_start":2759,"line_end":2759,"column_start":5,"column_end":77}},{"value":"/ [`par_iter.for_each`]: trait.ParallelIterator.html#method.for_each","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113671,"byte_end":113741,"line_start":2760,"line_end":2760,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":3919},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114661,"byte_end":114675,"line_start":2797,"line_end":2797,"column_start":11,"column_end":25},"name":"ParallelExtend","qualname":"::iter::ParallelExtend","value":"ParallelExtend<T>","parent":null,"children":[{"krate":0,"index":3921}],"decl_id":null,"docs":" `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","sig":null,"attributes":[{"value":"/ `ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113843,"byte_end":113934,"line_start":2766,"line_end":2766,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113935,"byte_end":113938,"line_start":2767,"line_end":2767,"column_start":1,"column_end":4}},{"value":"/ [`ParallelIterator`]: trait.ParallelIterator.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113939,"byte_end":113992,"line_start":2768,"line_end":2768,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113993,"byte_end":113996,"line_start":2769,"line_end":2769,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":113997,"byte_end":114011,"line_start":2770,"line_end":2770,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114012,"byte_end":114015,"line_start":2771,"line_end":2771,"column_start":1,"column_end":4}},{"value":"/ Implementing `ParallelExtend` for your type:","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114016,"byte_end":114064,"line_start":2772,"line_end":2772,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114065,"byte_end":114068,"line_start":2773,"line_end":2773,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114069,"byte_end":114076,"line_start":2774,"line_end":2774,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114077,"byte_end":114103,"line_start":2775,"line_end":2775,"column_start":1,"column_end":27}},{"value":"/ use std::mem;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114104,"byte_end":114121,"line_start":2776,"line_end":2776,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114122,"byte_end":114125,"line_start":2777,"line_end":2777,"column_start":1,"column_end":4}},{"value":"/ struct BlackHole {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114126,"byte_end":114148,"line_start":2778,"line_end":2778,"column_start":1,"column_end":23}},{"value":"/     mass: usize,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114149,"byte_end":114169,"line_start":2779,"line_end":2779,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114170,"byte_end":114175,"line_start":2780,"line_end":2780,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114176,"byte_end":114179,"line_start":2781,"line_end":2781,"column_start":1,"column_end":4}},{"value":"/ impl<T: Send> ParallelExtend<T> for BlackHole {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114180,"byte_end":114231,"line_start":2782,"line_end":2782,"column_start":1,"column_end":52}},{"value":"/     fn par_extend<I>(&mut self, par_iter: I)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114232,"byte_end":114280,"line_start":2783,"line_end":2783,"column_start":1,"column_end":49}},{"value":"/         where I: IntoParallelIterator<Item = T>","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114281,"byte_end":114332,"line_start":2784,"line_end":2784,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114333,"byte_end":114342,"line_start":2785,"line_end":2785,"column_start":1,"column_end":10}},{"value":"/         let par_iter = par_iter.into_par_iter();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114343,"byte_end":114395,"line_start":2786,"line_end":2786,"column_start":1,"column_end":53}},{"value":"/         self.mass += par_iter.count() * mem::size_of::<T>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114396,"byte_end":114460,"line_start":2787,"line_end":2787,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114461,"byte_end":114470,"line_start":2788,"line_end":2788,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114471,"byte_end":114476,"line_start":2789,"line_end":2789,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114477,"byte_end":114480,"line_start":2790,"line_end":2790,"column_start":1,"column_end":4}},{"value":"/ let mut bh = BlackHole { mass: 0 };","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114481,"byte_end":114520,"line_start":2791,"line_end":2791,"column_start":1,"column_end":40}},{"value":"/ bh.par_extend(0i32..1000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114521,"byte_end":114551,"line_start":2792,"line_end":2792,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(bh.mass, 4000);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114552,"byte_end":114582,"line_start":2793,"line_end":2793,"column_start":1,"column_end":31}},{"value":"/ bh.par_extend(0i64..10);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114583,"byte_end":114611,"line_start":2794,"line_end":2794,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(bh.mass, 4080);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114612,"byte_end":114642,"line_start":2795,"line_end":2795,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114643,"byte_end":114650,"line_start":2796,"line_end":2796,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115103,"byte_end":115113,"line_start":2814,"line_end":2814,"column_start":8,"column_end":18},"name":"par_extend","qualname":"::iter::ParallelExtend::par_extend","value":"pub fn par_extend<I>(&mut Self, I) where I: IntoParallelIterator<Item = T>","parent":{"krate":0,"index":3919},"children":[],"decl_id":null,"docs":" Extends an instance of the collection with the elements drawn\n from the parallel iterator `par_iter`.","sig":null,"attributes":[{"value":"/ Extends an instance of the collection with the elements drawn","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114704,"byte_end":114769,"line_start":2801,"line_end":2801,"column_start":5,"column_end":70}},{"value":"/ from the parallel iterator `par_iter`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114774,"byte_end":114816,"line_start":2802,"line_end":2802,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114821,"byte_end":114824,"line_start":2803,"line_end":2803,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114829,"byte_end":114843,"line_start":2804,"line_end":2804,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114848,"byte_end":114851,"line_start":2805,"line_end":2805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114856,"byte_end":114863,"line_start":2806,"line_end":2806,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114868,"byte_end":114894,"line_start":2807,"line_end":2807,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114899,"byte_end":114902,"line_start":2808,"line_end":2808,"column_start":5,"column_end":8}},{"value":"/ let mut vec = vec![];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114907,"byte_end":114932,"line_start":2809,"line_end":2809,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend(0..5);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114937,"byte_end":114962,"line_start":2810,"line_end":2810,"column_start":5,"column_end":30}},{"value":"/ vec.par_extend((0..5).into_par_iter().map(|i| i * i));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":114967,"byte_end":115025,"line_start":2811,"line_end":2811,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(vec, [0, 1, 2, 3, 4, 0, 1, 4, 9, 16]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115030,"byte_end":115083,"line_start":2812,"line_end":2812,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115088,"byte_end":115095,"line_start":2813,"line_end":2813,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3924},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115485,"byte_end":115488,"line_start":2825,"line_end":2825,"column_start":15,"column_end":18},"name":"Try","qualname":"::iter::private::Try","value":"Try","parent":null,"children":[{"krate":0,"index":5712},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929}],"decl_id":null,"docs":" Clone of `std::ops::Try`.","sig":null,"attributes":[{"value":"/ Clone of `std::ops::Try`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115364,"byte_end":115393,"line_start":2822,"line_end":2822,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115398,"byte_end":115401,"line_start":2823,"line_end":2823,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115406,"byte_end":115470,"line_start":2824,"line_end":2824,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115530,"byte_end":115532,"line_start":2828,"line_end":2828,"column_start":14,"column_end":16},"name":"Ok","qualname":"::iter::private::Try::Ok","value":"type Ok;","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3926},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115547,"byte_end":115552,"line_start":2829,"line_end":2829,"column_start":14,"column_end":19},"name":"Error","qualname":"::iter::private::Try::Error","value":"type Error;","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115565,"byte_end":115576,"line_start":2830,"line_end":2830,"column_start":12,"column_end":23},"name":"into_result","qualname":"::iter::private::Try::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115628,"byte_end":115635,"line_start":2831,"line_end":2831,"column_start":12,"column_end":19},"name":"from_ok","qualname":"::iter::private::Try::from_ok","value":"pub fn from_ok(Self::Ok) -> Self","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115669,"byte_end":115679,"line_start":2832,"line_end":2832,"column_start":12,"column_end":22},"name":"from_error","qualname":"::iter::private::Try::from_error","value":"pub fn from_error(Self::Error) -> Self","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"option","qualname":"::option","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","parent":null,"children":[{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":5715},{"krate":0,"index":5721},{"krate":0,"index":5718},{"krate":0,"index":3952},{"krate":0,"index":3957},{"krate":0,"index":3963},{"krate":0,"index":5724},{"krate":0,"index":5728},{"krate":0,"index":3970},{"krate":0,"index":3974},{"krate":0,"index":5740},{"krate":0,"index":5732},{"krate":0,"index":5747},{"krate":0,"index":5751},{"krate":0,"index":3980},{"krate":0,"index":5763},{"krate":0,"index":5755},{"krate":0,"index":3986},{"krate":0,"index":3989},{"krate":0,"index":3995}],"decl_id":null,"docs":" Parallel iterator types for [options][std::option]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [options][std::option]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365391,"byte_end":365445,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365446,"byte_end":365449,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365450,"byte_end":365528,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365529,"byte_end":365567,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365568,"byte_end":365571,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::option]: https://doc.rust-lang.org/stable/std/option/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365572,"byte_end":365635,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366238,"byte_end":366246,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::option::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5717}],"decl_id":null,"docs":" A parallel iterator over the value in [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over the value in [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365730,"byte_end":365806,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365807,"byte_end":365810,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365811,"byte_end":365893,"line_start":15,"line_end":15,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365894,"byte_end":365897,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365898,"byte_end":365961,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365962,"byte_end":365965,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":365966,"byte_end":366035,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366036,"byte_end":366116,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ [`into_par_iter`]: ../iter/trait.IntoParallelIterator.html#tymethod.into_par_iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366117,"byte_end":366202,"line_start":21,"line_end":21,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":5724},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367888,"byte_end":367892,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"Iter","qualname":"::option::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5727}],"decl_id":null,"docs":" A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367393,"byte_end":367475,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367476,"byte_end":367479,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367480,"byte_end":367562,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367563,"byte_end":367566,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367567,"byte_end":367625,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367626,"byte_end":367629,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367630,"byte_end":367699,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367700,"byte_end":367780,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/ [`par_iter`]: ../iter/trait.IntoParallelRefIterator.html#tymethod.par_iter","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367781,"byte_end":367859,"line_start":86,"line_end":86,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368931,"byte_end":368938,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::option::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5750}],"decl_id":null,"docs":" A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","sig":null,"attributes":[{"value":"/ A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368413,"byte_end":368503,"line_start":116,"line_end":116,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368504,"byte_end":368507,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The iterator yields one value if the [`Option`] is a [`Some`], otherwise none.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368508,"byte_end":368590,"line_start":118,"line_end":118,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368591,"byte_end":368594,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368595,"byte_end":368657,"line_start":120,"line_end":120,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368658,"byte_end":368661,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368662,"byte_end":368731,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ [`Some`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.Some","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368732,"byte_end":368812,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ [`par_iter_mut`]: ../iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":368813,"byte_end":368902,"line_start":124,"line_end":124,"column_start":1,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015}],"decl_id":null,"docs":" The rayon prelude imports the various `ParallelIterator` traits.\n The intention is that one can include `use rayon::prelude::*` and\n have easy access to the various traits and methods you will need.\n","sig":null,"attributes":[{"value":"/ The rayon prelude imports the various `ParallelIterator` traits.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":370835,"byte_end":370903,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ The intention is that one can include `use rayon::prelude::*` and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":370904,"byte_end":370973,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"/ have easy access to the various traits and methods you will need.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/prelude.rs","byte_start":370974,"byte_end":371043,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::range","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":5770},{"krate":0,"index":5776},{"krate":0,"index":5773},{"krate":0,"index":4021},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4035},{"krate":0,"index":5779},{"krate":0,"index":5784},{"krate":0,"index":5790},{"krate":0,"index":5795},{"krate":0,"index":5800},{"krate":0,"index":5806},{"krate":0,"index":5811},{"krate":0,"index":5816},{"krate":0,"index":5822},{"krate":0,"index":5827},{"krate":0,"index":5832},{"krate":0,"index":5838},{"krate":0,"index":5843},{"krate":0,"index":5848},{"krate":0,"index":5854},{"krate":0,"index":5859},{"krate":0,"index":5864},{"krate":0,"index":5870},{"krate":0,"index":5875},{"krate":0,"index":5880},{"krate":0,"index":5886},{"krate":0,"index":5891},{"krate":0,"index":5896},{"krate":0,"index":5902},{"krate":0,"index":5907},{"krate":0,"index":5909},{"krate":0,"index":5917},{"krate":0,"index":5922},{"krate":0,"index":5924},{"krate":0,"index":5932},{"krate":0,"index":5937},{"krate":0,"index":5939},{"krate":0,"index":5947},{"krate":0,"index":5952},{"krate":0,"index":5954},{"krate":0,"index":5962}],"decl_id":null,"docs":" Parallel iterator types for [ranges][std::range],\n the type for values created by `a..b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [ranges][std::range],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371422,"byte_end":371475,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ the type for values created by `a..b` expressions","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371476,"byte_end":371529,"line_start":2,"line_end":2,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371530,"byte_end":371533,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371534,"byte_end":371612,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371613,"byte_end":371656,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371657,"byte_end":371660,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371661,"byte_end":371668,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371669,"byte_end":371695,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371696,"byte_end":371699,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..100u64).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371700,"byte_end":371739,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/                    .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371740,"byte_end":371770,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371771,"byte_end":371774,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371775,"byte_end":371824,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..100).sum::<u64>(), r);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371825,"byte_end":371866,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371867,"byte_end":371874,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371875,"byte_end":371878,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.Range.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":371879,"byte_end":371949,"line_start":17,"line_end":17,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5770},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372754,"byte_end":372758,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5772}],"decl_id":null,"docs":" Parallel iterator over a range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over a range, implemented for all integer types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372025,"byte_end":372095,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372096,"byte_end":372099,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372100,"byte_end":372168,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ which is not implemented for `u64`, `i64`, `u128`, or `i128`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372169,"byte_end":372234,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372235,"byte_end":372238,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372239,"byte_end":372246,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372247,"byte_end":372273,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372274,"byte_end":372277,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = (0..25usize).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372278,"byte_end":372318,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/                   .zip(0..25usize)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372319,"byte_end":372357,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372358,"byte_end":372423,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372424,"byte_end":372466,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/                   .sum::<usize>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372467,"byte_end":372505,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372506,"byte_end":372509,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let s = (0..25usize).zip(0..25)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372510,"byte_end":372545,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372546,"byte_end":372611,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372612,"byte_end":372654,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372655,"byte_end":372684,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372685,"byte_end":372688,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372689,"byte_end":372710,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372711,"byte_end":372718,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range_inclusive","qualname":"::range_inclusive","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","parent":null,"children":[{"krate":0,"index":4040},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":5967},{"krate":0,"index":5973},{"krate":0,"index":5970},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":5982},{"krate":0,"index":5976},{"krate":0,"index":5993},{"krate":0,"index":5987},{"krate":0,"index":6004},{"krate":0,"index":5998},{"krate":0,"index":6015},{"krate":0,"index":6009},{"krate":0,"index":6020},{"krate":0,"index":6025},{"krate":0,"index":6030},{"krate":0,"index":6035},{"krate":0,"index":6040},{"krate":0,"index":6045},{"krate":0,"index":6050},{"krate":0,"index":6055}],"decl_id":null,"docs":" Parallel iterator types for [inclusive ranges][std::range],\n the type for values created by `a..=b` expressions","sig":null,"attributes":[{"value":"/ Parallel iterator types for [inclusive ranges][std::range],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380158,"byte_end":380221,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/ the type for values created by `a..=b` expressions","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380222,"byte_end":380276,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380277,"byte_end":380280,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you have","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380281,"byte_end":380359,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ need to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380360,"byte_end":380403,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380404,"byte_end":380407,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380408,"byte_end":380415,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380416,"byte_end":380442,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380443,"byte_end":380446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let r = (0..=100u64).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380447,"byte_end":380487,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"/                     .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380488,"byte_end":380519,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380520,"byte_end":380523,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // compare result with sequential calculation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380524,"byte_end":380573,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ assert_eq!((0..=100).sum::<u64>(), r);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380574,"byte_end":380616,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380617,"byte_end":380624,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380625,"byte_end":380628,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [std::range]: https://doc.rust-lang.org/core/ops/struct.RangeInclusive.html","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380629,"byte_end":380708,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5967},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381514,"byte_end":381518,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Iter","qualname":"::range_inclusive::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5969}],"decl_id":null,"docs":" Parallel iterator over an inclusive range, implemented for all integer types.","sig":null,"attributes":[{"value":"/ Parallel iterator over an inclusive range, implemented for all integer types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380777,"byte_end":380858,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380859,"byte_end":380862,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ **Note:** The `zip` operation requires `IndexedParallelIterator`","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380863,"byte_end":380931,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ which is only implemented for `u8`, `i8`, `u16`, and `i16`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380932,"byte_end":380995,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":380996,"byte_end":380999,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381000,"byte_end":381007,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381008,"byte_end":381034,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381035,"byte_end":381038,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let p = (0..=25u16).into_par_iter()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381039,"byte_end":381078,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/                   .zip(0..=25u16)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381079,"byte_end":381116,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381117,"byte_end":381182,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381183,"byte_end":381225,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/                   .sum::<u16>();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381226,"byte_end":381262,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381263,"byte_end":381266,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let s = (0..=25u16).zip(0..=25u16)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381267,"byte_end":381305,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/                   .filter(|&(x, y)| x % 5 == 0 || y % 5 == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381306,"byte_end":381371,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/                   .map(|(x, y)| x * y)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381372,"byte_end":381414,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/                   .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381415,"byte_end":381444,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381445,"byte_end":381448,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(p, s);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381449,"byte_end":381470,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381471,"byte_end":381478,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":6060},{"krate":0,"index":6066},{"krate":0,"index":6063},{"krate":0,"index":4059},{"krate":0,"index":6076},{"krate":0,"index":6069},{"krate":0,"index":6082},{"krate":0,"index":6086},{"krate":0,"index":4065},{"krate":0,"index":4069},{"krate":0,"index":6098},{"krate":0,"index":6090},{"krate":0,"index":6105},{"krate":0,"index":6109},{"krate":0,"index":4076},{"krate":0,"index":6121},{"krate":0,"index":6113},{"krate":0,"index":4083}],"decl_id":null,"docs":" Parallel iterator types for [results][std::result]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [results][std::result]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386088,"byte_end":386142,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386143,"byte_end":386146,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386147,"byte_end":386225,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386226,"byte_end":386264,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386265,"byte_end":386268,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::result]: https://doc.rust-lang.org/stable/std/result/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386269,"byte_end":386332,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6060},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386477,"byte_end":386485,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::result::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6062}],"decl_id":null,"docs":" Parallel iterator over a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386406,"byte_end":386441,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386927,"byte_end":386931,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Iter","qualname":"::result::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6085}],"decl_id":null,"docs":" Parallel iterator over an immutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over an immutable reference to a result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386837,"byte_end":386898,"line_start":36,"line_end":36,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6105},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":387558,"byte_end":387565,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::result::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6108}],"decl_id":null,"docs":" Parallel iterator over a mutable reference to a result\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a mutable reference to a result","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":387471,"byte_end":387529,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":4094},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4177},{"krate":0,"index":4259},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":6861},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4311},{"krate":0,"index":4317},{"krate":0,"index":4323},{"krate":0,"index":6150},{"krate":0,"index":6154},{"krate":0,"index":4329},{"krate":0,"index":4333},{"krate":0,"index":4340},{"krate":0,"index":4348},{"krate":0,"index":4352},{"krate":0,"index":6158},{"krate":0,"index":6163},{"krate":0,"index":4359},{"krate":0,"index":4363},{"krate":0,"index":4370},{"krate":0,"index":4378},{"krate":0,"index":4383},{"krate":0,"index":6167},{"krate":0,"index":6172},{"krate":0,"index":4390},{"krate":0,"index":4394},{"krate":0,"index":4401},{"krate":0,"index":4409},{"krate":0,"index":4414},{"krate":0,"index":6176},{"krate":0,"index":6180},{"krate":0,"index":4421},{"krate":0,"index":4428},{"krate":0,"index":4436},{"krate":0,"index":4440},{"krate":0,"index":6184},{"krate":0,"index":6189},{"krate":0,"index":4447},{"krate":0,"index":4454},{"krate":0,"index":4462},{"krate":0,"index":4467},{"krate":0,"index":4474},{"krate":0,"index":4480},{"krate":0,"index":4485},{"krate":0,"index":4490},{"krate":0,"index":4497},{"krate":0,"index":4508},{"krate":0,"index":4514},{"krate":0,"index":4519},{"krate":0,"index":4526}],"decl_id":null,"docs":" Parallel iterator types for [slices][std::slice]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [slices][std::slice]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389487,"byte_end":389539,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389540,"byte_end":389543,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389544,"byte_end":389622,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389623,"byte_end":389661,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389662,"byte_end":389665,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::slice]: https://doc.rust-lang.org/stable/std/slice/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":389666,"byte_end":389727,"line_start":6,"line_end":6,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":4270},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390048,"byte_end":390061,"line_start":25,"line_end":25,"column_start":11,"column_end":24},"name":"ParallelSlice","qualname":"::slice::ParallelSlice","value":"ParallelSlice<T: Sync>","parent":null,"children":[{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4275},{"krate":0,"index":4276}],"decl_id":null,"docs":" Parallel extensions for slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for slices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390002,"byte_end":390037,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390180,"byte_end":390197,"line_start":28,"line_end":28,"column_start":8,"column_end":25},"name":"as_parallel_slice","qualname":"::slice::ParallelSlice::as_parallel_slice","value":"pub fn as_parallel_slice(&Self) -> &[T]","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a plain slice, which is used to implement the rest of the\n parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain slice, which is used to implement the rest of the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390077,"byte_end":390146,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ parallel methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390151,"byte_end":390172,"line_start":27,"line_end":27,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390630,"byte_end":390639,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"par_split","qualname":"::slice::ParallelSlice::par_split","value":"pub fn par_split<P>(&Self, P) -> Split<, T, P> where P: Fn(&T) -> bool +\nSync + Send","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over subslices separated by elements that\n match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over subslices separated by elements that","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390219,"byte_end":390292,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ match the separator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390297,"byte_end":390321,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390326,"byte_end":390329,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390334,"byte_end":390348,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390353,"byte_end":390356,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390361,"byte_end":390368,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390373,"byte_end":390399,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/ let smallest = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390404,"byte_end":390456,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/     .par_split(|i| *i == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390461,"byte_end":390492,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/     .map(|numbers| numbers.iter().min().unwrap())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390497,"byte_end":390550,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/     .min();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390555,"byte_end":390570,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(Some(&1), smallest);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390575,"byte_end":390610,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390615,"byte_end":390622,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391173,"byte_end":391184,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"par_windows","qualname":"::slice::ParallelSlice::par_windows","value":"pub fn par_windows(&Self, usize) -> Windows<, T>","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over all contiguous windows of length\n `window_size`. The windows overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over all contiguous windows of length","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390845,"byte_end":390914,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ `window_size`. The windows overlap.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390919,"byte_end":390958,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390963,"byte_end":390966,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390971,"byte_end":390985,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390990,"byte_end":390993,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":390998,"byte_end":391005,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391010,"byte_end":391036,"line_start":59,"line_end":59,"column_start":5,"column_end":31}},{"value":"/ let windows: Vec<_> = [1, 2, 3].par_windows(2).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391041,"byte_end":391102,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(vec![[1, 2], [2, 3]], windows);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391107,"byte_end":391153,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391158,"byte_end":391165,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391897,"byte_end":391907,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"par_chunks","qualname":"::slice::ParallelSlice::par_chunks","value":"pub fn par_chunks(&Self, usize) -> Chunks<, T>","parent":{"krate":0,"index":4270},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391341,"byte_end":391410,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks do not overlap.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391415,"byte_end":391463,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391468,"byte_end":391471,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391476,"byte_end":391541,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391546,"byte_end":391617,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391622,"byte_end":391667,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391672,"byte_end":391675,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391680,"byte_end":391694,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391699,"byte_end":391702,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391707,"byte_end":391714,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391719,"byte_end":391745,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ let chunks: Vec<_> = [1, 2, 3, 4, 5].par_chunks(2).collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391750,"byte_end":391815,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(chunks, vec![&[1, 2][..], &[3, 4], &[5]]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391820,"byte_end":391877,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":391882,"byte_end":391889,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4280},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392296,"byte_end":392312,"line_start":101,"line_end":101,"column_start":11,"column_end":27},"name":"ParallelSliceMut","qualname":"::slice::ParallelSliceMut","value":"ParallelSliceMut<T: Send>","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4298}],"decl_id":null,"docs":" Parallel extensions for mutable slices.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for mutable slices.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392242,"byte_end":392285,"line_start":100,"line_end":100,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392439,"byte_end":392460,"line_start":104,"line_end":104,"column_start":8,"column_end":29},"name":"as_parallel_slice_mut","qualname":"::slice::ParallelSliceMut::as_parallel_slice_mut","value":"pub fn as_parallel_slice_mut(&mut Self) -> &mut [T]","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a plain mutable slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain mutable slice, which is used to implement the rest of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392328,"byte_end":392401,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392406,"byte_end":392431,"line_start":103,"line_end":103,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392909,"byte_end":392922,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"par_split_mut","qualname":"::slice::ParallelSliceMut::par_split_mut","value":"pub fn par_split_mut<P>(&mut Self, P) -> SplitMut<, T, P> where P: Fn(&T) ->\nbool + Sync + Send","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over mutable subslices separated by\n elements that match the separator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over mutable subslices separated by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392490,"byte_end":392557,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ elements that match the separator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392562,"byte_end":392600,"line_start":107,"line_end":107,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392605,"byte_end":392608,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392613,"byte_end":392627,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392632,"byte_end":392635,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392640,"byte_end":392647,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392652,"byte_end":392678,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 0, 2, 4, 8, 0, 3, 6, 9];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392683,"byte_end":392737,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ array.par_split_mut(|i| *i == 0)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392742,"byte_end":392778,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392783,"byte_end":392827,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [3, 2, 1, 0, 8, 4, 2, 0, 9, 6, 3]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392832,"byte_end":392889,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":392894,"byte_end":392901,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393748,"byte_end":393762,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"par_chunks_mut","qualname":"::slice::ParallelSliceMut::par_chunks_mut","value":"pub fn par_chunks_mut(&mut Self, usize) -> ChunksMut<, T>","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over at most `chunk_size` elements of\n `self` at a time. The chunks are mutable and do not overlap.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over at most `chunk_size` elements of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393142,"byte_end":393211,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ `self` at a time. The chunks are mutable and do not overlap.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393216,"byte_end":393280,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393285,"byte_end":393288,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If the number of elements in the iterator is not divisible by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393293,"byte_end":393358,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/ `chunk_size`, the last chunk may be shorter than `chunk_size`.  All","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393363,"byte_end":393434,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ other chunks will have that exact length.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393439,"byte_end":393484,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393489,"byte_end":393492,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393497,"byte_end":393511,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393516,"byte_end":393519,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393524,"byte_end":393531,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393536,"byte_end":393562,"line_start":138,"line_end":138,"column_start":5,"column_end":31}},{"value":"/ let mut array = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393567,"byte_end":393603,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ array.par_chunks_mut(2)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393608,"byte_end":393635,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/      .for_each(|slice| slice.reverse());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393640,"byte_end":393684,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(array, [2, 1, 4, 3, 5]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393689,"byte_end":393728,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393733,"byte_end":393740,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395451,"byte_end":395459,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"par_sort","qualname":"::slice::ParallelSliceMut::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":393994,"byte_end":394026,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394031,"byte_end":394034,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394039,"byte_end":394130,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394135,"byte_end":394138,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394143,"byte_end":394236,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394241,"byte_end":394294,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable`](#method.par_sort_unstable).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394299,"byte_end":394356,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394361,"byte_end":394364,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394369,"byte_end":394397,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394402,"byte_end":394405,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394410,"byte_end":394473,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394478,"byte_end":394531,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394536,"byte_end":394628,"line_start":164,"line_end":164,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394633,"byte_end":394697,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394702,"byte_end":394705,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394710,"byte_end":394803,"line_start":167,"line_end":167,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394808,"byte_end":394858,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394863,"byte_end":394866,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394871,"byte_end":394965,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":394970,"byte_end":395064,"line_start":171,"line_end":171,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395069,"byte_end":395165,"line_start":172,"line_end":172,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395170,"byte_end":395234,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395239,"byte_end":395242,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395247,"byte_end":395261,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395266,"byte_end":395269,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395274,"byte_end":395281,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395286,"byte_end":395312,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395317,"byte_end":395320,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395325,"byte_end":395359,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395364,"byte_end":395367,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ v.par_sort();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395372,"byte_end":395389,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395394,"byte_end":395431,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395436,"byte_end":395443,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397185,"byte_end":397196,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"par_sort_by","qualname":"::slice::ParallelSliceMut::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395574,"byte_end":395633,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395638,"byte_end":395641,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395646,"byte_end":395737,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395742,"byte_end":395745,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395750,"byte_end":395843,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395848,"byte_end":395901,"line_start":197,"line_end":197,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by`](#method.par_sort_unstable_by).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395906,"byte_end":395969,"line_start":198,"line_end":198,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395974,"byte_end":395977,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":395982,"byte_end":396010,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396015,"byte_end":396018,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396023,"byte_end":396086,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396091,"byte_end":396144,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396149,"byte_end":396241,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396246,"byte_end":396310,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396315,"byte_end":396318,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396323,"byte_end":396416,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396421,"byte_end":396471,"line_start":208,"line_end":208,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396476,"byte_end":396479,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396484,"byte_end":396578,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396583,"byte_end":396677,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396682,"byte_end":396778,"line_start":212,"line_end":212,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396783,"byte_end":396847,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396852,"byte_end":396855,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396860,"byte_end":396874,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396879,"byte_end":396882,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396887,"byte_end":396894,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396899,"byte_end":396925,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396930,"byte_end":396933,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396938,"byte_end":396970,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":396975,"byte_end":397010,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397015,"byte_end":397050,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397055,"byte_end":397058,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397063,"byte_end":397085,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397090,"byte_end":397125,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397130,"byte_end":397165,"line_start":226,"line_end":226,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397170,"byte_end":397177,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398932,"byte_end":398947,"line_start":270,"line_end":270,"column_start":8,"column_end":23},"name":"par_sort_by_key","qualname":"::slice::ParallelSliceMut::par_sort_by_key","value":"pub fn par_sort_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) -> B + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397409,"byte_end":397472,"line_start":237,"line_end":237,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397477,"byte_end":397480,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This sort is stable (i.e. does not reorder equal elements) and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397485,"byte_end":397576,"line_start":239,"line_end":239,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397581,"byte_end":397584,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ When applicable, unstable sorting is preferred because it is generally faster than stable","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397589,"byte_end":397682,"line_start":241,"line_end":241,"column_start":5,"column_end":98}},{"value":"/ sorting and it doesn't allocate auxiliary memory.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397687,"byte_end":397740,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ See [`par_sort_unstable_by_key`](#method.par_sort_unstable_by_key).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397745,"byte_end":397816,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397821,"byte_end":397824,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397829,"byte_end":397857,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397862,"byte_end":397865,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is an adaptive merge sort inspired by","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397870,"byte_end":397933,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ [timsort](https://en.wikipedia.org/wiki/Timsort).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397938,"byte_end":397991,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/ It is designed to be very fast in cases where the slice is nearly sorted, or consists of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":397996,"byte_end":398088,"line_start":249,"line_end":249,"column_start":5,"column_end":97}},{"value":"/ two or more sorted sequences concatenated one after another.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398093,"byte_end":398157,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398162,"byte_end":398165,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Also, it allocates temporary storage the same size as `self`, but for very short slices a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398170,"byte_end":398263,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ non-allocating insertion sort is used instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398268,"byte_end":398318,"line_start":253,"line_end":253,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398323,"byte_end":398326,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ In order to sort the slice in parallel, the slice is first divided into smaller chunks and","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398331,"byte_end":398425,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ all chunks are sorted in parallel. Then, adjacent chunks that together form non-descending","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398430,"byte_end":398524,"line_start":256,"line_end":256,"column_start":5,"column_end":99}},{"value":"/ or descending runs are concatenated. Finally, the remaining chunks are merged together using","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398529,"byte_end":398625,"line_start":257,"line_end":257,"column_start":5,"column_end":101}},{"value":"/ parallel subdivision of chunks and parallel merge operation.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398630,"byte_end":398694,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398699,"byte_end":398702,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398707,"byte_end":398721,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398726,"byte_end":398729,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398734,"byte_end":398741,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398746,"byte_end":398772,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398777,"byte_end":398780,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398785,"byte_end":398822,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398827,"byte_end":398830,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_by_key(|k| k.abs());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398835,"byte_end":398870,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398875,"byte_end":398912,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":398917,"byte_end":398924,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4294},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400392,"byte_end":400409,"line_start":309,"line_end":309,"column_start":8,"column_end":25},"name":"par_sort_unstable","qualname":"::slice::ParallelSliceMut::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel, but may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel, but may not preserve the order of equal elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399121,"byte_end":399203,"line_start":278,"line_end":278,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399208,"byte_end":399211,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399216,"byte_end":399311,"line_start":280,"line_end":280,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399316,"byte_end":399348,"line_start":281,"line_end":281,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399353,"byte_end":399356,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399361,"byte_end":399389,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399394,"byte_end":399397,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399402,"byte_end":399493,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399498,"byte_end":399585,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399590,"byte_end":399680,"line_start":287,"line_end":287,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399685,"byte_end":399719,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399724,"byte_end":399727,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399732,"byte_end":399824,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399829,"byte_end":399889,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399894,"byte_end":399897,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399902,"byte_end":399991,"line_start":293,"line_end":293,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":399996,"byte_end":400089,"line_start":294,"line_end":294,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400094,"byte_end":400107,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400112,"byte_end":400115,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400120,"byte_end":400166,"line_start":297,"line_end":297,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400171,"byte_end":400174,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400179,"byte_end":400193,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400198,"byte_end":400201,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400206,"byte_end":400213,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400218,"byte_end":400244,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400249,"byte_end":400252,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5, 4, 1, -3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400257,"byte_end":400291,"line_start":304,"line_end":304,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400296,"byte_end":400299,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400304,"byte_end":400330,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(v, [-5, -3, 1, 2, 4]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400335,"byte_end":400372,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400377,"byte_end":400384,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401960,"byte_end":401980,"line_start":351,"line_end":351,"column_start":8,"column_end":28},"name":"par_sort_unstable_by","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a comparator function, but may not preserve the order of\n equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a comparator function, but may not preserve the order of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400524,"byte_end":400617,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ equal elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400622,"byte_end":400641,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400646,"byte_end":400649,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400654,"byte_end":400749,"line_start":319,"line_end":319,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400754,"byte_end":400786,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400791,"byte_end":400794,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400799,"byte_end":400827,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400832,"byte_end":400835,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400840,"byte_end":400931,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":400936,"byte_end":401023,"line_start":325,"line_end":325,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401028,"byte_end":401118,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401123,"byte_end":401157,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401162,"byte_end":401165,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401170,"byte_end":401262,"line_start":329,"line_end":329,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401267,"byte_end":401327,"line_start":330,"line_end":330,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401332,"byte_end":401335,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401340,"byte_end":401429,"line_start":332,"line_end":332,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401434,"byte_end":401527,"line_start":333,"line_end":333,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401532,"byte_end":401545,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401550,"byte_end":401553,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401558,"byte_end":401604,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401609,"byte_end":401612,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401617,"byte_end":401631,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401636,"byte_end":401639,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401644,"byte_end":401651,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401656,"byte_end":401682,"line_start":341,"line_end":341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401687,"byte_end":401690,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let mut v = [5, 4, 1, 3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401695,"byte_end":401727,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ v.par_sort_unstable_by(|a, b| a.cmp(b));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401732,"byte_end":401776,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401781,"byte_end":401816,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401821,"byte_end":401824,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // reverse sorting","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401829,"byte_end":401851,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/ v.par_sort_unstable_by(|a, b| b.cmp(a));","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401856,"byte_end":401900,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [5, 4, 3, 2, 1]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401905,"byte_end":401940,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":401945,"byte_end":401952,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4298},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403524,"byte_end":403548,"line_start":392,"line_end":392,"column_start":8,"column_end":32},"name":"par_sort_unstable_by_key","qualname":"::slice::ParallelSliceMut::par_sort_unstable_by_key","value":"pub fn par_sort_unstable_by_key<B, F>(&mut Self, F) where B: Ord, F: Fn(&T) ->\nB + Sync","parent":{"krate":0,"index":4280},"children":[],"decl_id":null,"docs":" Sorts the slice in parallel with a key extraction function, but may not preserve the order\n of equal elements.","sig":null,"attributes":[{"value":"/ Sorts the slice in parallel with a key extraction function, but may not preserve the order","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402193,"byte_end":402287,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ of equal elements.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402292,"byte_end":402314,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402319,"byte_end":402322,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This sort is unstable (i.e. may reorder equal elements), in-place (i.e. does not allocate),","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402327,"byte_end":402422,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ and `O(n log n)` worst-case.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402427,"byte_end":402459,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402464,"byte_end":402467,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Current implementation","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402472,"byte_end":402500,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402505,"byte_end":402508,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402513,"byte_end":402604,"line_start":368,"line_end":368,"column_start":5,"column_end":96}},{"value":"/ which is a quicksort variant designed to be very fast on certain kinds of patterns,","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402609,"byte_end":402696,"line_start":369,"line_end":369,"column_start":5,"column_end":92}},{"value":"/ sometimes achieving linear time. It is randomized but deterministic, and falls back to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402701,"byte_end":402791,"line_start":370,"line_end":370,"column_start":5,"column_end":95}},{"value":"/ heapsort on degenerate inputs.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402796,"byte_end":402830,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402835,"byte_end":402838,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ It is generally faster than stable sorting, except in a few special cases, e.g. when the","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402843,"byte_end":402935,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ slice consists of several concatenated sorted sequences.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":402940,"byte_end":403000,"line_start":374,"line_end":374,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403005,"byte_end":403008,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ All quicksorts work in two stages: partitioning into two halves followed by recursive","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403013,"byte_end":403102,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ calls. The partitioning phase is sequential, but the two recursive calls are performed in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403107,"byte_end":403200,"line_start":377,"line_end":377,"column_start":5,"column_end":98}},{"value":"/ parallel.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403205,"byte_end":403218,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403223,"byte_end":403226,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [pdqsort]: https://github.com/orlp/pdqsort","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403231,"byte_end":403277,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403282,"byte_end":403285,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403290,"byte_end":403304,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403309,"byte_end":403312,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403317,"byte_end":403324,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403329,"byte_end":403355,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403360,"byte_end":403363,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let mut v = [-5i32, 4, 1, -3, 2];","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403368,"byte_end":403405,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403410,"byte_end":403413,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ v.par_sort_unstable_by_key(|k| k.abs());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403418,"byte_end":403462,"line_start":389,"line_end":389,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(v, [1, 2, -3, 4, -5]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403467,"byte_end":403504,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":403509,"byte_end":403516,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6150},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":404798,"byte_end":404802,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6153}],"decl_id":null,"docs":" Parallel iterator over immutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable items in a slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":404716,"byte_end":404769,"line_start":444,"line_end":444,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6158},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406328,"byte_end":406334,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":6161},{"krate":0,"index":6162}],"decl_id":null,"docs":" Parallel iterator over immutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable non-overlapping chunks of a slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406229,"byte_end":406299,"line_start":509,"line_end":509,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408303,"byte_end":408310,"line_start":591,"line_end":591,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":6170},{"krate":0,"index":6171}],"decl_id":null,"docs":" Parallel iterator over immutable overlapping windows of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over immutable overlapping windows of a slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408207,"byte_end":408274,"line_start":589,"line_end":589,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6176},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410363,"byte_end":410370,"line_start":673,"line_end":673,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":6179}],"decl_id":null,"docs":" Parallel iterator over mutable items in a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable items in a slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410283,"byte_end":410334,"line_start":671,"line_end":671,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6184},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":411865,"byte_end":411874,"line_start":735,"line_end":735,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":6187},{"krate":0,"index":6188}],"decl_id":null,"docs":" Parallel iterator over mutable non-overlapping chunks of a slice\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable non-overlapping chunks of a slice","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":411768,"byte_end":411836,"line_start":733,"line_end":733,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":413749,"byte_end":413754,"line_start":808,"line_end":808,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479}],"decl_id":null,"docs":" Parallel iterator over slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over slices separated by a predicate","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":413679,"byte_end":413737,"line_start":807,"line_end":807,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4508},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415630,"byte_end":415638,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":4512},{"krate":0,"index":4513}],"decl_id":null,"docs":" Parallel iterator over mutable slices separated by a predicate\n","sig":null,"attributes":[{"value":"/ Parallel iterator over mutable slices separated by a predicate","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415552,"byte_end":415618,"line_start":883,"line_end":883,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4560},{"krate":0,"index":4562},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4582},{"krate":0,"index":4595},{"krate":0,"index":6196},{"krate":0,"index":6202},{"krate":0,"index":6199},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4617},{"krate":0,"index":6205},{"krate":0,"index":6211},{"krate":0,"index":6208},{"krate":0,"index":4623},{"krate":0,"index":4627},{"krate":0,"index":4632},{"krate":0,"index":6214},{"krate":0,"index":6220},{"krate":0,"index":6217},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4646},{"krate":0,"index":6223},{"krate":0,"index":6229},{"krate":0,"index":6226},{"krate":0,"index":4652},{"krate":0,"index":4655},{"krate":0,"index":4660},{"krate":0,"index":6232},{"krate":0,"index":6241},{"krate":0,"index":6237},{"krate":0,"index":4666},{"krate":0,"index":4670},{"krate":0,"index":4676},{"krate":0,"index":6245},{"krate":0,"index":6254},{"krate":0,"index":6250},{"krate":0,"index":4686},{"krate":0,"index":4692},{"krate":0,"index":4696},{"krate":0,"index":4701},{"krate":0,"index":4707},{"krate":0,"index":6258},{"krate":0,"index":6265},{"krate":0,"index":6262},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":6268},{"krate":0,"index":6275},{"krate":0,"index":6272},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":6278},{"krate":0,"index":6287},{"krate":0,"index":6283},{"krate":0,"index":4728},{"krate":0,"index":4734},{"krate":0,"index":4740},{"krate":0,"index":6291},{"krate":0,"index":6300},{"krate":0,"index":6296},{"krate":0,"index":4748},{"krate":0,"index":4755},{"krate":0,"index":4761}],"decl_id":null,"docs":" Parallel iterator types for [strings][std::str]","sig":null,"attributes":[{"value":"/ Parallel iterator types for [strings][std::str]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477188,"byte_end":477239,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477240,"byte_end":477243,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477244,"byte_end":477322,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477323,"byte_end":477361,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477362,"byte_end":477365,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note: [`ParallelString::par_split()`] and [`par_split_terminator()`]","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477366,"byte_end":477438,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ reference a `Pattern` trait which is not visible outside this crate.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477439,"byte_end":477511,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ This trait is intentionally kept private, for use only by Rayon itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477512,"byte_end":477587,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477588,"byte_end":477665,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477666,"byte_end":477669,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`ParallelString::par_split()`]: trait.ParallelString.html#method.par_split","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477670,"byte_end":477749,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`par_split_terminator()`]: trait.ParallelString.html#method.par_split_terminator","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477750,"byte_end":477835,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477836,"byte_end":477839,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::str]: https://doc.rust-lang.org/stable/std/str/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":477840,"byte_end":477897,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":4544},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479125,"byte_end":479139,"line_start":59,"line_end":59,"column_start":11,"column_end":25},"name":"ParallelString","qualname":"::str::ParallelString","value":"ParallelString","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4552},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4558}],"decl_id":null,"docs":" Parallel extensions for strings.\n","sig":null,"attributes":[{"value":"/ Parallel extensions for strings.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479078,"byte_end":479114,"line_start":58,"line_end":58,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479256,"byte_end":479274,"line_start":62,"line_end":62,"column_start":8,"column_end":26},"name":"as_parallel_string","qualname":"::str::ParallelString::as_parallel_string","value":"pub fn as_parallel_string(&Self) -> &str","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a plain string slice, which is used to implement the rest of\n the parallel methods.\n","sig":null,"attributes":[{"value":"/ Returns a plain string slice, which is used to implement the rest of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479146,"byte_end":479218,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ the parallel methods.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479223,"byte_end":479248,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479559,"byte_end":479568,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"par_chars","qualname":"::str::ParallelString::par_chars","value":"pub fn par_chars(&Self) -> Chars","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479296,"byte_end":479360,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479365,"byte_end":479368,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479373,"byte_end":479387,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479392,"byte_end":479395,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479400,"byte_end":479407,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479412,"byte_end":479438,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_chars().max_by_key(|c| *c as i32);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479443,"byte_end":479503,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(Some('o'), max);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479508,"byte_end":479539,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479544,"byte_end":479551,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479977,"byte_end":479993,"line_start":88,"line_end":88,"column_start":8,"column_end":24},"name":"par_char_indices","qualname":"::str::ParallelString::par_char_indices","value":"pub fn par_char_indices(&Self) -> CharIndices","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the characters of a string, with their positions.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the characters of a string, with their positions.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479674,"byte_end":479760,"line_start":79,"line_end":79,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479765,"byte_end":479768,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479773,"byte_end":479787,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479792,"byte_end":479795,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479800,"byte_end":479807,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479812,"byte_end":479838,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ let min = \"hello\".par_char_indices().min_by_key(|&(_i, c)| c as i32);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479843,"byte_end":479916,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Some((1, 'e')), min);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479921,"byte_end":479957,"line_start":86,"line_end":86,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":479962,"byte_end":479969,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480653,"byte_end":480662,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"par_bytes","qualname":"::str::ParallelString::par_bytes","value":"pub fn par_bytes(&Self) -> Bytes","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the bytes of a string.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the bytes of a string.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480111,"byte_end":480170,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480175,"byte_end":480178,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that multi-byte sequences (for code points greater than `U+007F`)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480183,"byte_end":480257,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ are produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480262,"byte_end":480335,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ If you would prefer an indexed iterator without that guarantee, consider","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480340,"byte_end":480416,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ `string.as_bytes().par_iter().cloned()` instead.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480421,"byte_end":480473,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480478,"byte_end":480481,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480486,"byte_end":480500,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480505,"byte_end":480508,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480513,"byte_end":480520,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480525,"byte_end":480551,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/ let max = \"hello\".par_bytes().max();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480556,"byte_end":480596,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some(b'o'), max);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480601,"byte_end":480633,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480638,"byte_end":480645,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481383,"byte_end":481399,"line_start":132,"line_end":132,"column_start":8,"column_end":24},"name":"par_encode_utf16","qualname":"::str::ParallelString::par_encode_utf16","value":"pub fn par_encode_utf16(&Self) -> EncodeUtf16","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over a string encoded as UTF-16.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over a string encoded as UTF-16.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480768,"byte_end":480832,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480837,"byte_end":480840,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that surrogate pairs (for code points greater than `U+FFFF`) are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480845,"byte_end":480918,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ produced as separate items, but will not be split across threads.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480923,"byte_end":480992,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":480997,"byte_end":481000,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481005,"byte_end":481019,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481024,"byte_end":481027,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481032,"byte_end":481039,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481044,"byte_end":481070,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481075,"byte_end":481078,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let max = \"hello\".par_encode_utf16().max();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481083,"byte_end":481130,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(b'o' as u16), max);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481135,"byte_end":481174,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481179,"byte_end":481182,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let text = \"Zażółć gęślą jaźń\";","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481187,"byte_end":481231,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let utf8_len = text.len();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481236,"byte_end":481266,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ let utf16_len = text.par_encode_utf16().count();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481271,"byte_end":481323,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ assert!(utf16_len <= utf8_len);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481328,"byte_end":481363,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481368,"byte_end":481375,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482087,"byte_end":482096,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"par_split","qualname":"::str::ParallelString::par_split","value":"pub fn par_split<P: Pattern>(&Self, P) -> Split<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings separated by a\n given character or predicate, similar to `str::split`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings separated by a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481517,"byte_end":481579,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ given character or predicate, similar to `str::split`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481584,"byte_end":481642,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481647,"byte_end":481650,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481655,"byte_end":481726,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481731,"byte_end":481808,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481813,"byte_end":481816,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481821,"byte_end":481835,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481840,"byte_end":481843,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481848,"byte_end":481855,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481860,"byte_end":481886,"line_start":147,"line_end":147,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481891,"byte_end":481933,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/    .par_split(',')","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481938,"byte_end":481960,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/    .filter_map(|s| s.trim().parse::<i32>().ok())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":481965,"byte_end":482017,"line_start":150,"line_end":150,"column_start":5,"column_end":57}},{"value":"/    .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482022,"byte_end":482036,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482041,"byte_end":482067,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482072,"byte_end":482079,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482925,"byte_end":482945,"line_start":175,"line_end":175,"column_start":8,"column_end":28},"name":"par_split_terminator","qualname":"::str::ParallelString::par_split_terminator","value":"pub fn par_split_terminator<P: Pattern>(&Self, P) -> SplitTerminator<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings terminated by a\n given character or predicate, similar to `str::split_terminator`.\n It's equivalent to `par_split`, except it doesn't produce an empty\n substring after a trailing terminator.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings terminated by a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482216,"byte_end":482279,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ given character or predicate, similar to `str::split_terminator`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482284,"byte_end":482353,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ It's equivalent to `par_split`, except it doesn't produce an empty","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482358,"byte_end":482428,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ substring after a trailing terminator.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482433,"byte_end":482475,"line_start":161,"line_end":161,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482480,"byte_end":482483,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482488,"byte_end":482559,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482564,"byte_end":482641,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482646,"byte_end":482649,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482654,"byte_end":482668,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482673,"byte_end":482676,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482681,"byte_end":482688,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482693,"byte_end":482719,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ let parts: Vec<_> = \"((1 + 3) * 2)\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482724,"byte_end":482763,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/     .par_split_terminator(|c| c == '(' || c == ')')","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482768,"byte_end":482823,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482828,"byte_end":482847,"line_start":172,"line_end":172,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![\"\", \"\", \"1 + 3\", \" * 2\"], parts);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482852,"byte_end":482905,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":482910,"byte_end":482917,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4554},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483616,"byte_end":483625,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"par_lines","qualname":"::str::ParallelString::par_lines","value":"pub fn par_lines(&Self) -> Lines","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the lines of a string, ending with an\n optional carriage return and with a newline (`\\r\\n` or just `\\n`).\n The final line ending is optional, and line endings are not included in\n the output strings.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the lines of a string, ending with an","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483087,"byte_end":483161,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ optional carriage return and with a newline (`\\r\\n` or just `\\n`).","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483166,"byte_end":483236,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ The final line ending is optional, and line endings are not included in","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483241,"byte_end":483316,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ the output strings.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483321,"byte_end":483344,"line_start":182,"line_end":182,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483349,"byte_end":483352,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483357,"byte_end":483371,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483376,"byte_end":483379,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483384,"byte_end":483391,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483396,"byte_end":483422,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/ let lengths: Vec<_> = \"hello world\\nfizbuzz\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483427,"byte_end":483475,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"/     .par_lines()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483480,"byte_end":483500,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/     .map(|l| l.len())","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483505,"byte_end":483530,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/     .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483535,"byte_end":483554,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(vec![11, 7], lengths);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483559,"byte_end":483596,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483601,"byte_end":483608,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484250,"byte_end":484270,"line_start":213,"line_end":213,"column_start":8,"column_end":28},"name":"par_split_whitespace","qualname":"::str::ParallelString::par_split_whitespace","value":"pub fn par_split_whitespace(&Self) -> SplitWhitespace","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over the sub-slices of a string that are\n separated by any amount of whitespace.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over the sub-slices of a string that are","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483700,"byte_end":483772,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ separated by any amount of whitespace.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483777,"byte_end":483819,"line_start":199,"line_end":199,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483824,"byte_end":483827,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ As with `str::split_whitespace`, 'whitespace' is defined according to","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483832,"byte_end":483905,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ the terms of the Unicode Derived Core Property `White_Space`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483910,"byte_end":483975,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483980,"byte_end":483983,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":483988,"byte_end":484002,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484007,"byte_end":484010,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484015,"byte_end":484022,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484027,"byte_end":484053,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ let longest = \"which is the longest word?\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484058,"byte_end":484104,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/     .par_split_whitespace()","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484109,"byte_end":484140,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/     .max_by_key(|word| word.len());","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484145,"byte_end":484184,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Some(\"longest\"), longest);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484189,"byte_end":484230,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484235,"byte_end":484242,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484947,"byte_end":484958,"line_start":233,"line_end":233,"column_start":8,"column_end":19},"name":"par_matches","qualname":"::str::ParallelString::par_matches","value":"pub fn par_matches<P: Pattern>(&Self, P) -> Matches<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a\n given character or predicate, similar to `str::matches`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484365,"byte_end":484425,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ given character or predicate, similar to `str::matches`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484430,"byte_end":484490,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484495,"byte_end":484498,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484503,"byte_end":484574,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484579,"byte_end":484656,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484661,"byte_end":484664,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484669,"byte_end":484683,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484688,"byte_end":484691,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484696,"byte_end":484703,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484708,"byte_end":484734,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ let total = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484739,"byte_end":484781,"line_start":227,"line_end":227,"column_start":5,"column_end":47}},{"value":"/    .par_matches(char::is_numeric)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484786,"byte_end":484823,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/    .map(|s| s.parse::<i32>().expect(\"digit\"))","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484828,"byte_end":484877,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/    .sum();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484882,"byte_end":484896,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(10, total);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484901,"byte_end":484927,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":484932,"byte_end":484939,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485736,"byte_end":485753,"line_start":255,"line_end":255,"column_start":8,"column_end":25},"name":"par_match_indices","qualname":"::str::ParallelString::par_match_indices","value":"pub fn par_match_indices<P: Pattern>(&Self, P) -> MatchIndices<, P>","parent":{"krate":0,"index":4544},"children":[],"decl_id":null,"docs":" Returns a parallel iterator over substrings that match a given character\n or predicate, with their positions, similar to `str::match_indices`.","sig":null,"attributes":[{"value":"/ Returns a parallel iterator over substrings that match a given character","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485116,"byte_end":485192,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ or predicate, with their positions, similar to `str::match_indices`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485197,"byte_end":485269,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485274,"byte_end":485277,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: the `Pattern` trait is private, for use only by Rayon itself.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485282,"byte_end":485353,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ It is implemented for `char` and any `F: Fn(char) -> bool + Sync + Send`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485358,"byte_end":485435,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485440,"byte_end":485443,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485448,"byte_end":485462,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485467,"byte_end":485470,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485475,"byte_end":485482,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ use rayon::prelude::*;","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485487,"byte_end":485513,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/ let digits: Vec<_> = \"1, 2, buckle, 3, 4, door\"","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485518,"byte_end":485569,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/    .par_match_indices(char::is_numeric)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485574,"byte_end":485617,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/    .collect();","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485622,"byte_end":485640,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(digits, vec![(0, \"1\"), (3, \"2\"), (14, \"3\"), (17, \"4\")]);","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485645,"byte_end":485716,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":485721,"byte_end":485728,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486643,"byte_end":486650,"line_start":283,"line_end":283,"column_start":15,"column_end":22},"name":"Pattern","qualname":"::str::private::Pattern","value":"Pattern: Sized + Sync + Send","parent":null,"children":[{"krate":0,"index":6193},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4567},{"krate":0,"index":4568},{"krate":0,"index":4571},{"krate":0,"index":4574}],"decl_id":null,"docs":" Pattern-matching trait for `ParallelString`, somewhat like a mix of\n `std::str::pattern::{Pattern, Searcher}`.","sig":null,"attributes":[{"value":"/ Pattern-matching trait for `ParallelString`, somewhat like a mix of","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486430,"byte_end":486501,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ `std::str::pattern::{Pattern, Searcher}`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486506,"byte_end":486551,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486556,"byte_end":486559,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Implementing this trait is not permitted outside of `rayon`.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486564,"byte_end":486628,"line_start":282,"line_end":282,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486710,"byte_end":486717,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"find_in","qualname":"::str::private::Pattern::find_in","value":"pub fn find_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486770,"byte_end":486778,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"rfind_in","qualname":"::str::private::Pattern::rfind_in","value":"pub fn rfind_in(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486831,"byte_end":486843,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"is_suffix_of","qualname":"::str::private::Pattern::is_suffix_of","value":"pub fn is_suffix_of(&Self, &str) -> bool","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4568},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486887,"byte_end":486898,"line_start":288,"line_end":288,"column_start":12,"column_end":23},"name":"fold_splits","qualname":"::str::private::Pattern::fold_splits","value":"pub fn fold_splits<'ch, F>(&Self, &'ch str, F, bool) -> F where\nF: Folder<&'ch str>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":487025,"byte_end":487037,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"fold_matches","qualname":"::str::private::Pattern::fold_matches","value":"pub fn fold_matches<'ch, F>(&Self, &'ch str, F) -> F where F: Folder<&'ch str>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":487147,"byte_end":487165,"line_start":294,"line_end":294,"column_start":12,"column_end":30},"name":"fold_match_indices","qualname":"::str::private::Pattern::fold_match_indices","value":"pub fn fold_match_indices<'ch, F>(&Self, &'ch str, F, usize) -> F where\nF: Folder<(usize, &'ch str)>","parent":{"krate":0,"index":4564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":489636,"byte_end":489641,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"Chars","qualname":"::str::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":6198}],"decl_id":null,"docs":" Parallel iterator over the characters of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":489547,"byte_end":489600,"line_start":393,"line_end":393,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6205},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490683,"byte_end":490694,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::str::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":6207}],"decl_id":null,"docs":" Parallel iterator over the characters of a string, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the characters of a string, with their positions","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490572,"byte_end":490647,"line_start":437,"line_end":437,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6214},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492066,"byte_end":492071,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::str::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":6216}],"decl_id":null,"docs":" Parallel iterator over the bytes of a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over the bytes of a string","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":491982,"byte_end":492030,"line_start":493,"line_end":493,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":6223},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":493087,"byte_end":493098,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"EncodeUtf16","qualname":"::str::EncodeUtf16","value":"EncodeUtf16 {  }","parent":null,"children":[{"krate":0,"index":6225}],"decl_id":null,"docs":" Parallel iterator over a string encoded as UTF-16\n","sig":null,"attributes":[{"value":"/ Parallel iterator over a string encoded as UTF-16","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492998,"byte_end":493051,"line_start":537,"line_end":537,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":6232},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494166,"byte_end":494171,"line_start":583,"line_end":583,"column_start":12,"column_end":17},"name":"Split","qualname":"::str::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6235},{"krate":0,"index":6236}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a pattern","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494070,"byte_end":494130,"line_start":581,"line_end":581,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6245},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":495840,"byte_end":495855,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"SplitTerminator","qualname":"::str::SplitTerminator","value":"SplitTerminator {  }","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249}],"decl_id":null,"docs":" Parallel iterator over substrings separated by a terminator pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by a terminator pattern","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":495733,"byte_end":495804,"line_start":642,"line_end":642,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6258},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":497720,"byte_end":497725,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"Lines","qualname":"::str::Lines","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over lines in a string\n","sig":null,"attributes":[{"value":"/ Parallel iterator over lines in a string","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":497640,"byte_end":497684,"line_start":708,"line_end":708,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":498396,"byte_end":498411,"line_start":739,"line_end":739,"column_start":12,"column_end":27},"name":"SplitWhitespace","qualname":"::str::SplitWhitespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parallel iterator over substrings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings separated by whitespace","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":498299,"byte_end":498360,"line_start":737,"line_end":737,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6278},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":499000,"byte_end":499007,"line_start":764,"line_end":764,"column_start":12,"column_end":19},"name":"Matches","qualname":"::str::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":6281},{"krate":0,"index":6282}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":498906,"byte_end":498964,"line_start":762,"line_end":762,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":500415,"byte_end":500427,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"name":"MatchIndices","qualname":"::str::MatchIndices","value":"MatchIndices {  }","parent":null,"children":[{"krate":0,"index":6294},{"krate":0,"index":6295}],"decl_id":null,"docs":" Parallel iterator over substrings that match a pattern, with their positions\n","sig":null,"attributes":[{"value":"/ Parallel iterator over substrings that match a pattern, with their positions","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":500299,"byte_end":500379,"line_start":818,"line_end":818,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":4769},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":6304},{"krate":0,"index":6310},{"krate":0,"index":6307},{"krate":0,"index":4773},{"krate":0,"index":4778},{"krate":0,"index":4784},{"krate":0,"index":4791},{"krate":0,"index":4795},{"krate":0,"index":4802},{"krate":0,"index":4806},{"krate":0,"index":4810},{"krate":0,"index":4816},{"krate":0,"index":4820},{"krate":0,"index":4824}],"decl_id":null,"docs":" Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","sig":null,"attributes":[{"value":"/ Parallel iterator types for [vectors][std::vec] (`Vec<T>`)","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":501812,"byte_end":501874,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":501875,"byte_end":501878,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":501879,"byte_end":501957,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ to name one of the iterator types.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":501958,"byte_end":501996,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":501997,"byte_end":502000,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [std::vec]: https://doc.rust-lang.org/stable/std/vec/","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502001,"byte_end":502058,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6304},"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502191,"byte_end":502199,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":6306}],"decl_id":null,"docs":" Parallel iterator that moves out of a vector.\n","sig":null,"attributes":[{"value":"/ Parallel iterator that moves out of a vector.","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502106,"byte_end":502155,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13041,"byte_end":13051,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13513,"byte_end":13517,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14706,"byte_end":14710,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":16215,"byte_end":16219,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17472,"byte_end":17476,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":19116,"byte_end":19120,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20210,"byte_end":20214,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21605,"byte_end":21609,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118122,"byte_end":118123,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118633,"byte_end":118643,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":119646,"byte_end":119666,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":119958,"byte_end":119978,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123885,"byte_end":123890,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":124118,"byte_end":124123,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":125226,"byte_end":125231,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":126166,"byte_end":126175,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":126853,"byte_end":126862,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":127531,"byte_end":127544,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":127727,"byte_end":127740,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129352,"byte_end":129360,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129574,"byte_end":129582,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129878,"byte_end":129886,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":130007,"byte_end":130015,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":130639,"byte_end":130651,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":130805,"byte_end":130817,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":131402,"byte_end":131414,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":131778,"byte_end":131788,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":132815,"byte_end":132826,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":135352,"byte_end":135364,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":135914,"byte_end":135926,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":136992,"byte_end":137004,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":138566,"byte_end":138576,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":140284,"byte_end":140295,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141118,"byte_end":141124,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141323,"byte_end":141329,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141662,"byte_end":141668,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":142366,"byte_end":142374,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":142947,"byte_end":142960,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144079,"byte_end":144087,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144765,"byte_end":144773,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144934,"byte_end":144942,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":151663,"byte_end":151678,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":151971,"byte_end":151986,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":153013,"byte_end":153026,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":154037,"byte_end":154052,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/mod.rs","byte_start":147915,"byte_end":147922,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/mod.rs","byte_start":149588,"byte_end":149591,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162529,"byte_end":162538,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162731,"byte_end":162740,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":163084,"byte_end":163093,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":163599,"byte_end":163607,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":164191,"byte_end":164208,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166014,"byte_end":166020,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166180,"byte_end":166186,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166397,"byte_end":166403,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166951,"byte_end":166965,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":167116,"byte_end":167130,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":167874,"byte_end":167888,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":168275,"byte_end":168287,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169563,"byte_end":169572,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169779,"byte_end":169788,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169977,"byte_end":169986,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":170553,"byte_end":170570,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":170723,"byte_end":170740,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":171526,"byte_end":171543,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":171948,"byte_end":171963,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173265,"byte_end":173272,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173451,"byte_end":173458,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173638,"byte_end":173645,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":174260,"byte_end":174275,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":174420,"byte_end":174435,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":175227,"byte_end":175242,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":175686,"byte_end":175699,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177271,"byte_end":177278,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177512,"byte_end":177519,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":177955,"byte_end":177959,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178756,"byte_end":178760,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178950,"byte_end":178954,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":179571,"byte_end":179583,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":180439,"byte_end":180451,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":180924,"byte_end":180934,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182094,"byte_end":182102,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182891,"byte_end":182899,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":183153,"byte_end":183161,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":183733,"byte_end":183749,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":184667,"byte_end":184683,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":185416,"byte_end":185431,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":185827,"byte_end":185842,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":186266,"byte_end":186281,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187164,"byte_end":187167,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187436,"byte_end":187444,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187800,"byte_end":187810,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":188119,"byte_end":188129,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":188592,"byte_end":188599,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189133,"byte_end":189141,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189440,"byte_end":189447,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189769,"byte_end":189777,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190055,"byte_end":190061,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190322,"byte_end":190328,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190595,"byte_end":190601,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190864,"byte_end":190870,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":191140,"byte_end":191146,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":191589,"byte_end":191592,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":203719,"byte_end":203727,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":204846,"byte_end":204860,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207218,"byte_end":207226,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":211489,"byte_end":211496,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212398,"byte_end":212405,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212601,"byte_end":212608,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":213312,"byte_end":213327,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":214218,"byte_end":214233,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":214755,"byte_end":214768,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215496,"byte_end":215507,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216348,"byte_end":216359,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216640,"byte_end":216651,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":217265,"byte_end":217284,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":218247,"byte_end":218266,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219163,"byte_end":219177,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219219,"byte_end":219233,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219335,"byte_end":219349,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219876,"byte_end":219890,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":220139,"byte_end":220153,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":220398,"byte_end":220410,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221525,"byte_end":221529,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221761,"byte_end":221765,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":222100,"byte_end":222104,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":222685,"byte_end":222693,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":223839,"byte_end":223856,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":223898,"byte_end":223915,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224017,"byte_end":224034,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224648,"byte_end":224665,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224932,"byte_end":224949,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":225429,"byte_end":225444,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226788,"byte_end":226809,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226843,"byte_end":226864,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226958,"byte_end":226979,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":227558,"byte_end":227579,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":227816,"byte_end":227837,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":228496,"byte_end":228515,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233831,"byte_end":233836,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":234016,"byte_end":234021,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":234513,"byte_end":234526,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235487,"byte_end":235491,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235723,"byte_end":235727,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":236062,"byte_end":236066,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":236629,"byte_end":236637,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237575,"byte_end":237578,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237735,"byte_end":237738,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237940,"byte_end":237943,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":238417,"byte_end":238420,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":239162,"byte_end":239170,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":239853,"byte_end":239864,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241040,"byte_end":241051,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241192,"byte_end":241203,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241942,"byte_end":241953,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":242348,"byte_end":242357,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243594,"byte_end":243601,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243833,"byte_end":243840,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":244071,"byte_end":244078,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":244594,"byte_end":244601,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":245446,"byte_end":245454,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":246241,"byte_end":246256,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":247593,"byte_end":247604,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":247985,"byte_end":247996,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248287,"byte_end":248298,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248616,"byte_end":248631,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248797,"byte_end":248812,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":249656,"byte_end":249671,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":250135,"byte_end":250148,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251679,"byte_end":251686,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251859,"byte_end":251866,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":252109,"byte_end":252116,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":252656,"byte_end":252663,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":253538,"byte_end":253546,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":254364,"byte_end":254379,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":255837,"byte_end":255852,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":256034,"byte_end":256049,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":256905,"byte_end":256920,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257835,"byte_end":257838,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":258060,"byte_end":258063,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":258447,"byte_end":258450,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":259110,"byte_end":259119,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":259740,"byte_end":259749,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":260406,"byte_end":260417,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261826,"byte_end":261831,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":262100,"byte_end":262105,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":262497,"byte_end":262502,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263619,"byte_end":263629,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263880,"byte_end":263890,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":264267,"byte_end":264277,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":265173,"byte_end":265182,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":265992,"byte_end":266001,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":266782,"byte_end":266800,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":267120,"byte_end":267138,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":270003,"byte_end":270016,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":271149,"byte_end":271162,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":271723,"byte_end":271736,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272663,"byte_end":272681,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":273322,"byte_end":273340,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":273717,"byte_end":273735,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274837,"byte_end":274848,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":275078,"byte_end":275089,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":275619,"byte_end":275630,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":276537,"byte_end":276545,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":277112,"byte_end":277131,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":277372,"byte_end":277391,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":279566,"byte_end":279581,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":280353,"byte_end":280368,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281016,"byte_end":281031,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281379,"byte_end":281398,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281623,"byte_end":281642,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":282720,"byte_end":282739,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":283279,"byte_end":283296,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285069,"byte_end":285075,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285235,"byte_end":285241,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285452,"byte_end":285458,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285920,"byte_end":285926,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":286667,"byte_end":286675,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":287356,"byte_end":287370,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":288634,"byte_end":288648,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":288795,"byte_end":288809,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":289555,"byte_end":289569,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":290094,"byte_end":290106,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291052,"byte_end":291061,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291811,"byte_end":291820,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291924,"byte_end":291933,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292238,"byte_end":292250,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292594,"byte_end":292606,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292962,"byte_end":292974,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":293168,"byte_end":293179,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293733,"byte_end":293736,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293917,"byte_end":293920,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":294255,"byte_end":294258,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":294828,"byte_end":294836,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":295351,"byte_end":295362,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296581,"byte_end":296587,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296791,"byte_end":296797,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":297132,"byte_end":297138,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":297716,"byte_end":297724,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":298359,"byte_end":298373,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299665,"byte_end":299671,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299875,"byte_end":299881,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":300216,"byte_end":300222,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":300800,"byte_end":300808,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":301443,"byte_end":301457,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302756,"byte_end":302762,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302949,"byte_end":302955,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":303403,"byte_end":303409,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":304054,"byte_end":304062,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":304619,"byte_end":304633,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":305529,"byte_end":305543,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":305655,"byte_end":305669,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":306317,"byte_end":306331,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":306651,"byte_end":306663,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307707,"byte_end":307713,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307900,"byte_end":307906,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":308353,"byte_end":308359,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":309003,"byte_end":309011,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":309567,"byte_end":309581,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":310550,"byte_end":310564,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":310676,"byte_end":310690,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":311337,"byte_end":311351,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":311670,"byte_end":311682,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312787,"byte_end":312802,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312824,"byte_end":312839,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312988,"byte_end":313003,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":313553,"byte_end":313568,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":313800,"byte_end":313815,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":314000,"byte_end":314013,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315001,"byte_end":315012,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315034,"byte_end":315045,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315186,"byte_end":315197,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315664,"byte_end":315675,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315891,"byte_end":315902,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":316075,"byte_end":316084,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317180,"byte_end":317187,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317348,"byte_end":317355,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317570,"byte_end":317577,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":318037,"byte_end":318044,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":318786,"byte_end":318794,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":319469,"byte_end":319484,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":320698,"byte_end":320713,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":320863,"byte_end":320878,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":321621,"byte_end":321636,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":322019,"byte_end":322032,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323420,"byte_end":323424,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323582,"byte_end":323586,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323696,"byte_end":323705,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323899,"byte_end":323908,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":324418,"byte_end":324427,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2980},{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":325127,"byte_end":325135,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":325844,"byte_end":325861,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":326959,"byte_end":326972,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327319,"byte_end":327332,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3022}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327583,"byte_end":327596,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327907,"byte_end":327924,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":328882,"byte_end":328899,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":329378,"byte_end":329393,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":330238,"byte_end":330254,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330972,"byte_end":330981,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":331170,"byte_end":331179,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":331809,"byte_end":331826,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":332626,"byte_end":332643,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":333046,"byte_end":333061,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":335881,"byte_end":335891,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336188,"byte_end":336198,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336510,"byte_end":336518,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336853,"byte_end":336861,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337197,"byte_end":337205,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337499,"byte_end":337507,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337977,"byte_end":337984,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3212}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":338439,"byte_end":338446,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":338973,"byte_end":338980,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":339312,"byte_end":339319,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":339771,"byte_end":339781,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":340221,"byte_end":340231,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":340635,"byte_end":340641,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":341296,"byte_end":341302,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":341824,"byte_end":341830,"line_start":298,"line_end":298,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342091,"byte_end":342097,"line_start":308,"line_end":308,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342373,"byte_end":342379,"line_start":318,"line_end":318,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3267}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342750,"byte_end":342758,"line_start":332,"line_end":332,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":343044,"byte_end":343052,"line_start":345,"line_end":345,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":343464,"byte_end":343467,"line_start":361,"line_end":361,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344778,"byte_end":344784,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345633,"byte_end":345639,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346089,"byte_end":346103,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":347154,"byte_end":347161,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":347479,"byte_end":347486,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":348098,"byte_end":348113,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":348910,"byte_end":348914,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":349292,"byte_end":349296,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":349425,"byte_end":349429,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":352451,"byte_end":352456,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":353337,"byte_end":353346,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":354383,"byte_end":354395,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":355030,"byte_end":355036,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":356437,"byte_end":356443,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3469}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":357384,"byte_end":357397,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":358660,"byte_end":358673,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":359341,"byte_end":359352,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":360093,"byte_end":360105,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3526}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":361189,"byte_end":361197,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362323,"byte_end":362328,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362418,"byte_end":362423,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3573}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362559,"byte_end":362564,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3579}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362850,"byte_end":362855,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":363335,"byte_end":363348,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364647,"byte_end":364651,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364937,"byte_end":364941,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31176,"byte_end":31177,"line_start":260,"line_end":260,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32685,"byte_end":32686,"line_start":307,"line_end":307,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91510,"byte_end":91511,"line_start":2071,"line_end":2071,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115732,"byte_end":115738,"line_start":2835,"line_end":2835,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":116063,"byte_end":116069,"line_start":2852,"line_end":2852,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5714},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366320,"byte_end":366326,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366499,"byte_end":366507,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366802,"byte_end":366810,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367972,"byte_end":367976,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":369457,"byte_end":369471,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":370083,"byte_end":370089,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3998}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372821,"byte_end":372826,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":373103,"byte_end":373115,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381565,"byte_end":381569,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4045}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":382143,"byte_end":382157,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386574,"byte_end":386580,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4062},{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":387019,"byte_end":387023,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":388281,"byte_end":388287,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":418085,"byte_end":418095,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":421045,"byte_end":421051,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":421300,"byte_end":421313,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":425039,"byte_end":425048,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":436490,"byte_end":436495,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":445682,"byte_end":445693,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4188}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":445923,"byte_end":445929,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":446136,"byte_end":446146,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":404886,"byte_end":404890,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405017,"byte_end":405021,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405347,"byte_end":405351,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405862,"byte_end":405874,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406441,"byte_end":406447,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4362}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406576,"byte_end":406582,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406910,"byte_end":406916,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4373},{"krate":0,"index":4375},{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":407547,"byte_end":407561,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408418,"byte_end":408425,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408555,"byte_end":408562,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4400}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408890,"byte_end":408897,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4406},{"krate":0,"index":4407}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":409579,"byte_end":409594,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410477,"byte_end":410484,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410814,"byte_end":410821,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":411342,"byte_end":411357,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412004,"byte_end":412013,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412345,"byte_end":412354,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4459},{"krate":0,"index":4460}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412995,"byte_end":413012,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":413856,"byte_end":413861,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4484}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":414044,"byte_end":414049,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":414245,"byte_end":414250,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4494},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415744,"byte_end":415752,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415977,"byte_end":415985,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":488511,"byte_end":488513,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6195},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4603},{"krate":0,"index":4606}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":489756,"byte_end":489761,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4614},{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490021,"byte_end":490034,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490833,"byte_end":490844,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4630}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":491195,"byte_end":491214,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492186,"byte_end":492191,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492449,"byte_end":492462,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":493219,"byte_end":493230,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":493495,"byte_end":493514,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494255,"byte_end":494260,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494410,"byte_end":494415,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496075,"byte_end":496090,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496244,"byte_end":496267,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496575,"byte_end":496590,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496938,"byte_end":496961,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4714}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":497925,"byte_end":497930,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4719},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":498524,"byte_end":498539,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":499211,"byte_end":499218,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":499595,"byte_end":499610,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":500654,"byte_end":500666,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4758},{"krate":0,"index":4759}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":501079,"byte_end":501099,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502270,"byte_end":502273,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502446,"byte_end":502454,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4783}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502751,"byte_end":502759,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":503882,"byte_end":503893,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":504557,"byte_end":504568,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":504937,"byte_end":504947,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505269,"byte_end":505279,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505484,"byte_end":505494,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505600,"byte_end":505610,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":506658,"byte_end":506664,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4842}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":507184,"byte_end":507190,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4846},{"krate":0,"index":4848},{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":507984,"byte_end":507990,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3935,"byte_end":3946,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":49}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12455,"byte_end":12466,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12476,"byte_end":12485,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":65}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12495,"byte_end":12504,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12514,"byte_end":12522,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12532,"byte_end":12540,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":97}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12550,"byte_end":12561,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/mod.rs","byte_start":12571,"byte_end":12580,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3956,"byte_end":3960,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":27108,"byte_end":27116,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1082}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3970,"byte_end":3976,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3945}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":3986,"byte_end":3993,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4004}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4003,"byte_end":4008,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4016}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4018,"byte_end":4033,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":4039}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4043,"byte_end":4049,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4054}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4059,"byte_end":4064,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4094}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4074,"byte_end":4077,"line_start":112,"line_end":112,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4537}},{"kind":"Mod","span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/lib.rs","byte_start":4087,"byte_end":4090,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4769}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/split_producer.rs","byte_start":8003,"byte_end":8008,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":25}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/split_producer.rs","byte_start":8434,"byte_end":8447,"line_start":29,"line_end":29,"column_start":16,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/split_producer.rs","byte_start":9915,"byte_end":9928,"line_start":77,"line_end":77,"column_start":38,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13041,"byte_end":13051,"line_start":18,"line_end":18,"column_start":46,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":496},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/binary_heap.rs","byte_start":13513,"byte_end":13517,"line_start":40,"line_end":40,"column_start":35,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_map.rs","byte_start":14706,"byte_end":14710,"line_start":34,"line_end":34,"column_start":44,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4962},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/btree_set.rs","byte_start":16215,"byte_end":16219,"line_start":34,"line_end":34,"column_start":40,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_map.rs","byte_start":17472,"byte_end":17476,"line_start":35,"line_end":35,"column_start":50,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5077},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/hash_set.rs","byte_start":19116,"byte_end":19120,"line_start":35,"line_end":35,"column_start":41,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5150},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/linked_list.rs","byte_start":20210,"byte_end":20214,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5194},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/collections/vec_deque.rs","byte_start":21605,"byte_end":21609,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5266},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":117958,"byte_end":117963,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118122,"byte_end":118123,"line_start":51,"line_end":51,"column_start":45,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":174},"to":{"krate":0,"index":171}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":118633,"byte_end":118643,"line_start":71,"line_end":71,"column_start":50,"column_end":60},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5312},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":119646,"byte_end":119666,"line_start":107,"line_end":107,"column_start":41,"column_end":61},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/par_bridge.rs","byte_start":119958,"byte_end":119978,"line_start":118,"line_end":118,"column_start":60,"column_end":80},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":181},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":123885,"byte_end":123890,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":124118,"byte_end":124123,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":125226,"byte_end":125231,"line_start":67,"line_end":67,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":126166,"byte_end":126175,"line_start":103,"line_end":103,"column_start":51,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":126853,"byte_end":126862,"line_start":128,"line_end":128,"column_start":51,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":243},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":127531,"byte_end":127544,"line_start":158,"line_end":158,"column_start":12,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":127727,"byte_end":127740,"line_start":168,"line_end":168,"column_start":25,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129352,"byte_end":129360,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129574,"byte_end":129582,"line_start":237,"line_end":237,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":129878,"byte_end":129886,"line_start":253,"line_end":253,"column_start":34,"column_end":42},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chain.rs","byte_start":130007,"byte_end":130015,"line_start":260,"line_end":260,"column_start":36,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":130639,"byte_end":130651,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":130805,"byte_end":130817,"line_start":26,"line_end":26,"column_start":36,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":306},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":131402,"byte_end":131414,"line_start":52,"line_end":52,"column_start":45,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":306},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":131778,"byte_end":131788,"line_start":72,"line_end":72,"column_start":30,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find.rs","byte_start":132815,"byte_end":132826,"line_start":116,"line_end":116,"column_start":32,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":352},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":135352,"byte_end":135364,"line_start":69,"line_end":69,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":135914,"byte_end":135926,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":136992,"byte_end":137004,"line_start":129,"line_end":129,"column_start":41,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":138566,"byte_end":138576,"line_start":174,"line_end":174,"column_start":51,"column_end":61},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/find_first_last/mod.rs","byte_start":140284,"byte_end":140295,"line_start":231,"line_end":231,"column_start":32,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":417},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141118,"byte_end":141124,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141323,"byte_end":141329,"line_start":33,"line_end":33,"column_start":30,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5342},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":141662,"byte_end":141668,"line_start":51,"line_end":51,"column_start":37,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5342},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":142366,"byte_end":142374,"line_start":83,"line_end":83,"column_start":45,"column_end":53},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":142947,"byte_end":142960,"line_start":112,"line_end":112,"column_start":22,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144079,"byte_end":144087,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144765,"byte_end":144773,"line_start":185,"line_end":185,"column_start":31,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/chunks.rs","byte_start":144934,"byte_end":144942,"line_start":195,"line_end":195,"column_start":33,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":468},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":151663,"byte_end":151678,"line_start":30,"line_end":30,"column_start":24,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":151971,"byte_end":151986,"line_start":38,"line_end":38,"column_start":40,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":153013,"byte_end":153026,"line_start":72,"line_end":72,"column_start":38,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/consumer.rs","byte_start":154037,"byte_end":154052,"line_start":106,"line_end":106,"column_start":49,"column_end":64},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":503},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/mod.rs","byte_start":147915,"byte_end":147922,"line_start":76,"line_end":76,"column_start":24,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/collect/mod.rs","byte_start":149588,"byte_end":149591,"line_start":121,"line_end":121,"column_start":31,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162529,"byte_end":162538,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":162731,"byte_end":162740,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5352},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":163084,"byte_end":163093,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5352},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":163599,"byte_end":163607,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":589},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/enumerate.rs","byte_start":164191,"byte_end":164208,"line_start":92,"line_end":92,"column_start":22,"column_end":39},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":598},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166014,"byte_end":166020,"line_start":18,"line_end":18,"column_start":48,"column_end":54},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5361},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166180,"byte_end":166186,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166397,"byte_end":166403,"line_start":34,"line_end":34,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5361},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":166951,"byte_end":166965,"line_start":58,"line_end":58,"column_start":16,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":167116,"byte_end":167130,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":631},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":167874,"byte_end":167888,"line_start":94,"line_end":94,"column_start":48,"column_end":62},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":631},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter.rs","byte_start":168275,"byte_end":168287,"line_start":113,"line_end":113,"column_start":33,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":660},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169563,"byte_end":169572,"line_start":18,"line_end":18,"column_start":48,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169779,"byte_end":169788,"line_start":26,"line_end":26,"column_start":30,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":169977,"byte_end":169986,"line_start":33,"line_end":33,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":170553,"byte_end":170570,"line_start":58,"line_end":58,"column_start":20,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":170723,"byte_end":170740,"line_start":64,"line_end":64,"column_start":38,"column_end":55},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":697},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":171526,"byte_end":171543,"line_start":95,"line_end":95,"column_start":47,"column_end":64},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":697},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/filter_map.rs","byte_start":171948,"byte_end":171963,"line_start":114,"line_end":114,"column_start":36,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":728},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173265,"byte_end":173272,"line_start":18,"line_end":18,"column_start":48,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5379},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173451,"byte_end":173458,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":173638,"byte_end":173645,"line_start":31,"line_end":31,"column_start":37,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5379},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":174260,"byte_end":174275,"line_start":59,"line_end":59,"column_start":16,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":174420,"byte_end":174435,"line_start":65,"line_end":65,"column_start":38,"column_end":53},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":766},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":175227,"byte_end":175242,"line_start":97,"line_end":97,"column_start":47,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":766},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flat_map.rs","byte_start":175686,"byte_end":175699,"line_start":118,"line_end":118,"column_start":36,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":797},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177271,"byte_end":177278,"line_start":16,"line_end":16,"column_start":13,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/flatten.rs","byte_start":177512,"byte_end":177519,"line_start":27,"line_end":27,"column_start":34,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5388},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":177955,"byte_end":177959,"line_start":6,"line_end":6,"column_start":19,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178756,"byte_end":178760,"line_start":35,"line_end":35,"column_start":52,"column_end":56},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":178950,"byte_end":178954,"line_start":41,"line_end":41,"column_start":40,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5397},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":179571,"byte_end":179583,"line_start":69,"line_end":69,"column_start":42,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":857},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":180439,"byte_end":180451,"line_start":105,"line_end":105,"column_start":51,"column_end":63},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":857},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":180924,"byte_end":180934,"line_start":130,"line_end":130,"column_start":37,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":887},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182094,"byte_end":182102,"line_start":182,"line_end":182,"column_start":15,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":182891,"byte_end":182899,"line_start":210,"line_end":210,"column_start":58,"column_end":66},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5409},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":183153,"byte_end":183161,"line_start":219,"line_end":219,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5409},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":183733,"byte_end":183749,"line_start":246,"line_end":246,"column_start":38,"column_end":54},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":930},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/fold.rs","byte_start":184667,"byte_end":184683,"line_start":285,"line_end":285,"column_start":47,"column_end":63},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":930},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":185416,"byte_end":185431,"line_start":19,"line_end":19,"column_start":32,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":185827,"byte_end":185842,"line_start":40,"line_end":40,"column_start":30,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/for_each.rs","byte_start":186266,"byte_end":186281,"line_start":66,"line_end":66,"column_start":41,"column_end":56},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187164,"byte_end":187167,"line_start":22,"line_end":22,"column_start":37,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187436,"byte_end":187444,"line_start":35,"line_end":35,"column_start":37,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":3002},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":187800,"byte_end":187810,"line_start":49,"line_end":49,"column_start":37,"column_end":47},"kind":{"Impl":{"id":122}},"from":{"krate":5,"index":496},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":188119,"byte_end":188129,"line_start":63,"line_end":63,"column_start":37,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":5,"index":2575},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":188592,"byte_end":188599,"line_start":79,"line_end":79,"column_start":48,"column_end":55},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6842},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189133,"byte_end":189141,"line_start":97,"line_end":97,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":5,"index":905},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189440,"byte_end":189447,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":6868},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":189769,"byte_end":189777,"line_start":125,"line_end":125,"column_start":37,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":5355},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190055,"byte_end":190061,"line_start":138,"line_end":138,"column_start":37,"column_end":43},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190322,"byte_end":190328,"line_start":148,"line_end":148,"column_start":45,"column_end":51},"kind":{"Impl":{"id":129}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190595,"byte_end":190601,"line_start":158,"line_end":158,"column_start":44,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":190864,"byte_end":190870,"line_start":168,"line_end":168,"column_start":39,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":191140,"byte_end":191146,"line_start":178,"line_end":178,"column_start":49,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/from_par_iter.rs","byte_start":191589,"byte_end":191592,"line_start":192,"line_end":192,"column_start":52,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":405},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195252,"byte_end":195256,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":195259,"byte_end":195264,"line_start":59,"line_end":59,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198266,"byte_end":198270,"line_start":128,"line_end":128,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":198273,"byte_end":198278,"line_start":128,"line_end":128,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":199586,"byte_end":199591,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":201606,"byte_end":201614,"line_start":213,"line_end":213,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1101},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202719,"byte_end":202723,"line_start":236,"line_end":236,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":202726,"byte_end":202731,"line_start":236,"line_end":236,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":203719,"byte_end":203727,"line_start":263,"line_end":263,"column_start":6,"column_end":14},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":204846,"byte_end":204860,"line_start":302,"line_end":302,"column_start":6,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/plumbing/mod.rs","byte_start":207218,"byte_end":207226,"line_start":364,"line_end":364,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1138},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":211489,"byte_end":211496,"line_start":8,"line_end":8,"column_start":19,"column_end":26},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212398,"byte_end":212405,"line_start":39,"line_end":39,"column_start":55,"column_end":62},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5432},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":212601,"byte_end":212608,"line_start":45,"line_end":45,"column_start":40,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5432},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":213312,"byte_end":213327,"line_start":75,"line_end":75,"column_start":42,"column_end":57},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1195},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":214218,"byte_end":214233,"line_start":111,"line_end":111,"column_start":51,"column_end":66},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1195},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":214755,"byte_end":214768,"line_start":136,"line_end":136,"column_start":36,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1227},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":215496,"byte_end":215507,"line_start":167,"line_end":167,"column_start":15,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216348,"byte_end":216359,"line_start":196,"line_end":196,"column_start":56,"column_end":67},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5447},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":216640,"byte_end":216651,"line_start":208,"line_end":208,"column_start":36,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5447},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":217265,"byte_end":217284,"line_start":236,"line_end":236,"column_start":38,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_fold.rs","byte_start":218247,"byte_end":218266,"line_start":276,"line_end":276,"column_start":47,"column_end":66},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1262},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219163,"byte_end":219177,"line_start":23,"line_end":23,"column_start":26,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219219,"byte_end":219233,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219335,"byte_end":219349,"line_start":31,"line_end":31,"column_start":36,"column_end":50},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":219876,"byte_end":219890,"line_start":57,"line_end":57,"column_start":45,"column_end":59},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":220139,"byte_end":220153,"line_start":72,"line_end":72,"column_start":35,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/reduce.rs","byte_start":220398,"byte_end":220410,"line_start":86,"line_end":86,"column_start":30,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221525,"byte_end":221529,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":221761,"byte_end":221765,"line_start":29,"line_end":29,"column_start":30,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5459},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":222100,"byte_end":222104,"line_start":47,"line_end":47,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5459},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/skip.rs","byte_start":222685,"byte_end":222693,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":223839,"byte_end":223856,"line_start":29,"line_end":29,"column_start":26,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":223898,"byte_end":223915,"line_start":31,"line_end":31,"column_start":27,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1399},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224017,"byte_end":224034,"line_start":37,"line_end":37,"column_start":36,"column_end":53},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224648,"byte_end":224665,"line_start":64,"line_end":64,"column_start":45,"column_end":62},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":224932,"byte_end":224949,"line_start":79,"line_end":79,"column_start":35,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce.rs","byte_start":225429,"byte_end":225444,"line_start":98,"line_end":98,"column_start":30,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226788,"byte_end":226809,"line_start":26,"line_end":26,"column_start":22,"column_end":43},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226843,"byte_end":226864,"line_start":28,"line_end":28,"column_start":23,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":226958,"byte_end":226979,"line_start":34,"line_end":34,"column_start":32,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":227558,"byte_end":227579,"line_start":60,"line_end":60,"column_start":41,"column_end":62},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":227816,"byte_end":227837,"line_start":74,"line_end":74,"column_start":39,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/try_reduce_with.rs","byte_start":228496,"byte_end":228515,"line_start":97,"line_end":97,"column_start":30,"column_end":49},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":233831,"byte_end":233836,"line_start":124,"line_end":124,"column_start":29,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5469},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":234016,"byte_end":234021,"line_start":130,"line_end":130,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5469},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/splitter.rs","byte_start":234513,"byte_end":234526,"line_start":154,"line_end":154,"column_start":38,"column_end":51},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1533},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235487,"byte_end":235491,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":235723,"byte_end":235727,"line_start":28,"line_end":28,"column_start":30,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5478},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":236062,"byte_end":236066,"line_start":46,"line_end":46,"column_start":37,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5478},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/take.rs","byte_start":236629,"byte_end":236637,"line_start":72,"line_end":72,"column_start":45,"column_end":53},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1571},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237575,"byte_end":237578,"line_start":20,"line_end":20,"column_start":48,"column_end":51},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5488},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237735,"byte_end":237738,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":237940,"byte_end":237943,"line_start":36,"line_end":36,"column_start":36,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5488},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":238417,"byte_end":238420,"line_start":57,"line_end":57,"column_start":43,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5488},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":239162,"byte_end":239170,"line_start":89,"line_end":89,"column_start":51,"column_end":59},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":239853,"byte_end":239864,"line_start":118,"line_end":118,"column_start":32,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1627},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241040,"byte_end":241051,"line_start":172,"line_end":172,"column_start":16,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241192,"byte_end":241203,"line_start":178,"line_end":178,"column_start":38,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":241942,"byte_end":241953,"line_start":209,"line_end":209,"column_start":47,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map.rs","byte_start":242348,"byte_end":242357,"line_start":229,"line_end":229,"column_start":36,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1677},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243594,"byte_end":243601,"line_start":20,"line_end":20,"column_start":58,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5497},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":243833,"byte_end":243840,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":244071,"byte_end":244078,"line_start":39,"line_end":39,"column_start":39,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5497},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":244594,"byte_end":244601,"line_start":61,"line_end":61,"column_start":46,"column_end":53},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5497},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":245446,"byte_end":245454,"line_start":96,"line_end":96,"column_start":54,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":246241,"byte_end":246256,"line_start":128,"line_end":128,"column_start":35,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1747},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":247593,"byte_end":247604,"line_start":188,"line_end":188,"column_start":35,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":247985,"byte_end":247996,"line_start":206,"line_end":206,"column_start":46,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248287,"byte_end":248298,"line_start":218,"line_end":218,"column_start":44,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1769},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248616,"byte_end":248631,"line_start":235,"line_end":235,"column_start":19,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":248797,"byte_end":248812,"line_start":241,"line_end":241,"column_start":41,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1799},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":249656,"byte_end":249671,"line_start":274,"line_end":274,"column_start":50,"column_end":65},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1799},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":250135,"byte_end":250148,"line_start":296,"line_end":296,"column_start":39,"column_end":52},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1835},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251679,"byte_end":251686,"line_start":352,"line_end":352,"column_start":54,"column_end":61},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5509},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":251859,"byte_end":251866,"line_start":358,"line_end":358,"column_start":18,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":252109,"byte_end":252116,"line_start":368,"line_end":368,"column_start":45,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5509},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":252656,"byte_end":252663,"line_start":390,"line_end":390,"column_start":52,"column_end":59},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5509},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":253538,"byte_end":253546,"line_start":425,"line_end":425,"column_start":60,"column_end":68},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1895},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":254364,"byte_end":254379,"line_start":457,"line_end":457,"column_start":41,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":255837,"byte_end":255852,"line_start":520,"line_end":520,"column_start":22,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":256034,"byte_end":256049,"line_start":526,"line_end":526,"column_start":47,"column_end":62},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1935},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/map_with.rs","byte_start":256905,"byte_end":256920,"line_start":559,"line_end":559,"column_start":56,"column_end":71},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1935},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":257835,"byte_end":257838,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":258060,"byte_end":258063,"line_start":30,"line_end":30,"column_start":33,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":258447,"byte_end":258450,"line_start":49,"line_end":49,"column_start":40,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5521},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":259110,"byte_end":259119,"line_start":79,"line_end":79,"column_start":54,"column_end":63},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2000},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":259740,"byte_end":259749,"line_start":102,"line_end":102,"column_start":54,"column_end":63},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2012},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip.rs","byte_start":260406,"byte_end":260417,"line_start":129,"line_end":129,"column_start":45,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2024},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":261826,"byte_end":261831,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":262100,"byte_end":262105,"line_start":31,"line_end":31,"column_start":33,"column_end":38},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5534},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/zip_eq.rs","byte_start":262497,"byte_end":262502,"line_start":50,"line_end":50,"column_start":40,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5534},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263619,"byte_end":263629,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":263880,"byte_end":263890,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5546},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":264267,"byte_end":264277,"line_start":53,"line_end":53,"column_start":40,"column_end":50},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5546},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":265173,"byte_end":265182,"line_start":90,"line_end":90,"column_start":51,"column_end":60},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2086},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":265992,"byte_end":266001,"line_start":119,"line_end":119,"column_start":51,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2100},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":266782,"byte_end":266800,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":267120,"byte_end":267138,"line_start":171,"line_end":171,"column_start":25,"column_end":43},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2114},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":270003,"byte_end":270016,"line_start":267,"line_end":267,"column_start":25,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2136},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":271149,"byte_end":271162,"line_start":306,"line_end":306,"column_start":36,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2136},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave.rs","byte_start":271723,"byte_end":271736,"line_start":327,"line_end":327,"column_start":34,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2136},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":272663,"byte_end":272681,"line_start":23,"line_end":23,"column_start":12,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":273322,"byte_end":273340,"line_start":44,"line_end":44,"column_start":33,"column_end":51},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5559},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/interleave_shortest.rs","byte_start":273717,"byte_end":273735,"line_start":63,"line_end":63,"column_start":40,"column_end":58},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5559},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":274837,"byte_end":274848,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":275078,"byte_end":275089,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5571},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":275619,"byte_end":275630,"line_start":57,"line_end":57,"column_start":37,"column_end":48},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5571},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":276537,"byte_end":276545,"line_start":96,"line_end":96,"column_start":45,"column_end":53},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2203},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":277112,"byte_end":277131,"line_start":124,"line_end":124,"column_start":9,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":277372,"byte_end":277391,"line_start":138,"line_end":138,"column_start":22,"column_end":41},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2215},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":279566,"byte_end":279581,"line_start":217,"line_end":217,"column_start":22,"column_end":37},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":280353,"byte_end":280368,"line_start":246,"line_end":246,"column_start":33,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281016,"byte_end":281031,"line_start":268,"line_end":268,"column_start":31,"column_end":46},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281379,"byte_end":281398,"line_start":285,"line_end":285,"column_start":12,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":281623,"byte_end":281642,"line_start":298,"line_end":298,"column_start":28,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2251},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":282720,"byte_end":282739,"line_start":335,"line_end":335,"column_start":37,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2251},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/intersperse.rs","byte_start":283279,"byte_end":283296,"line_start":361,"line_end":361,"column_start":26,"column_end":43},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2275},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285069,"byte_end":285075,"line_start":20,"line_end":20,"column_start":48,"column_end":54},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5581},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285235,"byte_end":285241,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285452,"byte_end":285458,"line_start":36,"line_end":36,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5581},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":285920,"byte_end":285926,"line_start":56,"line_end":56,"column_start":40,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5581},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":286667,"byte_end":286675,"line_start":87,"line_end":87,"column_start":48,"column_end":56},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2321},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":287356,"byte_end":287370,"line_start":115,"line_end":115,"column_start":29,"column_end":43},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2333},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":288634,"byte_end":288648,"line_start":171,"line_end":171,"column_start":16,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":288795,"byte_end":288809,"line_start":177,"line_end":177,"column_start":35,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2351},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":289555,"byte_end":289569,"line_start":207,"line_end":207,"column_start":44,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2351},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":290094,"byte_end":290106,"line_start":233,"line_end":233,"column_start":33,"column_end":45},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2380},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291052,"byte_end":291061,"line_start":277,"line_end":277,"column_start":25,"column_end":34},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291811,"byte_end":291820,"line_start":310,"line_end":310,"column_start":34,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/update.rs","byte_start":291924,"byte_end":291933,"line_start":317,"line_end":317,"column_start":36,"column_end":45},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5590},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292238,"byte_end":292250,"line_start":5,"line_end":5,"column_start":25,"column_end":37},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2423},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292594,"byte_end":292606,"line_start":23,"line_end":23,"column_start":23,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2423},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":292962,"byte_end":292974,"line_start":45,"line_end":45,"column_start":34,"column_end":46},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2423},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/noop.rs","byte_start":293168,"byte_end":293179,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2445},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293733,"byte_end":293736,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":293917,"byte_end":293920,"line_start":26,"line_end":26,"column_start":30,"column_end":33},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5603},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":294255,"byte_end":294258,"line_start":44,"line_end":44,"column_start":37,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5603},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":294828,"byte_end":294836,"line_start":68,"line_end":68,"column_start":45,"column_end":53},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2469},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/rev.rs","byte_start":295351,"byte_end":295362,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2479},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296581,"byte_end":296587,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":296791,"byte_end":296797,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5612},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":297132,"byte_end":297138,"line_start":45,"line_end":45,"column_start":37,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5612},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":297716,"byte_end":297724,"line_start":71,"line_end":71,"column_start":45,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2512},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":298359,"byte_end":298373,"line_start":98,"line_end":98,"column_start":22,"column_end":36},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2522},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299665,"byte_end":299671,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":299875,"byte_end":299881,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5622},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":300216,"byte_end":300222,"line_start":179,"line_end":179,"column_start":37,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5622},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":300800,"byte_end":300808,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2552},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/len.rs","byte_start":301443,"byte_end":301457,"line_start":232,"line_end":232,"column_start":22,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2562},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302756,"byte_end":302762,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":302949,"byte_end":302955,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5632},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":303403,"byte_end":303409,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5632},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":304054,"byte_end":304062,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2603},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":304619,"byte_end":304633,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2613},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":305529,"byte_end":305543,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":305655,"byte_end":305669,"line_start":148,"line_end":148,"column_start":36,"column_end":50},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2628},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":306317,"byte_end":306331,"line_start":177,"line_end":177,"column_start":45,"column_end":59},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2628},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/cloned.rs","byte_start":306651,"byte_end":306663,"line_start":195,"line_end":195,"column_start":34,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2650},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307707,"byte_end":307713,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":307900,"byte_end":307906,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5641},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":308353,"byte_end":308359,"line_start":48,"line_end":48,"column_start":44,"column_end":50},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5641},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":309003,"byte_end":309011,"line_start":75,"line_end":75,"column_start":53,"column_end":61},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2688},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":309567,"byte_end":309581,"line_start":99,"line_end":99,"column_start":29,"column_end":43},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2698},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":310550,"byte_end":310564,"line_start":143,"line_end":143,"column_start":9,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":310676,"byte_end":310690,"line_start":149,"line_end":149,"column_start":36,"column_end":50},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2713},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":311337,"byte_end":311351,"line_start":178,"line_end":178,"column_start":45,"column_end":59},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2713},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/copied.rs","byte_start":311670,"byte_end":311682,"line_start":196,"line_end":196,"column_start":34,"column_end":46},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2735},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312787,"byte_end":312802,"line_start":23,"line_end":23,"column_start":31,"column_end":46},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2761},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312824,"byte_end":312839,"line_start":25,"line_end":25,"column_start":15,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":312988,"byte_end":313003,"line_start":33,"line_end":33,"column_start":28,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2761},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":313553,"byte_end":313568,"line_start":60,"line_end":60,"column_start":37,"column_end":52},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2761},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":313800,"byte_end":313815,"line_start":73,"line_end":73,"column_start":24,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2761},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/product.rs","byte_start":314000,"byte_end":314013,"line_start":86,"line_end":86,"column_start":26,"column_end":39},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2786},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315001,"byte_end":315012,"line_start":23,"line_end":23,"column_start":31,"column_end":42},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2810},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315034,"byte_end":315045,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315186,"byte_end":315197,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2810},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315664,"byte_end":315675,"line_start":56,"line_end":56,"column_start":37,"column_end":48},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2810},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":315891,"byte_end":315902,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2810},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/sum.rs","byte_start":316075,"byte_end":316084,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2835},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317180,"byte_end":317187,"line_start":21,"line_end":21,"column_start":48,"column_end":55},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5650},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317348,"byte_end":317355,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":317570,"byte_end":317577,"line_start":37,"line_end":37,"column_start":33,"column_end":40},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5650},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":318037,"byte_end":318044,"line_start":57,"line_end":57,"column_start":40,"column_end":47},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5650},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":318786,"byte_end":318794,"line_start":88,"line_end":88,"column_start":48,"column_end":56},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2877},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":319469,"byte_end":319484,"line_start":116,"line_end":116,"column_start":29,"column_end":44},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2889},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":320698,"byte_end":320713,"line_start":170,"line_end":170,"column_start":16,"column_end":31},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":320863,"byte_end":320878,"line_start":176,"line_end":176,"column_start":35,"column_end":50},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2907},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":321621,"byte_end":321636,"line_start":206,"line_end":206,"column_start":44,"column_end":59},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2907},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/inspect.rs","byte_start":322019,"byte_end":322032,"line_start":225,"line_end":225,"column_start":33,"column_end":46},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2936},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323420,"byte_end":323424,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5668},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323582,"byte_end":323586,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323696,"byte_end":323705,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":323899,"byte_end":323908,"line_start":49,"line_end":49,"column_start":30,"column_end":39},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5659},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":324418,"byte_end":324427,"line_start":72,"line_end":72,"column_start":37,"column_end":46},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5659},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":325127,"byte_end":325135,"line_start":102,"line_end":102,"column_start":45,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2983},"to":{"krate":0,"index":1087}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":325844,"byte_end":325861,"line_start":131,"line_end":131,"column_start":26,"column_end":43},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2992},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":326959,"byte_end":326972,"line_start":183,"line_end":183,"column_start":26,"column_end":39},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327319,"byte_end":327332,"line_start":202,"line_end":202,"column_start":37,"column_end":50},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327583,"byte_end":327596,"line_start":215,"line_end":215,"column_start":35,"column_end":48},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3008},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":327907,"byte_end":327924,"line_start":232,"line_end":232,"column_start":32,"column_end":49},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":328882,"byte_end":328899,"line_start":270,"line_end":270,"column_start":41,"column_end":58},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3027},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":329378,"byte_end":329393,"line_start":294,"line_end":294,"column_start":30,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3048},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/panic_fuse.rs","byte_start":330238,"byte_end":330254,"line_start":335,"line_end":335,"column_start":31,"column_end":47},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3068},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":330972,"byte_end":330981,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":331170,"byte_end":331179,"line_start":28,"line_end":28,"column_start":33,"column_end":42},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5675},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":331809,"byte_end":331826,"line_start":56,"line_end":56,"column_start":40,"column_end":57},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3094},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":332626,"byte_end":332643,"line_start":89,"line_end":89,"column_start":49,"column_end":66},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3094},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/while_some.rs","byte_start":333046,"byte_end":333061,"line_start":111,"line_end":111,"column_start":38,"column_end":53},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3115},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":335881,"byte_end":335891,"line_start":64,"line_end":64,"column_start":31,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":5,"index":496},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336188,"byte_end":336198,"line_start":77,"line_end":77,"column_start":39,"column_end":49},"kind":{"Impl":{"id":336}},"from":{"krate":5,"index":496},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336510,"byte_end":336518,"line_start":90,"line_end":90,"column_start":39,"column_end":47},"kind":{"Impl":{"id":337}},"from":{"krate":5,"index":905},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":336853,"byte_end":336861,"line_start":104,"line_end":104,"column_start":59,"column_end":67},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":905},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337197,"byte_end":337205,"line_start":118,"line_end":118,"column_start":31,"column_end":39},"kind":{"Impl":{"id":339}},"from":{"krate":5,"index":5355},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337499,"byte_end":337507,"line_start":131,"line_end":131,"column_start":39,"column_end":47},"kind":{"Impl":{"id":340}},"from":{"krate":5,"index":5355},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":337977,"byte_end":337984,"line_start":152,"line_end":152,"column_start":42,"column_end":49},"kind":{"Impl":{"id":341}},"from":{"krate":1,"index":6842},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":338439,"byte_end":338446,"line_start":168,"line_end":168,"column_start":62,"column_end":69},"kind":{"Impl":{"id":342}},"from":{"krate":1,"index":6842},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":338973,"byte_end":338980,"line_start":191,"line_end":191,"column_start":34,"column_end":41},"kind":{"Impl":{"id":343}},"from":{"krate":1,"index":6868},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":339312,"byte_end":339319,"line_start":205,"line_end":205,"column_start":42,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":1,"index":6868},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":339771,"byte_end":339781,"line_start":224,"line_end":224,"column_start":31,"column_end":41},"kind":{"Impl":{"id":345}},"from":{"krate":5,"index":2575},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":340221,"byte_end":340231,"line_start":241,"line_end":241,"column_start":39,"column_end":49},"kind":{"Impl":{"id":346}},"from":{"krate":5,"index":2575},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":340635,"byte_end":340641,"line_start":259,"line_end":259,"column_start":31,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":341296,"byte_end":341302,"line_start":278,"line_end":278,"column_start":39,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":341824,"byte_end":341830,"line_start":298,"line_end":298,"column_start":38,"column_end":44},"kind":{"Impl":{"id":349}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342091,"byte_end":342097,"line_start":308,"line_end":308,"column_start":33,"column_end":39},"kind":{"Impl":{"id":350}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342373,"byte_end":342379,"line_start":318,"line_end":318,"column_start":43,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":342750,"byte_end":342758,"line_start":332,"line_end":332,"column_start":31,"column_end":39},"kind":{"Impl":{"id":352}},"from":{"krate":5,"index":3002},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":343044,"byte_end":343052,"line_start":345,"line_end":345,"column_start":39,"column_end":47},"kind":{"Impl":{"id":353}},"from":{"krate":5,"index":3002},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/extend.rs","byte_start":343464,"byte_end":343467,"line_start":361,"line_end":361,"column_start":39,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":3919}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":344778,"byte_end":344784,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":345633,"byte_end":345639,"line_start":57,"line_end":57,"column_start":30,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5684},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":346089,"byte_end":346103,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3306},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":347154,"byte_end":347161,"line_start":126,"line_end":126,"column_start":30,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5693},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":347479,"byte_end":347486,"line_start":144,"line_end":144,"column_start":37,"column_end":44},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5693},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":348098,"byte_end":348113,"line_start":176,"line_end":176,"column_start":36,"column_end":51},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3330},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":348910,"byte_end":348914,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":349292,"byte_end":349296,"line_start":229,"line_end":229,"column_start":40,"column_end":44},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/repeat.rs","byte_start":349425,"byte_end":349429,"line_start":236,"line_end":236,"column_start":38,"column_end":42},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":3340},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349768,"byte_end":349772,"line_start":7,"line_end":7,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":349775,"byte_end":349779,"line_start":7,"line_end":7,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":352451,"byte_end":352456,"line_start":94,"line_end":94,"column_start":44,"column_end":49},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":3388},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":353337,"byte_end":353346,"line_start":130,"line_end":130,"column_start":27,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":3404},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":354383,"byte_end":354395,"line_start":172,"line_end":172,"column_start":33,"column_end":45},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":3422},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":355030,"byte_end":355036,"line_start":200,"line_end":200,"column_start":45,"column_end":51},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":3435},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":356437,"byte_end":356443,"line_start":252,"line_end":252,"column_start":42,"column_end":48},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":3452},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":357384,"byte_end":357397,"line_start":292,"line_end":292,"column_start":41,"column_end":54},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":3470},"to":{"krate":0,"index":1101}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":358660,"byte_end":358673,"line_start":338,"line_end":338,"column_start":50,"column_end":63},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":3470},"to":{"krate":0,"index":1120}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":359341,"byte_end":359352,"line_start":367,"line_end":367,"column_start":39,"column_end":50},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3498},"to":{"krate":0,"index":1109}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":360093,"byte_end":360105,"line_start":400,"line_end":400,"column_start":40,"column_end":52},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3516},"to":{"krate":0,"index":1117}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/unzip.rs","byte_start":361189,"byte_end":361197,"line_start":446,"line_end":446,"column_start":38,"column_end":46},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3541},"to":{"krate":0,"index":3358}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362323,"byte_end":362328,"line_start":36,"line_end":36,"column_start":25,"column_end":30},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362418,"byte_end":362423,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362559,"byte_end":362564,"line_start":48,"line_end":48,"column_start":36,"column_end":41},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":362850,"byte_end":362855,"line_start":63,"line_end":63,"column_start":43,"column_end":48},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/empty.rs","byte_start":363335,"byte_end":363348,"line_start":86,"line_end":86,"column_start":28,"column_end":41},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":3587},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364647,"byte_end":364651,"line_start":34,"line_end":34,"column_start":36,"column_end":40},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5703},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/once.rs","byte_start":364937,"byte_end":364941,"line_start":49,"line_end":49,"column_start":43,"column_end":47},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5703},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":31176,"byte_end":31177,"line_start":260,"line_end":260,"column_start":67,"column_end":68},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":3634},"to":{"krate":0,"index":3627}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":32685,"byte_end":32686,"line_start":307,"line_end":307,"column_start":70,"column_end":71},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":3645},"to":{"krate":0,"index":3638}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33575,"byte_end":33580,"line_start":333,"line_end":333,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":33583,"byte_end":33587,"line_start":333,"line_end":333,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91510,"byte_end":91511,"line_start":2071,"line_end":2071,"column_start":52,"column_end":53},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":3849},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":91878,"byte_end":91894,"line_start":2085,"line_end":2085,"column_start":36,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":3649},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":115732,"byte_end":115738,"line_start":2835,"line_end":2835,"column_start":21,"column_end":27},"kind":{"Impl":{"id":384}},"from":{"krate":2,"index":32315},"to":{"krate":0,"index":3924}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/iter/mod.rs","byte_start":116063,"byte_end":116069,"line_start":2852,"line_end":2852,"column_start":24,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":3924}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366320,"byte_end":366326,"line_start":27,"line_end":27,"column_start":40,"column_end":46},"kind":{"Impl":{"id":386}},"from":{"krate":2,"index":32315},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366499,"byte_end":366507,"line_start":36,"line_end":36,"column_start":36,"column_end":44},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5715},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":366802,"byte_end":366810,"line_start":51,"line_end":51,"column_start":43,"column_end":51},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5715},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":367972,"byte_end":367976,"line_start":92,"line_end":92,"column_start":29,"column_end":33},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5724},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":369457,"byte_end":369471,"line_start":151,"line_end":151,"column_start":28,"column_end":42},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3986},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/option.rs","byte_start":370083,"byte_end":370089,"line_start":174,"line_end":174,"column_start":48,"column_end":54},"kind":{"Impl":{"id":395}},"from":{"krate":2,"index":32315},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":372821,"byte_end":372826,"line_start":50,"line_end":50,"column_start":34,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":2,"index":31041},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range.rs","byte_start":373103,"byte_end":373115,"line_start":66,"line_end":66,"column_start":26,"column_end":38},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4026},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":381565,"byte_end":381569,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/range_inclusive.rs","byte_start":382143,"byte_end":382157,"line_start":63,"line_end":63,"column_start":34,"column_end":48},"kind":{"Impl":{"id":399}},"from":{"krate":2,"index":31110},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":386574,"byte_end":386580,"line_start":20,"line_end":20,"column_start":43,"column_end":49},"kind":{"Impl":{"id":400}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":387019,"byte_end":387023,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6082},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/result.rs","byte_start":388281,"byte_end":388287,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":{"Impl":{"id":408}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":3915}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":418085,"byte_end":418095,"line_start":33,"line_end":33,"column_start":18,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4107},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":421045,"byte_end":421051,"line_start":103,"line_end":103,"column_start":22,"column_end":28},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4118},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":421300,"byte_end":421313,"line_start":115,"line_end":115,"column_start":22,"column_end":35},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":425039,"byte_end":425048,"line_start":218,"line_end":218,"column_start":22,"column_end":31},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4134},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mergesort.rs","byte_start":436490,"byte_end":436495,"line_start":522,"line_end":522,"column_start":22,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":445682,"byte_end":445693,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4182},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":445923,"byte_end":445929,"line_start":35,"line_end":35,"column_start":18,"column_end":24},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4189},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/quicksort.rs","byte_start":446136,"byte_end":446146,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4195},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":404886,"byte_end":404890,"line_start":450,"line_end":450,"column_start":32,"column_end":36},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6150},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405017,"byte_end":405021,"line_start":456,"line_end":456,"column_start":51,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6150},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405347,"byte_end":405351,"line_start":471,"line_end":471,"column_start":58,"column_end":62},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6150},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":405862,"byte_end":405874,"line_start":495,"line_end":495,"column_start":43,"column_end":55},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4348},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406441,"byte_end":406447,"line_start":516,"line_end":516,"column_start":32,"column_end":38},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6158},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406576,"byte_end":406582,"line_start":522,"line_end":522,"column_start":51,"column_end":57},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6158},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":406910,"byte_end":406916,"line_start":537,"line_end":537,"column_start":58,"column_end":64},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6158},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":407547,"byte_end":407561,"line_start":565,"line_end":565,"column_start":43,"column_end":57},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4378},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408418,"byte_end":408425,"line_start":596,"line_end":596,"column_start":32,"column_end":39},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6167},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408555,"byte_end":408562,"line_start":602,"line_end":602,"column_start":51,"column_end":58},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6167},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":408890,"byte_end":408897,"line_start":617,"line_end":617,"column_start":58,"column_end":65},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6167},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":409579,"byte_end":409594,"line_start":646,"line_end":646,"column_start":43,"column_end":58},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4409},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410477,"byte_end":410484,"line_start":677,"line_end":677,"column_start":51,"column_end":58},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6176},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":410814,"byte_end":410821,"line_start":692,"line_end":692,"column_start":58,"column_end":65},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6176},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":411342,"byte_end":411357,"line_start":716,"line_end":716,"column_start":43,"column_end":58},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4436},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412004,"byte_end":412013,"line_start":740,"line_end":740,"column_start":51,"column_end":60},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6184},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412345,"byte_end":412354,"line_start":755,"line_end":755,"column_start":58,"column_end":67},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6184},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":412995,"byte_end":413012,"line_start":783,"line_end":783,"column_start":43,"column_end":60},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4462},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":413856,"byte_end":413861,"line_start":813,"line_end":813,"column_start":36,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":414044,"byte_end":414049,"line_start":822,"line_end":822,"column_start":36,"column_end":41},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4474},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":414245,"byte_end":414250,"line_start":828,"line_end":828,"column_start":40,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":4474},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415744,"byte_end":415752,"line_start":889,"line_end":889,"column_start":36,"column_end":44},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":4508},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/slice/mod.rs","byte_start":415977,"byte_end":415985,"line_start":897,"line_end":897,"column_start":40,"column_end":48},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":4508},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486652,"byte_end":486657,"line_start":283,"line_end":283,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486660,"byte_end":486664,"line_start":283,"line_end":283,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":486667,"byte_end":486671,"line_start":283,"line_end":283,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":488511,"byte_end":488513,"line_start":350,"line_end":350,"column_start":54,"column_end":56},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":4596},"to":{"krate":0,"index":4564}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":489756,"byte_end":489761,"line_start":403,"line_end":403,"column_start":32,"column_end":37},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6196},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490021,"byte_end":490034,"line_start":414,"line_end":414,"column_start":33,"column_end":46},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":4609},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":490833,"byte_end":490844,"line_start":448,"line_end":448,"column_start":32,"column_end":43},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6205},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":491195,"byte_end":491214,"line_start":463,"line_end":463,"column_start":33,"column_end":52},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":4623},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492186,"byte_end":492191,"line_start":503,"line_end":503,"column_start":32,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6214},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":492449,"byte_end":492462,"line_start":514,"line_end":514,"column_start":33,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":4638},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":493219,"byte_end":493230,"line_start":547,"line_end":547,"column_start":32,"column_end":43},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6223},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":493495,"byte_end":493514,"line_start":558,"line_end":558,"column_start":33,"column_end":52},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":4652},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494255,"byte_end":494260,"line_start":588,"line_end":588,"column_start":23,"column_end":28},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":494410,"byte_end":494415,"line_start":594,"line_end":594,"column_start":44,"column_end":49},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6232},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496075,"byte_end":496090,"line_start":654,"line_end":654,"column_start":23,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496244,"byte_end":496267,"line_start":660,"line_end":660,"column_start":36,"column_end":59},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":4686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496575,"byte_end":496590,"line_start":669,"line_end":669,"column_start":44,"column_end":59},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6245},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":496938,"byte_end":496961,"line_start":681,"line_end":681,"column_start":58,"column_end":81},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":4686},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":497925,"byte_end":497930,"line_start":721,"line_end":721,"column_start":32,"column_end":37},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6258},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":498524,"byte_end":498539,"line_start":746,"line_end":746,"column_start":32,"column_end":47},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6268},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":499211,"byte_end":499218,"line_start":774,"line_end":774,"column_start":44,"column_end":51},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6278},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":499595,"byte_end":499610,"line_start":789,"line_end":789,"column_start":51,"column_end":66},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":4728},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":500654,"byte_end":500666,"line_start":831,"line_end":831,"column_start":44,"column_end":56},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6291},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/str.rs","byte_start":501079,"byte_end":501099,"line_start":847,"line_end":847,"column_start":51,"column_end":71},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":4748},"to":{"krate":0,"index":1124}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502270,"byte_end":502273,"line_start":18,"line_end":18,"column_start":40,"column_end":43},"kind":{"Impl":{"id":463}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":3623}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502446,"byte_end":502454,"line_start":27,"line_end":27,"column_start":36,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6304},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":502751,"byte_end":502759,"line_start":42,"line_end":42,"column_start":43,"column_end":51},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6304},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":503882,"byte_end":503893,"line_start":80,"line_end":80,"column_start":43,"column_end":54},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":4791},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":504557,"byte_end":504568,"line_start":100,"line_end":100,"column_start":39,"column_end":50},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":4791},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":504937,"byte_end":504947,"line_start":115,"line_end":115,"column_start":36,"column_end":46},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":4806},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505269,"byte_end":505279,"line_start":129,"line_end":129,"column_start":47,"column_end":57},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":4806},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505484,"byte_end":505494,"line_start":136,"line_end":136,"column_start":45,"column_end":55},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":4806},"to":{"krate":2,"index":5258}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/vec.rs","byte_start":505600,"byte_end":505610,"line_start":142,"line_end":142,"column_start":32,"column_end":42},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":4806},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":506658,"byte_end":506664,"line_start":6,"line_end":6,"column_start":33,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":23,"index":161},"to":{"krate":0,"index":3649}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":507184,"byte_end":507190,"line_start":28,"line_end":28,"column_start":40,"column_end":46},"kind":{"Impl":{"id":473}},"from":{"krate":23,"index":161},"to":{"krate":0,"index":3853}},{"span":{"file_name":"/Users/quangthinh/.cargo/registry/src/github.com-1ecc6299db9ec823/rayon-1.2.0/src/par_either.rs","byte_start":507984,"byte_end":507990,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"kind":{"Impl":{"id":474}},"from":{"krate":23,"index":161},"to":{"krate":0,"index":3919}}]}