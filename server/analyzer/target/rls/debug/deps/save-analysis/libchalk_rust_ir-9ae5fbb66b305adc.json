{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir","program":"/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","chalk_rust_ir","--edition=2018","/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9ae5fbb66b305adc","-C","extra-filename=-9ae5fbb66b305adc","--out-dir","/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","-L","dependency=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps","--extern","chalk_derive=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_derive-4b249154da61241e.dylib","--extern","chalk_engine=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_engine-7a7af3c5ed075380.rmeta","--extern","chalk_ir=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_ir-1e5e89b3cc5185bc.rmeta","--extern","chalk_macros=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_macros-522621076c03809f.rmeta","--cap-lints","allow","-L","native=/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/build/stacker-6b8b89857712dd33/out","--error-format=json","--sysroot","/Users/quangthinh/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/quangthinh/Documents/Agiletech/orai/smart-studio/server/analyzer/target/rls/debug/deps/libchalk_rust_ir-9ae5fbb66b305adc.rmeta"},"prelude":{"crate_id":{"name":"chalk_rust_ir","disambiguator":[3731637730378716808,12704496021679373835]},"crate_root":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src","external_crates":[{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":16,"id":{"name":"chalk_derive","disambiguator":[538635478023077110,229961810911492659]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":17,"id":{"name":"chalk_ir","disambiguator":[8687016659245799572,18068387536485845382]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":18,"id":{"name":"chalk_engine","disambiguator":[5209660885642139136,14615587430389361100]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":19,"id":{"name":"chalk_macros","disambiguator":[2603500555905971854,3241400604075703882]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":20,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":21,"id":{"name":"stacker","disambiguator":[11270618004102534773,1134865246925311322]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[13347268434212277074,12294355231220403985]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[9237417759301744298,10325578486291660160]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":24,"id":{"name":"rustc_hash","disambiguator":[3456451224187360230,12806063198043075384]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":25,"id":{"name":"byteorder","disambiguator":[7786802486158187971,17904586164133949077]}},{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","num":26,"id":{"name":"lalrpop_intern","disambiguator":[1262538648943620944,9338744506893008660]}}],"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":0,"byte_end":13814,"line_start":1,"line_end":440,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":0,"byte_end":13814,"line_start":1,"line_end":440,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":695},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":699},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":711},{"krate":0,"index":26},{"krate":0,"index":713},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":721},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":88},{"krate":0,"index":101},{"krate":0,"index":99},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":91},{"krate":0,"index":89},{"krate":0,"index":103},{"krate":0,"index":128},{"krate":0,"index":126},{"krate":0,"index":124},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":111},{"krate":0,"index":109},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":153},{"krate":0,"index":150},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":135},{"krate":0,"index":34},{"krate":0,"index":156},{"krate":0,"index":178},{"krate":0,"index":175},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":160},{"krate":0,"index":181},{"krate":0,"index":199},{"krate":0,"index":197},{"krate":0,"index":195},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":186},{"krate":0,"index":200},{"krate":0,"index":221},{"krate":0,"index":218},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":203},{"krate":0,"index":224},{"krate":0,"index":246},{"krate":0,"index":243},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":228},{"krate":0,"index":249},{"krate":0,"index":272},{"krate":0,"index":269},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":254},{"krate":0,"index":38},{"krate":0,"index":275},{"krate":0,"index":297},{"krate":0,"index":294},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":279},{"krate":0,"index":300},{"krate":0,"index":315},{"krate":0,"index":313},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":303},{"krate":0,"index":317},{"krate":0,"index":341},{"krate":0,"index":338},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":323},{"krate":0,"index":41},{"krate":0,"index":344},{"krate":0,"index":365},{"krate":0,"index":362},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":347},{"krate":0,"index":368},{"krate":0,"index":387},{"krate":0,"index":385},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":375},{"krate":0,"index":389},{"krate":0,"index":423},{"krate":0,"index":420},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":405},{"krate":0,"index":400},{"krate":0,"index":397},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":426},{"krate":0,"index":453},{"krate":0,"index":450},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":435},{"krate":0,"index":430},{"krate":0,"index":61},{"krate":0,"index":456},{"krate":0,"index":485},{"krate":0,"index":482},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":467},{"krate":0,"index":462},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":488},{"krate":0,"index":512},{"krate":0,"index":509},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":494},{"krate":0,"index":515},{"krate":0,"index":545},{"krate":0,"index":542},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":527},{"krate":0,"index":522},{"krate":0,"index":519},{"krate":0,"index":81},{"krate":0,"index":548},{"krate":0,"index":576},{"krate":0,"index":573},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":558},{"krate":0,"index":553},{"krate":0,"index":579},{"krate":0,"index":608},{"krate":0,"index":605},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":590},{"krate":0,"index":585},{"krate":0,"index":582},{"krate":0,"index":611},{"krate":0,"index":627},{"krate":0,"index":625},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":615},{"krate":0,"index":629},{"krate":0,"index":651},{"krate":0,"index":649},{"krate":0,"index":647},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":639},{"krate":0,"index":637},{"krate":0,"index":634},{"krate":0,"index":652},{"krate":0,"index":674},{"krate":0,"index":672},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":663},{"krate":0,"index":661},{"krate":0,"index":659},{"krate":0,"index":657},{"krate":0,"index":86}],"decl_id":null,"docs":" Contains the definition for the \"Rust IR\" -- this is basically a \"lowered\"\n version of the AST, roughly corresponding to [the HIR] in the Rust\n compiler.\n","sig":null,"attributes":[{"value":"/ Contains the definition for the \"Rust IR\" -- this is basically a \"lowered\"","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ version of the AST, roughly corresponding to [the HIR] in the Rust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":79,"byte_end":149,"line_start":2,"line_end":2,"column_start":1,"column_end":71}},{"value":"/ compiler.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":150,"byte_end":163,"line_start":3,"line_end":3,"column_start":1,"column_end":14}}]},{"kind":"Enum","id":{"krate":0,"index":88},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":644,"byte_end":652,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"LangItem","qualname":"::LangItem","value":"pub enum LangItem { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":802,"byte_end":821,"line_start":21,"line_end":21,"column_start":12,"column_end":31},"name":"AssociatedTyValueId","qualname":"::AssociatedTyValueId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier for an \"associated type value\" found in some impl.\n","sig":null,"attributes":[{"value":"/ Identifier for an \"associated type value\" found in some impl.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":657,"byte_end":722,"line_start":19,"line_end":19,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":822,"byte_end":831,"line_start":21,"line_end":21,"column_start":32,"column_end":41},"name":"0","qualname":"::AssociatedTyValueId::0","value":"chalk_ir::RawId","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":129},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":891,"byte_end":900,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"ImplDatum","qualname":"::ImplDatum","value":"ImplDatum { polarity, binders, impl_type, associated_ty_value_ids }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":927,"byte_end":935,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"name":"polarity","qualname":"::ImplDatum::polarity","value":"Polarity","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":132},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":955,"byte_end":962,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"binders","qualname":"::ImplDatum::binders","value":"chalk_ir::Binders<ImplDatumBound<TF>>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":133},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1001,"byte_end":1010,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"impl_type","qualname":"::ImplDatum::impl_type","value":"ImplType","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":134},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1030,"byte_end":1053,"line_start":28,"line_end":28,"column_start":9,"column_end":32},"name":"associated_ty_value_ids","qualname":"::ImplDatum::associated_ty_value_ids","value":"std::vec::Vec<AssociatedTyValueId>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1132,"byte_end":1143,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<ImplDatum<TF>>::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1215,"byte_end":1223,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"trait_id","qualname":"<ImplDatum<TF>>::trait_id","value":"pub fn trait_id(&Self) -> TraitId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1355,"byte_end":1369,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"ImplDatumBound","qualname":"::ImplDatumBound","value":"ImplDatumBound { trait_ref, where_clauses }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":158},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1396,"byte_end":1405,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"trait_ref","qualname":"::ImplDatumBound::trait_ref","value":"chalk_ir::TraitRef<TF>","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1429,"byte_end":1442,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"where_clauses","qualname":"::ImplDatumBound::where_clauses","value":"std::vec::Vec<chalk_ir::Binders<chalk_ir::WhereClause<TF>>>","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1554,"byte_end":1559,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Local","qualname":"::ImplType::Local","value":"ImplType::Local","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1565,"byte_end":1573,"line_start":50,"line_end":50,"column_start":5,"column_end":13},"name":"External","qualname":"::ImplType::External","value":"ImplType::External","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":181},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1539,"byte_end":1547,"line_start":48,"line_end":48,"column_start":10,"column_end":18},"name":"ImplType","qualname":"::ImplType","value":"pub enum ImplType { Local, External, }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1634,"byte_end":1650,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"DefaultImplDatum","qualname":"::DefaultImplDatum","value":"DefaultImplDatum { binders }","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1677,"byte_end":1684,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"binders","qualname":"::DefaultImplDatum::binders","value":"chalk_ir::Binders<DefaultImplDatumBound<TF>>","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1781,"byte_end":1802,"line_start":59,"line_end":59,"column_start":12,"column_end":33},"name":"DefaultImplDatumBound","qualname":"::DefaultImplDatumBound","value":"DefaultImplDatumBound { trait_ref, accessible_tys }","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1829,"byte_end":1838,"line_start":60,"line_end":60,"column_start":9,"column_end":18},"name":"trait_ref","qualname":"::DefaultImplDatumBound::trait_ref","value":"chalk_ir::TraitRef<TF>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1862,"byte_end":1876,"line_start":61,"line_end":61,"column_start":9,"column_end":23},"name":"accessible_tys","qualname":"::DefaultImplDatumBound::accessible_tys","value":"std::vec::Vec<chalk_ir::Ty<TF>>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1950,"byte_end":1961,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"StructDatum","qualname":"::StructDatum","value":"StructDatum { binders, id, flags }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":251},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1988,"byte_end":1995,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"binders","qualname":"::StructDatum::binders","value":"chalk_ir::Binders<StructDatumBound<TF>>","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":252},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2036,"byte_end":2038,"line_start":67,"line_end":67,"column_start":9,"column_end":11},"name":"id","qualname":"::StructDatum::id","value":"chalk_ir::StructId","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2058,"byte_end":2063,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"flags","qualname":"::StructDatum::flags","value":"StructFlags","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2131,"byte_end":2135,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"name","qualname":"<StructDatum<TF>>::name","value":"pub fn name(&Self) -> TypeName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2245,"byte_end":2261,"line_start":78,"line_end":78,"column_start":12,"column_end":28},"name":"StructDatumBound","qualname":"::StructDatumBound","value":"StructDatumBound { fields, where_clauses }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":277},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2288,"byte_end":2294,"line_start":79,"line_end":79,"column_start":9,"column_end":15},"name":"fields","qualname":"::StructDatumBound::fields","value":"std::vec::Vec<chalk_ir::Ty<TF>>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":278},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2317,"byte_end":2330,"line_start":80,"line_end":80,"column_start":9,"column_end":22},"name":"where_clauses","qualname":"::StructDatumBound::where_clauses","value":"std::vec::Vec<chalk_ir::Binders<chalk_ir::WhereClause<TF>>>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2423,"byte_end":2434,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"StructFlags","qualname":"::StructFlags","value":"StructFlags { upstream, fundamental }","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2445,"byte_end":2453,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"name":"upstream","qualname":"::StructFlags::upstream","value":"bool","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":302},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2469,"byte_end":2480,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"fundamental","qualname":"::StructFlags::fundamental","value":"bool","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2547,"byte_end":2557,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"TraitDatum","qualname":"::TraitDatum","value":"TraitDatum { id, binders, flags, associated_ty_ids }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2584,"byte_end":2586,"line_start":91,"line_end":91,"column_start":9,"column_end":11},"name":"id","qualname":"::TraitDatum::id","value":"chalk_ir::TraitId","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2606,"byte_end":2613,"line_start":93,"line_end":93,"column_start":9,"column_end":16},"name":"binders","qualname":"::TraitDatum::binders","value":"chalk_ir::Binders<TraitDatumBound<TF>>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2842,"byte_end":2847,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"name":"flags","qualname":"::TraitDatum::flags","value":"TraitFlags","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" \"Flags\" indicate special kinds of traits, like auto traits.\n In Rust syntax these are represented in different ways, but in\n chalk we add annotations like `#[auto]`.\n","sig":null,"attributes":[{"value":"/ \"Flags\" indicate special kinds of traits, like auto traits.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2650,"byte_end":2713,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/ In Rust syntax these are represented in different ways, but in","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2718,"byte_end":2784,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ chalk we add annotations like `#[auto]`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2789,"byte_end":2833,"line_start":97,"line_end":97,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":322},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2931,"byte_end":2948,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"associated_ty_ids","qualname":"::TraitDatum::associated_ty_ids","value":"std::vec::Vec<chalk_ir::TypeId>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" The id of each associated type defined in the trait.\n","sig":null,"attributes":[{"value":"/ The id of each associated type defined in the trait.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2866,"byte_end":2922,"line_start":100,"line_end":100,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3015,"byte_end":3028,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"is_auto_trait","qualname":"<TraitDatum<TF>>::is_auto_trait","value":"pub fn is_auto_trait(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3088,"byte_end":3111,"line_start":109,"line_end":109,"column_start":12,"column_end":35},"name":"is_non_enumerable_trait","qualname":"<TraitDatum<TF>>::is_non_enumerable_trait","value":"pub fn is_non_enumerable_trait(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3181,"byte_end":3201,"line_start":113,"line_end":113,"column_start":12,"column_end":32},"name":"is_coinductive_trait","qualname":"<TraitDatum<TF>>::is_coinductive_trait","value":"pub fn is_coinductive_trait(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3315,"byte_end":3330,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"TraitDatumBound","qualname":"::TraitDatumBound","value":"TraitDatumBound { where_clauses }","parent":null,"children":[{"krate":0,"index":346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":346},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3515,"byte_end":3528,"line_start":126,"line_end":126,"column_start":9,"column_end":22},"name":"where_clauses","qualname":"::TraitDatumBound::where_clauses","value":"std::vec::Vec<chalk_ir::Binders<chalk_ir::WhereClause<TF>>>","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Where clauses defined on the trait:","sig":null,"attributes":[{"value":"/ Where clauses defined on the trait:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3353,"byte_end":3392,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3397,"byte_end":3400,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3405,"byte_end":3418,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ trait Foo<T> where T: Debug { }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3423,"byte_end":3458,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/              ^^^^^^^^^^^^^^","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3463,"byte_end":3494,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3499,"byte_end":3506,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3621,"byte_end":3631,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"TraitFlags","qualname":"::TraitFlags","value":"TraitFlags { auto, marker, upstream, fundamental, non_enumerable, coinductive }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3642,"byte_end":3646,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"name":"auto","qualname":"::TraitFlags::auto","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":370},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3662,"byte_end":3668,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"name":"marker","qualname":"::TraitFlags::marker","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3684,"byte_end":3692,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"upstream","qualname":"::TraitFlags::upstream","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":372},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3708,"byte_end":3719,"line_start":134,"line_end":134,"column_start":9,"column_end":20},"name":"fundamental","qualname":"::TraitFlags::fundamental","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3735,"byte_end":3749,"line_start":135,"line_end":135,"column_start":9,"column_end":23},"name":"non_enumerable","qualname":"::TraitFlags::non_enumerable","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":374},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3765,"byte_end":3776,"line_start":136,"line_end":136,"column_start":9,"column_end":20},"name":"coinductive","qualname":"::TraitFlags::coinductive","value":"bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":391},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3970,"byte_end":3980,"line_start":142,"line_end":142,"column_start":5,"column_end":15},"name":"TraitBound","qualname":"::InlineBound::TraitBound","value":"InlineBound::TraitBound(TraitBound<TF>)","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4002,"byte_end":4019,"line_start":143,"line_end":143,"column_start":5,"column_end":22},"name":"ProjectionEqBound","qualname":"::InlineBound::ProjectionEqBound","value":"InlineBound::ProjectionEqBound(ProjectionEqBound<TF>)","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":389},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3936,"byte_end":3947,"line_start":141,"line_end":141,"column_start":10,"column_end":21},"name":"InlineBound","qualname":"::InlineBound","value":"pub enum InlineBound<TF: TypeFamily> {\n    TraitBound(TraitBound<TF>),\n    ProjectionEqBound(ProjectionEqBound<TF>),\n}","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":394}],"decl_id":null,"docs":" An inline bound, e.g. `: Foo<K>` in `impl<K, T: Foo<K>> SomeType<T>`.\n","sig":null,"attributes":[{"value":"/ An inline bound, e.g. `: Foo<K>` in `impl<K, T: Foo<K>> SomeType<T>`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":3787,"byte_end":3860,"line_start":139,"line_end":139,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4084,"byte_end":4105,"line_start":147,"line_end":147,"column_start":10,"column_end":31},"name":"QuantifiedInlineBound","qualname":"::QuantifiedInlineBound","value":"Binders<InlineBound<TF>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(type_alias_bounds)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4047,"byte_end":4074,"line_start":146,"line_end":146,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4161,"byte_end":4177,"line_start":149,"line_end":149,"column_start":11,"column_end":27},"name":"IntoWhereClauses","qualname":"::IntoWhereClauses","value":"IntoWhereClauses<TF: TypeFamily>","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4205,"byte_end":4211,"line_start":150,"line_end":150,"column_start":10,"column_end":16},"name":"Output","qualname":"::IntoWhereClauses::Output","value":"type Output;","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4221,"byte_end":4239,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"into_where_clauses","qualname":"::IntoWhereClauses::into_where_clauses","value":"pub fn into_where_clauses(&Self, Ty<TF>) -> Vec<Self::Output>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5576,"byte_end":5586,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"TraitBound","qualname":"::TraitBound","value":"TraitBound { trait_id, args_no_self }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" Represents a trait bound on e.g. a type or type parameter.\n Does not know anything about what it's binding.\n","sig":null,"attributes":[{"value":"/ Represents a trait bound on e.g. a type or type parameter.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5399,"byte_end":5461,"line_start":187,"line_end":187,"column_start":1,"column_end":63}},{"value":"/ Does not know anything about what it's binding.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5462,"byte_end":5513,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":428},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5613,"byte_end":5621,"line_start":191,"line_end":191,"column_start":9,"column_end":17},"name":"trait_id","qualname":"::TraitBound::trait_id","value":"chalk_ir::TraitId","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":429},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5640,"byte_end":5652,"line_start":192,"line_end":192,"column_start":9,"column_end":21},"name":"args_no_self","qualname":"::TraitBound::args_no_self","value":"std::vec::Vec<chalk_ir::Parameter<TF>>","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5911,"byte_end":5923,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"as_trait_ref","qualname":"<TraitBound<TF>>::as_trait_ref","value":"pub fn as_trait_ref(&Self, Ty<TF>) -> TraitRef<TF>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":456},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6369,"byte_end":6386,"line_start":214,"line_end":214,"column_start":12,"column_end":29},"name":"ProjectionEqBound","qualname":"::ProjectionEqBound","value":"ProjectionEqBound { trait_bound, associated_ty_id, parameters, value }","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":" Represents a projection equality bound on e.g. a type or type parameter.\n Does not know anything about what it's binding.\n","sig":null,"attributes":[{"value":"/ Represents a projection equality bound on e.g. a type or type parameter.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6178,"byte_end":6254,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/ Does not know anything about what it's binding.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6255,"byte_end":6306,"line_start":212,"line_end":212,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":458},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6413,"byte_end":6424,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"name":"trait_bound","qualname":"::ProjectionEqBound::trait_bound","value":"TraitBound<TF>","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":459},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6450,"byte_end":6466,"line_start":216,"line_end":216,"column_start":9,"column_end":25},"name":"associated_ty_id","qualname":"::ProjectionEqBound::associated_ty_id","value":"chalk_ir::TypeId","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":460},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6527,"byte_end":6537,"line_start":218,"line_end":218,"column_start":9,"column_end":19},"name":"parameters","qualname":"::ProjectionEqBound::parameters","value":"std::vec::Vec<chalk_ir::Parameter<TF>>","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Does not include trait parameters.\n","sig":null,"attributes":[{"value":"/ Does not include trait parameters.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6480,"byte_end":6518,"line_start":217,"line_end":217,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":461},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6567,"byte_end":6572,"line_start":219,"line_end":219,"column_start":9,"column_end":14},"name":"value","qualname":"::ProjectionEqBound::value","value":"chalk_ir::Ty<TF>","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7251,"byte_end":7260,"line_start":242,"line_end":242,"column_start":11,"column_end":20},"name":"Anonymize","qualname":"::Anonymize","value":"Anonymize","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7545,"byte_end":7554,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"anonymize","qualname":"::Anonymize::anonymize","value":"pub fn anonymize(&Self) -> Vec<ParameterKind<()>>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Utility function that converts from a list of generic parameters\n which *have* names (`ParameterKind<Identifier>`) to a list of\n \"anonymous\" generic parameters that just preserves their\n kinds (`ParameterKind<()>`). Often convenient in lowering.\n","sig":null,"attributes":[{"value":"/ Utility function that converts from a list of generic parameters","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7267,"byte_end":7335,"line_start":243,"line_end":243,"column_start":5,"column_end":73}},{"value":"/ which *have* names (`ParameterKind<Identifier>`) to a list of","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7340,"byte_end":7405,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ \"anonymous\" generic parameters that just preserves their","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7410,"byte_end":7470,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/ kinds (`ParameterKind<()>`). Often convenient in lowering.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7475,"byte_end":7537,"line_start":246,"line_end":246,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7767,"byte_end":7778,"line_start":256,"line_end":256,"column_start":11,"column_end":22},"name":"ToParameter","qualname":"::ToParameter","value":"ToParameter","parent":null,"children":[{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8122,"byte_end":8134,"line_start":262,"line_end":262,"column_start":8,"column_end":20},"name":"to_parameter","qualname":"::ToParameter::to_parameter","value":"pub fn to_parameter<TF: TypeFamily>(&Self) -> Parameter<TF>","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Utility for converting a list of all the binders into scope\n into references to those binders. Simply pair the binders with\n the indices, and invoke `to_parameter()` on the `(binder,\n index)` pair. The result will be a reference to a bound\n variable of appropriate kind at the corresponding index.\n","sig":null,"attributes":[{"value":"/ Utility for converting a list of all the binders into scope","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7785,"byte_end":7848,"line_start":257,"line_end":257,"column_start":5,"column_end":68}},{"value":"/ into references to those binders. Simply pair the binders with","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7853,"byte_end":7919,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/ the indices, and invoke `to_parameter()` on the `(binder,","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7924,"byte_end":7985,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/ index)` pair. The result will be a reference to a bound","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":7990,"byte_end":8049,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/ variable of appropriate kind at the corresponding index.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8054,"byte_end":8114,"line_start":261,"line_end":261,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":488},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9153,"byte_end":9170,"line_start":292,"line_end":292,"column_start":12,"column_end":29},"name":"AssociatedTyDatum","qualname":"::AssociatedTyDatum","value":"AssociatedTyDatum { trait_id, id, name, binders }","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" Represents an associated type declaration found inside of a trait:","sig":null,"attributes":[{"value":"/ Represents an associated type declaration found inside of a trait:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8545,"byte_end":8615,"line_start":275,"line_end":275,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8616,"byte_end":8619,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```notrust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8620,"byte_end":8634,"line_start":277,"line_end":277,"column_start":1,"column_end":15}},{"value":"/ trait Foo<P1..Pn> { // P0 is Self","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8635,"byte_end":8672,"line_start":278,"line_end":278,"column_start":1,"column_end":38}},{"value":"/     type Bar<Pn..Pm>: [bounds]","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8673,"byte_end":8707,"line_start":279,"line_end":279,"column_start":1,"column_end":35}},{"value":"/     where","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8708,"byte_end":8721,"line_start":280,"line_end":280,"column_start":1,"column_end":14}},{"value":"/         [where_clauses];","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8722,"byte_end":8750,"line_start":281,"line_end":281,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8751,"byte_end":8756,"line_start":282,"line_end":282,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8757,"byte_end":8764,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8765,"byte_end":8768,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The meaning of each of these parts:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8769,"byte_end":8808,"line_start":285,"line_end":285,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8809,"byte_end":8812,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ * The *parameters* `P0...Pm` are all in scope for this associated type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8813,"byte_end":8888,"line_start":287,"line_end":287,"column_start":1,"column_end":76}},{"value":"/ * The *bounds* `bounds` are things that the impl must prove to be true.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8889,"byte_end":8964,"line_start":288,"line_end":288,"column_start":1,"column_end":76}},{"value":"/ * The *where clauses* `where_clauses` are things that the impl can *assume* to be true","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":8965,"byte_end":9055,"line_start":289,"line_end":289,"column_start":1,"column_end":91}},{"value":"/   (but which projectors must prove).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9056,"byte_end":9096,"line_start":290,"line_end":290,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9251,"byte_end":9259,"line_start":294,"line_end":294,"column_start":9,"column_end":17},"name":"trait_id","qualname":"::AssociatedTyDatum::trait_id","value":"chalk_ir::TraitId","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" The trait this associated type is defined in.\n","sig":null,"attributes":[{"value":"/ The trait this associated type is defined in.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9193,"byte_end":9242,"line_start":293,"line_end":293,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9318,"byte_end":9320,"line_start":297,"line_end":297,"column_start":9,"column_end":11},"name":"id","qualname":"::AssociatedTyDatum::id","value":"chalk_ir::TypeId","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" The ID of this associated type\n","sig":null,"attributes":[{"value":"/ The ID of this associated type","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9275,"byte_end":9309,"line_start":296,"line_end":296,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9377,"byte_end":9381,"line_start":300,"line_end":300,"column_start":9,"column_end":13},"name":"name","qualname":"::AssociatedTyDatum::name","value":"lalrpop_intern::InternedString","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" Name of this associated type.\n","sig":null,"attributes":[{"value":"/ Name of this associated type.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9335,"byte_end":9368,"line_start":299,"line_end":299,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9728,"byte_end":9735,"line_start":307,"line_end":307,"column_start":9,"column_end":16},"name":"binders","qualname":"::AssociatedTyDatum::binders","value":"chalk_ir::Binders<AssociatedTyDatumBound<TF>>","parent":{"krate":0,"index":488},"children":[],"decl_id":null,"docs":" These binders represent the `P0...Pm` variables.  The binders\n are in the order `[Pn..Pm; P0..Pn]`. That is, the variables\n from `Bar` come first (corresponding to the de bruijn concept\n that \"inner\" binders are lower indices, although within a\n given binder we do not have an ordering).\n","sig":null,"attributes":[{"value":"/ These binders represent the `P0...Pm` variables.  The binders","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9400,"byte_end":9465,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ are in the order `[Pn..Pm; P0..Pn]`. That is, the variables","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9470,"byte_end":9533,"line_start":303,"line_end":303,"column_start":5,"column_end":68}},{"value":"/ from `Bar` come first (corresponding to the de bruijn concept","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9538,"byte_end":9603,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"/ that \"inner\" binders are lower indices, although within a","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9608,"byte_end":9669,"line_start":305,"line_end":305,"column_start":5,"column_end":66}},{"value":"/ given binder we do not have an ordering).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9674,"byte_end":9719,"line_start":306,"line_end":306,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9978,"byte_end":10000,"line_start":313,"line_end":313,"column_start":12,"column_end":34},"name":"AssociatedTyDatumBound","qualname":"::AssociatedTyDatumBound","value":"AssociatedTyDatumBound { bounds, where_clauses }","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"decl_id":null,"docs":" Encodes the parts of `AssociatedTyDatum` where the parameters\n `P0..Pm` are in scope (`bounds` and `where_clauses`).\n","sig":null,"attributes":[{"value":"/ Encodes the parts of `AssociatedTyDatum` where the parameters","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9777,"byte_end":9842,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"/ `P0..Pm` are in scope (`bounds` and `where_clauses`).","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":9843,"byte_end":9900,"line_start":311,"line_end":311,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10213,"byte_end":10219,"line_start":318,"line_end":318,"column_start":9,"column_end":15},"name":"bounds","qualname":"::AssociatedTyDatumBound::bounds","value":"std::vec::Vec<chalk_ir::Binders<InlineBound<TF>>>","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":" Bounds on the associated type itself.","sig":null,"attributes":[{"value":"/ Bounds on the associated type itself.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10023,"byte_end":10064,"line_start":314,"line_end":314,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10069,"byte_end":10072,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ These must be proven by the implementer, for all possible parameters that","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10077,"byte_end":10154,"line_start":316,"line_end":316,"column_start":5,"column_end":82}},{"value":"/ would result in a well-formed projection.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10159,"byte_end":10204,"line_start":317,"line_end":317,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10337,"byte_end":10350,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"name":"where_clauses","qualname":"::AssociatedTyDatumBound::where_clauses","value":"std::vec::Vec<chalk_ir::Binders<chalk_ir::WhereClause<TF>>>","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":" Where clauses that must hold for the projection to be well-formed.\n","sig":null,"attributes":[{"value":"/ Where clauses that must hold for the projection to be well-formed.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10258,"byte_end":10328,"line_start":320,"line_end":320,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10709,"byte_end":10723,"line_start":333,"line_end":333,"column_start":12,"column_end":26},"name":"bounds_on_self","qualname":"<AssociatedTyDatum<TF>>::bounds_on_self","value":"pub fn bounds_on_self(&Self) -> Vec<QuantifiedWhereClause<TF>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the associated ty's bounds applied to the projection type, e.g.:","sig":null,"attributes":[{"value":"/ Returns the associated ty's bounds applied to the projection type, e.g.:","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10436,"byte_end":10512,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10517,"byte_end":10520,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10525,"byte_end":10539,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ Implemented(<?0 as Foo>::Item<?1>: Sized)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10544,"byte_end":10589,"line_start":328,"line_end":328,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10594,"byte_end":10601,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10606,"byte_end":10609,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ these quantified where clauses are in the scope of the","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10614,"byte_end":10672,"line_start":331,"line_end":331,"column_start":5,"column_end":63}},{"value":"/ `binders` field.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10677,"byte_end":10697,"line_start":332,"line_end":332,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11884,"byte_end":11901,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"AssociatedTyValue","qualname":"::AssociatedTyValue","value":"AssociatedTyValue { impl_id, associated_ty_id, value }","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" Represents the *value* of an associated type that is assigned\n from within some impl.","sig":null,"attributes":[{"value":"/ Represents the *value* of an associated type that is assigned","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11615,"byte_end":11680,"line_start":361,"line_end":361,"column_start":1,"column_end":66}},{"value":"/ from within some impl.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11681,"byte_end":11707,"line_start":362,"line_end":362,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11708,"byte_end":11711,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11712,"byte_end":11725,"line_start":364,"line_end":364,"column_start":1,"column_end":14}},{"value":"/ impl Iterator for Foo {","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11726,"byte_end":11753,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/     type Item = XXX; // <-- represents this line!","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11754,"byte_end":11807,"line_start":366,"line_end":366,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11808,"byte_end":11813,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11814,"byte_end":11821,"line_start":368,"line_end":368,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":550},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12264,"byte_end":12271,"line_start":380,"line_end":380,"column_start":9,"column_end":16},"name":"impl_id","qualname":"::AssociatedTyValue::impl_id","value":"chalk_ir::ImplId","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Impl in which this associated type value is found.  You might\n need to look at this to find the generic parameters defined on\n the impl, for example.","sig":null,"attributes":[{"value":"/ Impl in which this associated type value is found.  You might","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11924,"byte_end":11989,"line_start":371,"line_end":371,"column_start":5,"column_end":70}},{"value":"/ need to look at this to find the generic parameters defined on","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":11994,"byte_end":12060,"line_start":372,"line_end":372,"column_start":5,"column_end":71}},{"value":"/ the impl, for example.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12065,"byte_end":12091,"line_start":373,"line_end":373,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12096,"byte_end":12099,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12104,"byte_end":12117,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/ impl Iterator for Foo { // <-- refers to this impl","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12122,"byte_end":12176,"line_start":376,"line_end":376,"column_start":5,"column_end":59}},{"value":"/     type Item = XXX; // <-- (where this is self)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12181,"byte_end":12233,"line_start":377,"line_end":377,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12238,"byte_end":12243,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12248,"byte_end":12255,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12576,"byte_end":12592,"line_start":393,"line_end":393,"column_start":9,"column_end":25},"name":"associated_ty_id","qualname":"::AssociatedTyValue::associated_ty_id","value":"chalk_ir::TypeId","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Associated type being defined.","sig":null,"attributes":[{"value":"/ Associated type being defined.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12286,"byte_end":12320,"line_start":382,"line_end":382,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12325,"byte_end":12328,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12333,"byte_end":12346,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ impl Iterator for Foo {","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12351,"byte_end":12378,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/     type Item = XXX; // <-- (where this is self)","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12383,"byte_end":12435,"line_start":386,"line_end":386,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12440,"byte_end":12445,"line_start":387,"line_end":387,"column_start":5,"column_end":10}},{"value":"/ ...","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12450,"byte_end":12457,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ trait Iterator {","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12462,"byte_end":12482,"line_start":389,"line_end":389,"column_start":5,"column_end":25}},{"value":"/     type Item; // <-- refers to this declaration here!","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12487,"byte_end":12545,"line_start":390,"line_end":390,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12550,"byte_end":12555,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12560,"byte_end":12567,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13003,"byte_end":13008,"line_start":405,"line_end":405,"column_start":9,"column_end":14},"name":"value","qualname":"::AssociatedTyValue::value","value":"chalk_ir::Binders<AssociatedTyValueBound<TF>>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Additional binders declared on the associated type itself,\n beyond those from the impl. This would be empty for normal\n associated types, but non-empty for generic associated types.","sig":null,"attributes":[{"value":"/ Additional binders declared on the associated type itself,","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12607,"byte_end":12669,"line_start":395,"line_end":395,"column_start":5,"column_end":67}},{"value":"/ beyond those from the impl. This would be empty for normal","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12674,"byte_end":12736,"line_start":396,"line_end":396,"column_start":5,"column_end":67}},{"value":"/ associated types, but non-empty for generic associated types.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12741,"byte_end":12806,"line_start":397,"line_end":397,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12811,"byte_end":12814,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12819,"byte_end":12832,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ impl<T> Iterable for Vec<T> {","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12837,"byte_end":12870,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/     type Iter<'a> = vec::Iter<'a, T>;","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12875,"byte_end":12916,"line_start":401,"line_end":401,"column_start":5,"column_end":46}},{"value":"/           // ^^^^ refers to these generics here","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12921,"byte_end":12972,"line_start":402,"line_end":402,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12977,"byte_end":12982,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":12987,"byte_end":12994,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13127,"byte_end":13149,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"AssociatedTyValueBound","qualname":"::AssociatedTyValueBound","value":"AssociatedTyValueBound { ty }","parent":null,"children":[{"krate":0,"index":581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":581},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13240,"byte_end":13242,"line_start":411,"line_end":411,"column_start":9,"column_end":11},"name":"ty","qualname":"::AssociatedTyValueBound::ty","value":"chalk_ir::Ty<TF>","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Type that we normalize to. The X in `type Foo<'a> = X`.\n","sig":null,"attributes":[{"value":"/ Type that we normalize to. The X in `type Foo<'a> = X`.","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13172,"byte_end":13231,"line_start":410,"line_end":410,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13311,"byte_end":13319,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"TypeKind","qualname":"::TypeKind","value":"TypeKind { sort, name, binders }","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":612},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13330,"byte_end":13334,"line_start":416,"line_end":416,"column_start":9,"column_end":13},"name":"sort","qualname":"::TypeKind::sort","value":"TypeSort","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":613},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13354,"byte_end":13358,"line_start":417,"line_end":417,"column_start":9,"column_end":13},"name":"name","qualname":"::TypeKind::name","value":"lalrpop_intern::InternedString","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":614},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13380,"byte_end":13387,"line_start":418,"line_end":418,"column_start":9,"column_end":16},"name":"binders","qualname":"::TypeKind::binders","value":"chalk_ir::Binders<()>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":630},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13497,"byte_end":13503,"line_start":423,"line_end":423,"column_start":5,"column_end":11},"name":"Struct","qualname":"::TypeSort::Struct","value":"TypeSort::Struct","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":632},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13509,"byte_end":13514,"line_start":424,"line_end":424,"column_start":5,"column_end":10},"name":"Trait","qualname":"::TypeSort::Trait","value":"TypeSort::Trait","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":629},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13482,"byte_end":13490,"line_start":422,"line_end":422,"column_start":10,"column_end":18},"name":"TypeSort","qualname":"::TypeSort","value":"pub enum TypeSort { Struct, Trait, }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":632}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13611,"byte_end":13619,"line_start":429,"line_end":429,"column_start":5,"column_end":13},"name":"Positive","qualname":"::Polarity::Positive","value":"Polarity::Positive","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":655},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13625,"byte_end":13633,"line_start":430,"line_end":430,"column_start":5,"column_end":13},"name":"Negative","qualname":"::Polarity::Negative","value":"Polarity::Negative","parent":{"krate":0,"index":652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":652},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13596,"byte_end":13604,"line_start":428,"line_end":428,"column_start":10,"column_end":18},"name":"Polarity","qualname":"::Polarity","value":"pub enum Polarity { Positive, Negative, }","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":655}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13665,"byte_end":13676,"line_start":434,"line_end":434,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Polarity>::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1105,"byte_end":1114,"line_start":31,"line_end":31,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2102,"byte_end":2113,"line_start":71,"line_end":71,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2987,"byte_end":2997,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4335,"byte_end":4346,"line_start":155,"line_end":155,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4939,"byte_end":4960,"line_start":171,"line_end":171,"column_start":47,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5698,"byte_end":5708,"line_start":195,"line_end":195,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6606,"byte_end":6623,"line_start":222,"line_end":222,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10408,"byte_end":10425,"line_start":324,"line_end":324,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13643,"byte_end":13651,"line_start":433,"line_end":433,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":1105,"byte_end":1114,"line_start":31,"line_end":31,"column_start":22,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2102,"byte_end":2113,"line_start":71,"line_end":71,"column_start":22,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":2987,"byte_end":2997,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4335,"byte_end":4346,"line_start":155,"line_end":155,"column_start":47,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":4939,"byte_end":4960,"line_start":171,"line_end":171,"column_start":47,"column_end":68},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":46},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":5698,"byte_end":5708,"line_start":195,"line_end":195,"column_start":22,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":6606,"byte_end":6623,"line_start":222,"line_end":222,"column_start":22,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":10408,"byte_end":10425,"line_start":324,"line_end":324,"column_start":22,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/quangthinh/.cargo/git/checkouts/chalk-7b02fa8caa2cec94/a88cad7/chalk-rust-ir/src/lib.rs","byte_start":13643,"byte_end":13651,"line_start":433,"line_end":433,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":652},"to":{"krate":4294967295,"index":4294967295}}]}